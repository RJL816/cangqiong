"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackJsonp_bos-platform"] = self["webpackJsonp_bos-platform"] || []).push([[9960],{

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/aggregation/aggFuncService.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/aggregation/aggFuncService.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar AggFuncService = /** @class */ (function () {\n    function AggFuncService() {\n        this.aggFuncsMap = {};\n        this.initialised = false;\n    }\n    AggFuncService_1 = AggFuncService;\n    AggFuncService.prototype.init = function () {\n        if (this.initialised) {\n            return;\n        }\n        this.initialised = true;\n        this.initialiseWithDefaultAggregations();\n        this.addAggFuncs(this.gridOptionsWrapper.getAggFuncs());\n    };\n    AggFuncService.prototype.initialiseWithDefaultAggregations = function () {\n        this.aggFuncsMap[AggFuncService_1.AGG_SUM] = aggSum;\n        this.aggFuncsMap[AggFuncService_1.AGG_FIRST] = aggFirst;\n        this.aggFuncsMap[AggFuncService_1.AGG_LAST] = aggLast;\n        this.aggFuncsMap[AggFuncService_1.AGG_MIN] = aggMin;\n        this.aggFuncsMap[AggFuncService_1.AGG_MAX] = aggMax;\n        this.aggFuncsMap[AggFuncService_1.AGG_COUNT] = aggCount;\n        this.aggFuncsMap[AggFuncService_1.AGG_AVG] = aggAvg;\n    };\n    AggFuncService.prototype.getDefaultAggFunc = function (column) {\n        var allKeys = this.getFuncNames(column);\n        // use 'sum' if it's a) allowed for the column and b) still registered\n        // (ie not removed by user)\n        var sumInKeysList = allKeys.indexOf(AggFuncService_1.AGG_SUM) >= 0;\n        var sumInFuncs = ag_grid_community_1._.exists(this.aggFuncsMap[AggFuncService_1.AGG_SUM]);\n        var useSum = sumInKeysList && sumInFuncs;\n        if (useSum) {\n            return AggFuncService_1.AGG_SUM;\n        }\n        else {\n            if (ag_grid_community_1._.existsAndNotEmpty(allKeys)) {\n                return allKeys[0];\n            }\n            else {\n                return null;\n            }\n        }\n    };\n    AggFuncService.prototype.addAggFuncs = function (aggFuncs) {\n        ag_grid_community_1._.iterateObject(aggFuncs, this.addAggFunc.bind(this));\n    };\n    AggFuncService.prototype.addAggFunc = function (key, aggFunc) {\n        this.init();\n        this.aggFuncsMap[key] = aggFunc;\n    };\n    AggFuncService.prototype.getAggFunc = function (name) {\n        this.init();\n        return this.aggFuncsMap[name];\n    };\n    AggFuncService.prototype.getFuncNames = function (column) {\n        var userAllowedFuncs = column.getColDef().allowedAggFuncs;\n        if (ag_grid_community_1._.exists(userAllowedFuncs) && userAllowedFuncs) {\n            return userAllowedFuncs;\n        }\n        else {\n            return Object.keys(this.aggFuncsMap).sort();\n        }\n    };\n    AggFuncService.prototype.clear = function () {\n        this.aggFuncsMap = {};\n    };\n    var AggFuncService_1;\n    AggFuncService.AGG_SUM = 'sum';\n    AggFuncService.AGG_FIRST = 'first';\n    AggFuncService.AGG_LAST = 'last';\n    AggFuncService.AGG_MIN = 'min';\n    AggFuncService.AGG_MAX = 'max';\n    AggFuncService.AGG_COUNT = 'count';\n    AggFuncService.AGG_AVG = 'avg';\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], AggFuncService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AggFuncService.prototype, \"init\", null);\n    AggFuncService = AggFuncService_1 = __decorate([\n        ag_grid_community_1.Bean('aggFuncService')\n    ], AggFuncService);\n    return AggFuncService;\n}());\nexports.AggFuncService = AggFuncService;\nfunction aggSum(input) {\n    var result = null;\n    var length = input.length;\n    for (var i = 0; i < length; i++) {\n        if (typeof input[i] === 'number') {\n            if (result === null) {\n                result = input[i];\n            }\n            else {\n                result += input[i];\n            }\n        }\n    }\n    return result;\n}\nfunction aggFirst(input) {\n    if (input.length >= 0) {\n        return input[0];\n    }\n    else {\n        return null;\n    }\n}\nfunction aggLast(input) {\n    if (input.length >= 0) {\n        return ag_grid_community_1._.last(input);\n    }\n    else {\n        return null;\n    }\n}\nfunction aggMin(input) {\n    var result = null;\n    var length = input.length;\n    for (var i = 0; i < length; i++) {\n        if (typeof input[i] === 'number') {\n            if (result === null) {\n                result = input[i];\n            }\n            else if (result > input[i]) {\n                result = input[i];\n            }\n        }\n    }\n    return result;\n}\nfunction aggMax(input) {\n    var result = null;\n    var length = input.length;\n    for (var i = 0; i < length; i++) {\n        if (typeof input[i] === 'number') {\n            if (result === null) {\n                result = input[i];\n            }\n            else if (result < input[i]) {\n                result = input[i];\n            }\n        }\n    }\n    return result;\n}\nfunction aggCount(input) {\n    var result = {\n        value: 0,\n        toString: function () {\n            return this.value.toString();\n        },\n        // used for sorting\n        toNumber: function () {\n            return this.value;\n        }\n    };\n    var length = input.length;\n    for (var i = 0; i < length; i++) {\n        var isGroupAgg = ag_grid_community_1._.exists(input[i]) && typeof input[i].value === 'number';\n        if (isGroupAgg) {\n            result.value += input[i].value;\n        }\n        else {\n            result.value++;\n        }\n    }\n    return result;\n}\n// the average function is tricky as the multiple levels require weighted averages\n// for the non-leaf node aggregations.\nfunction aggAvg(input) {\n    // the average will be the sum / count\n    var sum = 0;\n    var count = 0;\n    var length = input.length;\n    for (var i = 0; i < length; i++) {\n        var currentItem = input[i];\n        var itemIsGroupResult = ag_grid_community_1._.exists(currentItem) && typeof currentItem.value === 'number' && typeof currentItem.count === 'number';\n        // skip values that are not numbers (ie skip empty values)\n        if (typeof currentItem === 'number') {\n            sum += currentItem;\n            count++;\n            // check if it's a group (ie value is a wrapper object)\n        }\n        else if (itemIsGroupResult) {\n            // we are aggregating groups, so we take the\n            // aggregated values to calculated a weighted average\n            sum += currentItem.value * currentItem.count;\n            count += currentItem.count;\n        }\n    }\n    // avoid divide by zero error\n    var value = null;\n    if (count !== 0) {\n        value = sum / count;\n    }\n    // the result will be an object. when this cell is rendered, only the avg is shown.\n    // however when this cell is part of another aggregation, the count is also needed\n    // to create a weighted average for the next level.\n    var result = {\n        count: count,\n        value: value,\n        // the grid by default uses toString to render values for an object, so this\n        // is a trick to get the default cellRenderer to display the avg value\n        toString: function () {\n            if (typeof this.value === 'number') {\n                return this.value.toString();\n            }\n            else {\n                return '';\n            }\n        },\n        // used for sorting\n        toNumber: function () {\n            return this.value;\n        }\n    };\n    return result;\n}\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/aggregation/aggFuncService.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/clipboardService.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/clipboardService.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar rangeController_1 = __webpack_require__(/*! ./rangeController */ \"../../node_modules/ag-grid-enterprise/dist/lib/rangeController.js\");\nvar ClipboardService = /** @class */ (function () {\n    function ClipboardService() {\n        this.pasteOperationActive = false;\n    }\n    ClipboardService.prototype.isPasteOperationActive = function () {\n        return this.pasteOperationActive;\n    };\n    ClipboardService.prototype.registerGridCore = function (gridCore) {\n        this.gridCore = gridCore;\n    };\n    ClipboardService.prototype.init = function () {\n        this.logger = this.loggerFactory.create('ClipboardService');\n        if (this.rowModel.getType() === ag_grid_community_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            this.clientSideRowModel = this.rowModel;\n        }\n    };\n    ClipboardService.prototype.pasteFromClipboard = function () {\n        var _this = this;\n        this.logger.log('pasteFromClipboard');\n        this.executeOnTempElement(function (textArea) {\n            textArea.focus();\n        }, function (element) {\n            var data = element.value;\n            if (ag_grid_community_1._.missingOrEmpty(data)) {\n                return;\n            }\n            var parsedData = _this.dataToArray(data);\n            var userFunc = _this.gridOptionsWrapper.getProcessDataFromClipboardFunc();\n            if (userFunc) {\n                parsedData = userFunc({ data: parsedData });\n            }\n            if (ag_grid_community_1._.missingOrEmpty(parsedData)) {\n                return;\n            }\n            _this.eventService.dispatchEvent({\n                type: ag_grid_community_1.Events.EVENT_PASTE_START,\n                api: _this.gridOptionsWrapper.getApi(),\n                columnApi: _this.gridOptionsWrapper.getColumnApi(),\n                source: 'clipboard'\n            });\n            var singleCellInClipboard = parsedData.length == 1 && parsedData[0].length == 1;\n            var rangeActive = _this.rangeController.isMoreThanOneCell();\n            rangeActive && !singleCellInClipboard ?\n                _this.pasteIntoActiveRange(parsedData) : _this.pasteStartingFromFocusedCell(parsedData);\n            _this.eventService.dispatchEvent({\n                type: ag_grid_community_1.Events.EVENT_PASTE_END,\n                api: _this.gridOptionsWrapper.getApi(),\n                columnApi: _this.gridOptionsWrapper.getColumnApi(),\n                source: 'clipboard'\n            });\n        });\n    };\n    ClipboardService.prototype.pasteIntoActiveRange = function (clipboardData) {\n        var _this = this;\n        var cellsToFlash = {};\n        var updatedRowNodes = [];\n        var updatedColumnIds = [];\n        var focusedCell = this.focusedCellController.getFocusedCell();\n        // true if clipboard data can be evenly pasted into range, otherwise false\n        var abortRepeatingPasteIntoRows = this.rangeSize() % clipboardData.length != 0;\n        var indexOffset = 0, dataRowIndex = 0;\n        var rowCallback = function (currentRow, rowNode, columns, index, isLastRow) {\n            var atEndOfClipboardData = index - indexOffset >= clipboardData.length;\n            if (atEndOfClipboardData) {\n                if (abortRepeatingPasteIntoRows) {\n                    return;\n                }\n                // increment offset and reset data index to repeat paste of data\n                indexOffset += dataRowIndex;\n                dataRowIndex = 0;\n            }\n            var currentRowData = clipboardData[index - indexOffset];\n            // otherwise we are not the first row, so copy\n            updatedRowNodes.push(rowNode);\n            columns.forEach(function (column, idx) {\n                if (!column.isCellEditable(rowNode)) {\n                    return;\n                }\n                // repeat data for columns we don't have data for - happens when to range is bigger than copied data range\n                if (idx >= currentRowData.length) {\n                    idx = idx % currentRowData.length;\n                }\n                var firstRowValue = currentRowData[idx];\n                var processCellFromClipboardFunc = _this.gridOptionsWrapper.getProcessCellFromClipboardFunc();\n                firstRowValue = _this.userProcessCell(rowNode, column, firstRowValue, processCellFromClipboardFunc, ag_grid_community_1.Constants.EXPORT_TYPE_DRAG_COPY);\n                _this.valueService.setValue(rowNode, column, firstRowValue);\n                var cellPosition = {\n                    rowIndex: currentRow.rowIndex,\n                    rowPinned: currentRow.rowPinned,\n                    column: column\n                };\n                var cellId = _this.cellPositionUtils.createId(cellPosition);\n                cellsToFlash[cellId] = true;\n            });\n            dataRowIndex++;\n        };\n        this.iterateActiveRanges(false, rowCallback);\n        this.rowRenderer.refreshCells({ rowNodes: updatedRowNodes, columns: updatedColumnIds });\n        this.dispatchFlashCells(cellsToFlash);\n        if (focusedCell) {\n            this.focusedCellController.setFocusedCell(focusedCell.rowIndex, focusedCell.column, focusedCell.rowPinned, true);\n        }\n        this.fireRowChanged(updatedRowNodes);\n    };\n    ClipboardService.prototype.pasteStartingFromFocusedCell = function (parsedData) {\n        var focusedCell = this.focusedCellController.getFocusedCell();\n        if (!focusedCell) {\n            return;\n        }\n        // some parts of the grid logic shouldn't execute when paste operation\n        // in progress, so we flag when paste is in progress. used by changeDetectionService\n        // (as we don't want the grid refreshing for every cell, due to CellValueChanged event)\n        //\n        // NOTE - it is only pasteStartingFromFocusedCell where we want the ChangeDetectionService\n        // to stand down, as it is only this method which does clientSideRowModel.doAggregate()\n        // (the pasteIntoActiveRange or copyRangeDown do NOT do this). in the future this class needs\n        // to be refactored, so that all these methods do the same (hopefully with common logic)\n        // and then this flag is turned on / off at a higher level. i am not doing the refactor now\n        // as this is a critical code fix going into a patch release.\n        this.pasteOperationActive = true;\n        // remove last row if empty, excel puts empty last row in\n        var lastLine = ag_grid_community_1._.last(parsedData);\n        if (lastLine && lastLine.length === 1 && lastLine[0] === '') {\n            ag_grid_community_1._.removeFromArray(parsedData, lastLine);\n        }\n        var currentRow = { rowIndex: focusedCell.rowIndex, rowPinned: focusedCell.rowPinned };\n        var cellsToFlash = {};\n        var updatedRowNodes = [];\n        var updatedColumnIds = [];\n        var columnsToPasteInto = this.columnController.getDisplayedColumnsStartingAt(focusedCell.column);\n        var onlyOneValueToPaste = parsedData.length === 1 && parsedData[0].length === 1;\n        var changedPath;\n        if (this.clientSideRowModel) {\n            var onlyChangedColumns = this.gridOptionsWrapper.isAggregateOnlyChangedColumns();\n            changedPath = new ag_grid_community_1.ChangedPath(onlyChangedColumns, this.clientSideRowModel.getRootNode());\n        }\n        if (onlyOneValueToPaste) {\n            this.pasteSingleValue(parsedData, updatedRowNodes, cellsToFlash, updatedColumnIds, changedPath);\n        }\n        else {\n            this.pasteMultipleValues(parsedData, currentRow, updatedRowNodes, columnsToPasteInto, cellsToFlash, updatedColumnIds, ag_grid_community_1.Constants.EXPORT_TYPE_CLIPBOARD, changedPath);\n        }\n        if (changedPath) {\n            this.clientSideRowModel.doAggregate(changedPath);\n        }\n        this.rowRenderer.refreshCells({ rowNodes: updatedRowNodes, columns: updatedColumnIds });\n        this.dispatchFlashCells(cellsToFlash);\n        this.focusedCellController.setFocusedCell(focusedCell.rowIndex, focusedCell.column, focusedCell.rowPinned, true);\n        this.fireRowChanged(updatedRowNodes);\n        // unset the paste active operation\n        this.pasteOperationActive = false;\n    };\n    ClipboardService.prototype.copyRangeDown = function () {\n        var _this = this;\n        if (this.rangeController.isEmpty()) {\n            return;\n        }\n        this.eventService.dispatchEvent({\n            type: ag_grid_community_1.Events.EVENT_PASTE_START,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            source: 'rangeDown'\n        });\n        var cellsToFlash = {};\n        var firstRowValues = [];\n        var updatedRowNodes = [];\n        var updatedColumnIds = [];\n        var rowCallback = function (currentRow, rowNode, columns, index, isLastRow) {\n            // take reference of first row, this is the one we will be using to copy from\n            if (!firstRowValues.length) {\n                // two reasons for looping through columns\n                columns.forEach(function (column) {\n                    // reason 1 - to get the initial values to copy down\n                    var value = _this.valueService.getValue(column, rowNode);\n                    var processCellForClipboardFunc = _this.gridOptionsWrapper.getProcessCellForClipboardFunc();\n                    value = _this.userProcessCell(rowNode, column, value, processCellForClipboardFunc, ag_grid_community_1.Constants.EXPORT_TYPE_DRAG_COPY);\n                    firstRowValues.push(value);\n                    // reason 2 - to record the columnId for refreshing\n                    updatedColumnIds.push(column.getId());\n                });\n            }\n            else {\n                // otherwise we are not the first row, so copy\n                updatedRowNodes.push(rowNode);\n                columns.forEach(function (column, index) {\n                    if (!column.isCellEditable(rowNode)) {\n                        return;\n                    }\n                    var firstRowValue = firstRowValues[index];\n                    var processCellFromClipboardFunc = _this.gridOptionsWrapper.getProcessCellFromClipboardFunc();\n                    firstRowValue = _this.userProcessCell(rowNode, column, firstRowValue, processCellFromClipboardFunc, ag_grid_community_1.Constants.EXPORT_TYPE_DRAG_COPY);\n                    _this.valueService.setValue(rowNode, column, firstRowValue);\n                    var cellPosition = {\n                        rowIndex: currentRow.rowIndex,\n                        rowPinned: currentRow.rowPinned,\n                        column: column\n                    };\n                    var cellId = _this.cellPositionUtils.createId(cellPosition);\n                    cellsToFlash[cellId] = true;\n                });\n            }\n        };\n        this.iterateActiveRanges(true, rowCallback);\n        // this is very heavy, should possibly just refresh the specific cells?\n        this.rowRenderer.refreshCells({ rowNodes: updatedRowNodes, columns: updatedColumnIds });\n        this.dispatchFlashCells(cellsToFlash);\n        this.fireRowChanged(updatedRowNodes);\n        this.eventService.dispatchEvent({\n            type: ag_grid_community_1.Events.EVENT_PASTE_END,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            source: 'rangeDown'\n        });\n    };\n    ClipboardService.prototype.fireRowChanged = function (rowNodes) {\n        var _this = this;\n        if (!this.gridOptionsWrapper.isFullRowEdit()) {\n            return;\n        }\n        rowNodes.forEach(function (rowNode) {\n            var event = {\n                type: ag_grid_community_1.Events.EVENT_ROW_VALUE_CHANGED,\n                node: rowNode,\n                data: rowNode.data,\n                rowIndex: rowNode.rowIndex,\n                rowPinned: rowNode.rowPinned,\n                context: _this.gridOptionsWrapper.getContext(),\n                api: _this.gridOptionsWrapper.getApi(),\n                columnApi: _this.gridOptionsWrapper.getColumnApi()\n            };\n            _this.eventService.dispatchEvent(event);\n        });\n    };\n    ClipboardService.prototype.pasteMultipleValues = function (clipboardGridData, currentRow, updatedRowNodes, columnsToPasteInto, cellsToFlash, updatedColumnIds, type, changedPath) {\n        var _this = this;\n        clipboardGridData.forEach(function (clipboardRowData) {\n            // if we have come to end of rows in grid, then skip\n            if (!currentRow) {\n                return;\n            }\n            var rowNode = _this.rowPositionUtils.getRowNode(currentRow);\n            if (rowNode) {\n                updatedRowNodes.push(rowNode);\n                clipboardRowData.forEach(function (value, index) {\n                    var column = columnsToPasteInto[index];\n                    _this.updateCellValue(rowNode, column, value, currentRow, cellsToFlash, updatedColumnIds, type, changedPath);\n                });\n                // move to next row down for next set of values\n                currentRow = _this.cellNavigationService.getRowBelow({ rowPinned: currentRow.rowPinned, rowIndex: currentRow.rowIndex });\n            }\n        });\n        return currentRow;\n    };\n    ClipboardService.prototype.pasteSingleValue = function (parsedData, updatedRowNodes, cellsToFlash, updatedColumnIds, changedPath) {\n        var _this = this;\n        var value = parsedData[0][0];\n        var rowCallback = function (currentRow, rowNode, columns) {\n            updatedRowNodes.push(rowNode);\n            columns.forEach(function (column) {\n                _this.updateCellValue(rowNode, column, value, currentRow, cellsToFlash, updatedColumnIds, ag_grid_community_1.Constants.EXPORT_TYPE_CLIPBOARD, changedPath);\n            });\n        };\n        this.iterateActiveRanges(false, rowCallback);\n    };\n    ClipboardService.prototype.updateCellValue = function (rowNode, column, value, currentRow, cellsToFlash, updatedColumnIds, type, changedPath) {\n        if (!rowNode || !currentRow) {\n            return;\n        }\n        if (!column.isCellEditable(rowNode)) {\n            return;\n        }\n        if (column.isSuppressPaste(rowNode)) {\n            return;\n        }\n        var processedValue = this.userProcessCell(rowNode, column, value, this.gridOptionsWrapper.getProcessCellFromClipboardFunc(), type);\n        this.valueService.setValue(rowNode, column, processedValue);\n        var cellPosition = {\n            rowIndex: currentRow.rowIndex,\n            rowPinned: currentRow.rowPinned,\n            column: column\n        };\n        var cellId = this.cellPositionUtils.createId(cellPosition);\n        cellsToFlash[cellId] = true;\n        if (updatedColumnIds.indexOf(column.getId()) < 0) {\n            updatedColumnIds.push(column.getId());\n        }\n        if (changedPath && !rowNode.isRowPinned()) {\n            changedPath.addParentNode(rowNode.parent, [column]);\n        }\n    };\n    ClipboardService.prototype.copyToClipboard = function (includeHeaders) {\n        this.logger.log(\"copyToClipboard: includeHeaders = \" + includeHeaders);\n        // don't override 'includeHeaders' if it has been explicitly set to 'false'\n        if (typeof includeHeaders === 'undefined') {\n            includeHeaders = this.gridOptionsWrapper.isCopyHeadersToClipboard();\n        }\n        var selectedRowsToCopy = !this.selectionController.isEmpty()\n            && !this.gridOptionsWrapper.isSuppressCopyRowsToClipboard();\n        // default is copy range if exists, otherwise rows\n        if (this.rangeController.isMoreThanOneCell()) {\n            this.copySelectedRangeToClipboard(includeHeaders);\n        }\n        else if (selectedRowsToCopy) {\n            // otherwise copy selected rows if they exist\n            this.copySelectedRowsToClipboard(includeHeaders);\n        }\n        else if (this.focusedCellController.isAnyCellFocused()) {\n            // if there is a focused cell, copy this\n            this.copyFocusedCellToClipboard(includeHeaders);\n        }\n        else {\n            // lastly if no focused cell, try range again. this can happen\n            // if use has cellSelection turned off (so no focused cell)\n            // but has a cell clicked, so there exists a cell range\n            // of exactly one cell (hence the first 'if' above didn't\n            // get executed).\n            this.copySelectedRangeToClipboard(includeHeaders);\n        }\n    };\n    ClipboardService.prototype.iterateActiveRanges = function (onlyFirst, rowCallback, columnCallback) {\n        var _this = this;\n        if (this.rangeController.isEmpty()) {\n            return;\n        }\n        var cellRanges = this.rangeController.getCellRanges();\n        if (onlyFirst) {\n            var range = cellRanges[0];\n            this.iterateActiveRange(range, rowCallback, columnCallback, true);\n        }\n        else {\n            cellRanges.forEach(function (range, idx) { return _this.iterateActiveRange(range, rowCallback, columnCallback, idx === cellRanges.length - 1); });\n        }\n    };\n    ClipboardService.prototype.iterateActiveRange = function (range, rowCallback, columnCallback, isLastRange) {\n        var currentRow = this.rangeController.getRangeStartRow(range);\n        var lastRow = this.rangeController.getRangeEndRow(range);\n        if (columnCallback && ag_grid_community_1._.exists(columnCallback) && range.columns) {\n            columnCallback(range.columns);\n        }\n        var rangeIndex = 0;\n        var isLastRow = false;\n        // the currentRow could be missing if the user sets the active range manually, and sets a range\n        // that is outside of the grid (eg. sets range rows 0 to 100, but grid has only 20 rows).\n        while (!isLastRow && !ag_grid_community_1._.missing(currentRow) && currentRow) {\n            var rowNode = this.rowPositionUtils.getRowNode(currentRow);\n            isLastRow = currentRow.rowIndex === lastRow.rowIndex && currentRow.rowIndex === lastRow.rowIndex;\n            rowCallback(currentRow, rowNode, range.columns, rangeIndex++, isLastRow && isLastRange);\n            currentRow = this.cellNavigationService.getRowBelow(currentRow);\n        }\n    };\n    ClipboardService.prototype.copySelectedRangeToClipboard = function (includeHeaders) {\n        var _this = this;\n        if (includeHeaders === void 0) { includeHeaders = false; }\n        if (this.rangeController.isEmpty()) {\n            return;\n        }\n        var deliminator = this.gridOptionsWrapper.getClipboardDeliminator();\n        var data = '';\n        var cellsToFlash = {};\n        // adds columns to the data\n        var columnCallback = function (columns) {\n            if (!includeHeaders) {\n                return;\n            }\n            columns.forEach(function (column, index) {\n                var value = _this.columnController.getDisplayNameForColumn(column, 'clipboard', true);\n                var processedValue = _this.userProcessHeader(column, value, _this.gridOptionsWrapper.getProcessHeaderForClipboardFunc());\n                if (index != 0) {\n                    data += deliminator;\n                }\n                if (ag_grid_community_1._.exists(processedValue)) {\n                    data += processedValue;\n                }\n            });\n            data += '\\r\\n';\n        };\n        // adds cell values to the data\n        var rowCallback = function (currentRow, rowNode, columns, index, isLastRow) {\n            columns.forEach(function (column, index) {\n                var value = _this.valueService.getValue(column, rowNode);\n                var processedValue = _this.userProcessCell(rowNode, column, value, _this.gridOptionsWrapper.getProcessCellForClipboardFunc(), ag_grid_community_1.Constants.EXPORT_TYPE_CLIPBOARD);\n                if (index != 0) {\n                    data += deliminator;\n                }\n                if (ag_grid_community_1._.exists(processedValue)) {\n                    data += processedValue;\n                }\n                var cellPosition = {\n                    rowIndex: currentRow.rowIndex,\n                    rowPinned: currentRow.rowPinned,\n                    column: column\n                };\n                var cellId = _this.cellPositionUtils.createId(cellPosition);\n                cellsToFlash[cellId] = true;\n            });\n            if (!isLastRow) {\n                data += '\\r\\n';\n            }\n        };\n        this.iterateActiveRanges(false, rowCallback, columnCallback);\n        this.copyDataToClipboard(data);\n        this.dispatchFlashCells(cellsToFlash);\n    };\n    ClipboardService.prototype.copyFocusedCellToClipboard = function (includeHeaders) {\n        var _a;\n        if (includeHeaders === void 0) { includeHeaders = false; }\n        var focusedCell = this.focusedCellController.getFocusedCell();\n        if (ag_grid_community_1._.missing(focusedCell)) {\n            return;\n        }\n        var cellId = this.cellPositionUtils.createId(focusedCell);\n        var currentRow = { rowPinned: focusedCell.rowPinned, rowIndex: focusedCell.rowIndex };\n        var rowNode = this.rowPositionUtils.getRowNode(currentRow);\n        var column = focusedCell.column;\n        var value = this.valueService.getValue(column, rowNode);\n        var processedValue = this.userProcessCell(rowNode, column, value, this.gridOptionsWrapper.getProcessCellForClipboardFunc(), ag_grid_community_1.Constants.EXPORT_TYPE_CLIPBOARD);\n        if (ag_grid_community_1._.missing(processedValue)) {\n            // copy the new line character to clipboard instead of an empty string, as the 'execCommand' will ignore it.\n            // this behaviour is consistent with how Excel works!\n            processedValue = '\\t';\n        }\n        var data = '';\n        if (includeHeaders) {\n            var headerValue = this.columnController.getDisplayNameForColumn(column, 'clipboard', true);\n            data = this.userProcessHeader(column, headerValue, this.gridOptionsWrapper.getProcessHeaderForClipboardFunc());\n            data += '\\r\\n';\n        }\n        data += processedValue.toString();\n        this.copyDataToClipboard(data);\n        this.dispatchFlashCells((_a = {}, _a[cellId] = true, _a));\n    };\n    ClipboardService.prototype.dispatchFlashCells = function (cellsToFlash) {\n        var _this = this;\n        window.setTimeout(function () {\n            var event = {\n                type: ag_grid_community_1.Events.EVENT_FLASH_CELLS,\n                cells: cellsToFlash,\n                api: _this.gridApi,\n                columnApi: _this.columnApi\n            };\n            _this.eventService.dispatchEvent(event);\n        }, 0);\n    };\n    ClipboardService.prototype.userProcessCell = function (rowNode, column, value, func, type) {\n        if (func) {\n            var params = {\n                column: column,\n                node: rowNode,\n                value: value,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext(),\n                type: type\n            };\n            return func(params);\n        }\n        else {\n            return value;\n        }\n    };\n    ClipboardService.prototype.userProcessHeader = function (column, value, func) {\n        if (func) {\n            var params = {\n                column: column,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext()\n            };\n            return func(params);\n        }\n        else {\n            return value;\n        }\n    };\n    ClipboardService.prototype.copySelectedRowsToClipboard = function (includeHeaders, columnKeys) {\n        if (includeHeaders === void 0) { includeHeaders = false; }\n        var skipHeader = !includeHeaders;\n        var deliminator = this.gridOptionsWrapper.getClipboardDeliminator();\n        var params = {\n            columnKeys: columnKeys,\n            skipHeader: skipHeader,\n            skipFooters: true,\n            suppressQuotes: true,\n            columnSeparator: deliminator,\n            onlySelected: true,\n            processCellCallback: this.gridOptionsWrapper.getProcessCellForClipboardFunc(),\n            processHeaderCallback: this.gridOptionsWrapper.getProcessHeaderForClipboardFunc()\n        };\n        var data = this.csvCreator.getDataAsCsv(params);\n        this.copyDataToClipboard(data);\n    };\n    ClipboardService.prototype.copyDataToClipboard = function (data) {\n        var userProvidedFunc = this.gridOptionsWrapper.getSendToClipboardFunc();\n        if (userProvidedFunc && ag_grid_community_1._.exists(userProvidedFunc)) {\n            var params = { data: data };\n            userProvidedFunc(params);\n        }\n        else {\n            this.executeOnTempElement(function (element) {\n                element.value = data;\n                element.select();\n                element.focus();\n                var result = document.execCommand('copy');\n                if (!result) {\n                    console.warn('ag-grid: Browser did not allow document.execCommand(\\'copy\\'). Ensure ' +\n                        'api.copySelectedRowsToClipboard() is invoked via a user event, i.e. button click, otherwise ' +\n                        'the browser will prevent it for security reasons.');\n                }\n            });\n        }\n    };\n    ClipboardService.prototype.executeOnTempElement = function (callbackNow, callbackAfter) {\n        var eTempInput = document.createElement('textarea');\n        eTempInput.style.width = '1px';\n        eTempInput.style.height = '1px';\n        eTempInput.style.top = '0px';\n        eTempInput.style.left = '0px';\n        eTempInput.style.position = 'absolute';\n        eTempInput.style.opacity = '0.0';\n        var guiRoot = this.gridCore.getRootGui();\n        guiRoot.appendChild(eTempInput);\n        try {\n            callbackNow(eTempInput);\n        }\n        catch (err) {\n            console.warn('ag-grid: Browser does not support document.execCommand(\\'copy\\') for clipboard operations');\n        }\n        //It needs 100 otherwise OS X seemed to not always be able to paste... Go figure...\n        if (callbackAfter) {\n            window.setTimeout(function () {\n                callbackAfter(eTempInput);\n                guiRoot.removeChild(eTempInput);\n            }, 100);\n        }\n        else {\n            guiRoot.removeChild(eTempInput);\n        }\n    };\n    // From http://stackoverflow.com/questions/1293147/javascript-code-to-parse-csv-data\n    // This will parse a delimited string into an array of arrays.\n    // Note: this code fixes an issue with the example posted on stack overflow where it doesn't correctly handle\n    // empty values in the first cell.\n    ClipboardService.prototype.dataToArray = function (strData) {\n        var delimiter = this.gridOptionsWrapper.getClipboardDeliminator();\n        // Create a regular expression to parse the CSV values.\n        var objPattern = new RegExp((\n        // Delimiters.\n        '(\\\\' + delimiter + '|\\\\r?\\\\n|\\\\r|^)' +\n            // Quoted fields.\n            '(?:\"([^\\\"]*(?:\"\"[^\\\"]*)*)\"|' +\n            // Standard fields.\n            '([^\\\\' + delimiter + '\\\\r\\\\n]*))'), \"gi\");\n        // Create an array to hold our data. Give the array\n        // a default empty first row.\n        var arrData = [[]];\n        // Create an array to hold our individual pattern matching groups.\n        var arrMatches;\n        // Required for handling edge case on first row copy\n        var atFirstRow = true;\n        // Keep looping over the regular expression matches\n        // until we can no longer find a match.\n        while (arrMatches = objPattern.exec(strData)) {\n            // Get the delimiter that was found.\n            var strMatchedDelimiter = arrMatches[1];\n            // Handles case when first row is an empty cell, insert an empty string before delimiter\n            if ((atFirstRow && strMatchedDelimiter) || !arrMatches.index && arrMatches[0].charAt(0) === delimiter) {\n                arrData[0].push('');\n            }\n            // Check to see if the given delimiter has a length\n            // (is not the start of string) and if it matches\n            // field delimiter. If id does not, then we know\n            // that this delimiter is a row delimiter.\n            if (strMatchedDelimiter.length && strMatchedDelimiter !== delimiter) {\n                // Since we have reached a new row of data,\n                // add an empty row to our data array.\n                arrData.push([]);\n            }\n            var strMatchedValue = void 0;\n            // Now that we have our delimiter out of the way,\n            // let's check to see which kind of value we\n            // captured (quoted or unquoted).\n            if (arrMatches[2]) {\n                // We found a quoted value. When we capture\n                // this value, unescaped any double quotes.\n                strMatchedValue = arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"');\n            }\n            else {\n                // We found a non-quoted value.\n                strMatchedValue = arrMatches[3];\n            }\n            // Now that we have our value string, let's add\n            // it to the data array.\n            var lastItem = ag_grid_community_1._.last(arrData);\n            if (lastItem) {\n                lastItem.push(strMatchedValue);\n            }\n            atFirstRow = false;\n        }\n        // Return the parsed data.\n        return arrData;\n    };\n    ClipboardService.prototype.rangeSize = function () {\n        var ranges = this.rangeController.getCellRanges();\n        var startRangeIndex;\n        var endRangeIndex;\n        if (ranges.length > 0) {\n            startRangeIndex = 0;\n            endRangeIndex = 0;\n        }\n        else {\n            startRangeIndex = this.rangeController.getRangeStartRow(ranges[0]).rowIndex;\n            endRangeIndex = this.rangeController.getRangeEndRow(ranges[0]).rowIndex;\n        }\n        return startRangeIndex - endRangeIndex + 1;\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('csvCreator'),\n        __metadata(\"design:type\", ag_grid_community_1.CsvCreator)\n    ], ClipboardService.prototype, \"csvCreator\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('loggerFactory'),\n        __metadata(\"design:type\", ag_grid_community_1.LoggerFactory)\n    ], ClipboardService.prototype, \"loggerFactory\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('selectionController'),\n        __metadata(\"design:type\", ag_grid_community_1.SelectionController)\n    ], ClipboardService.prototype, \"selectionController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rangeController'),\n        __metadata(\"design:type\", rangeController_1.RangeController)\n    ], ClipboardService.prototype, \"rangeController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], ClipboardService.prototype, \"rowModel\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('valueService'),\n        __metadata(\"design:type\", ag_grid_community_1.ValueService)\n    ], ClipboardService.prototype, \"valueService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('focusedCellController'),\n        __metadata(\"design:type\", ag_grid_community_1.FocusedCellController)\n    ], ClipboardService.prototype, \"focusedCellController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", ag_grid_community_1.RowRenderer)\n    ], ClipboardService.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], ClipboardService.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], ClipboardService.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('cellNavigationService'),\n        __metadata(\"design:type\", ag_grid_community_1.CellNavigationService)\n    ], ClipboardService.prototype, \"cellNavigationService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ClipboardService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnApi'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnApi)\n    ], ClipboardService.prototype, \"columnApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], ClipboardService.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('cellPositionUtils'),\n        __metadata(\"design:type\", ag_grid_community_1.CellPositionUtils)\n    ], ClipboardService.prototype, \"cellPositionUtils\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowPositionUtils'),\n        __metadata(\"design:type\", ag_grid_community_1.RowPositionUtils)\n    ], ClipboardService.prototype, \"rowPositionUtils\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ClipboardService.prototype, \"init\", null);\n    ClipboardService = __decorate([\n        ag_grid_community_1.Bean('clipboardService')\n    ], ClipboardService);\n    return ClipboardService;\n}());\nexports.ClipboardService = ClipboardService;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/clipboardService.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/enterpriseBoot.js":
/*!************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/enterpriseBoot.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar setFilter_1 = __webpack_require__(/*! ./setFilter/setFilter */ \"../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFilter.js\");\nvar richSelectCellEditor_1 = __webpack_require__(/*! ./rendering/richSelect/richSelectCellEditor */ \"../../node_modules/ag-grid-enterprise/dist/lib/rendering/richSelect/richSelectCellEditor.js\");\nvar licenseManager_1 = __webpack_require__(/*! ./licenseManager */ \"../../node_modules/ag-grid-enterprise/dist/lib/licenseManager.js\");\nvar detailCellRenderer_1 = __webpack_require__(/*! ./rendering/detail/detailCellRenderer */ \"../../node_modules/ag-grid-enterprise/dist/lib/rendering/detail/detailCellRenderer.js\");\nvar totalRowsComp_1 = __webpack_require__(/*! ./statusBar/providedPanels/totalRowsComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/totalRowsComp.js\");\nvar totalAndFilteredRowsComp_1 = __webpack_require__(/*! ./statusBar/providedPanels/totalAndFilteredRowsComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/totalAndFilteredRowsComp.js\");\nvar columnToolPanel_1 = __webpack_require__(/*! ./sideBar/providedPanels/columns/columnToolPanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/columnToolPanel.js\");\nvar aggregationComp_1 = __webpack_require__(/*! ./statusBar/providedPanels/aggregationComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/aggregationComp.js\");\nvar selectedRowsComp_1 = __webpack_require__(/*! ./statusBar/providedPanels/selectedRowsComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/selectedRowsComp.js\");\nvar filteredRowsComp_1 = __webpack_require__(/*! ./statusBar/providedPanels/filteredRowsComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/filteredRowsComp.js\");\nvar filtersToolPanel_1 = __webpack_require__(/*! ./sideBar/providedPanels/filters/filtersToolPanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/filters/filtersToolPanel.js\");\nvar setFloatingFilter_1 = __webpack_require__(/*! ./setFilter/setFloatingFilter */ \"../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFloatingFilter.js\");\nvar EnterpriseBoot = /** @class */ (function () {\n    function EnterpriseBoot() {\n    }\n    EnterpriseBoot.prototype.init = function () {\n        this.userComponentRegistry.registerDefaultComponent('agRichSelect', richSelectCellEditor_1.RichSelectCellEditor);\n        this.userComponentRegistry.registerDefaultComponent('agRichSelectCellEditor', richSelectCellEditor_1.RichSelectCellEditor);\n        this.userComponentRegistry.registerDefaultComponent('agSetColumnFilter', setFilter_1.SetFilter);\n        this.userComponentRegistry.registerDefaultComponent('agSetColumnFloatingFilter', setFloatingFilter_1.SetFloatingFilterComp);\n        this.userComponentRegistry.registerDefaultComponent('agDetailCellRenderer', detailCellRenderer_1.DetailCellRenderer);\n        this.userComponentRegistry.registerDefaultComponent('agAggregationComponent', aggregationComp_1.AggregationComp);\n        this.userComponentRegistry.registerDefaultComponent('agColumnsToolPanel', columnToolPanel_1.ColumnToolPanel);\n        this.userComponentRegistry.registerDefaultComponent('agFiltersToolPanel', filtersToolPanel_1.FiltersToolPanel);\n        this.userComponentRegistry.registerDefaultComponent('agSelectedRowCountComponent', selectedRowsComp_1.SelectedRowsComp);\n        this.userComponentRegistry.registerDefaultComponent('agTotalRowCountComponent', totalRowsComp_1.TotalRowsComp);\n        this.userComponentRegistry.registerDefaultComponent('agFilteredRowCountComponent', filteredRowsComp_1.FilteredRowsComp);\n        this.userComponentRegistry.registerDefaultComponent('agTotalAndFilteredRowCountComponent', totalAndFilteredRowsComp_1.TotalAndFilteredRowsComp);\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('filterManager'),\n        __metadata(\"design:type\", ag_grid_community_1.FilterManager)\n    ], EnterpriseBoot.prototype, \"filterManager\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('licenseManager'),\n        __metadata(\"design:type\", licenseManager_1.LicenseManager)\n    ], EnterpriseBoot.prototype, \"licenseManager\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('userComponentRegistry'),\n        __metadata(\"design:type\", ag_grid_community_1.UserComponentRegistry)\n    ], EnterpriseBoot.prototype, \"userComponentRegistry\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], EnterpriseBoot.prototype, \"init\", null);\n    EnterpriseBoot = __decorate([\n        ag_grid_community_1.Bean('enterpriseBoot')\n    ], EnterpriseBoot);\n    return EnterpriseBoot;\n}());\nexports.EnterpriseBoot = EnterpriseBoot;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/enterpriseBoot.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelCreator.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelCreator.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar excelXmlSerializingSession_1 = __webpack_require__(/*! ./excelXmlSerializingSession */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXmlSerializingSession.js\");\nvar excelXlsxSerializingSession_1 = __webpack_require__(/*! ./excelXlsxSerializingSession */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXlsxSerializingSession.js\");\nvar excelXmlFactory_1 = __webpack_require__(/*! ./excelXmlFactory */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXmlFactory.js\");\nvar excelXlsxFactory_1 = __webpack_require__(/*! ./excelXlsxFactory */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXlsxFactory.js\");\nvar ExcelCreator = /** @class */ (function (_super) {\n    __extends(ExcelCreator, _super);\n    function ExcelCreator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ExcelCreator.prototype.postConstruct = function () {\n        this.setBeans({\n            downloader: this.downloader,\n            gridSerializer: this.gridSerializer,\n            gridOptionsWrapper: this.gridOptionsWrapper\n        });\n    };\n    ExcelCreator.prototype.exportDataAsExcel = function (params) {\n        if (params && params.exportMode) {\n            this.setExportMode(params.exportMode);\n        }\n        return this.export(params);\n    };\n    ExcelCreator.prototype.getDataAsExcelXml = function (params) {\n        if (params && params.exportMode) {\n            delete params.exportMode;\n        }\n        this.setExportMode('xml');\n        return this.getData(params || {});\n    };\n    ExcelCreator.prototype.getMimeType = function () {\n        return this.getExportMode() === 'xml' ? 'application/vnd.ms-excel' : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n    };\n    ExcelCreator.prototype.getDefaultFileName = function () {\n        return \"export.\" + this.getExportMode();\n    };\n    ExcelCreator.prototype.getDefaultFileExtension = function () {\n        return this.getExportMode();\n    };\n    ExcelCreator.prototype.createSerializingSession = function (params) {\n        var _a = this, columnController = _a.columnController, valueService = _a.valueService, gridOptionsWrapper = _a.gridOptionsWrapper;\n        var processCellCallback = params.processCellCallback, processHeaderCallback = params.processHeaderCallback, suppressTextAsCDATA = params.suppressTextAsCDATA, rowHeight = params.rowHeight, headerRowHeight = params.headerRowHeight;\n        var isXlsx = this.getExportMode() === 'xlsx';\n        var excelFactory = isXlsx ? this.xlsxFactory : this.excelXmlFactory;\n        var sheetName = 'ag-grid';\n        if (ag_grid_community_1._.exists(params.sheetName)) {\n            sheetName = ag_grid_community_1._.utf8_encode(params.sheetName.toString().substr(0, 31));\n        }\n        var config = {\n            columnController: columnController,\n            valueService: valueService,\n            gridOptionsWrapper: gridOptionsWrapper,\n            processCellCallback: processCellCallback,\n            processHeaderCallback: processHeaderCallback,\n            rowHeight: rowHeight,\n            headerRowHeight: headerRowHeight || rowHeight,\n            sheetName: sheetName,\n            excelFactory: excelFactory,\n            baseExcelStyles: this.gridOptions.excelStyles || undefined,\n            styleLinker: this.styleLinker.bind(this),\n            suppressTextAsCDATA: suppressTextAsCDATA || false\n        };\n        return new (isXlsx ? excelXlsxSerializingSession_1.ExcelXlsxSerializingSession : excelXmlSerializingSession_1.ExcelXmlSerializingSession)(config);\n    };\n    ExcelCreator.prototype.styleLinker = function (rowType, rowIndex, colIndex, value, column, node) {\n        if ((rowType === ag_grid_community_1.RowType.HEADER) || (rowType === ag_grid_community_1.RowType.HEADER_GROUPING)) {\n            return [\"header\"];\n        }\n        var styles = this.gridOptions.excelStyles;\n        if (!styles || !styles.length) {\n            return null;\n        }\n        var styleIds = styles.map(function (it) {\n            return it.id;\n        });\n        var applicableStyles = [];\n        this.stylingService.processAllCellClasses(column.getColDef(), {\n            value: value,\n            data: node.data,\n            node: node,\n            colDef: column.getColDef(),\n            rowIndex: rowIndex,\n            api: this.gridOptionsWrapper.getApi(),\n            context: this.gridOptionsWrapper.getContext()\n        }, function (className) {\n            if (styleIds.indexOf(className) > -1) {\n                applicableStyles.push(className);\n            }\n        });\n        return applicableStyles.sort(function (left, right) {\n            return (styleIds.indexOf(left) < styleIds.indexOf(right)) ? -1 : 1;\n        });\n    };\n    ExcelCreator.prototype.isExportSuppressed = function () {\n        return this.gridOptionsWrapper.isSuppressExcelExport();\n    };\n    ExcelCreator.prototype.setExportMode = function (exportMode) {\n        this.exportMode = exportMode;\n    };\n    ExcelCreator.prototype.getExportMode = function () {\n        return this.exportMode || 'xlsx';\n    };\n    ExcelCreator.prototype.packageFile = function (data) {\n        if (this.getExportMode() === 'xml') {\n            return _super.prototype.packageFile.call(this, data);\n        }\n        var _a = this, zipContainer = _a.zipContainer, xlsxFactory = _a.xlsxFactory;\n        zipContainer.addFolders([\n            'xl/worksheets/',\n            'xl/',\n            'xl/theme/',\n            'xl/_rels/',\n            'docProps/',\n            '_rels/'\n        ]);\n        zipContainer.addFile('xl/worksheets/sheet1.xml', data);\n        zipContainer.addFile('xl/workbook.xml', xlsxFactory.createWorkbook());\n        zipContainer.addFile('xl/styles.xml', xlsxFactory.createStylesheet());\n        zipContainer.addFile('xl/sharedStrings.xml', xlsxFactory.createSharedStrings());\n        zipContainer.addFile('xl/theme/theme1.xml', xlsxFactory.createTheme());\n        zipContainer.addFile('xl/_rels/workbook.xml.rels', xlsxFactory.createWorkbookRels());\n        zipContainer.addFile('docProps/core.xml', xlsxFactory.createCore());\n        zipContainer.addFile('[Content_Types].xml', xlsxFactory.createContentTypes());\n        zipContainer.addFile('_rels/.rels', xlsxFactory.createRels());\n        return zipContainer.getContent('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('excelXmlFactory'),\n        __metadata(\"design:type\", excelXmlFactory_1.ExcelXmlFactory)\n    ], ExcelCreator.prototype, \"excelXmlFactory\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('excelXlsxFactory'),\n        __metadata(\"design:type\", excelXlsxFactory_1.ExcelXlsxFactory)\n    ], ExcelCreator.prototype, \"xlsxFactory\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], ExcelCreator.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('valueService'),\n        __metadata(\"design:type\", ag_grid_community_1.ValueService)\n    ], ExcelCreator.prototype, \"valueService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptions'),\n        __metadata(\"design:type\", Object)\n    ], ExcelCreator.prototype, \"gridOptions\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('stylingService'),\n        __metadata(\"design:type\", ag_grid_community_1.StylingService)\n    ], ExcelCreator.prototype, \"stylingService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('downloader'),\n        __metadata(\"design:type\", ag_grid_community_1.Downloader)\n    ], ExcelCreator.prototype, \"downloader\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridSerializer'),\n        __metadata(\"design:type\", ag_grid_community_1.GridSerializer)\n    ], ExcelCreator.prototype, \"gridSerializer\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ExcelCreator.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('zipContainer'),\n        __metadata(\"design:type\", ag_grid_community_1.ZipContainer)\n    ], ExcelCreator.prototype, \"zipContainer\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ExcelCreator.prototype, \"postConstruct\", null);\n    ExcelCreator = __decorate([\n        ag_grid_community_1.Bean('excelCreator')\n    ], ExcelCreator);\n    return ExcelCreator;\n}(ag_grid_community_1.BaseCreator));\nexports.ExcelCreator = ExcelCreator;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelCreator.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXlsxFactory.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXlsxFactory.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar core_1 = __webpack_require__(/*! ./files/ooxml/core */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/core.js\");\nvar contentTypes_1 = __webpack_require__(/*! ./files/ooxml/contentTypes */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/contentTypes.js\");\nvar office_1 = __webpack_require__(/*! ./files/ooxml/themes/office */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office.js\");\nvar sharedStrings_1 = __webpack_require__(/*! ./files/ooxml/sharedStrings */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/sharedStrings.js\");\nvar stylesheet_1 = __webpack_require__(/*! ./files/ooxml/styles/stylesheet */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/stylesheet.js\");\nvar workbook_1 = __webpack_require__(/*! ./files/ooxml/workbook */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/workbook.js\");\nvar worksheet_1 = __webpack_require__(/*! ./files/ooxml/worksheet */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/worksheet.js\");\nvar relationships_1 = __webpack_require__(/*! ./files/ooxml/relationships */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/relationships.js\");\n/**\n * See https://www.ecma-international.org/news/TC45_current_work/OpenXML%20White%20Paper.pdf\n */\nvar ExcelXlsxFactory = /** @class */ (function () {\n    function ExcelXlsxFactory() {\n        this.sharedStrings = [];\n    }\n    ExcelXlsxFactory.prototype.createSharedStrings = function () {\n        return this.createXmlPart(sharedStrings_1.default.getTemplate(this.sharedStrings));\n    };\n    ExcelXlsxFactory.prototype.createXmlPart = function (body) {\n        var header = this.xmlFactory.createHeader({\n            encoding: 'UTF-8',\n            standalone: 'yes'\n        });\n        var xmlBody = this.xmlFactory.createXml(body);\n        return \"\" + header + xmlBody;\n    };\n    ExcelXlsxFactory.prototype.createExcel = function (styles, worksheets, sharedStrings) {\n        if (sharedStrings === void 0) { sharedStrings = []; }\n        this.sharedStrings = sharedStrings;\n        this.sheetNames = worksheets.map(function (worksheet) { return worksheet.name; });\n        stylesheet_1.registerStyles(styles);\n        return this.createWorksheet(worksheets);\n    };\n    ExcelXlsxFactory.prototype.createCore = function () {\n        return this.createXmlPart(core_1.default.getTemplate());\n    };\n    ExcelXlsxFactory.prototype.createContentTypes = function () {\n        return this.createXmlPart(contentTypes_1.default.getTemplate());\n    };\n    ExcelXlsxFactory.prototype.createRels = function () {\n        var rs = relationships_1.default.getTemplate([{\n                Id: 'rId1',\n                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument',\n                Target: 'xl/workbook.xml'\n            }, {\n                Id: 'rId2',\n                Type: 'http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties',\n                Target: 'docProps/core.xml'\n            }]);\n        return this.createXmlPart(rs);\n    };\n    ExcelXlsxFactory.prototype.createStylesheet = function () {\n        return this.createXmlPart(stylesheet_1.default.getTemplate());\n    };\n    ExcelXlsxFactory.prototype.createTheme = function () {\n        return this.createXmlPart(office_1.default.getTemplate());\n    };\n    ExcelXlsxFactory.prototype.createWorkbook = function () {\n        return this.createXmlPart(workbook_1.default.getTemplate(this.sheetNames));\n    };\n    ExcelXlsxFactory.prototype.createWorkbookRels = function () {\n        var rs = relationships_1.default.getTemplate([{\n                Id: 'rId1',\n                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet',\n                Target: 'worksheets/sheet1.xml'\n            }, {\n                Id: 'rId2',\n                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme',\n                Target: 'theme/theme1.xml'\n            }, {\n                Id: 'rId3',\n                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles',\n                Target: 'styles.xml'\n            }, {\n                Id: 'rId4',\n                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings',\n                Target: 'sharedStrings.xml'\n            }]);\n        return this.createXmlPart(rs);\n    };\n    ExcelXlsxFactory.prototype.createWorksheet = function (worksheets) {\n        return this.createXmlPart(worksheet_1.default.getTemplate(worksheets[0]));\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('xmlFactory'),\n        __metadata(\"design:type\", ag_grid_community_1.XmlFactory)\n    ], ExcelXlsxFactory.prototype, \"xmlFactory\", void 0);\n    ExcelXlsxFactory = __decorate([\n        ag_grid_community_1.Bean('excelXlsxFactory')\n    ], ExcelXlsxFactory);\n    return ExcelXlsxFactory;\n}());\nexports.ExcelXlsxFactory = ExcelXlsxFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXlsxFactory.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXlsxSerializingSession.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXlsxSerializingSession.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar excelXmlSerializingSession_1 = __webpack_require__(/*! ./excelXmlSerializingSession */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXmlSerializingSession.js\");\nvar ExcelXlsxSerializingSession = /** @class */ (function (_super) {\n    __extends(ExcelXlsxSerializingSession, _super);\n    function ExcelXlsxSerializingSession() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.stringList = [];\n        _this.stringMap = {};\n        return _this;\n    }\n    ExcelXlsxSerializingSession.prototype.onNewHeaderGroupingRow = function () {\n        var currentCells = [];\n        var that = this;\n        this.rows.push({\n            cells: currentCells,\n            height: this.headerRowHeight\n        });\n        return {\n            onColumn: function (header, index, span) {\n                var styleIds = that.styleLinker(ag_grid_community_1.RowType.HEADER_GROUPING, 1, index, \"grouping-\" + header, undefined, undefined);\n                currentCells.push(that.createMergedCell((styleIds && styleIds.length > 0) ? styleIds[0] : undefined, 's', header, span));\n            }\n        };\n    };\n    ExcelXlsxSerializingSession.prototype.onNewHeaderColumn = function (rowIndex, currentCells) {\n        var _this = this;\n        var that = this;\n        return function (column, index, node) {\n            var nameForCol = _this.extractHeaderValue(column);\n            var styleIds = that.styleLinker(ag_grid_community_1.RowType.HEADER, rowIndex, index, nameForCol, column, undefined);\n            currentCells.push(_this.createCell((styleIds && styleIds.length > 0) ? styleIds[0] : undefined, 's', nameForCol));\n        };\n    };\n    ExcelXlsxSerializingSession.prototype.parse = function () {\n        function join(header, body, footer) {\n            var all = [];\n            if (header) {\n                header.forEach(function (rowArray) { return all.push({ cells: rowArray }); });\n            }\n            body.forEach(function (it) { return all.push(it); });\n            if (footer) {\n                footer.forEach(function (rowArray) { return all.push({ cells: rowArray }); });\n            }\n            return all;\n        }\n        var data = [{\n                name: this.sheetName,\n                table: {\n                    columns: this.cols,\n                    rows: join(this.customHeader, this.rows, this.customFooter)\n                }\n            }];\n        return this.excelFactory.createExcel(this.excelStyles, data, this.stringList);\n    };\n    ExcelXlsxSerializingSession.prototype.onNewBodyColumn = function (rowIndex, currentCells) {\n        var _this = this;\n        var that = this;\n        return function (column, index, node) {\n            var valueForCell = _this.extractRowCellValue(column, index, ag_grid_community_1.Constants.EXPORT_TYPE_EXCEL, node);\n            var styleIds = that.styleLinker(ag_grid_community_1.RowType.BODY, rowIndex, index, valueForCell, column, node);\n            var excelStyleId;\n            if (styleIds && styleIds.length == 1) {\n                excelStyleId = styleIds[0];\n            }\n            else if (styleIds && styleIds.length > 1) {\n                var key = styleIds.join(\"-\");\n                if (!_this.mixedStyles[key]) {\n                    _this.addNewMixedStyle(styleIds);\n                }\n                excelStyleId = _this.mixedStyles[key].excelID;\n            }\n            var type = ag_grid_community_1._.isNumeric(valueForCell) ? 'n' : 's';\n            currentCells.push(that.createCell(excelStyleId, type, valueForCell));\n        };\n    };\n    ExcelXlsxSerializingSession.prototype.getStringPosition = function (val) {\n        var pos = this.stringMap[val];\n        if (pos === undefined) {\n            pos = this.stringMap[val] = this.stringList.length;\n            this.stringList.push(val);\n        }\n        return pos;\n    };\n    ExcelXlsxSerializingSession.prototype.createCell = function (styleId, type, value) {\n        var actualStyle = styleId && this.stylesByIds[styleId];\n        var styleExists = actualStyle !== undefined;\n        function getType() {\n            if (styleExists &&\n                actualStyle.dataType) {\n                switch (actualStyle.dataType) {\n                    case 'string':\n                        return 's';\n                    case 'number':\n                        return 'n';\n                    case 'dateTime':\n                        return 'd';\n                    case 'error':\n                        return 'e';\n                    case 'boolean':\n                        return 'b';\n                    default:\n                        console.warn(\"ag-grid: Unrecognized data type for excel export [\" + actualStyle.id + \".dataType=\" + actualStyle.dataType + \"]\");\n                }\n            }\n            return type;\n        }\n        var typeTransformed = getType();\n        return {\n            styleId: styleExists ? styleId : undefined,\n            data: {\n                type: typeTransformed,\n                value: typeTransformed === 's'\n                    ? this.getStringPosition(value == null ? '' : value).toString()\n                    : typeTransformed === 'n'\n                        ? Number(value).toString()\n                        : value\n            }\n        };\n    };\n    ExcelXlsxSerializingSession.prototype.createMergedCell = function (styleId, type, value, numOfCells) {\n        return {\n            styleId: this.styleExists(styleId) ? styleId : undefined,\n            data: {\n                type: type,\n                value: type === 's' ? this.getStringPosition(value == null ? '' : value).toString() : value\n            },\n            mergeAcross: numOfCells\n        };\n    };\n    return ExcelXlsxSerializingSession;\n}(excelXmlSerializingSession_1.ExcelXmlSerializingSession));\nexports.ExcelXlsxSerializingSession = ExcelXlsxSerializingSession;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXlsxSerializingSession.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXmlFactory.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXmlFactory.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar ag_grid_community_2 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar workbook_1 = __webpack_require__(/*! ./files/xml/workbook */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/workbook.js\");\nvar excelWorkbook_1 = __webpack_require__(/*! ./files/xml/excelWorkbook */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/excelWorkbook.js\");\nvar worksheet_1 = __webpack_require__(/*! ./files/xml/worksheet */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/worksheet.js\");\nvar documentProperties_1 = __webpack_require__(/*! ./files/xml/documentProperties */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/documentProperties.js\");\nvar alignment_1 = __webpack_require__(/*! ./files/xml/styles/alignment */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/alignment.js\");\nvar borders_1 = __webpack_require__(/*! ./files/xml/styles/borders */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/borders.js\");\nvar font_1 = __webpack_require__(/*! ./files/xml/styles/font */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/font.js\");\nvar interior_1 = __webpack_require__(/*! ./files/xml/styles/interior */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/interior.js\");\nvar protection_1 = __webpack_require__(/*! ./files/xml/styles/protection */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/protection.js\");\nvar numberFormat_1 = __webpack_require__(/*! ./files/xml/styles/numberFormat */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/numberFormat.js\");\nvar style_1 = __webpack_require__(/*! ./files/xml/styles/style */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/style.js\");\n/**\n * See https://msdn.microsoft.com/en-us/library/aa140066(v=office.10).aspx\n */\nvar ExcelXmlFactory = /** @class */ (function () {\n    function ExcelXmlFactory() {\n    }\n    ExcelXmlFactory.prototype.createExcel = function (styles, worksheets, sharedStrings) {\n        var header = this.excelXmlHeader();\n        var docProps = documentProperties_1.default.getTemplate();\n        var eWorkbook = excelWorkbook_1.default.getTemplate();\n        var wb = this.workbook(docProps, eWorkbook, styles, worksheets);\n        return \"\" + header + this.xmlFactory.createXml(wb, function (boolean) { return boolean ? '1' : '0'; });\n    };\n    ExcelXmlFactory.prototype.workbook = function (docProperties, eWorkbook, styles, worksheets) {\n        var children = [\n            docProperties,\n            eWorkbook,\n            this.stylesXmlElement(styles)\n        ].concat(ag_grid_community_1._.map(worksheets, function (it) { return worksheet_1.default.getTemplate(it); }));\n        return ag_grid_community_1._.assign({}, workbook_1.default.getTemplate(), { children: children });\n    };\n    ExcelXmlFactory.prototype.excelXmlHeader = function () {\n        return \"<?xml version=\\\"1.0\\\" ?>\\n        <?mso-application progid=\\\"Excel.Sheet\\\" ?>\\n        \";\n    };\n    ExcelXmlFactory.prototype.stylesXmlElement = function (styles) {\n        var _this = this;\n        return {\n            name: 'Styles',\n            children: styles ? ag_grid_community_1._.map(styles, function (it) {\n                return _this.styleXmlElement(it);\n            }) : []\n        };\n    };\n    ExcelXmlFactory.prototype.styleXmlElement = function (styleProperties) {\n        var children = ag_grid_community_1._.compose(this.addProperty('alignment', styleProperties), this.addProperty('borders', styleProperties), this.addProperty('font', styleProperties), this.addProperty('interior', styleProperties), this.addProperty('protection', styleProperties), this.addProperty('numberFormat', styleProperties))([]);\n        return ag_grid_community_1._.assign({}, style_1.default.getTemplate(styleProperties), { children: children });\n    };\n    ExcelXmlFactory.prototype.addProperty = function (property, styleProperties) {\n        return function (children) {\n            if (!styleProperties[property]) {\n                return children;\n            }\n            var options = {\n                alignment: alignment_1.default,\n                borders: borders_1.default,\n                font: font_1.default,\n                interior: interior_1.default,\n                numberFormat: numberFormat_1.default,\n                protection: protection_1.default\n            };\n            return children.concat(options[property].getTemplate(styleProperties));\n        };\n    };\n    __decorate([\n        ag_grid_community_2.Autowired('xmlFactory'),\n        __metadata(\"design:type\", ag_grid_community_1.XmlFactory)\n    ], ExcelXmlFactory.prototype, \"xmlFactory\", void 0);\n    ExcelXmlFactory = __decorate([\n        ag_grid_community_2.Bean('excelXmlFactory')\n    ], ExcelXmlFactory);\n    return ExcelXmlFactory;\n}());\nexports.ExcelXmlFactory = ExcelXmlFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXmlFactory.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXmlSerializingSession.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXmlSerializingSession.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar ExcelXmlSerializingSession = /** @class */ (function (_super) {\n    __extends(ExcelXmlSerializingSession, _super);\n    function ExcelXmlSerializingSession(config) {\n        var _this = _super.call(this, {\n            columnController: config.columnController,\n            valueService: config.valueService,\n            gridOptionsWrapper: config.gridOptionsWrapper,\n            processCellCallback: config.processCellCallback,\n            processHeaderCallback: config.processHeaderCallback,\n            cellAndHeaderEscaper: function (raw) { return raw; }\n        }) || this;\n        _this.mixedStyles = {};\n        _this.mixedStyleCounter = 0;\n        _this.rows = [];\n        var sheetName = config.sheetName, excelFactory = config.excelFactory, baseExcelStyles = config.baseExcelStyles, styleLinker = config.styleLinker, suppressTextAsCDATA = config.suppressTextAsCDATA, rowHeight = config.rowHeight, headerRowHeight = config.headerRowHeight;\n        _this.sheetName = sheetName;\n        _this.excelFactory = excelFactory;\n        _this.baseExcelStyles = baseExcelStyles || [];\n        _this.styleLinker = styleLinker;\n        _this.suppressTextAsCDATA = suppressTextAsCDATA;\n        _this.stylesByIds = {};\n        _this.rowHeight = rowHeight;\n        _this.headerRowHeight = headerRowHeight;\n        _this.baseExcelStyles.forEach(function (it) {\n            _this.stylesByIds[it.id] = it;\n        });\n        _this.excelStyles = _this.baseExcelStyles.slice();\n        return _this;\n    }\n    ExcelXmlSerializingSession.prototype.addCustomHeader = function (customHeader) {\n        this.customHeader = customHeader;\n    };\n    ExcelXmlSerializingSession.prototype.addCustomFooter = function (customFooter) {\n        this.customFooter = customFooter;\n    };\n    ExcelXmlSerializingSession.prototype.prepare = function (columnsToExport) {\n        this.cols = ag_grid_community_1._.map(columnsToExport, function (it) {\n            // tslint:disable-next-line\n            it.getColDef().cellStyle;\n            return {\n                width: it.getActualWidth()\n            };\n        });\n    };\n    ExcelXmlSerializingSession.prototype.onNewHeaderGroupingRow = function () {\n        var currentCells = [];\n        var that = this;\n        this.rows.push({\n            cells: currentCells,\n            height: this.headerRowHeight\n        });\n        return {\n            onColumn: function (header, index, span) {\n                var styleIds = that.styleLinker(ag_grid_community_1.RowType.HEADER_GROUPING, 1, index, \"grouping-\" + header, undefined, undefined);\n                currentCells.push(that.createMergedCell((styleIds && styleIds.length > 0) ? styleIds[0] : undefined, \"String\", header, span));\n            }\n        };\n    };\n    ExcelXmlSerializingSession.prototype.onNewHeaderRow = function () {\n        return this.onNewRow(this.onNewHeaderColumn, this.headerRowHeight);\n    };\n    ExcelXmlSerializingSession.prototype.onNewBodyRow = function () {\n        return this.onNewRow(this.onNewBodyColumn, this.rowHeight);\n    };\n    ExcelXmlSerializingSession.prototype.onNewRow = function (onNewColumnAccumulator, height) {\n        var currentCells = [];\n        this.rows.push({\n            cells: currentCells,\n            height: height\n        });\n        return {\n            onColumn: onNewColumnAccumulator.bind(this, this.rows.length, currentCells)()\n        };\n    };\n    ExcelXmlSerializingSession.prototype.onNewHeaderColumn = function (rowIndex, currentCells) {\n        var _this = this;\n        var that = this;\n        return function (column, index, node) {\n            var nameForCol = _this.extractHeaderValue(column);\n            var styleIds = that.styleLinker(ag_grid_community_1.RowType.HEADER, rowIndex, index, nameForCol, column, undefined);\n            currentCells.push(_this.createCell((styleIds && styleIds.length > 0) ? styleIds[0] : undefined, 'String', nameForCol));\n        };\n    };\n    ExcelXmlSerializingSession.prototype.parse = function () {\n        function join(header, body, footer) {\n            var all = [];\n            if (header) {\n                header.forEach(function (rowArray) { return all.push({ cells: rowArray }); });\n            }\n            body.forEach(function (it) { return all.push(it); });\n            if (footer) {\n                footer.forEach(function (rowArray) { return all.push({ cells: rowArray }); });\n            }\n            return all;\n        }\n        var data = [{\n                name: this.sheetName,\n                table: {\n                    columns: this.cols,\n                    rows: join(this.customHeader, this.rows, this.customFooter)\n                }\n            }];\n        return this.excelFactory.createExcel(this.excelStyles, data, []);\n    };\n    ExcelXmlSerializingSession.prototype.onNewBodyColumn = function (rowIndex, currentCells) {\n        var _this = this;\n        var that = this;\n        return function (column, index, node) {\n            var valueForCell = _this.extractRowCellValue(column, index, ag_grid_community_1.Constants.EXPORT_TYPE_EXCEL, node);\n            var styleIds = that.styleLinker(ag_grid_community_1.RowType.BODY, rowIndex, index, valueForCell, column, node);\n            var excelStyleId;\n            if (styleIds && styleIds.length == 1) {\n                excelStyleId = styleIds[0];\n            }\n            else if (styleIds && styleIds.length > 1) {\n                var key = styleIds.join(\"-\");\n                if (!_this.mixedStyles[key]) {\n                    _this.addNewMixedStyle(styleIds);\n                }\n                excelStyleId = _this.mixedStyles[key].excelID;\n            }\n            var type = ag_grid_community_1._.isNumeric(valueForCell) ? 'Number' : 'String';\n            currentCells.push(that.createCell(excelStyleId, type, valueForCell));\n        };\n    };\n    ExcelXmlSerializingSession.prototype.addNewMixedStyle = function (styleIds) {\n        var _this = this;\n        this.mixedStyleCounter += 1;\n        var excelId = 'mixedStyle' + this.mixedStyleCounter;\n        var resultantStyle = {};\n        styleIds.forEach(function (styleId) {\n            _this.excelStyles.forEach(function (excelStyle) {\n                if (excelStyle.id === styleId) {\n                    ag_grid_community_1._.mergeDeep(resultantStyle, ag_grid_community_1._.deepCloneObject(excelStyle));\n                }\n            });\n        });\n        resultantStyle.id = excelId;\n        resultantStyle.name = excelId;\n        var key = styleIds.join(\"-\");\n        this.mixedStyles[key] = {\n            excelID: excelId,\n            key: key,\n            result: resultantStyle\n        };\n        this.excelStyles.push(resultantStyle);\n        this.stylesByIds[excelId] = resultantStyle;\n    };\n    ExcelXmlSerializingSession.prototype.styleExists = function (styleId) {\n        if (styleId == null) {\n            return false;\n        }\n        return this.stylesByIds[styleId];\n    };\n    ExcelXmlSerializingSession.prototype.createCell = function (styleId, type, value) {\n        var _this = this;\n        var actualStyle = styleId && this.stylesByIds[styleId];\n        var styleExists = actualStyle !== undefined;\n        function getType() {\n            if (styleExists &&\n                actualStyle.dataType) {\n                switch (actualStyle.dataType) {\n                    case 'string':\n                        return 'String';\n                    case 'number':\n                        return 'Number';\n                    case 'dateTime':\n                        return 'DateTime';\n                    case 'error':\n                        return 'Error';\n                    case 'boolean':\n                        return 'Boolean';\n                    default:\n                        console.warn(\"ag-grid: Unrecognized data type for excel export [\" + actualStyle.id + \".dataType=\" + actualStyle.dataType + \"]\");\n                }\n            }\n            return type;\n        }\n        var typeTransformed = getType();\n        var massageText = function (val) { return _this.suppressTextAsCDATA ? ag_grid_community_1._.escape(val) : \"<![CDATA[\" + val + \"]]>\"; };\n        var convertBoolean = function (val) {\n            if (!val || val === '0' || val === 'false') {\n                return '0';\n            }\n            return '1';\n        };\n        return {\n            styleId: styleExists ? styleId : undefined,\n            data: {\n                type: typeTransformed,\n                value: typeTransformed === 'String' ? massageText(value) :\n                    typeTransformed === 'Number' ? Number(value).valueOf() + '' :\n                        typeTransformed === 'Boolean' ? convertBoolean(value) :\n                            value\n            }\n        };\n    };\n    ExcelXmlSerializingSession.prototype.createMergedCell = function (styleId, type, value, numOfCells) {\n        return {\n            styleId: this.styleExists(styleId) ? styleId : undefined,\n            data: {\n                type: type,\n                value: value\n            },\n            mergeAcross: numOfCells\n        };\n    };\n    return ExcelXmlSerializingSession;\n}(ag_grid_community_1.BaseGridSerializingSession));\nexports.ExcelXmlSerializingSession = ExcelXmlSerializingSession;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXmlSerializingSession.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/cell.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/cell.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar stylesheet_1 = __webpack_require__(/*! ./styles/stylesheet */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/stylesheet.js\");\nvar convertLegacyType = function (type) {\n    var t = type.charAt(0).toLowerCase();\n    return t === 's' ? 'inlineStr' : t;\n};\nvar cellFactory = {\n    getTemplate: function (config) {\n        var ref = config.ref, data = config.data, styleId = config.styleId;\n        var type = data.type, value = data.value;\n        var convertedType = type;\n        if (type.charAt(0) === type.charAt(0).toUpperCase()) {\n            convertedType = convertLegacyType(type);\n        }\n        var obj = {\n            name: 'c',\n            properties: {\n                rawMap: {\n                    r: ref,\n                    t: convertedType === 'empty' ? undefined : convertedType,\n                    s: styleId ? stylesheet_1.getStyleId(styleId) : undefined\n                }\n            }\n        };\n        var children;\n        if (convertedType === 'inlineStr') {\n            children = [{\n                    name: 'is',\n                    children: [{\n                            name: 't',\n                            textNode: ag_grid_community_1._.escape(ag_grid_community_1._.utf8_encode(value))\n                        }]\n                }];\n        }\n        else {\n            children = [{\n                    name: 'v',\n                    textNode: value\n                }];\n        }\n        return ag_grid_community_1._.assign({}, obj, { children: children });\n    }\n};\nexports[\"default\"] = cellFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/cell.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/column.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/column.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar getExcelCellWidth = function (width) { return Math.max(Math.ceil((width - 12) / 7 + 1), 10); };\nvar columnFactory = {\n    getTemplate: function (config) {\n        var min = config.min, max = config.max, s = config.s, _a = config.width, width = _a === void 0 ? 10 : _a, hidden = config.hidden, bestFit = config.bestFit;\n        var excelWidth = getExcelCellWidth(width);\n        return {\n            name: 'col',\n            properties: {\n                rawMap: {\n                    min: min,\n                    max: max,\n                    width: excelWidth,\n                    style: s,\n                    hidden: hidden ? '1' : '0',\n                    bestFit: bestFit ? '1' : '0',\n                    customWidth: excelWidth != 10 ? '1' : '0'\n                }\n            }\n        };\n    }\n};\nexports[\"default\"] = columnFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/column.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/contentType.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/contentType.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar contentTypeFactory = {\n    getTemplate: function (config) {\n        var name = config.name, ContentType = config.ContentType, Extension = config.Extension, PartName = config.PartName;\n        return {\n            name: name,\n            properties: {\n                rawMap: {\n                    Extension: Extension,\n                    PartName: PartName,\n                    ContentType: ContentType\n                }\n            }\n        };\n    }\n};\nexports[\"default\"] = contentTypeFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/contentType.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/contentTypes.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/contentTypes.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar contentType_1 = __webpack_require__(/*! ./contentType */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/contentType.js\");\nvar contentTypesFactory = {\n    getTemplate: function () {\n        var children = ag_grid_community_1._.map([{\n                name: 'Default',\n                Extension: 'rels',\n                ContentType: 'application/vnd.openxmlformats-package.relationships+xml'\n            }, {\n                name: 'Default',\n                ContentType: 'application/xml',\n                Extension: 'xml'\n            }, {\n                name: 'Override',\n                ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml',\n                PartName: \"/xl/workbook.xml\"\n            }, {\n                name: 'Override',\n                ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml',\n                PartName: '/xl/worksheets/sheet1.xml'\n            }, {\n                name: 'Override',\n                ContentType: 'application/vnd.openxmlformats-officedocument.theme+xml',\n                PartName: '/xl/theme/theme1.xml'\n            }, {\n                name: 'Override',\n                ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml',\n                PartName: '/xl/styles.xml'\n            }, {\n                name: 'Override',\n                ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml',\n                PartName: '/xl/sharedStrings.xml'\n            }, {\n                name: 'Override',\n                ContentType: 'application/vnd.openxmlformats-package.core-properties+xml',\n                PartName: '/docProps/core.xml'\n            }], contentType_1.default.getTemplate);\n        return {\n            name: \"Types\",\n            properties: {\n                rawMap: {\n                    xmlns: \"http://schemas.openxmlformats.org/package/2006/content-types\"\n                }\n            },\n            children: children\n        };\n    }\n};\nexports[\"default\"] = contentTypesFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/contentTypes.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/core.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/core.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar coreFactory = {\n    getTemplate: function () {\n        var dt = new Date(), jsonDate = dt.toJSON();\n        return {\n            name: 'cp:coreProperties',\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"xmlns:\",\n                        map: {\n                            cp: \"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\",\n                            dc: 'http://purl.org/dc/elements/1.1/',\n                            dcterms: 'http://purl.org/dc/terms/',\n                            dcmitype: 'http://purl.org/dc/dcmitype/',\n                            xsi: 'http://www.w3.org/2001/XMLSchema-instance'\n                        }\n                    }]\n            },\n            children: [{\n                    name: 'dc:creator',\n                    textNode: 'ag-Grid'\n                }, {\n                    name: 'dc:title',\n                    textNode: 'Workbook'\n                }, {\n                    name: 'dcterms:created',\n                    properties: {\n                        rawMap: {\n                            'xsi:type': 'dcterms:W3CDTF'\n                        }\n                    },\n                    textNode: jsonDate\n                }, {\n                    name: 'dcterms:modified',\n                    properties: {\n                        rawMap: {\n                            'xsi:type': 'dcterms:W3CDTF'\n                        }\n                    },\n                    textNode: jsonDate\n                }]\n        };\n    }\n};\nexports[\"default\"] = coreFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/core.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/mergeCell.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/mergeCell.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar mergeCell = {\n    getTemplate: function (ref) {\n        return {\n            name: 'mergeCell',\n            properties: {\n                rawMap: {\n                    ref: ref\n                }\n            }\n        };\n    }\n};\nexports[\"default\"] = mergeCell;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/mergeCell.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/relationship.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/relationship.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar relationshipFactory = {\n    getTemplate: function (config) {\n        var Id = config.Id, Type = config.Type, Target = config.Target;\n        return {\n            name: \"Relationship\",\n            properties: {\n                rawMap: {\n                    Id: Id,\n                    Type: Type,\n                    Target: Target\n                }\n            }\n        };\n    }\n};\nexports[\"default\"] = relationshipFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/relationship.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/relationships.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/relationships.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar relationship_1 = __webpack_require__(/*! ./relationship */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/relationship.js\");\nvar relationshipsFactory = {\n    getTemplate: function (c) {\n        var children = ag_grid_community_1._.map(c, relationship_1.default.getTemplate);\n        return {\n            name: \"Relationships\",\n            properties: {\n                rawMap: {\n                    xmlns: \"http://schemas.openxmlformats.org/package/2006/relationships\"\n                }\n            },\n            children: children\n        };\n    }\n};\nexports[\"default\"] = relationshipsFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/relationships.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/row.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/row.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar worksheet_1 = __webpack_require__(/*! ./worksheet */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/worksheet.js\");\nvar cell_1 = __webpack_require__(/*! ./cell */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/cell.js\");\nvar addEmptyCells = function (cells, rowIdx) {\n    var mergeMap = [];\n    var posCounter = 0;\n    for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        if (cell.mergeAcross) {\n            mergeMap.push({\n                pos: i,\n                excelPos: posCounter\n            });\n            posCounter += cells[i].mergeAcross;\n        }\n        posCounter++;\n    }\n    if (mergeMap.length) {\n        for (var i = mergeMap.length - 1; i >= 0; i--) {\n            var mergedCells = [];\n            var cell = cells[mergeMap[i].pos];\n            for (var j = 1; j <= cell.mergeAcross; j++) {\n                mergedCells.push({\n                    ref: \"\" + worksheet_1.getExcelColumnName(mergeMap[i].excelPos + 1 + j) + (rowIdx + 1),\n                    styleId: cell.styleId,\n                    data: { type: 'empty', value: null }\n                });\n            }\n            if (mergedCells.length) {\n                cells.splice.apply(cells, [mergeMap[i].pos + 1, 0].concat(mergedCells));\n            }\n        }\n    }\n};\nvar rowFactory = {\n    getTemplate: function (config, idx) {\n        var index = config.index, collapsed = config.collapsed, hidden = config.hidden, height = config.height, s = config.s, _a = config.cells, cells = _a === void 0 ? [] : _a;\n        addEmptyCells(cells, idx);\n        var children = ag_grid_community_1._.map(cells, cell_1.default.getTemplate);\n        return {\n            name: \"row\",\n            properties: {\n                rawMap: {\n                    r: index,\n                    collapsed: collapsed,\n                    hidden: hidden ? '1' : '0',\n                    ht: height,\n                    customHeight: height != null ? '1' : '0',\n                    s: s,\n                    customFormat: s != null ? '1' : '0'\n                }\n            },\n            children: children\n        };\n    }\n};\nexports[\"default\"] = rowFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/row.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/sharedStrings.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/sharedStrings.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar buildSharedString = function (textNode) { return ({\n    name: 'si',\n    children: [{\n            name: 't',\n            textNode: ag_grid_community_1._.utf8_encode(ag_grid_community_1._.escape(textNode.toString()))\n        }]\n}); };\nvar sharedStrings = {\n    getTemplate: function (strings) {\n        return {\n            name: \"sst\",\n            properties: {\n                rawMap: {\n                    xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n                    count: strings.length,\n                    uniqueCount: strings.length\n                }\n            },\n            children: ag_grid_community_1._.map(strings, buildSharedString)\n        };\n    }\n};\nexports[\"default\"] = sharedStrings;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/sharedStrings.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/sheet.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/sheet.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar sheetFactory = {\n    getTemplate: function (name, idx) {\n        var sheetId = (idx + 1).toString();\n        return {\n            name: \"sheet\",\n            properties: {\n                rawMap: {\n                    \"name\": name,\n                    \"sheetId\": sheetId,\n                    \"r:id\": \"rId\" + sheetId\n                }\n            }\n        };\n    }\n};\nexports[\"default\"] = sheetFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/sheet.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/sheets.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/sheets.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar sheet_1 = __webpack_require__(/*! ./sheet */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/sheet.js\");\nvar sheetsFactory = {\n    getTemplate: function (names) {\n        return {\n            name: \"sheets\",\n            children: ag_grid_community_1._.map(names, sheet_1.default.getTemplate)\n        };\n    }\n};\nexports[\"default\"] = sheetsFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/sheets.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/alignment.js":
/*!***********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/alignment.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar convertLegacyHorizontalAlignment = function (alignment) {\n    var map = {\n        Automatic: 'general',\n        Left: 'left',\n        Center: 'center',\n        Right: 'right',\n        Fill: 'fill',\n        Justify: 'justify',\n        CenterAcrossSelection: 'centerContinuous',\n        Distributed: 'distributed',\n        JustifyDistributed: 'justify'\n    };\n    return map[alignment] || 'general';\n};\nvar convertLegacyVerticalAlignment = function (alignment) {\n    var map = {\n        Automatic: undefined,\n        Top: 'top',\n        Bottom: 'bottom',\n        Center: 'center',\n        Justify: 'justify',\n        Distributed: 'distributed',\n        JustifyDistributed: 'justify'\n    };\n    return map[alignment] || undefined;\n};\nvar getReadingOrderId = function (readingOrder) {\n    var order = ['Context', 'LeftToRight', 'RightToLeft'];\n    var pos = order.indexOf(readingOrder);\n    return Math.max(pos, 0);\n};\nvar alignmentFactory = {\n    getTemplate: function (alignment) {\n        var horizontal = alignment.horizontal, indent = alignment.indent, readingOrder = alignment.readingOrder, rotate = alignment.rotate, shrinkToFit = alignment.shrinkToFit, vertical = alignment.vertical, wrapText = alignment.wrapText;\n        return {\n            name: 'alignment',\n            properties: {\n                rawMap: {\n                    horizontal: horizontal && convertLegacyHorizontalAlignment(horizontal),\n                    indent: indent,\n                    readingOrder: readingOrder && getReadingOrderId(readingOrder),\n                    textRotation: rotate,\n                    shrinkToFit: shrinkToFit,\n                    vertical: vertical && convertLegacyVerticalAlignment(vertical),\n                    wrapText: wrapText\n                }\n            }\n        };\n    }\n};\nexports[\"default\"] = alignmentFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/alignment.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/border.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/border.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar stylesheet_1 = __webpack_require__(/*! ./stylesheet */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/stylesheet.js\");\nvar getBorderColor = function (color) {\n    return {\n        name: 'color',\n        properties: {\n            rawMap: {\n                rgb: stylesheet_1.convertLegacyColor(color || '#000000')\n            }\n        }\n    };\n};\nvar borderFactory = {\n    getTemplate: function (border) {\n        var left = border.left, right = border.right, top = border.top, bottom = border.bottom, diagonal = border.diagonal;\n        var leftChildren = left ? [getBorderColor(left.color)] : undefined;\n        var rightChildren = right ? [getBorderColor(right.color)] : undefined;\n        var topChildren = top ? [getBorderColor(top.color)] : undefined;\n        var bottomChildren = bottom ? [getBorderColor(bottom.color)] : undefined;\n        var diagonalChildren = diagonal ? [getBorderColor(diagonal.color)] : undefined;\n        return {\n            name: 'border',\n            children: [{\n                    name: 'left',\n                    properties: { rawMap: { style: left && left.style } },\n                    children: leftChildren\n                }, {\n                    name: 'right',\n                    properties: { rawMap: { style: right && right.style } },\n                    children: rightChildren\n                }, {\n                    name: 'top',\n                    properties: { rawMap: { style: top && top.style } },\n                    children: topChildren\n                }, {\n                    name: 'bottom',\n                    properties: { rawMap: { style: bottom && bottom.style } },\n                    children: bottomChildren\n                }, {\n                    name: 'diagonal',\n                    properties: { rawMap: { style: diagonal && diagonal.style } },\n                    children: diagonalChildren\n                }]\n        };\n    }\n};\nexports[\"default\"] = borderFactory;\nvar getWeightName = function (value) {\n    if (value === 1) {\n        return 'thin';\n    }\n    if (value === 2) {\n        return 'medium';\n    }\n    if (value === 3) {\n        return 'thick';\n    }\n    return 'hair';\n};\nvar mappedNames = {\n    None: 'None',\n    Dot: 'Dotted',\n    Dash: 'Dashed',\n    Double: 'Double',\n    DashDot: 'DashDot',\n    DashDotDot: 'DashDotDot',\n    SlantDashDot: 'SlantDashDot'\n};\nvar mediumBorders = ['Dashed', 'DashDot', 'DashDotDot'];\nexports.convertLegacyBorder = function (type, weight) {\n    // Legacy Types are: None, Continuous, Dash, Dot, DashDot, DashDotDot, SlantDashDot, and Double\n    // Weight represents: 0—Hairline, 1—Thin , 2—Medium, 3—Thick\n    // New types: none, thin, medium, dashed, dotted, thick, double, hair, mediumDashed, dashDot, mediumDashDot,\n    // dashDotDot, mediumDashDotDot, slantDashDot\n    var namedWeight = getWeightName(weight);\n    var mappedName = mappedNames[type];\n    if (!type) {\n        return 'thin';\n    }\n    if (type === 'Continuous') {\n        return namedWeight;\n    }\n    if (namedWeight === 'medium' && mediumBorders.indexOf(mappedName) > 0) {\n        return \"medium\" + mappedName;\n    }\n    return mappedName.charAt(0).toLowerCase() + mappedName.substr(1);\n};\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/border.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/borders.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/borders.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar border_1 = __webpack_require__(/*! ./border */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/border.js\");\nvar bordersFactory = {\n    getTemplate: function (borders) {\n        return {\n            name: \"borders\",\n            properties: {\n                rawMap: {\n                    count: borders.length\n                }\n            },\n            children: ag_grid_community_1._.map(borders, border_1.default.getTemplate)\n        };\n    }\n};\nexports[\"default\"] = bordersFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/borders.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellStyle.js":
/*!***********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellStyle.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar borderFactory = {\n    getTemplate: function (cellStyle) {\n        var builtinId = cellStyle.builtinId, name = cellStyle.name, xfId = cellStyle.xfId;\n        return {\n            name: \"cellStyle\",\n            properties: {\n                rawMap: {\n                    builtinId: builtinId,\n                    name: name,\n                    xfId: xfId\n                }\n            }\n        };\n    }\n};\nexports[\"default\"] = borderFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellStyle.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellStyleXfs.js":
/*!**************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellStyleXfs.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar xf_1 = __webpack_require__(/*! ./xf */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/xf.js\");\nvar cellStylesXfsFactory = {\n    getTemplate: function (xf) {\n        return {\n            name: \"cellStyleXfs\",\n            properties: {\n                rawMap: {\n                    count: xf.length\n                }\n            },\n            children: ag_grid_community_1._.map(xf, xf_1.default.getTemplate)\n        };\n    }\n};\nexports[\"default\"] = cellStylesXfsFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellStyleXfs.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellStyles.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellStyles.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar cellStyle_1 = __webpack_require__(/*! ./cellStyle */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellStyle.js\");\nvar cellStylesFactory = {\n    getTemplate: function (cellStyles) {\n        return {\n            name: \"cellStyles\",\n            properties: {\n                rawMap: {\n                    count: cellStyles.length\n                }\n            },\n            children: ag_grid_community_1._.map(cellStyles, cellStyle_1.default.getTemplate)\n        };\n    }\n};\nexports[\"default\"] = cellStylesFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellStyles.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellXfs.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellXfs.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar xf_1 = __webpack_require__(/*! ./xf */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/xf.js\");\nvar cellXfsFactory = {\n    getTemplate: function (xf) {\n        return {\n            name: \"cellXfs\",\n            properties: {\n                rawMap: {\n                    count: xf.length\n                }\n            },\n            children: ag_grid_community_1._.map(xf, xf_1.default.getTemplate)\n        };\n    }\n};\nexports[\"default\"] = cellXfsFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellXfs.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/fill.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/fill.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar fillFactory = {\n    getTemplate: function (fill) {\n        var patternType = fill.patternType, fgTheme = fill.fgTheme, fgTint = fill.fgTint, fgRgb = fill.fgRgb, bgRgb = fill.bgRgb, bgIndexed = fill.bgIndexed;\n        var pf = {\n            name: 'patternFill',\n            properties: {\n                rawMap: {\n                    patternType: patternType\n                }\n            }\n        };\n        if (fgTheme || fgTint || fgRgb) {\n            pf.children = [{\n                    name: 'fgColor',\n                    properties: {\n                        rawMap: {\n                            theme: fgTheme,\n                            tint: fgTint,\n                            rgb: fgRgb\n                        }\n                    }\n                }];\n        }\n        if (bgIndexed) {\n            if (!pf.children) {\n                pf.children = [];\n            }\n            pf.children.push({\n                name: 'bgColor',\n                properties: {\n                    rawMap: {\n                        indexed: bgIndexed,\n                        rgb: bgRgb\n                    }\n                }\n            });\n        }\n        return {\n            name: \"fill\",\n            children: [pf]\n        };\n    }\n};\nexports[\"default\"] = fillFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/fill.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/fills.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/fills.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar fill_1 = __webpack_require__(/*! ./fill */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/fill.js\");\nvar fillsFactory = {\n    getTemplate: function (fills) {\n        return {\n            name: \"fills\",\n            properties: {\n                rawMap: {\n                    count: fills.length\n                }\n            },\n            children: ag_grid_community_1._.map(fills, fill_1.default.getTemplate)\n        };\n    }\n};\nexports[\"default\"] = fillsFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/fills.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/font.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/font.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar fontFactory = {\n    getTemplate: function (font) {\n        var _a = font.size, size = _a === void 0 ? 14 : _a, colorTheme = font.colorTheme, _b = font.color, color = _b === void 0 ? '00000000' : _b, _c = font.name, name = _c === void 0 ? 'Calibri' : _c, family = font.family, scheme = font.scheme, italic = font.italic, bold = font.bold, strike = font.strike, outline = font.outline, shadow = font.shadow, underline = font.underline;\n        var children = [\n            { name: 'sz', properties: { rawMap: { val: size } } },\n            { name: 'color', properties: { rawMap: { theme: colorTheme, rgb: color } } },\n            { name: 'name', properties: { rawMap: { val: name } } }\n        ];\n        if (family) {\n            children.push({ name: 'family', properties: { rawMap: { val: family } } });\n        }\n        if (scheme) {\n            children.push({ name: 'scheme', properties: { rawMap: { val: scheme } } });\n        }\n        if (italic) {\n            children.push({ name: 'i' });\n        }\n        if (bold) {\n            children.push({ name: 'b' });\n        }\n        if (strike) {\n            children.push({ name: 'strike' });\n        }\n        if (outline) {\n            children.push({ name: 'outline' });\n        }\n        if (shadow) {\n            children.push({ name: 'shadow' });\n        }\n        if (underline) {\n            var lUnder = underline.toLocaleLowerCase();\n            children.push({ name: 'u', properties: { rawMap: { val: lUnder === 'double' ? 'double' : 'single' } } });\n        }\n        return {\n            name: \"font\",\n            children: children\n        };\n    }\n};\nexports[\"default\"] = fontFactory;\nexports.getFamilyId = function (name) {\n    var families = ['Automatic', 'Roman', 'Swiss', 'Modern', 'Script', 'Decorative'];\n    var pos = families.indexOf(name || 'Automatic');\n    return Math.max(pos, 0);\n};\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/font.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/fonts.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/fonts.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar font_1 = __webpack_require__(/*! ./font */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/font.js\");\nvar fontsFactory = {\n    getTemplate: function (fonts) {\n        return {\n            name: \"fonts\",\n            properties: {\n                rawMap: {\n                    count: fonts.length\n                }\n            },\n            children: ag_grid_community_1._.map(fonts, font_1.default.getTemplate)\n        };\n    }\n};\nexports[\"default\"] = fontsFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/fonts.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/numberFormat.js":
/*!**************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/numberFormat.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar numberFormatFactory = {\n    getTemplate: function (numberFormat) {\n        var formatCode = numberFormat.formatCode, numFmtId = numberFormat.numFmtId;\n        return {\n            name: \"numFmt\",\n            properties: {\n                rawMap: {\n                    formatCode: formatCode,\n                    numFmtId: numFmtId\n                }\n            }\n        };\n    }\n};\nexports[\"default\"] = numberFormatFactory;\nexports.numberFormatMap = {\n    '0': 1,\n    '0.00': 2,\n    '#,##0': 3,\n    '#,##0.00': 4,\n    '0%': 9,\n    '0.00%': 10,\n    '0.00E+00': 11,\n    '# ?/?': 12,\n    '# ??/??': 13,\n    'mm-dd-yy': 14,\n    'd-mmm-yy': 15,\n    'd-mmm': 16,\n    'mmm-yy': 17,\n    'h:mm AM/PM': 18,\n    'h:mm:ss AM/PM': 19,\n    'h:mm': 20,\n    'h:mm:ss': 21,\n    'm/d/yy h:mm': 22,\n    '#,##0 ;(#,##0)': 37,\n    '#,##0 ;[Red](#,##0)': 38,\n    '#,##0.00;(#,##0.00)': 39,\n    '#,##0.00;[Red](#,##0.00)': 40,\n    'mm:ss': 45,\n    '[h]:mm:ss': 46,\n    'mmss.0': 47,\n    '##0.0E+0': 48,\n    '@': 49\n};\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/numberFormat.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/numberFormats.js":
/*!***************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/numberFormats.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar numberFormat_1 = __webpack_require__(/*! ./numberFormat */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/numberFormat.js\");\nvar numberFormatsFactory = {\n    getTemplate: function (numberFormats) {\n        return {\n            name: \"numFmts\",\n            properties: {\n                rawMap: {\n                    count: numberFormats.length\n                }\n            },\n            children: ag_grid_community_1._.map(numberFormats, numberFormat_1.default.getTemplate)\n        };\n    }\n};\nexports[\"default\"] = numberFormatsFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/numberFormats.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/protection.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/protection.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar protectionFactory = {\n    getTemplate: function (protection) {\n        var locked = protection.protected === false ? 0 : 1;\n        var hidden = protection.hideFormula === true ? 1 : 0;\n        return {\n            name: 'protection',\n            properties: {\n                rawMap: {\n                    hidden: hidden,\n                    locked: locked\n                }\n            }\n        };\n    }\n};\nexports[\"default\"] = protectionFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/protection.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/stylesheet.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/stylesheet.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar numberFormats_1 = __webpack_require__(/*! ./numberFormats */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/numberFormats.js\");\nvar fonts_1 = __webpack_require__(/*! ./fonts */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/fonts.js\");\nvar fills_1 = __webpack_require__(/*! ./fills */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/fills.js\");\nvar borders_1 = __webpack_require__(/*! ./borders */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/borders.js\");\nvar cellStyleXfs_1 = __webpack_require__(/*! ./cellStyleXfs */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellStyleXfs.js\");\nvar cellXfs_1 = __webpack_require__(/*! ./cellXfs */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellXfs.js\");\nvar cellStyles_1 = __webpack_require__(/*! ./cellStyles */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/cellStyles.js\");\nvar numberFormat_1 = __webpack_require__(/*! ./numberFormat */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/numberFormat.js\");\nvar font_1 = __webpack_require__(/*! ./font */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/font.js\");\nvar border_1 = __webpack_require__(/*! ./border */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/border.js\");\nvar stylesMap;\nvar registeredNumberFmts;\nvar registeredFonts;\nvar registeredFills;\nvar registeredBorders;\nvar registeredCellStyleXfs;\nvar registeredCellXfs;\nvar registeredCellStyles;\nvar resetStylesheetValues = function () {\n    stylesMap = { base: 0 };\n    registeredNumberFmts = [];\n    registeredFonts = [{ name: 'Calibri', size: 14, colorTheme: '1', family: 2, scheme: 'minor' }];\n    registeredFills = [{ patternType: 'none', }, { patternType: 'gray125' }];\n    registeredBorders = [{ left: undefined, right: undefined, top: undefined, bottom: undefined, diagonal: undefined }];\n    registeredCellStyleXfs = [{ borderId: 0, fillId: 0, fontId: 0, numFmtId: 0 }];\n    registeredCellXfs = [{ borderId: 0, fillId: 0, fontId: 0, numFmtId: 0, xfId: 0 }];\n    registeredCellStyles = [{ builtinId: 0, name: 'normal', xfId: 0 }];\n};\nvar convertLegacyPattern = function (name) {\n    var colorMap = {\n        None: 'none',\n        Solid: 'solid',\n        Gray50: 'mediumGray',\n        Gray75: 'darkGray',\n        Gray25: 'lightGray',\n        HorzStripe: 'darkHorizontal',\n        VertStripe: 'darkVertical',\n        ReverseDiagStripe: 'darkDown',\n        DiagStripe: 'darkUp',\n        DiagCross: 'darkGrid',\n        ThickDiagCross: 'darkTrellis',\n        ThinHorzStripe: 'lightHorizontal',\n        ThinVertStripe: 'lightVertical',\n        ThinReverseDiagStripe: 'lightDown',\n        ThinDiagStripe: 'lightUp',\n        ThinHorzCross: 'lightGrid',\n        ThinDiagCross: 'lightTrellis',\n        Gray125: 'gray125',\n        Gray0625: 'gray0625'\n    };\n    if (!name) {\n        return 'none';\n    }\n    return colorMap[name] || name;\n};\nexports.convertLegacyColor = function (color) {\n    if (color == undefined) {\n        return color;\n    }\n    if (color.charAt(0) === '#') {\n        color = color.substr(1);\n    }\n    return color.length === 6 ? '00' + color : color;\n};\nvar registerFill = function (fill) {\n    var convertedPattern = convertLegacyPattern(fill.pattern);\n    var convertedFillColor = exports.convertLegacyColor(fill.color);\n    var convertedPatternColor = exports.convertLegacyColor(fill.patternColor);\n    var pos = ag_grid_community_1._.findIndex(registeredFills, function (currentFill) {\n        var patternType = currentFill.patternType, fgRgb = currentFill.fgRgb, bgRgb = currentFill.bgRgb;\n        if (patternType != convertedPattern ||\n            fgRgb != convertedFillColor ||\n            bgRgb != convertedPatternColor) {\n            return false;\n        }\n        return true;\n    });\n    if (pos === -1) {\n        pos = registeredFills.length;\n        registeredFills.push({ patternType: convertedPattern, fgRgb: convertedFillColor, bgRgb: convertedPatternColor });\n    }\n    return pos;\n};\nvar registerNumberFmt = function (format) {\n    format = ag_grid_community_1._.utf8_encode(format);\n    if (numberFormat_1.numberFormatMap[format]) {\n        return numberFormat_1.numberFormatMap[format];\n    }\n    var pos = ag_grid_community_1._.findIndex(registeredNumberFmts, function (currentFormat) { return currentFormat.formatCode === format; });\n    if (pos === -1) {\n        pos = registeredNumberFmts.length + 164;\n        registeredNumberFmts.push({ formatCode: format, numFmtId: pos });\n    }\n    else {\n        pos = registeredNumberFmts[pos].numFmtId;\n    }\n    return pos;\n};\nvar registerBorders = function (borders) {\n    var borderBottom = borders.borderBottom, borderTop = borders.borderTop, borderLeft = borders.borderLeft, borderRight = borders.borderRight;\n    var bottomStyle, topStyle, leftStyle, rightStyle;\n    var bottomColor, topColor, leftColor, rightColor;\n    if (borderLeft) {\n        leftStyle = border_1.convertLegacyBorder(borderLeft.lineStyle, borderLeft.weight);\n        leftColor = exports.convertLegacyColor(borderLeft.color);\n    }\n    if (borderRight) {\n        rightStyle = border_1.convertLegacyBorder(borderRight.lineStyle, borderRight.weight);\n        rightColor = exports.convertLegacyColor(borderRight.color);\n    }\n    if (borderBottom) {\n        bottomStyle = border_1.convertLegacyBorder(borderBottom.lineStyle, borderBottom.weight);\n        bottomColor = exports.convertLegacyColor(borderBottom.color);\n    }\n    if (borderTop) {\n        topStyle = border_1.convertLegacyBorder(borderTop.lineStyle, borderTop.weight);\n        topColor = exports.convertLegacyColor(borderTop.color);\n    }\n    var pos = ag_grid_community_1._.findIndex(registeredBorders, function (currentBorder) {\n        var left = currentBorder.left, right = currentBorder.right, top = currentBorder.top, bottom = currentBorder.bottom;\n        if (!left && (leftStyle || leftColor)) {\n            return false;\n        }\n        if (!right && (rightStyle || rightColor)) {\n            return false;\n        }\n        if (!top && (topStyle || topColor)) {\n            return false;\n        }\n        if (!bottom && (bottomStyle || bottomColor)) {\n            return false;\n        }\n        var _a = left || {}, clS = _a.style, clC = _a.color;\n        var _b = right || {}, crS = _b.style, crC = _b.color;\n        var _c = top || {}, ctS = _c.style, ctC = _c.color;\n        var _d = bottom || {}, cbS = _d.style, cbC = _d.color;\n        if (clS != leftStyle || clC != leftColor) {\n            return false;\n        }\n        if (crS != rightStyle || crC != rightColor) {\n            return false;\n        }\n        if (ctS != topStyle || ctC != topColor) {\n            return false;\n        }\n        if (cbS != bottomStyle || cbC != bottomColor) {\n            return false;\n        }\n        return true;\n    });\n    if (pos === -1) {\n        pos = registeredBorders.length;\n        registeredBorders.push({\n            left: {\n                style: leftStyle, color: leftColor\n            },\n            right: {\n                style: rightStyle, color: rightColor\n            },\n            top: {\n                style: topStyle, color: topColor\n            },\n            bottom: {\n                style: bottomStyle, color: bottomColor\n            },\n            diagonal: {\n                style: undefined,\n                color: undefined\n            }\n        });\n    }\n    return pos;\n};\nvar registerFont = function (font) {\n    var name = font.fontName, color = font.color, size = font.size, bold = font.bold, italic = font.italic, outline = font.outline, shadow = font.shadow, strikeThrough = font.strikeThrough, underline = font.underline, family = font.family;\n    var utf8Name = name ? ag_grid_community_1._.utf8_encode(name) : name;\n    var convertedColor = exports.convertLegacyColor(color);\n    var familyId = font_1.getFamilyId(family);\n    var pos = ag_grid_community_1._.findIndex(registeredFonts, function (currentFont) {\n        if (currentFont.name != utf8Name ||\n            currentFont.color != convertedColor ||\n            currentFont.size != size ||\n            currentFont.bold != bold ||\n            currentFont.italic != italic ||\n            currentFont.outline != outline ||\n            currentFont.shadow != shadow ||\n            currentFont.strike != strikeThrough ||\n            currentFont.underline != underline ||\n            currentFont.family != familyId) {\n            return false;\n        }\n        return true;\n    });\n    if (pos === -1) {\n        pos = registeredFonts.length;\n        registeredFonts.push({\n            name: utf8Name,\n            color: convertedColor,\n            size: size,\n            bold: bold,\n            italic: italic,\n            outline: outline,\n            shadow: shadow,\n            strike: strikeThrough,\n            underline: underline,\n            family: familyId\n        });\n    }\n    return pos;\n};\nvar registerStyle = function (config) {\n    var id = config.id, alignment = config.alignment, borders = config.borders, font = config.font, interior = config.interior, numberFormat = config.numberFormat, protection = config.protection;\n    var currentFill = 0;\n    var currentBorder = 0;\n    var currentFont = 0;\n    var currentNumberFmt = 0;\n    if (!id || stylesMap[id] != undefined) {\n        return;\n    }\n    if (interior) {\n        currentFill = registerFill(interior);\n    }\n    if (borders) {\n        currentBorder = registerBorders(borders);\n    }\n    if (font) {\n        currentFont = registerFont(font);\n    }\n    if (numberFormat) {\n        currentNumberFmt = registerNumberFmt(numberFormat.format);\n    }\n    stylesMap[id] = registeredCellXfs.length;\n    registeredCellXfs.push({\n        alignment: alignment,\n        borderId: currentBorder || 0,\n        fillId: currentFill || 0,\n        fontId: currentFont || 0,\n        numFmtId: currentNumberFmt || 0,\n        protection: protection,\n        xfId: 0\n    });\n};\nvar stylesheetFactory = {\n    getTemplate: function () {\n        var numberFormats = numberFormats_1.default.getTemplate(registeredNumberFmts);\n        var fonts = fonts_1.default.getTemplate(registeredFonts);\n        var fills = fills_1.default.getTemplate(registeredFills);\n        var borders = borders_1.default.getTemplate(registeredBorders);\n        var cellStylesXfs = cellStyleXfs_1.default.getTemplate(registeredCellStyleXfs);\n        var cellXfs = cellXfs_1.default.getTemplate(registeredCellXfs);\n        var cellStyles = cellStyles_1.default.getTemplate(registeredCellStyles);\n        resetStylesheetValues();\n        return {\n            name: 'styleSheet',\n            properties: {\n                rawMap: {\n                    xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main'\n                }\n            },\n            children: [\n                numberFormats,\n                fonts,\n                fills,\n                borders,\n                cellStylesXfs,\n                cellXfs,\n                cellStyles,\n                {\n                    name: 'tableStyles',\n                    properties: {\n                        rawMap: {\n                            count: 0,\n                            defaultPivotStyle: 'PivotStyleLight16',\n                            defaultTableStyle: 'TableStyleMedium2'\n                        }\n                    }\n                }\n            ]\n        };\n    }\n};\nexports.getStyleId = function (name) {\n    return stylesMap[name] || 0;\n};\nexports.registerStyles = function (styles) {\n    resetStylesheetValues();\n    styles.forEach(registerStyle);\n};\nexports[\"default\"] = stylesheetFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/stylesheet.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/xf.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/xf.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar alignment_1 = __webpack_require__(/*! ./alignment */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/alignment.js\");\nvar protection_1 = __webpack_require__(/*! ./protection */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/protection.js\");\nvar xfFactory = {\n    getTemplate: function (xf) {\n        var alignment = xf.alignment, borderId = xf.borderId, fillId = xf.fillId, fontId = xf.fontId, numFmtId = xf.numFmtId, protection = xf.protection, xfId = xf.xfId;\n        var children = [];\n        if (alignment) {\n            children.push(alignment_1.default.getTemplate(alignment));\n        }\n        if (protection) {\n            children.push(protection_1.default.getTemplate(protection));\n        }\n        return {\n            name: \"xf\",\n            properties: {\n                rawMap: {\n                    applyAlignment: alignment ? 1 : undefined,\n                    applyProtection: protection ? 1 : undefined,\n                    applyBorder: borderId ? 1 : undefined,\n                    borderId: borderId,\n                    fillId: fillId,\n                    applyFont: fontId ? 1 : undefined,\n                    fontId: fontId,\n                    applyNumberFormat: numFmtId ? 1 : undefined,\n                    numFmtId: numFmtId,\n                    xfId: xfId\n                }\n            },\n            children: children.length ? children : undefined\n        };\n    }\n};\nexports[\"default\"] = xfFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/styles/xf.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar themeElements_1 = __webpack_require__(/*! ./office/themeElements */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/themeElements.js\");\nvar officeTheme = {\n    getTemplate: function () {\n        return {\n            name: \"a:theme\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"xmlns:\",\n                        map: {\n                            a: \"http://schemas.openxmlformats.org/drawingml/2006/main\"\n                        },\n                    }],\n                rawMap: {\n                    name: \"Office Theme\"\n                }\n            },\n            children: [\n                themeElements_1.default.getTemplate(),\n                {\n                    name: 'a:objectDefaults'\n                },\n                {\n                    name: 'a:extraClrSchemeLst'\n                }\n            ]\n        };\n    }\n};\nexports[\"default\"] = officeTheme;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/colorScheme.js":
/*!********************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/colorScheme.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar getColorChildren = function (props) {\n    var type = props[0], innerType = props[1], val = props[2], lastClr = props[3];\n    return {\n        name: \"a:\" + type,\n        children: [{\n                name: \"a:\" + innerType,\n                properties: {\n                    rawMap: {\n                        val: val,\n                        lastClr: lastClr\n                    }\n                }\n            }]\n    };\n};\nvar colorScheme = {\n    getTemplate: function () {\n        return {\n            name: \"a:clrScheme\",\n            properties: {\n                rawMap: {\n                    name: \"Office\"\n                }\n            },\n            children: [\n                getColorChildren(['dk1', 'sysClr', 'windowText', '000000']),\n                getColorChildren(['lt1', 'sysClr', 'window', 'FFFFFF']),\n                getColorChildren(['dk2', 'srgbClr', '44546A']),\n                getColorChildren(['lt2', 'srgbClr', 'E7E6E6']),\n                getColorChildren(['accent1', 'srgbClr', '4472C4']),\n                getColorChildren(['accent2', 'srgbClr', 'ED7D31']),\n                getColorChildren(['accent3', 'srgbClr', 'A5A5A5']),\n                getColorChildren(['accent4', 'srgbClr', 'FFC000']),\n                getColorChildren(['accent5', 'srgbClr', '5B9BD5']),\n                getColorChildren(['accent6', 'srgbClr', '70AD47']),\n                getColorChildren(['hlink', 'srgbClr', '0563C1']),\n                getColorChildren(['folHlink', 'srgbClr', '954F72'])\n            ]\n        };\n    }\n};\nexports[\"default\"] = colorScheme;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/colorScheme.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/fontScheme.js":
/*!*******************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/fontScheme.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar getFont = function (props) {\n    var type = props[0], typeface = props[1], script = props[2], panose = props[3];\n    return {\n        name: \"a:\" + type,\n        properties: {\n            rawMap: {\n                script: script,\n                typeface: typeface,\n                panose: panose\n            }\n        }\n    };\n};\nvar fontScheme = {\n    getTemplate: function () {\n        var utf8_encode = ag_grid_community_1._.utf8_encode;\n        return {\n            name: \"a:fontScheme\",\n            properties: {\n                rawMap: {\n                    name: \"Office\"\n                }\n            },\n            children: [{\n                    name: 'a:majorFont',\n                    children: [\n                        getFont(['latin', 'Calibri Light', undefined, '020F0302020204030204']),\n                        getFont(['ea', '']),\n                        getFont(['cs', '']),\n                        getFont(['font', utf8_encode('游ゴシック Light'), 'Jpan']),\n                        getFont(['font', utf8_encode('맑은 고딕'), 'Hang']),\n                        getFont(['font', utf8_encode('等线 Light'), 'Hans']),\n                        getFont(['font', utf8_encode('新細明體'), 'Hant']),\n                        getFont(['font', 'Times New Roman', 'Arab']),\n                        getFont(['font', 'Times New Roman', 'Hebr']),\n                        getFont(['font', 'Tahoma', 'Thai']),\n                        getFont(['font', 'Nyala', 'Ethi']),\n                        getFont(['font', 'Vrinda', 'Beng']),\n                        getFont(['font', 'Shruti', 'Gujr']),\n                        getFont(['font', 'MoolBoran', 'Khmr']),\n                        getFont(['font', 'Tunga', 'Knda']),\n                        getFont(['font', 'Raavi', 'Guru']),\n                        getFont(['font', 'Euphemia', 'Cans']),\n                        getFont(['font', 'Plantagenet Cherokee', 'Cher']),\n                        getFont(['font', 'Microsoft Yi Baiti', 'Yiii']),\n                        getFont(['font', 'Microsoft Himalaya', 'Tibt']),\n                        getFont(['font', 'MV Boli', 'Thaa']),\n                        getFont(['font', 'Mangal', 'Deva']),\n                        getFont(['font', 'Gautami', 'Telu']),\n                        getFont(['font', 'Latha', 'Taml']),\n                        getFont(['font', 'Estrangelo Edessa', 'Syrc']),\n                        getFont(['font', 'Kalinga', 'Orya']),\n                        getFont(['font', 'Kartika', 'Mlym']),\n                        getFont(['font', 'DokChampa', 'Laoo']),\n                        getFont(['font', 'Iskoola Pota', 'Sinh']),\n                        getFont(['font', 'Mongolian Baiti', 'Mong']),\n                        getFont(['font', 'Times New Roman', 'Viet']),\n                        getFont(['font', 'Microsoft Uighur', 'Uigh']),\n                        getFont(['font', 'Sylfaen', 'Geor']),\n                        getFont(['font', 'Arial', 'Armn']),\n                        getFont(['font', 'Leelawadee UI', 'Bugi']),\n                        getFont(['font', 'Microsoft JhengHei', 'Bopo']),\n                        getFont(['font', 'Javanese Text', 'Java']),\n                        getFont(['font', 'Segoe UI', 'Lisu']),\n                        getFont(['font', 'Myanmar Text', 'Mymr']),\n                        getFont(['font', 'Ebrima', 'Nkoo']),\n                        getFont(['font', 'Nirmala UI', 'Olck']),\n                        getFont(['font', 'Ebrima', 'Osma']),\n                        getFont(['font', 'Phagspa', 'Phag']),\n                        getFont(['font', 'Estrangelo Edessa', 'Syrn']),\n                        getFont(['font', 'Estrangelo Edessa', 'Syrj']),\n                        getFont(['font', 'Estrangelo Edessa', 'Syre']),\n                        getFont(['font', 'Nirmala UI', 'Sora']),\n                        getFont(['font', 'Microsoft Tai Le', 'Tale']),\n                        getFont(['font', 'Microsoft New Tai Lue', 'Talu']),\n                        getFont(['font', 'Ebrima', 'Tfng'])\n                    ]\n                }, {\n                    name: 'a:minorFont',\n                    children: [\n                        getFont(['latin', 'Calibri', undefined, '020F0502020204030204']),\n                        getFont(['ea', '']),\n                        getFont(['cs', '']),\n                        getFont(['font', utf8_encode('游ゴシック'), 'Jpan']),\n                        getFont(['font', utf8_encode('맑은 고딕'), 'Hang']),\n                        getFont(['font', utf8_encode('等线'), 'Hans']),\n                        getFont(['font', utf8_encode('新細明體'), 'Hant']),\n                        getFont(['font', 'Arial', 'Arab']),\n                        getFont(['font', 'Arial', 'Hebr']),\n                        getFont(['font', 'Tahoma', 'Thai']),\n                        getFont(['font', 'Nyala', 'Ethi']),\n                        getFont(['font', 'Vrinda', 'Beng']),\n                        getFont(['font', 'Shruti', 'Gujr']),\n                        getFont(['font', 'DaunPenh', 'Khmr']),\n                        getFont(['font', 'Tunga', 'Knda']),\n                        getFont(['font', 'Raavi', 'Guru']),\n                        getFont(['font', 'Euphemia', 'Cans']),\n                        getFont(['font', 'Plantagenet Cherokee', 'Cher']),\n                        getFont(['font', 'Microsoft Yi Baiti', 'Yiii']),\n                        getFont(['font', 'Microsoft Himalaya', 'Tibt']),\n                        getFont(['font', 'MV Boli', 'Thaa']),\n                        getFont(['font', 'Mangal', 'Deva']),\n                        getFont(['font', 'Gautami', 'Telu']),\n                        getFont(['font', 'Latha', 'Taml']),\n                        getFont(['font', 'Estrangelo Edessa', 'Syrc']),\n                        getFont(['font', 'Kalinga', 'Orya']),\n                        getFont(['font', 'Kartika', 'Mlym']),\n                        getFont(['font', 'DokChampa', 'Laoo']),\n                        getFont(['font', 'Iskoola Pota', 'Sinh']),\n                        getFont(['font', 'Mongolian Baiti', 'Mong']),\n                        getFont(['font', 'Arial', 'Viet']),\n                        getFont(['font', 'Microsoft Uighur', 'Uigh']),\n                        getFont(['font', 'Sylfaen', 'Geor']),\n                        getFont(['font', 'Arial', 'Armn']),\n                        getFont(['font', 'Leelawadee UI', 'Bugi']),\n                        getFont(['font', 'Microsoft JhengHei', 'Bopo']),\n                        getFont(['font', 'Javanese Text', 'Java']),\n                        getFont(['font', 'Segoe UI', 'Lisu']),\n                        getFont(['font', 'Myanmar Text', 'Mymr']),\n                        getFont(['font', 'Ebrima', 'Nkoo']),\n                        getFont(['font', 'Nirmala UI', 'Olck']),\n                        getFont(['font', 'Ebrima', 'Osma']),\n                        getFont(['font', 'Phagspa', 'Phag']),\n                        getFont(['font', 'Estrangelo Edessa', 'Syrn']),\n                        getFont(['font', 'Estrangelo Edessa', 'Syrj']),\n                        getFont(['font', 'Estrangelo Edessa', 'Syre']),\n                        getFont(['font', 'Nirmala UI', 'Sora']),\n                        getFont(['font', 'Microsoft Tai Le', 'Tale']),\n                        getFont(['font', 'Microsoft New Tai Lue', 'Talu']),\n                        getFont(['font', 'Ebrima', 'Tfng'])\n                    ]\n                }]\n        };\n    }\n};\nexports[\"default\"] = fontScheme;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/fontScheme.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/formatScheme.js":
/*!*********************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/formatScheme.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar getPropertyVal = function (name, val, children) { return ({\n    name: \"a:\" + name,\n    properties: {\n        rawMap: {\n            val: val\n        }\n    },\n    children: children\n}); };\nvar getGs = function (props) {\n    var pos = props[0], schemeColor = props[1], satMod = props[2], lumMod = props[3], tint = props[4], shade = props[5];\n    var children = [];\n    children.push(getPropertyVal('satMod', satMod));\n    if (lumMod) {\n        children.push(getPropertyVal('lumMod', lumMod));\n    }\n    if (tint) {\n        children.push(getPropertyVal('tint', tint));\n    }\n    if (shade) {\n        children.push(getPropertyVal('shade', shade));\n    }\n    return {\n        name: 'a:gs',\n        properties: {\n            rawMap: {\n                pos: pos\n            }\n        },\n        children: [{\n                name: 'a:schemeClr',\n                properties: {\n                    rawMap: {\n                        val: schemeColor\n                    }\n                },\n                children: children\n            }]\n    };\n};\nvar getSolidFill = function (val, children) { return ({\n    name: 'a:solidFill',\n    children: [getPropertyVal('schemeClr', val, children)]\n}); };\nvar getGradFill = function (props) {\n    var rotWithShape = props[0], gs1 = props[1], gs2 = props[2], gs3 = props[3], lin = props[4];\n    var ang = lin[0], scaled = lin[1];\n    return {\n        name: 'a:gradFill',\n        properties: {\n            rawMap: {\n                rotWithShape: rotWithShape\n            }\n        },\n        children: [{\n                name: 'a:gsLst',\n                children: [\n                    getGs(gs1),\n                    getGs(gs2),\n                    getGs(gs3)\n                ]\n            }, {\n                name: 'a:lin',\n                properties: {\n                    rawMap: {\n                        ang: ang,\n                        scaled: scaled\n                    }\n                }\n            }]\n    };\n};\nvar getLine = function (props) {\n    var w = props[0], cap = props[1], cmpd = props[2], algn = props[3];\n    return {\n        name: 'a:ln',\n        properties: {\n            rawMap: { w: w, cap: cap, cmpd: cmpd, algn: algn }\n        },\n        children: [\n            getSolidFill('phClr'),\n            getPropertyVal('prstDash', 'solid'),\n            {\n                name: 'a:miter',\n                properties: {\n                    rawMap: {\n                        lim: '800000'\n                    }\n                }\n            }\n        ]\n    };\n};\nvar getEffectStyle = function (shadow) {\n    var children = [];\n    if (shadow) {\n        var blurRad = shadow[0], dist = shadow[1], dir = shadow[2], algn = shadow[3], rotWithShape = shadow[4];\n        children.push({\n            name: 'a:outerShdw',\n            properties: {\n                rawMap: { blurRad: blurRad, dist: dist, dir: dir, algn: algn, rotWithShape: rotWithShape }\n            },\n            children: [\n                getPropertyVal('srgbClr', '000000', [getPropertyVal('alpha', '63000')])\n            ]\n        });\n    }\n    return {\n        name: 'a:effectStyle',\n        children: [ag_grid_community_1._.assign({}, {\n                name: 'a:effectLst'\n            }, children.length ? { children: children } : {})]\n    };\n};\nvar getFillStyleList = function () { return ({\n    name: 'a:fillStyleLst',\n    children: [\n        getSolidFill('phClr'),\n        getGradFill([\n            '1',\n            ['0', 'phClr', '105000', '110000', '67000'],\n            ['50000', 'phClr', '103000', '105000', '73000'],\n            ['100000', 'phClr', '109000', '105000', '81000'],\n            ['5400000', '0']\n        ]),\n        getGradFill([\n            '1',\n            ['0', 'phClr', '103000', '102000', '94000'],\n            ['50000', 'phClr', '110000', '100000', undefined, '100000'],\n            ['100000', 'phClr', '120000', '99000', undefined, '78000'],\n            ['5400000', '0']\n        ])\n    ]\n}); };\nvar getLineStyleList = function () { return ({\n    name: 'a:lnStyleLst',\n    children: [\n        getLine(['6350', 'flat', 'sng', 'ctr']),\n        getLine(['12700', 'flat', 'sng', 'ctr']),\n        getLine(['19050', 'flat', 'sng', 'ctr'])\n    ]\n}); };\nvar getEffectStyleList = function () { return ({\n    name: 'a:effectStyleLst',\n    children: [\n        getEffectStyle(),\n        getEffectStyle(),\n        getEffectStyle(['57150', '19050', '5400000', 'ctr', '0'])\n    ]\n}); };\nvar getBgFillStyleList = function () { return ({\n    name: 'a:bgFillStyleLst',\n    children: [\n        getSolidFill('phClr'),\n        getSolidFill('phClr', [\n            getPropertyVal('tint', '95000'),\n            getPropertyVal('satMod', '170000'),\n        ]),\n        getGradFill([\n            '1',\n            ['0', 'phClr', '150000', '102000', '93000', '98000'],\n            ['50000', 'phClr', '130000', '103000', '98000', '90000'],\n            ['100000', 'phClr', '120000', undefined, undefined, '63000'],\n            ['5400000', '0']\n        ])\n    ]\n}); };\nvar formatScheme = {\n    getTemplate: function () {\n        return {\n            name: \"a:fmtScheme\",\n            properties: {\n                rawMap: {\n                    name: \"Office\"\n                }\n            },\n            children: [\n                getFillStyleList(),\n                getLineStyleList(),\n                getEffectStyleList(),\n                getBgFillStyleList()\n            ]\n        };\n    }\n};\nexports[\"default\"] = formatScheme;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/formatScheme.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/themeElements.js":
/*!**********************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/themeElements.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar colorScheme_1 = __webpack_require__(/*! ./colorScheme */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/colorScheme.js\");\nvar fontScheme_1 = __webpack_require__(/*! ./fontScheme */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/fontScheme.js\");\nvar formatScheme_1 = __webpack_require__(/*! ./formatScheme */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/formatScheme.js\");\nvar themeElements = {\n    getTemplate: function () {\n        return {\n            name: \"a:themeElements\",\n            children: [\n                colorScheme_1.default.getTemplate(),\n                fontScheme_1.default.getTemplate(),\n                formatScheme_1.default.getTemplate()\n            ]\n        };\n    }\n};\nexports[\"default\"] = themeElements;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/themes/office/themeElements.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/workbook.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/workbook.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar sheets_1 = __webpack_require__(/*! ./sheets */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/sheets.js\");\nvar workbookFactory = {\n    getTemplate: function (names) {\n        return {\n            name: \"workbook\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"xmlns:\",\n                        map: {\n                            r: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"\n                        },\n                    }],\n                rawMap: {\n                    xmlns: \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"\n                }\n            },\n            children: [sheets_1.default.getTemplate(names)]\n        };\n    }\n};\nexports[\"default\"] = workbookFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/workbook.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/worksheet.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/worksheet.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar column_1 = __webpack_require__(/*! ./column */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/column.js\");\nvar row_1 = __webpack_require__(/*! ./row */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/row.js\");\nvar mergeCell_1 = __webpack_require__(/*! ./mergeCell */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/mergeCell.js\");\nvar updateColMinMax = function (col, min, range, prevCol) {\n    if (!col.min) {\n        col.min = min;\n        col.max = min + range;\n        return;\n    }\n    var currentMin = min;\n    if (prevCol) {\n        currentMin = Math.max(currentMin, prevCol.min);\n    }\n    col.min = Math.max(col.min, currentMin);\n    col.max = Math.max(col.max, currentMin + range);\n};\nvar getMergedCells = function (rows, cols) {\n    var mergedCells = [];\n    rows.forEach(function (currentRow, rowIdx) {\n        var cells = currentRow.cells;\n        var merges = 0;\n        currentRow.index = rowIdx + 1;\n        var lastCol;\n        cells.forEach(function (currentCell, cellIdx) {\n            var min = cellIdx + merges + 1;\n            var start = exports.getExcelColumnName(min);\n            var outputRow = rowIdx + 1;\n            if (currentCell.mergeAcross) {\n                merges += currentCell.mergeAcross;\n                var end = exports.getExcelColumnName(cellIdx + merges + 1);\n                mergedCells.push(\"\" + start + outputRow + \":\" + end + outputRow);\n            }\n            if (!cols[min - 1]) {\n                cols[min - 1] = {};\n            }\n            updateColMinMax(cols[min - 1], min, merges, lastCol);\n            lastCol = cols[min - 1];\n            currentCell.ref = \"\" + start + outputRow;\n        });\n    });\n    return mergedCells;\n};\nexports.getExcelColumnName = function (colIdx) {\n    var startCode = 65;\n    var tableWidth = 26;\n    var fromCharCode = String.fromCharCode;\n    var pos = Math.floor(colIdx / tableWidth);\n    var tableIdx = colIdx % tableWidth;\n    if (!pos || colIdx === tableWidth) {\n        return fromCharCode(startCode + colIdx - 1);\n    }\n    if (!tableIdx) {\n        return exports.getExcelColumnName(pos - 1) + 'Z';\n    }\n    if (pos < tableWidth) {\n        return fromCharCode(startCode + pos - 1) + fromCharCode(startCode + tableIdx - 1);\n    }\n    return exports.getExcelColumnName(pos) + fromCharCode(startCode + tableIdx - 1);\n};\nvar worksheetFactory = {\n    getTemplate: function (config) {\n        var table = config.table;\n        var rows = table.rows, columns = table.columns;\n        var mergedCells = (columns && columns.length) ? getMergedCells(rows, columns) : [];\n        var children = [];\n        if (columns.length) {\n            children.push({\n                name: 'cols',\n                children: ag_grid_community_1._.map(columns, column_1.default.getTemplate)\n            });\n        }\n        if (rows.length) {\n            children.push({\n                name: 'sheetData',\n                children: ag_grid_community_1._.map(rows, row_1.default.getTemplate)\n            });\n        }\n        if (mergedCells.length) {\n            children.push({\n                name: 'mergeCells',\n                properties: {\n                    rawMap: {\n                        count: mergedCells.length\n                    }\n                },\n                children: ag_grid_community_1._.map(mergedCells, mergeCell_1.default.getTemplate)\n            });\n        }\n        return {\n            name: \"worksheet\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"xmlns:\",\n                        map: {\n                            r: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"\n                        }\n                    }],\n                rawMap: {\n                    xmlns: \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"\n                }\n            },\n            children: children\n        };\n    }\n};\nexports[\"default\"] = worksheetFactory;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/ooxml/worksheet.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/cell.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/cell.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar cell = {\n    getTemplate: function (c) {\n        var mergeAcross = c.mergeAcross, styleId = c.styleId, data = c.data;\n        var properties = {};\n        if (mergeAcross) {\n            properties.MergeAcross = mergeAcross;\n        }\n        if (styleId) {\n            properties.StyleID = styleId;\n        }\n        return {\n            name: \"Cell\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"ss:\",\n                        map: properties\n                    }]\n            },\n            children: [{\n                    name: \"Data\",\n                    properties: {\n                        prefixedAttributes: [{\n                                prefix: \"ss:\",\n                                map: {\n                                    Type: data.type\n                                }\n                            }]\n                    },\n                    textNode: data.value\n                }]\n        };\n    }\n};\nexports[\"default\"] = cell;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/cell.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/column.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/column.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar column = {\n    getTemplate: function (c) {\n        var width = c.width;\n        return {\n            name: \"Column\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"ss:\",\n                        map: {\n                            Width: width\n                        }\n                    }]\n            }\n        };\n    }\n};\nexports[\"default\"] = column;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/column.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/documentProperties.js":
/*!***********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/documentProperties.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar documentProperties = {\n    getTemplate: function () {\n        return {\n            name: \"DocumentProperties\",\n            properties: {\n                rawMap: {\n                    xmlns: \"urn:schemas-microsoft-com:office:office\"\n                }\n            },\n            children: [{\n                    name: \"Version\",\n                    textNode: \"12.00\"\n                }]\n        };\n    }\n};\nexports[\"default\"] = documentProperties;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/documentProperties.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/excelWorkbook.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/excelWorkbook.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar excelWorkbook = {\n    getTemplate: function () {\n        return {\n            name: \"ExcelWorkbook\",\n            properties: {\n                rawMap: {\n                    xmlns: \"urn:schemas-microsoft-com:office:excel\"\n                }\n            },\n            children: [{\n                    name: \"WindowHeight\",\n                    textNode: \"8130\"\n                }, {\n                    name: \"WindowWidth\",\n                    textNode: \"15135\"\n                }, {\n                    name: \"WindowHeight\",\n                    textNode: \"8130\"\n                }, {\n                    name: \"WindowTopX\",\n                    textNode: \"120\"\n                }, {\n                    name: \"WindowTopY\",\n                    textNode: \"45\"\n                }, {\n                    name: \"ProtectStructure\",\n                    textNode: \"False\"\n                }, {\n                    name: \"ProtectWindow\",\n                    textNode: \"False\"\n                }]\n        };\n    }\n};\nexports[\"default\"] = excelWorkbook;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/excelWorkbook.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/row.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/row.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar cell_1 = __webpack_require__(/*! ./cell */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/cell.js\");\nvar row = {\n    getTemplate: function (r) {\n        var cells = r.cells;\n        return {\n            name: \"Row\",\n            children: ag_grid_community_1._.map(cells, function (it) {\n                return cell_1.default.getTemplate(it);\n            })\n        };\n    }\n};\nexports[\"default\"] = row;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/row.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/alignment.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/alignment.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar alignment = {\n    getTemplate: function (styleProperties) {\n        var _a = styleProperties.alignment, vertical = _a.vertical, horizontal = _a.horizontal, indent = _a.indent, readingOrder = _a.readingOrder, rotate = _a.rotate, shrinkToFit = _a.shrinkToFit, verticalText = _a.verticalText, wrapText = _a.wrapText;\n        return {\n            name: 'Alignment',\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"ss:\",\n                        map: {\n                            Vertical: vertical,\n                            Horizontal: horizontal,\n                            Indent: indent,\n                            ReadingOrder: readingOrder,\n                            Rotate: rotate,\n                            ShrinkToFit: shrinkToFit,\n                            VerticalText: verticalText,\n                            WrapText: wrapText\n                        }\n                    }]\n            }\n        };\n    }\n};\nexports[\"default\"] = alignment;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/alignment.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/borders.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/borders.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar borders = {\n    getTemplate: function (styleProperties) {\n        var _a = styleProperties.borders, borderBottom = _a.borderBottom, borderLeft = _a.borderLeft, borderRight = _a.borderRight, borderTop = _a.borderTop;\n        return {\n            name: 'Borders',\n            children: [borderBottom, borderLeft, borderRight, borderTop].map(function (it, index) {\n                var current = index == 0 ? \"Bottom\" : index == 1 ? \"Left\" : index == 2 ? \"Right\" : \"Top\";\n                return {\n                    name: 'Border',\n                    properties: {\n                        prefixedAttributes: [{\n                                prefix: 'ss:',\n                                map: {\n                                    Position: current,\n                                    LineStyle: it.lineStyle,\n                                    Weight: it.weight,\n                                    Color: it.color\n                                }\n                            }]\n                    }\n                };\n            })\n        };\n    }\n};\nexports[\"default\"] = borders;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/borders.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/font.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/font.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar font = {\n    getTemplate: function (styleProperties) {\n        var _a = styleProperties.font, bold = _a.bold, fontName = _a.fontName, italic = _a.italic, color = _a.color, outline = _a.outline, shadow = _a.shadow, size = _a.size, strikeThrough = _a.strikeThrough, underline = _a.underline, verticalAlign = _a.verticalAlign, charSet = _a.charSet, family = _a.family;\n        return {\n            name: \"Font\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"ss:\",\n                        map: {\n                            Bold: bold,\n                            FontName: fontName,\n                            Italic: italic,\n                            Color: color,\n                            Outline: outline,\n                            Shadow: shadow,\n                            Size: size,\n                            StrikeThrough: strikeThrough,\n                            Underline: underline,\n                            VerticalAlign: verticalAlign\n                        }\n                    }, {\n                        prefix: \"x:\",\n                        map: {\n                            CharSet: charSet,\n                            Family: family\n                        }\n                    }]\n            }\n        };\n    }\n};\nexports[\"default\"] = font;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/font.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/interior.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/interior.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar interior = {\n    getTemplate: function (styleProperties) {\n        var _a = styleProperties.interior, color = _a.color, pattern = _a.pattern, patternColor = _a.patternColor;\n        return {\n            name: \"Interior\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"ss:\",\n                        map: {\n                            Color: color,\n                            Pattern: pattern,\n                            PatternColor: patternColor\n                        }\n                    }]\n            }\n        };\n    }\n};\nexports[\"default\"] = interior;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/interior.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/numberFormat.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/numberFormat.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar numberFormat = {\n    getTemplate: function (styleProperties) {\n        var format = styleProperties.numberFormat.format;\n        return {\n            name: \"NumberFormat\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"ss:\",\n                        map: {\n                            Format: format\n                        }\n                    }]\n            }\n        };\n    }\n};\nexports[\"default\"] = numberFormat;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/numberFormat.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/protection.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/protection.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar protection = {\n    getTemplate: function (styleProperties) {\n        return {\n            name: \"Protection\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"ss:\",\n                        map: {\n                            Protected: styleProperties.protection.protected,\n                            HideFormula: styleProperties.protection.hideFormula\n                        }\n                    }]\n            }\n        };\n    }\n};\nexports[\"default\"] = protection;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/protection.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/style.js":
/*!*****************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/style.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar style = {\n    getTemplate: function (styleProperties) {\n        var id = styleProperties.id, name = styleProperties.name;\n        return {\n            name: 'Style',\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"ss:\",\n                        map: {\n                            ID: id,\n                            Name: name ? name : id\n                        }\n                    }]\n            }\n        };\n    }\n};\nexports[\"default\"] = style;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/styles/style.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/workbook.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/workbook.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar workbook = {\n    getTemplate: function () {\n        return {\n            name: \"Workbook\",\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"xmlns:\",\n                        map: {\n                            o: \"urn:schemas-microsoft-com:office:office\",\n                            x: \"urn:schemas-microsoft-com:office:excel\",\n                            ss: \"urn:schemas-microsoft-com:office:spreadsheet\",\n                            html: \"http://www.w3.org/TR/REC-html40\"\n                        },\n                    }],\n                rawMap: {\n                    xmlns: \"urn:schemas-microsoft-com:office:spreadsheet\"\n                }\n            }\n        };\n    }\n};\nexports[\"default\"] = workbook;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/workbook.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/worksheet.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/worksheet.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar column_1 = __webpack_require__(/*! ./column */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/column.js\");\nvar row_1 = __webpack_require__(/*! ./row */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/row.js\");\nvar worksheet = {\n    getTemplate: function (ws) {\n        var table = ws.table, name = ws.name;\n        var columns = table.columns, rows = table.rows;\n        var c = ag_grid_community_1._.map(columns, function (it) { return column_1.default.getTemplate(it); });\n        var r = ag_grid_community_1._.map(rows, function (it) { return row_1.default.getTemplate(it); });\n        return {\n            name: \"Worksheet\",\n            children: [{\n                    name: \"Table\",\n                    children: c.concat(r)\n                }],\n            properties: {\n                prefixedAttributes: [{\n                        prefix: \"ss:\",\n                        map: {\n                            Name: name\n                        }\n                    }]\n            }\n        };\n    }\n};\nexports[\"default\"] = worksheet;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/exporter/files/xml/worksheet.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/license/md5.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/license/md5.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar MD5 = /** @class */ (function () {\n    function MD5() {\n        this.ieCompatibility = false;\n    }\n    MD5.prototype.init = function () {\n        this.ieCompatibility = (this.md5('hello') != '5d41402abc4b2a76b9719d911017c592');\n    };\n    MD5.prototype.md5cycle = function (x, k) {\n        var a = x[0], b = x[1], c = x[2], d = x[3];\n        a = this.ff(a, b, c, d, k[0], 7, -680876936);\n        d = this.ff(d, a, b, c, k[1], 12, -389564586);\n        c = this.ff(c, d, a, b, k[2], 17, 606105819);\n        b = this.ff(b, c, d, a, k[3], 22, -1044525330);\n        a = this.ff(a, b, c, d, k[4], 7, -176418897);\n        d = this.ff(d, a, b, c, k[5], 12, 1200080426);\n        c = this.ff(c, d, a, b, k[6], 17, -1473231341);\n        b = this.ff(b, c, d, a, k[7], 22, -45705983);\n        a = this.ff(a, b, c, d, k[8], 7, 1770035416);\n        d = this.ff(d, a, b, c, k[9], 12, -1958414417);\n        c = this.ff(c, d, a, b, k[10], 17, -42063);\n        b = this.ff(b, c, d, a, k[11], 22, -1990404162);\n        a = this.ff(a, b, c, d, k[12], 7, 1804603682);\n        d = this.ff(d, a, b, c, k[13], 12, -40341101);\n        c = this.ff(c, d, a, b, k[14], 17, -1502002290);\n        b = this.ff(b, c, d, a, k[15], 22, 1236535329);\n        a = this.gg(a, b, c, d, k[1], 5, -165796510);\n        d = this.gg(d, a, b, c, k[6], 9, -1069501632);\n        c = this.gg(c, d, a, b, k[11], 14, 643717713);\n        b = this.gg(b, c, d, a, k[0], 20, -373897302);\n        a = this.gg(a, b, c, d, k[5], 5, -701558691);\n        d = this.gg(d, a, b, c, k[10], 9, 38016083);\n        c = this.gg(c, d, a, b, k[15], 14, -660478335);\n        b = this.gg(b, c, d, a, k[4], 20, -405537848);\n        a = this.gg(a, b, c, d, k[9], 5, 568446438);\n        d = this.gg(d, a, b, c, k[14], 9, -1019803690);\n        c = this.gg(c, d, a, b, k[3], 14, -187363961);\n        b = this.gg(b, c, d, a, k[8], 20, 1163531501);\n        a = this.gg(a, b, c, d, k[13], 5, -1444681467);\n        d = this.gg(d, a, b, c, k[2], 9, -51403784);\n        c = this.gg(c, d, a, b, k[7], 14, 1735328473);\n        b = this.gg(b, c, d, a, k[12], 20, -1926607734);\n        a = this.hh(a, b, c, d, k[5], 4, -378558);\n        d = this.hh(d, a, b, c, k[8], 11, -2022574463);\n        c = this.hh(c, d, a, b, k[11], 16, 1839030562);\n        b = this.hh(b, c, d, a, k[14], 23, -35309556);\n        a = this.hh(a, b, c, d, k[1], 4, -1530992060);\n        d = this.hh(d, a, b, c, k[4], 11, 1272893353);\n        c = this.hh(c, d, a, b, k[7], 16, -155497632);\n        b = this.hh(b, c, d, a, k[10], 23, -1094730640);\n        a = this.hh(a, b, c, d, k[13], 4, 681279174);\n        d = this.hh(d, a, b, c, k[0], 11, -358537222);\n        c = this.hh(c, d, a, b, k[3], 16, -722521979);\n        b = this.hh(b, c, d, a, k[6], 23, 76029189);\n        a = this.hh(a, b, c, d, k[9], 4, -640364487);\n        d = this.hh(d, a, b, c, k[12], 11, -421815835);\n        c = this.hh(c, d, a, b, k[15], 16, 530742520);\n        b = this.hh(b, c, d, a, k[2], 23, -995338651);\n        a = this.ii(a, b, c, d, k[0], 6, -198630844);\n        d = this.ii(d, a, b, c, k[7], 10, 1126891415);\n        c = this.ii(c, d, a, b, k[14], 15, -1416354905);\n        b = this.ii(b, c, d, a, k[5], 21, -57434055);\n        a = this.ii(a, b, c, d, k[12], 6, 1700485571);\n        d = this.ii(d, a, b, c, k[3], 10, -1894986606);\n        c = this.ii(c, d, a, b, k[10], 15, -1051523);\n        b = this.ii(b, c, d, a, k[1], 21, -2054922799);\n        a = this.ii(a, b, c, d, k[8], 6, 1873313359);\n        d = this.ii(d, a, b, c, k[15], 10, -30611744);\n        c = this.ii(c, d, a, b, k[6], 15, -1560198380);\n        b = this.ii(b, c, d, a, k[13], 21, 1309151649);\n        a = this.ii(a, b, c, d, k[4], 6, -145523070);\n        d = this.ii(d, a, b, c, k[11], 10, -1120210379);\n        c = this.ii(c, d, a, b, k[2], 15, 718787259);\n        b = this.ii(b, c, d, a, k[9], 21, -343485551);\n        x[0] = this.add32(a, x[0]);\n        x[1] = this.add32(b, x[1]);\n        x[2] = this.add32(c, x[2]);\n        x[3] = this.add32(d, x[3]);\n    };\n    MD5.prototype.cmn = function (q, a, b, x, s, t) {\n        a = this.add32(this.add32(a, q), this.add32(x, t));\n        return this.add32((a << s) | (a >>> (32 - s)), b);\n    };\n    MD5.prototype.ff = function (a, b, c, d, x, s, t) {\n        return this.cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    };\n    MD5.prototype.gg = function (a, b, c, d, x, s, t) {\n        return this.cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    };\n    MD5.prototype.hh = function (a, b, c, d, x, s, t) {\n        return this.cmn(b ^ c ^ d, a, b, x, s, t);\n    };\n    MD5.prototype.ii = function (a, b, c, d, x, s, t) {\n        return this.cmn(c ^ (b | (~d)), a, b, x, s, t);\n    };\n    MD5.prototype.md51 = function (s) {\n        var n = s.length;\n        var state = [1732584193, -271733879, -1732584194, 271733878];\n        var i;\n        for (i = 64; i <= s.length; i += 64) {\n            this.md5cycle(state, this.md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        var tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < s.length; i++) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            this.md5cycle(state, tail);\n            for (i = 0; i < 16; i++) {\n                tail[i] = 0;\n            }\n        }\n        tail[14] = n * 8;\n        this.md5cycle(state, tail);\n        return state;\n    };\n    /* there needs to be support for Unicode here, * unless we pretend that we can redefine the MD-5\n     * algorithm for multi-byte characters (perhaps by adding every four 16-bit characters and\n     * shortening the sum to 32 bits). Otherwise I suthis.ggest performing MD-5 as if every character\n     * was two bytes--e.g., 0040 0025 = @%--but then how will an ordinary MD-5 sum be matched?\n     * There is no way to standardize text to something like UTF-8 before transformation; speed cost is\n     * utterly prohibitive. The JavaScript standard itself needs to look at this: it should start\n     * providing access to strings as preformed UTF-8 8-bit unsigned value arrays.\n     */\n    MD5.prototype.md5blk = function (s) {\n        var md5blks = [];\n        /* Andy King said do it this way. */\n        for (var i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i)\n                + (s.charCodeAt(i + 1) << 8)\n                + (s.charCodeAt(i + 2) << 16)\n                + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    };\n    MD5.prototype.rhex = function (n) {\n        var hex_chr = '0123456789abcdef'.split('');\n        var s = '', j = 0;\n        for (; j < 4; j++) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F]\n                + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    };\n    MD5.prototype.hex = function (x) {\n        for (var i = 0; i < x.length; i++) {\n            x[i] = this.rhex(x[i]);\n        }\n        return x.join('');\n    };\n    MD5.prototype.md5 = function (s) {\n        return this.hex(this.md51(s));\n    };\n    MD5.prototype.add32 = function (a, b) {\n        return this.ieCompatibility ? this.add32Compat(a, b) : this.add32Std(a, b);\n    };\n    /* this function is much faster, so if possible we use it. Some IEs are the only ones I know of that\n     need the idiotic second function, generated by an if clause.  */\n    MD5.prototype.add32Std = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    };\n    MD5.prototype.add32Compat = function (x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF), msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    };\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MD5.prototype, \"init\", null);\n    MD5 = __decorate([\n        ag_grid_community_1.Bean('md5')\n    ], MD5);\n    return MD5;\n}());\nexports.MD5 = MD5;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/license/md5.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/license/watermark.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/license/watermark.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar licenseManager_1 = __webpack_require__(/*! ../licenseManager */ \"../../node_modules/ag-grid-enterprise/dist/lib/licenseManager.js\");\nvar WatermarkComp = /** @class */ (function (_super) {\n    __extends(WatermarkComp, _super);\n    function WatermarkComp() {\n        return _super.call(this, \"<div class=\\\"ag-watermark\\\">\\n                    <div ref=\\\"eLicenseTextRef\\\" class=\\\"ag-watermark-text\\\"></div>\\n               </div>\") || this;\n    }\n    WatermarkComp.prototype.postContruct = function () {\n        var _this = this;\n        var show = this.shouldDisplayWatermark();\n        ag_grid_community_1._.addOrRemoveCssClass(this.getGui(), 'ag-hidden', !show);\n        if (show) {\n            this.eLicenseTextRef.innerText = this.licenseManager.getWatermarkMessage();\n            window.setTimeout(function () {\n                _this.addCssClass('ag-opacity-zero');\n            }, 0);\n            window.setTimeout(function () {\n                _this.addCssClass('ag-hidden');\n            }, 5000);\n        }\n    };\n    WatermarkComp.prototype.shouldDisplayWatermark = function () {\n        var isDisplayWatermark = this.licenseManager.isDisplayWatermark();\n        var isWhiteListURL = location.hostname.match('^127\\.0\\.0\\.1|localhost|www\\.ag-grid\\.com$') != null;\n        var isForceWatermark = location.search.indexOf('forceWatermark') !== -1;\n        return isForceWatermark || (isDisplayWatermark && !isWhiteListURL);\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('licenseManager'),\n        __metadata(\"design:type\", licenseManager_1.LicenseManager)\n    ], WatermarkComp.prototype, \"licenseManager\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eLicenseTextRef'),\n        __metadata(\"design:type\", HTMLElement)\n    ], WatermarkComp.prototype, \"eLicenseTextRef\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], WatermarkComp.prototype, \"postContruct\", null);\n    return WatermarkComp;\n}(ag_grid_community_1.Component));\nexports.WatermarkComp = WatermarkComp;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/license/watermark.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/licenseManager.js":
/*!************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/licenseManager.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar md5_1 = __webpack_require__(/*! ./license/md5 */ \"../../node_modules/ag-grid-enterprise/dist/lib/license/md5.js\");\nvar LicenseManager = /** @class */ (function () {\n    function LicenseManager() {\n        this.watermarkMessage = undefined;\n    }\n    LicenseManager_1 = LicenseManager;\n    LicenseManager.prototype.validateLicense = function () {\n        if (ag_grid_community_1._.missingOrEmpty(LicenseManager_1.licenseKey)) {\n            this.outputMissingLicenseKey();\n        }\n        else if (!ag_grid_community_1._.missingOrEmpty(LicenseManager_1.licenseKey) && LicenseManager_1.licenseKey.length > 32) {\n            var _a = LicenseManager_1.extractLicenseComponents(LicenseManager_1.licenseKey), md5 = _a.md5, license = _a.license, version = _a.version, isTrial = _a.isTrial;\n            if (md5 === this.md5.md5(license)) {\n                if (ag_grid_community_1._.exists(version) && version) {\n                    this.validateLicenseKeyForVersion(version, !!isTrial, license);\n                }\n                else {\n                    this.validateLegacyKey(license);\n                }\n            }\n            else {\n                this.outputInvalidLicenseKey();\n            }\n        }\n    };\n    LicenseManager.extractExpiry = function (license) {\n        var restrictionHashed = license.substring(license.lastIndexOf('_') + 1, license.length);\n        return new Date(parseInt(LicenseManager_1.decode(restrictionHashed), 10));\n    };\n    LicenseManager.extractLicenseComponents = function (licenseKey) {\n        var hashStart = licenseKey.length - 32;\n        var md5 = licenseKey.substring(hashStart);\n        var license = licenseKey.substring(0, hashStart);\n        var _a = LicenseManager_1.extractBracketedInformation(licenseKey), version = _a[0], isTrial = _a[1];\n        return { md5: md5, license: license, version: version, isTrial: isTrial };\n    };\n    LicenseManager.prototype.getLicenseDetails = function (licenseKey) {\n        var _a = LicenseManager_1.extractLicenseComponents(licenseKey), md5 = _a.md5, license = _a.license, version = _a.version, isTrial = _a.isTrial;\n        var valid = (md5 === this.md5.md5(license));\n        var expiry = null;\n        if (valid) {\n            expiry = LicenseManager_1.extractExpiry(license);\n            valid = !isNaN(expiry.getTime());\n        }\n        return {\n            licenseKey: licenseKey,\n            valid: valid,\n            expiry: valid ? LicenseManager_1.formatDate(expiry) : null,\n            version: version ? version : 'legacy',\n            isTrial: isTrial\n        };\n    };\n    LicenseManager.prototype.isDisplayWatermark = function () {\n        return !ag_grid_community_1._.missingOrEmpty(this.watermarkMessage);\n    };\n    LicenseManager.prototype.getWatermarkMessage = function () {\n        return this.watermarkMessage;\n    };\n    LicenseManager.formatDate = function (date) {\n        var monthNames = [\n            'January', 'February', 'March',\n            'April', 'May', 'June', 'July',\n            'August', 'September', 'October',\n            'November', 'December'\n        ];\n        var day = date.getDate();\n        var monthIndex = date.getMonth();\n        var year = date.getFullYear();\n        return day + ' ' + monthNames[monthIndex] + ' ' + year;\n    };\n    LicenseManager.getGridReleaseDate = function () {\n        return new Date(parseInt(LicenseManager_1.decode(LicenseManager_1.RELEASE_INFORMATION), 10));\n    };\n    LicenseManager.decode = function (input) {\n        var keystr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var t = '';\n        var n, r, i;\n        var s, o, u, a;\n        var f = 0;\n        var e = input.replace(/[^A-Za-z0-9+/=]/g, '');\n        while (f < e.length) {\n            s = keystr.indexOf(e.charAt(f++));\n            o = keystr.indexOf(e.charAt(f++));\n            u = keystr.indexOf(e.charAt(f++));\n            a = keystr.indexOf(e.charAt(f++));\n            n = s << 2 | o >> 4;\n            r = (o & 15) << 4 | u >> 2;\n            i = (u & 3) << 6 | a;\n            t = t + String.fromCharCode(n);\n            if (u != 64) {\n                t = t + String.fromCharCode(r);\n            }\n            if (a != 64) {\n                t = t + String.fromCharCode(i);\n            }\n        }\n        t = LicenseManager_1.utf8_decode(t);\n        return t;\n    };\n    LicenseManager.utf8_decode = function (input) {\n        input = input.replace(/rn/g, 'n');\n        var t = '';\n        for (var n = 0; n < input.length; n++) {\n            var r = input.charCodeAt(n);\n            if (r < 128) {\n                t += String.fromCharCode(r);\n            }\n            else if (r > 127 && r < 2048) {\n                t += String.fromCharCode(r >> 6 | 192);\n                t += String.fromCharCode(r & 63 | 128);\n            }\n            else {\n                t += String.fromCharCode(r >> 12 | 224);\n                t += String.fromCharCode(r >> 6 & 63 | 128);\n                t += String.fromCharCode(r & 63 | 128);\n            }\n        }\n        return t;\n    };\n    LicenseManager.setLicenseKey = function (licenseKey) {\n        LicenseManager_1.licenseKey = licenseKey;\n    };\n    LicenseManager.extractBracketedInformation = function (licenseKey) {\n        var matches = licenseKey.split('[')\n            .filter(function (v) {\n            return v.indexOf(']') > -1;\n        })\n            .map(function (value) {\n            return value.split(']')[0];\n        });\n        if (!matches || matches.length === 0) {\n            return [null, null];\n        }\n        var isTrial = matches.filter(function (match) { return match === 'TRIAL'; }).length === 1;\n        var version = matches.filter(function (match) { return match.indexOf(\"v\") === 0; }).map(function (match) { return match.replace(/^v/, \"\"); })[0];\n        return [version, isTrial];\n    };\n    LicenseManager.prototype.validateLicenseKeyForVersion = function (version, isTrial, license) {\n        switch (version) {\n            case \"2\":\n                if (isTrial) {\n                    this.validateForTrial(license);\n                }\n                else {\n                    this.validateLegacyKey(license);\n                }\n                break;\n        }\n    };\n    LicenseManager.prototype.validateLegacyKey = function (license) {\n        var gridReleaseDate = LicenseManager_1.getGridReleaseDate();\n        var expiry = LicenseManager_1.extractExpiry(license);\n        var valid = false;\n        var current = false;\n        if (!isNaN(expiry.getTime())) {\n            valid = true;\n            current = (gridReleaseDate < expiry);\n        }\n        if (!valid) {\n            this.outputInvalidLicenseKey();\n        }\n        else if (!current) {\n            var formattedExpiryDate = LicenseManager_1.formatDate(expiry);\n            var formattedReleaseDate = LicenseManager_1.formatDate(gridReleaseDate);\n            this.outputIncompatibleVersion(formattedExpiryDate, formattedReleaseDate);\n        }\n    };\n    LicenseManager.prototype.validateForTrial = function (license) {\n        var expiry = LicenseManager_1.extractExpiry(license);\n        var now = new Date();\n        var valid = false;\n        var current = false;\n        if (!isNaN(expiry.getTime())) {\n            valid = true;\n            current = (expiry > now);\n        }\n        if (!valid) {\n            this.outputInvalidLicenseKey();\n        }\n        else if (!current) {\n            var formattedExpiryDate = LicenseManager_1.formatDate(expiry);\n            this.outputExpiredTrialKey(formattedExpiryDate);\n        }\n    };\n    LicenseManager.prototype.outputInvalidLicenseKey = function () {\n        console.error('*****************************************************************************************************************');\n        console.error('***************************************** ag-Grid Enterprise License ********************************************');\n        console.error('********************************************* Invalid License ***************************************************');\n        console.error('* Your license for ag-Grid Enterprise is not valid - please contact info@ag-grid.com to obtain a valid license. *');\n        console.error('*****************************************************************************************************************');\n        console.error('*****************************************************************************************************************');\n        this.watermarkMessage = \"Invalid License\";\n    };\n    LicenseManager.prototype.outputExpiredTrialKey = function (formattedExpiryDate) {\n        console.error('****************************************************************************************************************');\n        console.error('***************************************** ag-Grid Enterprise License *******************************************');\n        console.error('*****************************************   Trial Period Expired.    *******************************************');\n        console.error(\"* Your license for ag-Grid Enterprise expired on \" + formattedExpiryDate + \".                                                *\");\n        console.error('* Please email info@ag-grid.com to purchase a license.                                                         *');\n        console.error('****************************************************************************************************************');\n        console.error('****************************************************************************************************************');\n        this.watermarkMessage = \"Trial Period Expired\";\n    };\n    LicenseManager.prototype.outputMissingLicenseKey = function () {\n        console.error('****************************************************************************************************************');\n        console.error('***************************************** ag-Grid Enterprise License *******************************************');\n        console.error('****************************************** License Key Not Found ***********************************************');\n        console.error('* All ag-Grid Enterprise features are unlocked.                                                                *');\n        console.error('* This is an evaluation only version, it is not licensed for development projects intended for production.     *');\n        console.error('* If you want to hide the watermark, please email info@ag-grid.com for a trial license.                        *');\n        console.error('****************************************************************************************************************');\n        console.error('****************************************************************************************************************');\n        this.watermarkMessage = \"For Trial Use Only\";\n    };\n    LicenseManager.prototype.outputIncompatibleVersion = function (formattedExpiryDate, formattedReleaseDate) {\n        console.error('****************************************************************************************************************************');\n        console.error('********************************************* ag-Grid Enterprise License ***************************************************');\n        console.error('*************************** License not compatible with installed version of ag-Grid Enterprise. ***************************');\n        console.error(\"* Your license for ag-Grid Enterprise expired on \" + formattedExpiryDate + \" but the version installed was released on \" + formattedReleaseDate + \". *\");\n        console.error('* Please contact info@ag-grid.com to renew your subscription to new versions.                                              *');\n        console.error('****************************************************************************************************************************');\n        console.error('****************************************************************************************************************************');\n        this.watermarkMessage = \"Incompatible License Version\";\n    };\n    var LicenseManager_1;\n    LicenseManager.RELEASE_INFORMATION = 'MTU2OTUwNzQ0NTUxNw==';\n    __decorate([\n        ag_grid_community_1.Autowired('md5'),\n        __metadata(\"design:type\", md5_1.MD5)\n    ], LicenseManager.prototype, \"md5\", void 0);\n    __decorate([\n        ag_grid_community_1.PreConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], LicenseManager.prototype, \"validateLicense\", null);\n    LicenseManager = LicenseManager_1 = __decorate([\n        ag_grid_community_1.Bean('licenseManager')\n    ], LicenseManager);\n    return LicenseManager;\n}());\nexports.LicenseManager = LicenseManager;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/licenseManager.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/menu/contextMenu.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/menu/contextMenu.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar menuItemComponent_1 = __webpack_require__(/*! ./menuItemComponent */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/menuItemComponent.js\");\nvar menuList_1 = __webpack_require__(/*! ./menuList */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/menuList.js\");\nvar menuItemMapper_1 = __webpack_require__(/*! ./menuItemMapper */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/menuItemMapper.js\");\nvar rangeController_1 = __webpack_require__(/*! ../rangeController */ \"../../node_modules/ag-grid-enterprise/dist/lib/rangeController.js\");\nvar ContextMenuFactory = /** @class */ (function () {\n    function ContextMenuFactory() {\n    }\n    ContextMenuFactory.prototype.init = function () {\n    };\n    ContextMenuFactory.prototype.hideActiveMenu = function () {\n        if (!this.activeMenu) {\n            return;\n        }\n        this.activeMenu.destroy();\n    };\n    ContextMenuFactory.prototype.getMenuItems = function (node, column, value) {\n        var defaultMenuOptions = [];\n        if (ag_grid_community_1._.exists(node)) {\n            if (column) {\n                // only makes sense if column exists, could have originated from a row\n                defaultMenuOptions.push('copy', 'copyWithHeaders', 'paste', 'separator');\n            }\n        }\n        else {\n            // if user clicks outside of a cell (eg below the rows, or not rows present)\n            // nothing to show, perhaps tool panels???\n        }\n        if (this.gridOptionsWrapper.isEnableCharts() && this.context.isModuleRegistered(\"chartsModule\" /* ChartsModule */)) {\n            if (this.columnController.isPivotMode()) {\n                defaultMenuOptions.push('pivotChart');\n            }\n            // else {\n            //     defaultMenuOptions.push('pivotChartAndPivotMode');\n            // }\n            if (!this.rangeController.isEmpty()) {\n                defaultMenuOptions.push('chartRange');\n            }\n        }\n        if (ag_grid_community_1._.exists(node)) {\n            // if user clicks a cell\n            var suppressExcel = this.gridOptionsWrapper.isSuppressExcelExport();\n            var suppressCsv = this.gridOptionsWrapper.isSuppressCsvExport();\n            var onIPad = ag_grid_community_1._.isUserAgentIPad();\n            var anyExport = !onIPad && (!suppressExcel || !suppressCsv);\n            if (anyExport) {\n                defaultMenuOptions.push('export');\n            }\n        }\n        if (this.gridOptionsWrapper.getContextMenuItemsFunc()) {\n            var userFunc = this.gridOptionsWrapper.getContextMenuItemsFunc();\n            var params = {\n                node: node,\n                column: column,\n                value: value,\n                defaultItems: defaultMenuOptions.length ? defaultMenuOptions : undefined,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext()\n            };\n            return userFunc ? userFunc(params) : undefined;\n        }\n        return defaultMenuOptions;\n    };\n    ContextMenuFactory.prototype.showMenu = function (node, column, value, mouseEvent) {\n        var _this = this;\n        var menuItems = this.getMenuItems(node, column, value);\n        if (menuItems === undefined || ag_grid_community_1._.missingOrEmpty(menuItems)) {\n            return;\n        }\n        var menu = new ContextMenu(menuItems);\n        this.context.wireBean(menu);\n        var eMenuGui = menu.getGui();\n        // need to show filter before positioning, as only after filter\n        // is visible can we find out what the width of it is\n        var hidePopup = this.popupService.addAsModalPopup(eMenuGui, true, function () { return menu.destroy(); }, mouseEvent);\n        this.popupService.positionPopupUnderMouseEvent({\n            column: column,\n            rowNode: node,\n            type: 'contextMenu',\n            mouseEvent: mouseEvent,\n            ePopup: eMenuGui\n        });\n        menu.afterGuiAttached({\n            hidePopup: hidePopup\n        });\n        this.activeMenu = menu;\n        menu.addEventListener(ag_grid_community_1.BeanStub.EVENT_DESTROYED, function () {\n            if (_this.activeMenu === menu) {\n                _this.activeMenu = null;\n            }\n        });\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('context'),\n        __metadata(\"design:type\", ag_grid_community_1.Context)\n    ], ContextMenuFactory.prototype, \"context\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('popupService'),\n        __metadata(\"design:type\", ag_grid_community_1.PopupService)\n    ], ContextMenuFactory.prototype, \"popupService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ContextMenuFactory.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], ContextMenuFactory.prototype, \"rowModel\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rangeController'),\n        __metadata(\"design:type\", rangeController_1.RangeController)\n    ], ContextMenuFactory.prototype, \"rangeController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], ContextMenuFactory.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ContextMenuFactory.prototype, \"init\", null);\n    ContextMenuFactory = __decorate([\n        ag_grid_community_1.Bean('contextMenuFactory')\n    ], ContextMenuFactory);\n    return ContextMenuFactory;\n}());\nexports.ContextMenuFactory = ContextMenuFactory;\nvar ContextMenu = /** @class */ (function (_super) {\n    __extends(ContextMenu, _super);\n    function ContextMenu(menuItems) {\n        var _this = _super.call(this, '<div class=\"ag-menu\"></div>') || this;\n        _this.menuItems = menuItems;\n        return _this;\n    }\n    ContextMenu.prototype.addMenuItems = function () {\n        var menuList = new menuList_1.MenuList();\n        this.getContext().wireBean(menuList);\n        var menuItemsMapped = this.menuItemMapper.mapWithStockItems(this.menuItems, null);\n        menuList.addMenuItems(menuItemsMapped);\n        this.appendChild(menuList);\n        menuList.addEventListener(menuItemComponent_1.MenuItemComponent.EVENT_ITEM_SELECTED, this.destroy.bind(this));\n    };\n    ContextMenu.prototype.afterGuiAttached = function (params) {\n        if (params.hidePopup) {\n            this.addDestroyFunc(params.hidePopup);\n        }\n        // if the body scrolls, we want to hide the menu, as the menu will not appear in the right location anymore\n        this.addDestroyableEventListener(this.eventService, 'bodyScroll', this.destroy.bind(this));\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], ContextMenu.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('menuItemMapper'),\n        __metadata(\"design:type\", menuItemMapper_1.MenuItemMapper)\n    ], ContextMenu.prototype, \"menuItemMapper\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ContextMenu.prototype, \"addMenuItems\", null);\n    return ContextMenu;\n}(ag_grid_community_1.Component));\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/menu/contextMenu.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/menu/enterpriseMenu.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/menu/enterpriseMenu.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar menuList_1 = __webpack_require__(/*! ./menuList */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/menuList.js\");\nvar menuItemComponent_1 = __webpack_require__(/*! ./menuItemComponent */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/menuItemComponent.js\");\nvar menuItemMapper_1 = __webpack_require__(/*! ./menuItemMapper */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/menuItemMapper.js\");\nvar primaryColsPanel_1 = __webpack_require__(/*! ../sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsPanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsPanel.js\");\nvar EnterpriseMenuFactory = /** @class */ (function () {\n    function EnterpriseMenuFactory() {\n    }\n    EnterpriseMenuFactory.prototype.hideActiveMenu = function () {\n        if (this.activeMenu) {\n            this.activeMenu.destroy();\n        }\n    };\n    EnterpriseMenuFactory.prototype.showMenuAfterMouseEvent = function (column, mouseEvent, defaultTab) {\n        var _this = this;\n        this.showMenu(column, function (menu) {\n            _this.popupService.positionPopupUnderMouseEvent({\n                column: column,\n                type: 'columnMenu',\n                mouseEvent: mouseEvent,\n                ePopup: menu.getGui()\n            });\n            if (defaultTab) {\n                menu.showTab(defaultTab);\n            }\n        }, defaultTab);\n    };\n    EnterpriseMenuFactory.prototype.showMenuAfterButtonClick = function (column, eventSource, defaultTab, restrictToTabs) {\n        var _this = this;\n        var multiplier = -1;\n        var alignSide = 'left';\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            multiplier = 1;\n            alignSide = 'right';\n        }\n        this.showMenu(column, function (menu) {\n            var minDims = menu.getMinDimensions();\n            _this.popupService.positionPopupUnderComponent({\n                column: column,\n                type: 'columnMenu',\n                eventSource: eventSource,\n                ePopup: menu.getGui(),\n                nudgeX: 9 * multiplier,\n                nudgeY: -23,\n                minWidth: minDims.width,\n                minHeight: minDims.height,\n                alignSide: alignSide,\n                keepWithinBounds: true\n            });\n            if (defaultTab) {\n                menu.showTab(defaultTab);\n            }\n        }, defaultTab, restrictToTabs);\n    };\n    EnterpriseMenuFactory.prototype.showMenu = function (column, positionCallback, defaultTab, restrictToTabs) {\n        var _this = this;\n        var menu = new EnterpriseMenu(column, this.lastSelectedTab, restrictToTabs);\n        this.context.wireBean(menu);\n        var eMenuGui = menu.getGui();\n        // need to show filter before positioning, as only after filter\n        // is visible can we find out what the width of it is\n        var hidePopup = this.popupService.addAsModalPopup(eMenuGui, true, function () {\n            menu.destroy();\n            column.setMenuVisible(false, \"contextMenu\");\n        });\n        menu.afterGuiAttached({\n            hidePopup: hidePopup\n        });\n        positionCallback(menu);\n        if (!defaultTab) {\n            menu.showTabBasedOnPreviousSelection();\n        }\n        menu.addEventListener(EnterpriseMenu.EVENT_TAB_SELECTED, function (event) {\n            _this.lastSelectedTab = event.key;\n        });\n        column.setMenuVisible(true, \"contextMenu\");\n        this.activeMenu = menu;\n        menu.addEventListener(ag_grid_community_1.BeanStub.EVENT_DESTROYED, function () {\n            if (_this.activeMenu === menu) {\n                _this.activeMenu = null;\n            }\n        });\n    };\n    EnterpriseMenuFactory.prototype.isMenuEnabled = function (column) {\n        return column.getMenuTabs(EnterpriseMenu.TABS_DEFAULT).length > 0;\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('context'),\n        __metadata(\"design:type\", ag_grid_community_1.Context)\n    ], EnterpriseMenuFactory.prototype, \"context\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('popupService'),\n        __metadata(\"design:type\", ag_grid_community_1.PopupService)\n    ], EnterpriseMenuFactory.prototype, \"popupService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], EnterpriseMenuFactory.prototype, \"gridOptionsWrapper\", void 0);\n    EnterpriseMenuFactory = __decorate([\n        ag_grid_community_1.Bean('menuFactory')\n    ], EnterpriseMenuFactory);\n    return EnterpriseMenuFactory;\n}());\nexports.EnterpriseMenuFactory = EnterpriseMenuFactory;\nvar EnterpriseMenu = /** @class */ (function (_super) {\n    __extends(EnterpriseMenu, _super);\n    function EnterpriseMenu(column, initialSelection, restrictTo) {\n        var _this = _super.call(this) || this;\n        _this.tabFactories = {};\n        _this.includeChecks = {};\n        _this.column = column;\n        _this.initialSelection = initialSelection;\n        _this.tabFactories[EnterpriseMenu.TAB_GENERAL] = _this.createMainPanel.bind(_this);\n        _this.tabFactories[EnterpriseMenu.TAB_FILTER] = _this.createFilterPanel.bind(_this);\n        _this.tabFactories[EnterpriseMenu.TAB_COLUMNS] = _this.createColumnsPanel.bind(_this);\n        _this.includeChecks[EnterpriseMenu.TAB_GENERAL] = function () { return true; };\n        _this.includeChecks[EnterpriseMenu.TAB_FILTER] = function () { return column.isFilterAllowed(); };\n        _this.includeChecks[EnterpriseMenu.TAB_COLUMNS] = function () { return true; };\n        _this.restrictTo = restrictTo;\n        return _this;\n    }\n    EnterpriseMenu.prototype.getMinDimensions = function () {\n        return this.tabbedLayout.getMinDimensions();\n    };\n    EnterpriseMenu.prototype.init = function () {\n        var _this = this;\n        var tabs = this.getTabsToCreate()\n            .map(function (menuTabName) { return _this.createTab(menuTabName); });\n        this.tabbedLayout = new ag_grid_community_1.TabbedLayout({\n            items: tabs,\n            cssClass: 'ag-menu',\n            onActiveItemClicked: this.onHidePopup.bind(this),\n            onItemClicked: this.onTabItemClicked.bind(this)\n        });\n    };\n    EnterpriseMenu.prototype.getTabsToCreate = function () {\n        var _this = this;\n        if (this.restrictTo) {\n            return this.restrictTo;\n        }\n        return this.column.getMenuTabs(EnterpriseMenu.TABS_DEFAULT)\n            .filter(function (tabName) { return _this.isValidMenuTabItem(tabName); })\n            .filter(function (tabName) { return _this.isNotSuppressed(tabName); });\n    };\n    EnterpriseMenu.prototype.isValidMenuTabItem = function (menuTabName) {\n        var isValid = true;\n        var itemsToConsider = EnterpriseMenu.TABS_DEFAULT;\n        if (this.restrictTo != null) {\n            isValid = this.restrictTo.indexOf(menuTabName) > -1;\n            itemsToConsider = this.restrictTo;\n        }\n        isValid = isValid && EnterpriseMenu.TABS_DEFAULT.indexOf(menuTabName) > -1;\n        if (!isValid) {\n            console.warn(\"Trying to render an invalid menu item '\" + menuTabName + \"'. Check that your 'menuTabs' contains one of [\" + itemsToConsider + \"]\");\n        }\n        return isValid;\n    };\n    EnterpriseMenu.prototype.isNotSuppressed = function (menuTabName) {\n        return this.includeChecks[menuTabName]();\n    };\n    EnterpriseMenu.prototype.createTab = function (name) {\n        return this.tabFactories[name]();\n    };\n    EnterpriseMenu.prototype.showTabBasedOnPreviousSelection = function () {\n        // show the tab the user was on last time they had a menu open\n        this.showTab(this.initialSelection);\n    };\n    EnterpriseMenu.prototype.showTab = function (toShow) {\n        if (this.tabItemColumns && toShow === EnterpriseMenu.TAB_COLUMNS) {\n            this.tabbedLayout.showItem(this.tabItemColumns);\n        }\n        else if (this.tabItemFilter && toShow === EnterpriseMenu.TAB_FILTER) {\n            this.tabbedLayout.showItem(this.tabItemFilter);\n        }\n        else if (this.tabItemGeneral && toShow === EnterpriseMenu.TAB_GENERAL) {\n            this.tabbedLayout.showItem(this.tabItemGeneral);\n        }\n        else {\n            this.tabbedLayout.showFirstItem();\n        }\n    };\n    EnterpriseMenu.prototype.onTabItemClicked = function (event) {\n        var key = null;\n        switch (event.item) {\n            case this.tabItemColumns:\n                key = EnterpriseMenu.TAB_COLUMNS;\n                break;\n            case this.tabItemFilter:\n                key = EnterpriseMenu.TAB_FILTER;\n                break;\n            case this.tabItemGeneral:\n                key = EnterpriseMenu.TAB_GENERAL;\n                break;\n        }\n        if (key) {\n            var ev = {\n                type: EnterpriseMenu.EVENT_TAB_SELECTED,\n                key: key\n            };\n            this.dispatchEvent(ev);\n        }\n    };\n    EnterpriseMenu.prototype.destroy = function () {\n        if (this.columnSelectPanel) {\n            this.columnSelectPanel.destroy();\n        }\n        if (this.mainMenuList) {\n            this.mainMenuList.destroy();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    EnterpriseMenu.prototype.getMenuItems = function () {\n        var defaultMenuOptions = this.getDefaultMenuOptions();\n        var result;\n        var userFunc = this.gridOptionsWrapper.getMainMenuItemsFunc();\n        if (userFunc) {\n            var userOptions = userFunc({\n                column: this.column,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext(),\n                defaultItems: defaultMenuOptions\n            });\n            result = userOptions;\n        }\n        else {\n            result = defaultMenuOptions;\n        }\n        // GUI looks weird when two separators are side by side. this can happen accidentally\n        // if we remove items from the menu then two separators can edit up adjacent.\n        ag_grid_community_1._.removeRepeatsFromArray(result, EnterpriseMenu.MENU_ITEM_SEPARATOR);\n        return result;\n    };\n    EnterpriseMenu.prototype.getDefaultMenuOptions = function () {\n        var result = [];\n        var allowPinning = !this.column.getColDef().lockPinned;\n        var rowGroupCount = this.columnController.getRowGroupColumns().length;\n        var doingGrouping = rowGroupCount > 0;\n        var groupedByThisColumn = this.columnController.getRowGroupColumns().indexOf(this.column) >= 0;\n        var allowValue = this.column.isAllowValue();\n        var allowRowGroup = this.column.isAllowRowGroup();\n        var isPrimary = this.column.isPrimary();\n        var pivotModeOn = this.columnController.isPivotMode();\n        var isInMemoryRowModel = this.rowModel.getType() === ag_grid_community_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n        var usingTreeData = this.gridOptionsWrapper.isTreeData();\n        var allowValueAgg = \n        // if primary, then only allow aggValue if grouping and it's a value columns\n        (isPrimary && doingGrouping && allowValue)\n            // secondary columns can always have aggValue, as it means it's a pivot value column\n            || !isPrimary;\n        if (allowPinning) {\n            result.push('pinSubMenu');\n        }\n        if (allowValueAgg) {\n            result.push('valueAggSubMenu');\n        }\n        if (allowPinning || allowValueAgg) {\n            result.push(EnterpriseMenu.MENU_ITEM_SEPARATOR);\n        }\n        result.push('autoSizeThis');\n        result.push('autoSizeAll');\n        result.push(EnterpriseMenu.MENU_ITEM_SEPARATOR);\n        if (allowRowGroup && this.column.isPrimary()) {\n            if (groupedByThisColumn) {\n                result.push('rowUnGroup');\n            }\n            else {\n                result.push('rowGroup');\n            }\n        }\n        result.push(EnterpriseMenu.MENU_ITEM_SEPARATOR);\n        result.push('resetColumns');\n        // only add grouping expand/collapse if grouping in the InMemoryRowModel\n        // if pivoting, we only have expandable groups if grouping by 2 or more columns\n        // as the lowest level group is not expandable while pivoting.\n        // if not pivoting, then any active row group can be expanded.\n        var allowExpandAndContract = false;\n        if (isInMemoryRowModel) {\n            if (usingTreeData) {\n                allowExpandAndContract = true;\n            }\n            else {\n                allowExpandAndContract = pivotModeOn ? rowGroupCount > 1 : rowGroupCount > 0;\n            }\n        }\n        if (allowExpandAndContract) {\n            result.push('expandAll');\n            result.push('contractAll');\n        }\n        return result;\n    };\n    EnterpriseMenu.prototype.createMainPanel = function () {\n        this.mainMenuList = new menuList_1.MenuList();\n        this.getContext().wireBean(this.mainMenuList);\n        var menuItems = this.getMenuItems();\n        var menuItemsMapped = this.menuItemMapper.mapWithStockItems(menuItems, this.column);\n        this.mainMenuList.addMenuItems(menuItemsMapped);\n        this.mainMenuList.addEventListener(menuItemComponent_1.MenuItemComponent.EVENT_ITEM_SELECTED, this.onHidePopup.bind(this));\n        this.tabItemGeneral = {\n            title: ag_grid_community_1._.createIconNoSpan('menu', this.gridOptionsWrapper, this.column),\n            bodyPromise: ag_grid_community_1.Promise.resolve(this.mainMenuList.getGui()),\n            name: EnterpriseMenu.TAB_GENERAL\n        };\n        return this.tabItemGeneral;\n    };\n    EnterpriseMenu.prototype.onHidePopup = function () {\n        this.hidePopupFunc();\n    };\n    EnterpriseMenu.prototype.createFilterPanel = function () {\n        var filterWrapper = this.filterManager.getOrCreateFilterWrapper(this.column, 'COLUMN_MENU');\n        var afterFilterAttachedCallback = null;\n        // slightly odd block this - this promise will always have been resolved by the time it gets here, so won't be\n        // async (_unless_ in react or similar, but if so why not encountered before now?).\n        // I'd suggest a future improvement would be to remove/replace this promise as this block just wont work if it is\n        // async and is confusing if you don't have this context\n        filterWrapper.filterPromise.then(function (filter) {\n            if (filter.afterGuiAttached) {\n                afterFilterAttachedCallback = filter.afterGuiAttached.bind(filter);\n            }\n        });\n        this.tabItemFilter = {\n            title: ag_grid_community_1._.createIconNoSpan('filter', this.gridOptionsWrapper, this.column),\n            bodyPromise: filterWrapper.guiPromise.promise,\n            afterAttachedCallback: afterFilterAttachedCallback,\n            name: EnterpriseMenu.TAB_FILTER\n        };\n        return this.tabItemFilter;\n    };\n    EnterpriseMenu.prototype.createColumnsPanel = function () {\n        var eWrapperDiv = document.createElement('div');\n        ag_grid_community_1._.addCssClass(eWrapperDiv, 'ag-menu-column-select-wrapper');\n        this.columnSelectPanel = new primaryColsPanel_1.PrimaryColsPanel(false, {\n            suppressValues: false,\n            suppressPivots: false,\n            suppressRowGroups: false,\n            suppressPivotMode: false,\n            contractColumnSelection: false,\n            suppressColumnExpandAll: false,\n            suppressColumnFilter: false,\n            suppressColumnSelectAll: false,\n            suppressSideButtons: false,\n            api: this.gridApi\n        });\n        this.getContext().wireBean(this.columnSelectPanel);\n        eWrapperDiv.appendChild(this.columnSelectPanel.getGui());\n        this.tabItemColumns = {\n            title: ag_grid_community_1._.createIconNoSpan('columns', this.gridOptionsWrapper, this.column),\n            bodyPromise: ag_grid_community_1.Promise.resolve(eWrapperDiv),\n            name: EnterpriseMenu.TAB_COLUMNS\n        };\n        return this.tabItemColumns;\n    };\n    EnterpriseMenu.prototype.afterGuiAttached = function (params) {\n        var _this = this;\n        this.tabbedLayout.setAfterAttachedParams({ hidePopup: params.hidePopup });\n        this.hidePopupFunc = params.hidePopup;\n        var initialScroll = this.gridApi.getHorizontalPixelRange().left;\n        // if the body scrolls, we want to hide the menu, as the menu will not appear in the right location anymore\n        var onBodyScroll = function (event) {\n            // if h scroll, popup is no longer over the column\n            if (event.direction === 'horizontal') {\n                var newScroll = _this.gridApi.getHorizontalPixelRange().left;\n                if (Math.abs(newScroll - initialScroll) > _this.gridOptionsWrapper.getScrollbarWidth()) {\n                    params.hidePopup();\n                }\n            }\n        };\n        this.addDestroyFunc(params.hidePopup);\n        this.addDestroyableEventListener(this.eventService, 'bodyScroll', onBodyScroll);\n    };\n    EnterpriseMenu.prototype.getGui = function () {\n        return this.tabbedLayout.getGui();\n    };\n    EnterpriseMenu.EVENT_TAB_SELECTED = 'tabSelected';\n    EnterpriseMenu.TAB_FILTER = 'filterMenuTab';\n    EnterpriseMenu.TAB_GENERAL = 'generalMenuTab';\n    EnterpriseMenu.TAB_COLUMNS = 'columnsMenuTab';\n    EnterpriseMenu.TABS_DEFAULT = [EnterpriseMenu.TAB_GENERAL, EnterpriseMenu.TAB_FILTER, EnterpriseMenu.TAB_COLUMNS];\n    EnterpriseMenu.MENU_ITEM_SEPARATOR = 'separator';\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], EnterpriseMenu.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('filterManager'),\n        __metadata(\"design:type\", ag_grid_community_1.FilterManager)\n    ], EnterpriseMenu.prototype, \"filterManager\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], EnterpriseMenu.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], EnterpriseMenu.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], EnterpriseMenu.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('menuItemMapper'),\n        __metadata(\"design:type\", menuItemMapper_1.MenuItemMapper)\n    ], EnterpriseMenu.prototype, \"menuItemMapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], EnterpriseMenu.prototype, \"rowModel\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], EnterpriseMenu.prototype, \"init\", null);\n    return EnterpriseMenu;\n}(ag_grid_community_1.BeanStub));\nexports.EnterpriseMenu = EnterpriseMenu;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/menu/enterpriseMenu.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/menu/menuItemComponent.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/menu/menuItemComponent.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar MenuItemComponent = /** @class */ (function (_super) {\n    __extends(MenuItemComponent, _super);\n    function MenuItemComponent(params) {\n        var _this = _super.call(this, MenuItemComponent.TEMPLATE) || this;\n        _this.params = params;\n        return _this;\n    }\n    MenuItemComponent.prototype.init = function () {\n        var _this = this;\n        if (this.params.checked) {\n            this.eIcon.appendChild(ag_grid_community_1._.createIconNoSpan('check', this.gridOptionsWrapper));\n        }\n        else if (this.params.icon) {\n            if (ag_grid_community_1._.isNodeOrElement(this.params.icon)) {\n                this.eIcon.appendChild(this.params.icon);\n            }\n            else if (typeof this.params.icon === 'string') {\n                this.eIcon.innerHTML = this.params.icon;\n            }\n            else {\n                console.warn('ag-Grid: menu item icon must be DOM node or string');\n            }\n        }\n        else {\n            // if i didn't put space here, the alignment was messed up, probably\n            // fixable with CSS but i was spending to much time trying to figure\n            // it out.\n            this.eIcon.innerHTML = '&nbsp;';\n        }\n        if (this.params.tooltip) {\n            this.tooltip = this.params.tooltip;\n            if (this.gridOptionsWrapper.isEnableBrowserTooltips()) {\n                this.getGui().setAttribute('title', this.tooltip);\n            }\n            else {\n                this.tooltipManager.registerTooltip(this);\n            }\n        }\n        if (this.params.shortcut) {\n            this.eShortcut.innerHTML = this.params.shortcut;\n        }\n        if (this.params.subMenu) {\n            if (this.gridOptionsWrapper.isEnableRtl()) {\n                // for RTL, we show arrow going left\n                this.ePopupPointer.appendChild(ag_grid_community_1._.createIconNoSpan('smallLeft', this.gridOptionsWrapper));\n            }\n            else {\n                // for normal, we show arrow going right\n                this.ePopupPointer.appendChild(ag_grid_community_1._.createIconNoSpan('smallRight', this.gridOptionsWrapper));\n            }\n        }\n        else {\n            this.ePopupPointer.innerHTML = '&nbsp;';\n        }\n        this.eName.innerHTML = this.params.name;\n        if (this.params.disabled) {\n            ag_grid_community_1._.addCssClass(this.getGui(), 'ag-menu-option-disabled');\n        }\n        else {\n            this.addGuiEventListener('click', this.onOptionSelected.bind(this));\n        }\n        if (this.params.cssClasses) {\n            this.params.cssClasses.forEach(function (it) { return ag_grid_community_1._.addCssClass(_this.getGui(), it); });\n        }\n    };\n    MenuItemComponent.prototype.getTooltipText = function () {\n        return this.tooltip;\n    };\n    MenuItemComponent.prototype.getComponentHolder = function () {\n        return undefined;\n    };\n    MenuItemComponent.prototype.onOptionSelected = function (mouseEvent) {\n        var event = {\n            type: MenuItemComponent.EVENT_ITEM_SELECTED,\n            action: this.params.action,\n            checked: this.params.checked,\n            cssClasses: this.params.cssClasses,\n            disabled: this.params.disabled,\n            icon: this.params.icon,\n            name: this.params.name,\n            shortcut: this.params.shortcut,\n            subMenu: this.params.subMenu,\n            tooltip: this.params.tooltip,\n            mouseEvent: mouseEvent\n        };\n        this.dispatchEvent(event);\n        if (this.params.action) {\n            this.params.action();\n        }\n    };\n    MenuItemComponent.prototype.destroy = function () {\n        // console.log('MenuItemComponent->destroy() ' + this.instance);\n        _super.prototype.destroy.call(this);\n    };\n    // private instance = Math.random();\n    MenuItemComponent.TEMPLATE = \"<div class=\\\"ag-menu-option\\\">\\n            <span ref=\\\"eIcon\\\" class=\\\"ag-menu-option-icon\\\"></span>\\n            <span ref=\\\"eName\\\" class=\\\"ag-menu-option-text\\\"></span>\\n            <span ref=\\\"eShortcut\\\" class=\\\"ag-menu-option-shortcut\\\"></span>\\n            <span ref=\\\"ePopupPointer\\\" class=\\\"ag-menu-option-popup-pointer\\\"></span>\\n        </div>\";\n    MenuItemComponent.EVENT_ITEM_SELECTED = 'itemSelected';\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], MenuItemComponent.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('tooltipManager'),\n        __metadata(\"design:type\", ag_grid_community_1.TooltipManager)\n    ], MenuItemComponent.prototype, \"tooltipManager\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eIcon'),\n        __metadata(\"design:type\", HTMLElement)\n    ], MenuItemComponent.prototype, \"eIcon\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eName'),\n        __metadata(\"design:type\", HTMLElement)\n    ], MenuItemComponent.prototype, \"eName\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eShortcut'),\n        __metadata(\"design:type\", HTMLElement)\n    ], MenuItemComponent.prototype, \"eShortcut\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('ePopupPointer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], MenuItemComponent.prototype, \"ePopupPointer\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MenuItemComponent.prototype, \"init\", null);\n    return MenuItemComponent;\n}(ag_grid_community_1.Component));\nexports.MenuItemComponent = MenuItemComponent;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/menu/menuItemComponent.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/menu/menuItemMapper.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/menu/menuItemMapper.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar clipboardService_1 = __webpack_require__(/*! ../clipboardService */ \"../../node_modules/ag-grid-enterprise/dist/lib/clipboardService.js\");\nvar aggFuncService_1 = __webpack_require__(/*! ../aggregation/aggFuncService */ \"../../node_modules/ag-grid-enterprise/dist/lib/aggregation/aggFuncService.js\");\nvar MenuItemMapper = /** @class */ (function () {\n    function MenuItemMapper() {\n    }\n    MenuItemMapper.prototype.mapWithStockItems = function (originalList, column) {\n        var _this = this;\n        if (!originalList) {\n            return [];\n        }\n        var resultList = [];\n        originalList.forEach(function (menuItemOrString) {\n            var result;\n            if (typeof menuItemOrString === 'string') {\n                result = _this.getStockMenuItem(menuItemOrString, column);\n            }\n            else {\n                result = menuItemOrString;\n            }\n            if (result.subMenu) {\n                var resultDef = result;\n                resultDef.subMenu = _this.mapWithStockItems(resultDef.subMenu, column);\n            }\n            if (result != null) {\n                resultList.push(result);\n            }\n        });\n        return resultList;\n    };\n    MenuItemMapper.prototype.getStockMenuItem = function (key, column) {\n        var _this = this;\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        switch (key) {\n            case 'pinSubMenu':\n                return {\n                    name: localeTextFunc('pinColumn', 'Pin Column'),\n                    icon: ag_grid_community_1._.createIconNoSpan('menuPin', this.gridOptionsWrapper, null),\n                    subMenu: ['pinLeft', 'pinRight', 'clearPinned']\n                };\n            case 'pinLeft':\n                return {\n                    name: localeTextFunc('pinLeft', 'Pin Left'),\n                    action: function () { return _this.columnController.setColumnPinned(column, ag_grid_community_1.Column.PINNED_LEFT, \"contextMenu\"); },\n                    checked: column.isPinnedLeft()\n                };\n            case 'pinRight':\n                return {\n                    name: localeTextFunc('pinRight', 'Pin Right'),\n                    action: function () { return _this.columnController.setColumnPinned(column, ag_grid_community_1.Column.PINNED_RIGHT, \"contextMenu\"); },\n                    checked: column.isPinnedRight()\n                };\n            case 'clearPinned':\n                return {\n                    name: localeTextFunc('noPin', 'No Pin'),\n                    action: function () { return _this.columnController.setColumnPinned(column, null, \"contextMenu\"); },\n                    checked: !column.isPinned()\n                };\n            case 'valueAggSubMenu':\n                return {\n                    name: localeTextFunc('valueAggregation', 'Value Aggregation'),\n                    icon: ag_grid_community_1._.createIconNoSpan('menuValue', this.gridOptionsWrapper, null),\n                    subMenu: this.createAggregationSubMenu(column)\n                };\n            case 'autoSizeThis':\n                return {\n                    name: localeTextFunc('autosizeThiscolumn', 'Autosize This Column'),\n                    action: function () { return _this.columnController.autoSizeColumn(column, \"contextMenu\"); }\n                };\n            case 'autoSizeAll':\n                return {\n                    name: localeTextFunc('autosizeAllColumns', 'Autosize All Columns'),\n                    action: function () { return _this.columnController.autoSizeAllColumns(\"contextMenu\"); }\n                };\n            case 'rowGroup':\n                return {\n                    name: localeTextFunc('groupBy', 'Group by') + ' ' + ag_grid_community_1._.escape(this.columnController.getDisplayNameForColumn(column, 'header')),\n                    action: function () { return _this.columnController.addRowGroupColumn(column, \"contextMenu\"); },\n                    icon: ag_grid_community_1._.createIconNoSpan('menuAddRowGroup', this.gridOptionsWrapper, null)\n                };\n            case 'rowUnGroup':\n                return {\n                    name: localeTextFunc('ungroupBy', 'Un-Group by') + ' ' + ag_grid_community_1._.escape(this.columnController.getDisplayNameForColumn(column, 'header')),\n                    action: function () { return _this.columnController.removeRowGroupColumn(column, \"contextMenu\"); },\n                    icon: ag_grid_community_1._.createIconNoSpan('menuRemoveRowGroup', this.gridOptionsWrapper, null)\n                };\n            case 'resetColumns':\n                return {\n                    name: localeTextFunc('resetColumns', 'Reset Columns'),\n                    action: function () { return _this.columnController.resetColumnState(false, \"contextMenu\"); }\n                };\n            case 'expandAll':\n                return {\n                    name: localeTextFunc('expandAll', 'Expand All'),\n                    action: function () { return _this.gridApi.expandAll(); }\n                };\n            case 'contractAll':\n                return {\n                    name: localeTextFunc('collapseAll', 'Collapse All'),\n                    action: function () { return _this.gridApi.collapseAll(); }\n                };\n            case 'copy':\n                return {\n                    name: localeTextFunc('copy', 'Copy'),\n                    shortcut: localeTextFunc('ctrlC', 'Ctrl+C'),\n                    icon: ag_grid_community_1._.createIconNoSpan('clipboardCopy', this.gridOptionsWrapper, null),\n                    action: function () { return _this.clipboardService.copyToClipboard(false); }\n                };\n            case 'copyWithHeaders':\n                return {\n                    name: localeTextFunc('copyWithHeaders', 'Copy with Headers'),\n                    // shortcut: localeTextFunc('ctrlC','Ctrl+C'),\n                    icon: ag_grid_community_1._.createIconNoSpan('clipboardCopy', this.gridOptionsWrapper, null),\n                    action: function () { return _this.clipboardService.copyToClipboard(true); }\n                };\n            case 'paste':\n                return {\n                    name: localeTextFunc('paste', 'Paste'),\n                    shortcut: localeTextFunc('ctrlV', 'Ctrl+V'),\n                    disabled: true,\n                    icon: ag_grid_community_1._.createIconNoSpan('clipboardPaste', this.gridOptionsWrapper, null),\n                    action: function () { return _this.clipboardService.pasteFromClipboard(); }\n                };\n            case 'export':\n                var exportSubMenuItems = [];\n                if (!this.gridOptionsWrapper.isSuppressCsvExport()) {\n                    exportSubMenuItems.push('csvExport');\n                }\n                if (!this.gridOptionsWrapper.isSuppressExcelExport()) {\n                    exportSubMenuItems.push('excelExport');\n                    exportSubMenuItems.push('excelXmlExport');\n                }\n                return {\n                    name: localeTextFunc('export', 'Export'),\n                    subMenu: exportSubMenuItems,\n                    icon: ag_grid_community_1._.createIconNoSpan('save', this.gridOptionsWrapper, null),\n                };\n            case 'csvExport':\n                return {\n                    name: localeTextFunc('csvExport', 'CSV Export'),\n                    action: function () { return _this.gridApi.exportDataAsCsv({}); }\n                };\n            case 'excelExport':\n                return {\n                    name: localeTextFunc('excelExport', 'Excel Export (.xlsx)&lrm;'),\n                    action: function () { return _this.gridApi.exportDataAsExcel({\n                        exportMode: 'xlsx'\n                    }); }\n                };\n            case 'excelXmlExport':\n                return {\n                    name: localeTextFunc('excelXmlExport', 'Excel Export (.xml)&lrm;'),\n                    action: function () { return _this.gridApi.exportDataAsExcel({\n                        exportMode: 'xml'\n                    }); }\n                };\n            case 'separator':\n                return 'separator';\n            default:\n                var chartMenuItem = this.getChartItems(key);\n                if (chartMenuItem) {\n                    return chartMenuItem;\n                }\n                else {\n                    console.warn(\"ag-Grid: unknown menu item type \" + key);\n                    return null;\n                }\n        }\n    };\n    MenuItemMapper.prototype.getChartItems = function (key) {\n        var _this = this;\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        var pivotChartMenuItem = function (localeKey, defaultText, chartType) {\n            return {\n                name: localeTextFunc(localeKey, defaultText),\n                action: function () { return _this.chartService.pivotChart(chartType); }\n            };\n        };\n        var rangeChartMenuItem = function (localeKey, defaultText, chartType) {\n            return {\n                name: localeTextFunc(localeKey, defaultText),\n                action: function () { return _this.chartService.chartCurrentRange(chartType); }\n            };\n        };\n        switch (key) {\n            // case 'pivotChartAndPivotMode':\n            //     return {\n            //         name: localeTextFunc('pivotChartAndPivotMode', 'Pivot Chart & Pivot Mode&lrm;'),\n            //         action: () => this.chartService.pivotChart(ChartType.GroupedColumn),\n            //         icon: _.createIconNoSpan('chart', this.gridOptionsWrapper, null)\n            //     };\n            case 'pivotChart':\n                return {\n                    name: localeTextFunc('pivotChart', 'Pivot Chart'),\n                    subMenu: [\n                        'pivotColumnChart',\n                        'pivotBarChart',\n                        'pivotPieChart',\n                        'pivotLineChart',\n                        'pivotXYChart',\n                        'pivotAreaChart'\n                    ],\n                    icon: ag_grid_community_1._.createIconNoSpan('chart', this.gridOptionsWrapper, null),\n                };\n            case 'chartRange':\n                return {\n                    name: localeTextFunc('chartRange', 'Chart Range'),\n                    subMenu: [\n                        'rangeColumnChart',\n                        'rangeBarChart',\n                        'rangePieChart',\n                        'rangeLineChart',\n                        'rangeXYChart',\n                        'rangeAreaChart'\n                    ],\n                    icon: ag_grid_community_1._.createIconNoSpan('chart', this.gridOptionsWrapper, null),\n                };\n            case 'pivotColumnChart':\n                return {\n                    name: localeTextFunc('columnChart', 'Column'),\n                    subMenu: ['pivotGroupedColumn', 'pivotStackedColumn', 'pivotNormalizedColumn']\n                };\n            case 'pivotGroupedColumn':\n                return pivotChartMenuItem('groupedColumn', 'Grouped&lrm;', ag_grid_community_1.ChartType.GroupedColumn);\n            case 'pivotStackedColumn':\n                return pivotChartMenuItem('stackedColumn', 'Stacked&lrm;', ag_grid_community_1.ChartType.StackedColumn);\n            case 'pivotNormalizedColumn':\n                return pivotChartMenuItem('normalizedColumn', '100% Stacked&lrm;', ag_grid_community_1.ChartType.NormalizedColumn);\n            case 'rangeColumnChart':\n                return {\n                    name: localeTextFunc('columnChart', 'Column'),\n                    subMenu: ['rangeGroupedColumn', 'rangeStackedColumn', 'rangeNormalizedColumn']\n                };\n            case 'rangeGroupedColumn':\n                return rangeChartMenuItem('groupedColumn', 'Grouped&lrm;', ag_grid_community_1.ChartType.GroupedColumn);\n            case 'rangeStackedColumn':\n                return rangeChartMenuItem('stackedColumn', 'Stacked&lrm;', ag_grid_community_1.ChartType.StackedColumn);\n            case 'rangeNormalizedColumn':\n                return rangeChartMenuItem('normalizedColumn', '100% Stacked&lrm;', ag_grid_community_1.ChartType.NormalizedColumn);\n            case 'pivotBarChart':\n                return {\n                    name: localeTextFunc('barChart', 'Bar'),\n                    subMenu: ['pivotGroupedBar', 'pivotStackedBar', 'pivotNormalizedBar']\n                };\n            case 'pivotGroupedBar':\n                return pivotChartMenuItem('groupedBar', 'Grouped&lrm;', ag_grid_community_1.ChartType.GroupedBar);\n            case 'pivotStackedBar':\n                return pivotChartMenuItem('stackedBar', 'Stacked&lrm;', ag_grid_community_1.ChartType.StackedBar);\n            case 'pivotNormalizedBar':\n                return pivotChartMenuItem('normalizedBar', '100% Stacked&lrm;', ag_grid_community_1.ChartType.NormalizedBar);\n            case 'rangeBarChart':\n                return {\n                    name: localeTextFunc('barChart', 'Bar'),\n                    subMenu: ['rangeGroupedBar', 'rangeStackedBar', 'rangeNormalizedBar']\n                };\n            case 'rangeGroupedBar':\n                return rangeChartMenuItem('groupedBar', 'Grouped&lrm;', ag_grid_community_1.ChartType.GroupedBar);\n            case 'rangeStackedBar':\n                return rangeChartMenuItem('stackedBar', 'Stacked&lrm;', ag_grid_community_1.ChartType.StackedBar);\n            case 'rangeNormalizedBar':\n                return rangeChartMenuItem('normalizedBar', '100% Stacked&lrm;', ag_grid_community_1.ChartType.NormalizedBar);\n            case 'pivotPieChart':\n                return {\n                    name: localeTextFunc('pieChart', 'Pie'),\n                    subMenu: ['pivotPie', 'pivotDoughnut']\n                };\n            case 'pivotPie':\n                return pivotChartMenuItem('pie', 'Pie&lrm;', ag_grid_community_1.ChartType.Pie);\n            case 'pivotDoughnut':\n                return pivotChartMenuItem('doughnut', 'Doughnut&lrm;', ag_grid_community_1.ChartType.Doughnut);\n            case 'rangePieChart':\n                return {\n                    name: localeTextFunc('pieChart', 'Pie'),\n                    subMenu: ['rangePie', 'rangeDoughnut']\n                };\n            case 'rangePie':\n                return rangeChartMenuItem('pie', 'Pie&lrm;', ag_grid_community_1.ChartType.Pie);\n            case 'rangeDoughnut':\n                return rangeChartMenuItem('doughnut', 'Doughnut&lrm;', ag_grid_community_1.ChartType.Doughnut);\n            case 'pivotLineChart':\n                return pivotChartMenuItem('line', 'Line&lrm;', ag_grid_community_1.ChartType.Line);\n            case 'rangeLineChart':\n                return rangeChartMenuItem('line', 'Line&lrm;', ag_grid_community_1.ChartType.Line);\n            case 'pivotXYChart':\n                return {\n                    name: localeTextFunc('xyChart', 'X Y (Scatter)'),\n                    subMenu: ['pivotScatter', 'pivotBubble']\n                };\n            case 'pivotScatter':\n                return pivotChartMenuItem('scatter', 'Scatter&lrm;', ag_grid_community_1.ChartType.Scatter);\n            case 'pivotBubble':\n                return pivotChartMenuItem('bubble', 'Bubble&lrm;', ag_grid_community_1.ChartType.Bubble);\n            case 'rangeXYChart':\n                return {\n                    name: localeTextFunc('xyChart', 'X Y (Scatter)'),\n                    subMenu: ['rangeScatter', 'rangeBubble']\n                };\n            case 'rangeScatter':\n                return rangeChartMenuItem('scatter', 'Scatter&lrm;', ag_grid_community_1.ChartType.Scatter);\n            case 'rangeBubble':\n                return rangeChartMenuItem('bubble', 'Bubble&lrm;', ag_grid_community_1.ChartType.Bubble);\n            case 'pivotAreaChart':\n                return {\n                    name: localeTextFunc('areaChart', 'Area'),\n                    subMenu: ['pivotArea', 'pivotStackedArea', 'pivotNormalizedArea']\n                };\n            case 'pivotArea':\n                return pivotChartMenuItem('area', 'Area&lrm;', ag_grid_community_1.ChartType.Area);\n            case 'pivotStackedArea':\n                return pivotChartMenuItem('stackedArea', 'Stacked&lrm;', ag_grid_community_1.ChartType.StackedArea);\n            case 'pivotNormalizedArea':\n                return pivotChartMenuItem('normalizedArea', '100% Stacked&lrm;', ag_grid_community_1.ChartType.NormalizedArea);\n            case 'rangeAreaChart':\n                return {\n                    name: localeTextFunc('areaChart', 'Area'),\n                    subMenu: ['rangeArea', 'rangeStackedArea', 'rangeNormalizedArea']\n                };\n            case 'rangeArea':\n                return rangeChartMenuItem('area', 'Area&lrm;', ag_grid_community_1.ChartType.Area);\n            case 'rangeStackedArea':\n                return rangeChartMenuItem('stackedArea', 'Stacked&lrm;', ag_grid_community_1.ChartType.StackedArea);\n            case 'rangeNormalizedArea':\n                return rangeChartMenuItem('normalizedArea', '100% Stacked&lrm;', ag_grid_community_1.ChartType.NormalizedArea);\n            default:\n                return null;\n        }\n    };\n    MenuItemMapper.prototype.createAggregationSubMenu = function (column) {\n        var _this = this;\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        var columnIsAlreadyAggValue = column.isValueActive();\n        var funcNames = this.aggFuncService.getFuncNames(column);\n        var columnToUse;\n        if (column.isPrimary()) {\n            columnToUse = column;\n        }\n        else {\n            var pivotValueColumn = column.getColDef().pivotValueColumn;\n            columnToUse = ag_grid_community_1._.exists(pivotValueColumn) ? pivotValueColumn : undefined;\n        }\n        var result = [];\n        funcNames.forEach(function (funcName) {\n            result.push({\n                name: localeTextFunc(funcName, funcName),\n                action: function () {\n                    _this.columnController.setColumnAggFunc(columnToUse, funcName, \"contextMenu\");\n                    _this.columnController.addValueColumn(columnToUse, \"contextMenu\");\n                },\n                checked: columnIsAlreadyAggValue && columnToUse.getAggFunc() === funcName\n            });\n        });\n        return result;\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], MenuItemMapper.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], MenuItemMapper.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], MenuItemMapper.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('clipboardService'),\n        __metadata(\"design:type\", clipboardService_1.ClipboardService)\n    ], MenuItemMapper.prototype, \"clipboardService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('aggFuncService'),\n        __metadata(\"design:type\", aggFuncService_1.AggFuncService)\n    ], MenuItemMapper.prototype, \"aggFuncService\", void 0);\n    __decorate([\n        ag_grid_community_1.Optional('chartService'),\n        __metadata(\"design:type\", Object)\n    ], MenuItemMapper.prototype, \"chartService\", void 0);\n    MenuItemMapper = __decorate([\n        ag_grid_community_1.Bean('menuItemMapper')\n    ], MenuItemMapper);\n    return MenuItemMapper;\n}());\nexports.MenuItemMapper = MenuItemMapper;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/menu/menuItemMapper.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/menu/menuList.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/menu/menuList.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar menuItemComponent_1 = __webpack_require__(/*! ./menuItemComponent */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/menuItemComponent.js\");\nvar MenuList = /** @class */ (function (_super) {\n    __extends(MenuList, _super);\n    function MenuList() {\n        var _this = _super.call(this, MenuList.TEMPLATE) || this;\n        _this.timerCount = 0;\n        _this.removeChildFuncs = [];\n        return _this;\n    }\n    MenuList.prototype.clearActiveItem = function () {\n        this.removeActiveItem();\n        this.removeChildPopup();\n    };\n    MenuList.prototype.addMenuItems = function (menuItems) {\n        var _this = this;\n        if (!menuItems || ag_grid_community_1._.missing(menuItems)) {\n            return;\n        }\n        menuItems.forEach(function (menuItemOrString) {\n            if (menuItemOrString === 'separator') {\n                _this.addSeparator();\n            }\n            else if (typeof menuItemOrString === 'string') {\n                console.warn(\"ag-Grid: unrecognised menu item \" + menuItemOrString);\n            }\n            else {\n                var menuItem = menuItemOrString;\n                _this.addItem(menuItem);\n            }\n        });\n    };\n    MenuList.prototype.addItem = function (menuItemDef) {\n        var _this = this;\n        var cMenuItem = new menuItemComponent_1.MenuItemComponent(menuItemDef);\n        this.getContext().wireBean(cMenuItem);\n        this.getGui().appendChild(cMenuItem.getGui());\n        this.addDestroyFunc(function () { return cMenuItem.destroy(); });\n        cMenuItem.addEventListener(menuItemComponent_1.MenuItemComponent.EVENT_ITEM_SELECTED, function (event) {\n            if (menuItemDef.subMenu && !menuItemDef.action) {\n                _this.showChildMenu(menuItemDef, cMenuItem, event.mouseEvent);\n            }\n            else {\n                _this.dispatchEvent(event);\n            }\n        });\n        cMenuItem.addGuiEventListener('mouseenter', this.mouseEnterItem.bind(this, menuItemDef, cMenuItem));\n        cMenuItem.addGuiEventListener('mouseleave', function () { return _this.timerCount++; });\n    };\n    MenuList.prototype.mouseEnterItem = function (menuItemParams, menuItem) {\n        if (menuItemParams.disabled) {\n            return;\n        }\n        if (this.activeMenuItemParams !== menuItemParams) {\n            this.removeChildPopup();\n        }\n        this.removeActiveItem();\n        this.activeMenuItemParams = menuItemParams;\n        this.activeMenuItem = menuItem;\n        ag_grid_community_1._.addCssClass(this.activeMenuItem.getGui(), 'ag-menu-option-active');\n        if (menuItemParams.subMenu) {\n            this.addHoverForChildPopup(menuItemParams, menuItem);\n        }\n    };\n    MenuList.prototype.removeActiveItem = function () {\n        if (this.activeMenuItem) {\n            ag_grid_community_1._.removeCssClass(this.activeMenuItem.getGui(), 'ag-menu-option-active');\n            this.activeMenuItem = null;\n            this.activeMenuItemParams = null;\n        }\n    };\n    MenuList.prototype.addHoverForChildPopup = function (menuItemDef, menuItemComp) {\n        var _this = this;\n        var timerCountCopy = this.timerCount;\n        window.setTimeout(function () {\n            var shouldShow = timerCountCopy === _this.timerCount;\n            var showingThisMenu = _this.subMenuParentDef === menuItemDef;\n            if (shouldShow && !showingThisMenu) {\n                _this.showChildMenu(menuItemDef, menuItemComp, null);\n            }\n        }, 300);\n    };\n    MenuList.prototype.addSeparator = function () {\n        this.getGui().appendChild(ag_grid_community_1._.loadTemplate(MenuList.SEPARATOR_TEMPLATE));\n    };\n    MenuList.prototype.showChildMenu = function (menuItemDef, menuItemComp, mouseEvent) {\n        var _this = this;\n        this.removeChildPopup();\n        var childMenu = new MenuList();\n        this.getContext().wireBean(childMenu);\n        childMenu.addMenuItems(menuItemDef.subMenu);\n        var ePopup = ag_grid_community_1._.loadTemplate('<div class=\"ag-menu\"></div>');\n        ePopup.appendChild(childMenu.getGui());\n        var hidePopupFunc = this.popupService.addAsModalPopup(ePopup, true, undefined, mouseEvent);\n        this.popupService.positionPopupForMenu({\n            eventSource: menuItemComp.getGui(),\n            ePopup: ePopup\n        });\n        this.subMenuParentDef = menuItemDef;\n        var selectedListener = function (event) {\n            _this.dispatchEvent(event);\n        };\n        childMenu.addEventListener(menuItemComponent_1.MenuItemComponent.EVENT_ITEM_SELECTED, selectedListener);\n        this.removeChildFuncs.push(function () {\n            childMenu.clearActiveItem();\n            childMenu.destroy();\n            _this.subMenuParentDef = null;\n            childMenu.removeEventListener(menuItemComponent_1.MenuItemComponent.EVENT_ITEM_SELECTED, selectedListener);\n            hidePopupFunc();\n        });\n    };\n    MenuList.prototype.removeChildPopup = function () {\n        this.removeChildFuncs.forEach(function (func) { return func(); });\n        this.removeChildFuncs = [];\n    };\n    MenuList.prototype.destroy = function () {\n        this.removeChildPopup();\n        _super.prototype.destroy.call(this);\n    };\n    // private instance = Math.random();\n    MenuList.TEMPLATE = '<div class=\"ag-menu-list\"></div>';\n    MenuList.SEPARATOR_TEMPLATE = \"<div class=\\\"ag-menu-separator\\\">\\n            <span class=\\\"ag-menu-separator-cell\\\"></span>\\n            <span class=\\\"ag-menu-separator-cell\\\"></span>\\n            <span class=\\\"ag-menu-separator-cell\\\"></span>\\n            <span class=\\\"ag-menu-separator-cell\\\"></span>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.Autowired('popupService'),\n        __metadata(\"design:type\", ag_grid_community_1.PopupService)\n    ], MenuList.prototype, \"popupService\", void 0);\n    return MenuList;\n}(ag_grid_community_1.Component));\nexports.MenuList = MenuList;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/menu/menuList.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/rangeController.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/rangeController.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar RangeController = /** @class */ (function () {\n    function RangeController() {\n        this.cellRanges = [];\n        this.bodyScrollListener = this.onBodyScroll.bind(this);\n        this.dragging = false;\n    }\n    RangeController.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n        this.autoScrollService = new AutoScrollService(this.gridPanel, this.gridOptionsWrapper);\n    };\n    RangeController.prototype.init = function () {\n        this.logger = this.loggerFactory.create('RangeController');\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.removeAllCellRanges.bind(this));\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.removeAllCellRanges.bind(this));\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.removeAllCellRanges.bind(this));\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_COLUMN_GROUP_OPENED, this.refreshLastRangeStart.bind(this));\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_COLUMN_MOVED, this.refreshLastRangeStart.bind(this));\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_COLUMN_PINNED, this.refreshLastRangeStart.bind(this));\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_COLUMN_VISIBLE, this.onColumnVisibleChange.bind(this));\n    };\n    RangeController.prototype.onColumnVisibleChange = function () {\n        var _this = this;\n        // first move start column in last cell range (i.e. series chart range)\n        this.refreshLastRangeStart();\n        // then check if the column visibility has changed in any cell range\n        this.cellRanges.forEach(function (cellRange) {\n            var beforeCols = cellRange.columns;\n            // remove hidden cols from cell range\n            cellRange.columns = cellRange.columns.filter(function (col) { return col.isVisible(); });\n            var colsInRangeChanged = !ag_grid_community_1._.compareArrays(beforeCols, cellRange.columns);\n            if (colsInRangeChanged) {\n                // notify users and other parts of grid (i.e. status panel) that range has changed\n                _this.onRangeChanged({ started: false, finished: true });\n                // notify chart of cell range change\n                var event_1 = {\n                    id: cellRange.id,\n                    type: ag_grid_community_1.Events.EVENT_CHART_RANGE_SELECTION_CHANGED\n                };\n                _this.eventService.dispatchEvent(event_1);\n            }\n        });\n    };\n    RangeController.prototype.refreshLastRangeStart = function () {\n        var lastRange = ag_grid_community_1._.last(this.cellRanges);\n        if (!lastRange) {\n            return;\n        }\n        this.refreshRangeStart(lastRange);\n    };\n    RangeController.prototype.isContiguousRange = function (cellRange) {\n        var rangeColumns = cellRange.columns;\n        if (!rangeColumns.length) {\n            return false;\n        }\n        var allColumns = this.columnController.getAllDisplayedColumns();\n        var allPositions = [];\n        rangeColumns.forEach(function (col) { return allPositions.push(allColumns.indexOf(col)); });\n        allPositions.sort(function (a, b) { return a - b; });\n        return ag_grid_community_1._.last(allPositions) - allPositions[0] + 1 === rangeColumns.length;\n    };\n    RangeController.prototype.getRangeStartRow = function (cellRange) {\n        if (cellRange.startRow && cellRange.endRow) {\n            var startRowIsFirst = this.rowPositionUtils.before(cellRange.startRow, cellRange.endRow);\n            return startRowIsFirst ? cellRange.startRow : cellRange.endRow;\n        }\n        var pinned = (this.pinnedRowModel.getPinnedTopRowCount() > 0) ? ag_grid_community_1.Constants.PINNED_TOP : undefined;\n        return { rowIndex: 0, rowPinned: pinned };\n    };\n    RangeController.prototype.getRangeEndRow = function (cellRange) {\n        if (cellRange.startRow && cellRange.endRow) {\n            var startRowIsFirst = this.rowPositionUtils.before(cellRange.startRow, cellRange.endRow);\n            return startRowIsFirst ? cellRange.endRow : cellRange.startRow;\n        }\n        var pinnedBottomRowCount = this.pinnedRowModel.getPinnedBottomRowCount();\n        var pinnedBottom = pinnedBottomRowCount > 0;\n        if (pinnedBottom) {\n            return {\n                rowIndex: pinnedBottomRowCount - 1,\n                rowPinned: ag_grid_community_1.Constants.PINNED_BOTTOM\n            };\n        }\n        return {\n            rowIndex: this.rowModel.getRowCount() - 1,\n            rowPinned: undefined\n        };\n    };\n    RangeController.prototype.setRangeToCell = function (cell, appendRange) {\n        if (appendRange === void 0) { appendRange = false; }\n        if (!this.gridOptionsWrapper.isEnableRangeSelection()) {\n            return;\n        }\n        var columns = this.calculateColumnsBetween(cell.column, cell.column);\n        if (!columns) {\n            return;\n        }\n        var suppressMultiRangeSelections = this.gridOptionsWrapper.isSuppressMultiRangeSelection();\n        // if not appending, then clear previous range selections\n        if (suppressMultiRangeSelections || !appendRange || ag_grid_community_1._.missing(this.cellRanges)) {\n            this.removeAllCellRanges(true);\n        }\n        var rowForCell = {\n            rowIndex: cell.rowIndex,\n            rowPinned: cell.rowPinned\n        };\n        // if there is already a range for this cell, then we reuse the same range, otherwise the user\n        // can ctrl & click a cell many times and hit ctrl+c, which would result in the cell getting copied\n        // many times to the clipboard.\n        var existingRange;\n        for (var i = 0; i < this.cellRanges.length; i++) {\n            var range = this.cellRanges[i];\n            var matches = \n            // check cols are same\n            (range.columns && range.columns.length === 1 && range.columns[0] === cell.column) &&\n                // check rows are same\n                this.rowPositionUtils.sameRow(rowForCell, range.startRow) &&\n                this.rowPositionUtils.sameRow(rowForCell, range.endRow);\n            if (matches) {\n                existingRange = range;\n                break;\n            }\n        }\n        if (existingRange) {\n            // we need it at the end of the list, as the dragStart picks the last created\n            // range as the start point for the drag\n            var atEndOfList = ag_grid_community_1._.last(this.cellRanges) === existingRange;\n            if (!atEndOfList) {\n                ag_grid_community_1._.removeFromArray(this.cellRanges, existingRange);\n                this.cellRanges.push(existingRange);\n            }\n        }\n        else {\n            var newRange = {\n                startRow: rowForCell,\n                endRow: rowForCell,\n                columns: columns,\n                startColumn: cell.column\n            };\n            this.cellRanges.push(newRange);\n        }\n        this.newestRangeStartCell = cell;\n        this.onDragStop();\n        this.onRangeChanged({ started: false, finished: true });\n    };\n    RangeController.prototype.extendLatestRangeToCell = function (cellPosition) {\n        if (this.isEmpty() || !this.newestRangeStartCell) {\n            return;\n        }\n        var cellRange = ag_grid_community_1._.last(this.cellRanges);\n        this.updateRangeEnd({\n            cellRange: cellRange,\n            cellPosition: cellPosition\n        });\n    };\n    RangeController.prototype.updateRangeEnd = function (params) {\n        var cellRange = params.cellRange, cellPosition = params.cellPosition;\n        var beforeCols = cellRange.columns.slice();\n        var beforeEndRow = ag_grid_community_1._.cloneObject(cellRange.endRow);\n        var endColumn = cellPosition.column;\n        var colsToAdd = this.calculateColumnsBetween(cellRange.startColumn, endColumn);\n        if (!colsToAdd) {\n            return;\n        }\n        cellRange.columns = colsToAdd;\n        cellRange.endRow = { rowIndex: cellPosition.rowIndex, rowPinned: cellPosition.rowPinned };\n        this.onRangeChanged({ started: false, finished: true });\n        var colsChanged = !ag_grid_community_1._.compareArrays(beforeCols, cellRange.columns);\n        var endRowChanged = JSON.stringify(beforeEndRow) !== JSON.stringify(cellRange.endRow);\n        if (colsChanged || endRowChanged) {\n            // Note that we are raising a new event as the Chart shouldn't be notified when other ranges are changed\n            // or when the chart setCellRanges when the chart gains focus!\n            var event_2 = {\n                id: cellRange.id,\n                type: ag_grid_community_1.Events.EVENT_CHART_RANGE_SELECTION_CHANGED\n            };\n            this.eventService.dispatchEvent(event_2);\n        }\n    };\n    RangeController.prototype.refreshRangeStart = function (cellRange) {\n        var startColumn = cellRange.startColumn, columns = cellRange.columns;\n        var moveColInCellRange = function (colToMove, moveToFront) {\n            var otherCols = cellRange.columns.filter(function (col) { return col !== colToMove; });\n            if (colToMove) {\n                cellRange.startColumn = colToMove;\n                cellRange.columns = moveToFront ? [colToMove].concat(otherCols) : otherCols.concat([colToMove]);\n            }\n            else {\n                cellRange.columns = otherCols;\n            }\n        };\n        var _a = this.getRangeEdgeColumns(cellRange), left = _a.left, right = _a.right;\n        var shouldMoveLeftCol = startColumn === columns[0] && startColumn !== left;\n        if (shouldMoveLeftCol) {\n            moveColInCellRange(left, true);\n            return;\n        }\n        var shouldMoveRightCol = startColumn === ag_grid_community_1._.last(columns) && startColumn === right;\n        if (shouldMoveRightCol) {\n            moveColInCellRange(right, false);\n            return;\n        }\n    };\n    RangeController.prototype.getRangeEdgeColumns = function (cellRange) {\n        var allColumns = this.columnController.getAllDisplayedColumns();\n        var allIndices = [];\n        for (var _i = 0, _a = cellRange.columns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            var idx = allColumns.indexOf(column);\n            if (idx > -1) {\n                allIndices.push(idx);\n            }\n        }\n        allIndices.sort(function (a, b) { return a - b; });\n        return {\n            left: allColumns[allIndices[0]],\n            right: allColumns[ag_grid_community_1._.last(allIndices)]\n        };\n    };\n    // returns true if successful, false if not successful\n    RangeController.prototype.extendLatestRangeInDirection = function (key) {\n        if (this.isEmpty() || !this.newestRangeStartCell) {\n            return;\n        }\n        var lastRange = ag_grid_community_1._.last(this.cellRanges);\n        var startCell = this.newestRangeStartCell;\n        var firstCol = lastRange.columns[0];\n        var lastCol = ag_grid_community_1._.last(lastRange.columns);\n        // find the cell that is at the furthest away corner from the starting cell\n        var endCellIndex = lastRange.endRow.rowIndex;\n        var endCellFloating = lastRange.endRow.rowPinned;\n        var endCellColumn = startCell.column === firstCol ? lastCol : firstCol;\n        var endCell = { column: endCellColumn, rowIndex: endCellIndex, rowPinned: endCellFloating };\n        var newEndCell = this.cellNavigationService.getNextCellToFocus(key, endCell);\n        // if user is at end of grid, so no cell to extend to, we return false\n        if (!newEndCell) {\n            return;\n        }\n        this.setCellRange({\n            rowStartIndex: startCell.rowIndex,\n            rowStartPinned: startCell.rowPinned,\n            rowEndIndex: newEndCell.rowIndex,\n            rowEndPinned: newEndCell.rowPinned,\n            columnStart: startCell.column,\n            columnEnd: newEndCell.column\n        });\n        return newEndCell;\n    };\n    RangeController.prototype.setCellRange = function (params) {\n        if (!this.gridOptionsWrapper.isEnableRangeSelection()) {\n            return;\n        }\n        this.removeAllCellRanges(true);\n        this.addCellRange(params);\n    };\n    RangeController.prototype.setCellRanges = function (cellRanges) {\n        var _this = this;\n        this.removeAllCellRanges(true);\n        cellRanges.forEach(function (newRange) {\n            if (newRange.columns && newRange.startRow) {\n                _this.newestRangeStartCell = {\n                    rowIndex: newRange.startRow.rowIndex,\n                    rowPinned: newRange.startRow.rowPinned,\n                    column: newRange.columns[0]\n                };\n            }\n            _this.cellRanges.push(newRange);\n        });\n        this.onRangeChanged({ started: false, finished: true });\n    };\n    RangeController.prototype.createCellRangeFromCellRangeParams = function (params) {\n        var _this = this;\n        var columns;\n        if (params.columns) {\n            columns = [];\n            params.columns.forEach(function (key) {\n                var col = _this.columnController.getColumnWithValidation(key);\n                if (col) {\n                    columns.push(col);\n                }\n            });\n        }\n        else {\n            var columnStart = this.columnController.getColumnWithValidation(params.columnStart);\n            var columnEnd = this.columnController.getColumnWithValidation(params.columnEnd);\n            if (!columnStart || !columnEnd) {\n                return;\n            }\n            columns = this.calculateColumnsBetween(columnStart, columnEnd);\n        }\n        if (!columns) {\n            return;\n        }\n        var startRow = undefined;\n        if (params.rowStartIndex != null) {\n            startRow = {\n                rowIndex: params.rowStartIndex,\n                rowPinned: params.rowStartPinned\n            };\n        }\n        var endRow = undefined;\n        if (params.rowEndIndex != null) {\n            endRow = {\n                rowIndex: params.rowEndIndex,\n                rowPinned: params.rowEndPinned\n            };\n        }\n        var newRange = {\n            startRow: startRow,\n            endRow: endRow,\n            columns: columns,\n            startColumn: columns[0]\n        };\n        return newRange;\n    };\n    RangeController.prototype.addCellRange = function (params) {\n        if (!this.gridOptionsWrapper.isEnableRangeSelection()) {\n            return;\n        }\n        var newRange = this.createCellRangeFromCellRangeParams(params);\n        if (newRange) {\n            this.cellRanges.push(newRange);\n            this.onRangeChanged({ started: false, finished: true });\n        }\n    };\n    RangeController.prototype.getCellRanges = function () {\n        return this.cellRanges;\n    };\n    RangeController.prototype.isEmpty = function () {\n        return this.cellRanges.length === 0;\n    };\n    RangeController.prototype.isMoreThanOneCell = function () {\n        if (this.cellRanges.length === 0) {\n            // no ranges, so not more than one cell\n            return false;\n        }\n        else if (this.cellRanges.length > 1) {\n            // many ranges, so more than one cell\n            return true;\n        }\n        // only one range, return true if range has more than one\n        var range = this.cellRanges[0];\n        var startRow = this.getRangeStartRow(range);\n        var endRow = this.getRangeEndRow(range);\n        var moreThanOneCell = startRow.rowPinned !== endRow.rowPinned ||\n            startRow.rowIndex !== endRow.rowIndex ||\n            range.columns.length !== 1;\n        return moreThanOneCell;\n    };\n    RangeController.prototype.removeAllCellRanges = function (silent) {\n        if (this.isEmpty()) {\n            return;\n        }\n        this.onDragStop();\n        this.cellRanges.length = 0;\n        if (!silent) {\n            this.onRangeChanged({ started: false, finished: true });\n        }\n    };\n    // as the user is dragging outside of the panel, the div starts to scroll, which in turn\n    // means we are selection more (or less) cells, but the mouse isn't moving, so we recalculate\n    // the selection my mimicking a new mouse event\n    RangeController.prototype.onBodyScroll = function () {\n        this.onDragging(this.lastMouseEvent);\n    };\n    RangeController.prototype.isCellInAnyRange = function (cell) {\n        return this.getCellRangeCount(cell) > 0;\n    };\n    RangeController.prototype.isCellInSpecificRange = function (cell, range) {\n        var columnInRange = range.columns !== null && range.columns.indexOf(cell.column) >= 0;\n        var rowInRange = this.isRowInRange(cell.rowIndex, cell.rowPinned, range);\n        return columnInRange && rowInRange;\n    };\n    // returns the number of ranges this cell is in\n    RangeController.prototype.getCellRangeCount = function (cell) {\n        var _this = this;\n        if (this.isEmpty()) {\n            return 0;\n        }\n        var matchingCount = 0;\n        this.cellRanges.forEach(function (cellRange) {\n            if (_this.isCellInSpecificRange(cell, cellRange)) {\n                matchingCount++;\n            }\n        });\n        return matchingCount;\n    };\n    RangeController.prototype.isRowInRange = function (rowIndex, floating, cellRange) {\n        var firstRow = this.getRangeStartRow(cellRange);\n        var lastRow = this.getRangeEndRow(cellRange);\n        var thisRow = { rowIndex: rowIndex, rowPinned: floating };\n        // compare rowPinned with == instead of === because it can be `null` or `undefined`\n        var equalsFirstRow = thisRow.rowIndex === firstRow.rowIndex && thisRow.rowPinned == firstRow.rowPinned;\n        var equalsLastRow = thisRow.rowIndex === lastRow.rowIndex && thisRow.rowPinned == lastRow.rowPinned;\n        if (equalsFirstRow || equalsLastRow) {\n            return true;\n        }\n        var afterFirstRow = !this.rowPositionUtils.before(thisRow, firstRow);\n        var beforeLastRow = this.rowPositionUtils.before(thisRow, lastRow);\n        return afterFirstRow && beforeLastRow;\n    };\n    RangeController.prototype.getDraggingRange = function () {\n        return this.draggingRange;\n    };\n    RangeController.prototype.onDragStart = function (mouseEvent) {\n        if (!this.gridOptionsWrapper.isEnableRangeSelection()) {\n            return;\n        }\n        var ctrlKey = mouseEvent.ctrlKey, metaKey = mouseEvent.metaKey, shiftKey = mouseEvent.shiftKey;\n        // ctrlKey for windows, metaKey for Apple\n        var multiKeyPressed = ctrlKey || metaKey;\n        var allowMulti = !this.gridOptionsWrapper.isSuppressMultiRangeSelection();\n        var multiSelectKeyPressed = allowMulti ? multiKeyPressed : false;\n        var mouseCell = this.mouseEventService.getCellPositionForEvent(mouseEvent);\n        if (ag_grid_community_1._.missing(mouseCell)) {\n            // if drag wasn't on cell, then do nothing, including do not set dragging=true,\n            // (which them means onDragging and onDragStop do nothing)\n            return;\n        }\n        if (!multiSelectKeyPressed && (!shiftKey || ag_grid_community_1._.exists(ag_grid_community_1._.last(this.cellRanges).type))) {\n            this.removeAllCellRanges(true);\n        }\n        this.dragging = true;\n        this.draggingCell = mouseCell;\n        this.lastMouseEvent = mouseEvent;\n        if (!shiftKey) {\n            this.newestRangeStartCell = mouseCell;\n        }\n        // if we didn't clear the ranges, then dragging means the user clicked, and when the\n        // user clicks it means a range of one cell was created. we need to extend this range\n        // rather than creating another range. otherwise we end up with two distinct ranges\n        // from a drag operation (one from click, and one from drag).\n        if (this.cellRanges.length > 0) {\n            this.draggingRange = ag_grid_community_1._.last(this.cellRanges);\n        }\n        else {\n            var mouseRowPosition = {\n                rowIndex: mouseCell.rowIndex,\n                rowPinned: mouseCell.rowPinned\n            };\n            this.draggingRange = {\n                startRow: mouseRowPosition,\n                endRow: mouseRowPosition,\n                columns: [mouseCell.column],\n                startColumn: this.newestRangeStartCell.column\n            };\n            this.cellRanges.push(this.draggingRange);\n        }\n        this.gridPanel.addScrollEventListener(this.bodyScrollListener);\n        this.onRangeChanged({ started: true, finished: false });\n    };\n    RangeController.prototype.onDragging = function (mouseEvent) {\n        if (!this.dragging || !mouseEvent) {\n            return;\n        }\n        this.lastMouseEvent = mouseEvent;\n        var cellPosition = this.mouseEventService.getCellPositionForEvent(mouseEvent);\n        var mouseAndStartInPinnedTop = cellPosition && cellPosition.rowPinned === 'top' && this.newestRangeStartCell.rowPinned === 'top';\n        var mouseAndStartInPinnedBottom = cellPosition && cellPosition.rowPinned === 'bottom' && this.newestRangeStartCell.rowPinned === 'bottom';\n        var skipVerticalScroll = mouseAndStartInPinnedTop || mouseAndStartInPinnedBottom;\n        this.autoScrollService.check(mouseEvent, skipVerticalScroll);\n        if (!cellPosition ||\n            !this.draggingCell ||\n            this.cellPositionUtils.equals(this.draggingCell, cellPosition)) {\n            return;\n        }\n        var columns = this.calculateColumnsBetween(this.newestRangeStartCell.column, cellPosition.column);\n        if (!columns) {\n            return;\n        }\n        this.draggingCell = cellPosition;\n        this.draggingRange.endRow = {\n            rowIndex: cellPosition.rowIndex,\n            rowPinned: cellPosition.rowPinned\n        };\n        this.draggingRange.columns = columns;\n        this.onRangeChanged({ started: false, finished: false });\n    };\n    RangeController.prototype.onDragStop = function () {\n        if (!this.dragging) {\n            return;\n        }\n        this.autoScrollService.ensureCleared();\n        this.gridPanel.removeScrollEventListener(this.bodyScrollListener);\n        this.lastMouseEvent = null;\n        this.dragging = false;\n        this.draggingRange = undefined;\n        this.draggingCell = undefined;\n        this.onRangeChanged({ started: false, finished: true });\n    };\n    RangeController.prototype.onRangeChanged = function (params) {\n        var started = params.started, finished = params.finished;\n        this.dispatchChangedEvent(started, finished);\n    };\n    RangeController.prototype.dispatchChangedEvent = function (started, finished) {\n        var event = {\n            type: ag_grid_community_1.Events.EVENT_RANGE_SELECTION_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            started: started,\n            finished: finished\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    RangeController.prototype.calculateColumnsBetween = function (columnFrom, columnTo) {\n        var allColumns = this.columnController.getAllDisplayedColumns();\n        var isSameColumn = columnFrom === columnTo;\n        var fromIndex = allColumns.indexOf(columnFrom);\n        var toIndex = isSameColumn ? fromIndex : allColumns.indexOf(columnTo);\n        if (fromIndex < 0) {\n            console.warn('ag-Grid: column ' + columnFrom.getId() + ' is not visible');\n            return undefined;\n        }\n        if (toIndex < 0) {\n            console.warn('ag-Grid: column ' + columnTo.getId() + ' is not visible');\n            return undefined;\n        }\n        if (isSameColumn) {\n            return [columnFrom];\n        }\n        var firstIndex = Math.min(fromIndex, toIndex);\n        var lastIndex = firstIndex === fromIndex ? toIndex : fromIndex;\n        var columns = [];\n        for (var i = firstIndex; i <= lastIndex; i++) {\n            columns.push(allColumns[i]);\n        }\n        return columns;\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('loggerFactory'),\n        __metadata(\"design:type\", ag_grid_community_1.LoggerFactory)\n    ], RangeController.prototype, \"loggerFactory\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], RangeController.prototype, \"rowModel\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], RangeController.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], RangeController.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('mouseEventService'),\n        __metadata(\"design:type\", ag_grid_community_1.MouseEventService)\n    ], RangeController.prototype, \"mouseEventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], RangeController.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnApi'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnApi)\n    ], RangeController.prototype, \"columnApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], RangeController.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('cellNavigationService'),\n        __metadata(\"design:type\", ag_grid_community_1.CellNavigationService)\n    ], RangeController.prototype, \"cellNavigationService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"pinnedRowModel\"),\n        __metadata(\"design:type\", ag_grid_community_1.PinnedRowModel)\n    ], RangeController.prototype, \"pinnedRowModel\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowPositionUtils'),\n        __metadata(\"design:type\", ag_grid_community_1.RowPositionUtils)\n    ], RangeController.prototype, \"rowPositionUtils\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('cellPositionUtils'),\n        __metadata(\"design:type\", ag_grid_community_1.CellPositionUtils)\n    ], RangeController.prototype, \"cellPositionUtils\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], RangeController.prototype, \"init\", null);\n    RangeController = __decorate([\n        ag_grid_community_1.Bean('rangeController')\n    ], RangeController);\n    return RangeController;\n}());\nexports.RangeController = RangeController;\nvar AutoScrollService = /** @class */ (function () {\n    function AutoScrollService(gridPanel, gridOptionsWrapper) {\n        this.tickingInterval = null;\n        this.gridPanel = gridPanel;\n        this.gridOptionsWrapper = gridOptionsWrapper;\n    }\n    AutoScrollService.prototype.check = function (mouseEvent, skipVerticalScroll) {\n        if (skipVerticalScroll === void 0) { skipVerticalScroll = false; }\n        var rect = this.gridPanel.getBodyClientRect();\n        skipVerticalScroll = skipVerticalScroll || this.gridOptionsWrapper.getDomLayout() !== ag_grid_community_1.Constants.DOM_LAYOUT_NORMAL;\n        // we don't do ticking if grid is auto height unless we have a horizontal scroller\n        if (skipVerticalScroll && !this.gridPanel.isHorizontalScrollShowing()) {\n            return;\n        }\n        this.tickLeft = mouseEvent.clientX < (rect.left + 20);\n        this.tickRight = mouseEvent.clientX > (rect.right - 20);\n        this.tickUp = mouseEvent.clientY < (rect.top + 20) && !skipVerticalScroll;\n        this.tickDown = mouseEvent.clientY > (rect.bottom - 20) && !skipVerticalScroll;\n        if (this.tickLeft || this.tickRight || this.tickUp || this.tickDown) {\n            this.ensureTickingStarted();\n        }\n        else {\n            this.ensureCleared();\n        }\n    };\n    AutoScrollService.prototype.ensureTickingStarted = function () {\n        if (this.tickingInterval === null) {\n            this.tickingInterval = window.setInterval(this.doTick.bind(this), 100);\n            this.tickCount = 0;\n        }\n    };\n    AutoScrollService.prototype.doTick = function () {\n        this.tickCount++;\n        var vScrollPosition = this.gridPanel.getVScrollPosition();\n        var hScrollPosition = this.gridPanel.getHScrollPosition();\n        var tickAmount;\n        tickAmount = this.tickCount > 20 ? 200 : (this.tickCount > 10 ? 80 : 40);\n        if (this.tickUp) {\n            this.gridPanel.setVerticalScrollPosition(vScrollPosition.top - tickAmount);\n        }\n        if (this.tickDown) {\n            this.gridPanel.setVerticalScrollPosition(vScrollPosition.top + tickAmount);\n        }\n        if (this.tickLeft) {\n            this.gridPanel.setHorizontalScrollPosition(hScrollPosition.left - tickAmount);\n        }\n        if (this.tickRight) {\n            this.gridPanel.setHorizontalScrollPosition(hScrollPosition.left + tickAmount);\n        }\n    };\n    AutoScrollService.prototype.ensureCleared = function () {\n        if (this.tickingInterval) {\n            window.clearInterval(this.tickingInterval);\n            this.tickingInterval = null;\n        }\n    };\n    return AutoScrollService;\n}());\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/rangeController.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/rendering/detail/detailCellRenderer.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/rendering/detail/detailCellRenderer.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar DetailCellRenderer = /** @class */ (function (_super) {\n    __extends(DetailCellRenderer, _super);\n    function DetailCellRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.needRefresh = false;\n        return _this;\n    }\n    DetailCellRenderer.prototype.refresh = function () {\n        // if we return true, it means we pretend to the grid\n        // that we have refreshed, so refresh will never happen.\n        if (this.suppressRefresh) {\n            return true;\n        }\n        // otherwise we only refresh if the data has changed in the node\n        // since the last time. this happens when user updates data using transaction.\n        var res = !this.needRefresh;\n        this.needRefresh = false;\n        return res;\n    };\n    DetailCellRenderer.prototype.init = function (params) {\n        var _this = this;\n        this.rowId = params.node.id;\n        this.masterGridApi = params.api;\n        this.suppressRefresh = params.suppressRefresh;\n        this.selectAndSetTemplate(params);\n        if (ag_grid_community_1._.exists(this.eDetailGrid)) {\n            this.addThemeToDetailGrid();\n            this.createDetailsGrid(params);\n            this.registerDetailWithMaster(params.node);\n            this.loadRowData(params);\n            window.setTimeout(function () {\n                // ensure detail grid api still exists (grid may be destroyed when async call tries to set data)\n                if (_this.detailGridOptions.api) {\n                    _this.detailGridOptions.api.doLayout();\n                }\n            }, 0);\n        }\n        else {\n            console.warn('ag-Grid: reference to eDetailGrid was missing from the details template. ' +\n                'Please add ref=\"eDetailGrid\" to the template.');\n        }\n        this.addDestroyableEventListener(params.node.parent, ag_grid_community_1.RowNode.EVENT_DATA_CHANGED, function () {\n            _this.needRefresh = true;\n        });\n    };\n    DetailCellRenderer.prototype.addThemeToDetailGrid = function () {\n        // this is needed by environment service of the child grid, the class needs to be on\n        // the grid div itself - the browser's CSS on the other hand just inherits from the parent grid theme.\n        var theme = this.environment.getTheme().theme;\n        if (theme) {\n            ag_grid_community_1._.addCssClass(this.eDetailGrid, theme);\n        }\n    };\n    DetailCellRenderer.prototype.registerDetailWithMaster = function (rowNode) {\n        var _this = this;\n        var gridInfo = {\n            id: this.rowId,\n            api: this.detailGridOptions.api,\n            columnApi: this.detailGridOptions.columnApi\n        };\n        // register with api\n        this.masterGridApi.addDetailGridInfo(this.rowId, gridInfo);\n        // register with node\n        rowNode.detailGridInfo = gridInfo;\n        this.addDestroyFunc(function () {\n            _this.masterGridApi.removeDetailGridInfo(_this.rowId); // unregister from api\n            rowNode.detailGridInfo = null; // unregister from node\n        });\n    };\n    DetailCellRenderer.prototype.selectAndSetTemplate = function (params) {\n        var paramsAny = params;\n        if (ag_grid_community_1._.missing(paramsAny.template)) {\n            // use default template\n            this.setTemplate(DetailCellRenderer.TEMPLATE);\n        }\n        else {\n            // use user provided template\n            if (typeof paramsAny.template === 'string') {\n                this.setTemplate(paramsAny.template);\n            }\n            else if (typeof paramsAny.template === 'function') {\n                var templateFunc = paramsAny.template;\n                var template = templateFunc(params);\n                this.setTemplate(template);\n            }\n            else {\n                console.warn('ag-Grid: detailCellRendererParams.template should be function or string');\n                this.setTemplate(DetailCellRenderer.TEMPLATE);\n            }\n        }\n    };\n    DetailCellRenderer.prototype.createDetailsGrid = function (params) {\n        // we clone the detail grid options, as otherwise it would be shared\n        // across many instances, and that would be a problem because we set\n        // api and columnApi into gridOptions\n        var _this = this;\n        var gridOptions = params.detailGridOptions;\n        if (ag_grid_community_1._.missing(gridOptions)) {\n            console.warn('ag-Grid: could not find detail grid options for master detail, ' +\n                'please set gridOptions.detailCellRendererParams.detailGridOptions');\n        }\n        // IMPORTANT - gridOptions must be cloned\n        this.detailGridOptions = ag_grid_community_1._.cloneObject(gridOptions);\n        // tslint:disable-next-line\n        new ag_grid_community_1.Grid(this.eDetailGrid, this.detailGridOptions, {\n            $scope: params.$scope,\n            $compile: params.$compile,\n            seedBeanInstances: {\n                // a temporary fix for AG-1574\n                // AG-1715 raised to do a wider ranging refactor to improve this\n                agGridReact: params.agGridReact,\n                // AG-1716 - directly related to AG-1574 and AG-1715\n                frameworkComponentWrapper: params.frameworkComponentWrapper\n            }\n        });\n        this.addDestroyFunc(function () {\n            if (_this.detailGridOptions.api) {\n                _this.detailGridOptions.api.destroy();\n            }\n        });\n    };\n    DetailCellRenderer.prototype.loadRowData = function (params) {\n        var userFunc = params.getDetailRowData;\n        if (!userFunc) {\n            console.warn('ag-Grid: could not find getDetailRowData for master / detail, ' +\n                'please set gridOptions.detailCellRendererParams.getDetailRowData');\n            return;\n        }\n        var funcParams = {\n            node: params.node,\n            data: params.data,\n            successCallback: this.setRowData.bind(this)\n        };\n        userFunc(funcParams);\n    };\n    DetailCellRenderer.prototype.setRowData = function (rowData) {\n        // ensure detail grid api still exists (grid may be destroyed when async call tries to set data)\n        if (this.detailGridOptions.api) {\n            this.detailGridOptions.api.setRowData(rowData);\n        }\n    };\n    DetailCellRenderer.TEMPLATE = \"<div class=\\\"ag-details-row\\\">\\n            <div ref=\\\"eDetailGrid\\\" class=\\\"ag-details-grid\\\"/>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.RefSelector('eDetailGrid'),\n        __metadata(\"design:type\", HTMLElement)\n    ], DetailCellRenderer.prototype, \"eDetailGrid\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], DetailCellRenderer.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('environment'),\n        __metadata(\"design:type\", ag_grid_community_1.Environment)\n    ], DetailCellRenderer.prototype, \"environment\", void 0);\n    return DetailCellRenderer;\n}(ag_grid_community_1.Component));\nexports.DetailCellRenderer = DetailCellRenderer;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/rendering/detail/detailCellRenderer.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/rendering/richSelect/richSelectCellEditor.js":
/*!***************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/rendering/richSelect/richSelectCellEditor.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar richSelectRow_1 = __webpack_require__(/*! ./richSelectRow */ \"../../node_modules/ag-grid-enterprise/dist/lib/rendering/richSelect/richSelectRow.js\");\nvar virtualList_1 = __webpack_require__(/*! ../virtualList */ \"../../node_modules/ag-grid-enterprise/dist/lib/rendering/virtualList.js\");\nvar RichSelectCellEditor = /** @class */ (function (_super) {\n    __extends(RichSelectCellEditor, _super);\n    function RichSelectCellEditor() {\n        var _this = _super.call(this, RichSelectCellEditor.TEMPLATE) || this;\n        _this.selectionConfirmed = false;\n        _this.searchString = '';\n        return _this;\n    }\n    RichSelectCellEditor.prototype.init = function (params) {\n        this.params = params;\n        this.selectedValue = params.value;\n        this.originalSelectedValue = params.value;\n        this.focusAfterAttached = params.cellStartedEdit;\n        this.eValue.appendChild(ag_grid_community_1._.createIconNoSpan('smallDown', this.gridOptionsWrapper));\n        this.virtualList = new virtualList_1.VirtualList();\n        this.getContext().wireBean(this.virtualList);\n        this.virtualList.setComponentCreator(this.createRowComponent.bind(this));\n        this.eList.appendChild(this.virtualList.getGui());\n        if (ag_grid_community_1._.exists(this.params.cellHeight)) {\n            this.virtualList.setRowHeight(this.params.cellHeight);\n        }\n        this.renderSelectedValue();\n        if (ag_grid_community_1._.missing(params.values)) {\n            console.warn('ag-Grid: richSelectCellEditor requires values for it to work');\n            return;\n        }\n        var values = params.values;\n        this.virtualList.setModel({\n            getRowCount: function () { return values.length; },\n            getRow: function (index) { return values[index]; }\n        });\n        this.addGuiEventListener('keydown', this.onKeyDown.bind(this));\n        var virtualListGui = this.virtualList.getGui();\n        this.addDestroyableEventListener(virtualListGui, 'click', this.onClick.bind(this));\n        this.addDestroyableEventListener(virtualListGui, 'mousemove', this.onMouseMove.bind(this));\n        this.clearSearchString = ag_grid_community_1._.debounce(this.clearSearchString, 300);\n        if (ag_grid_community_1._.exists(params.charPress)) {\n            this.searchText(params.charPress);\n        }\n    };\n    RichSelectCellEditor.prototype.onKeyDown = function (event) {\n        var key = event.which || event.keyCode;\n        switch (key) {\n            case ag_grid_community_1.Constants.KEY_ENTER:\n                this.onEnterKeyDown();\n                break;\n            case ag_grid_community_1.Constants.KEY_DOWN:\n            case ag_grid_community_1.Constants.KEY_UP:\n                this.onNavigationKeyPressed(event, key);\n                break;\n            default:\n                this.searchText(event);\n        }\n    };\n    RichSelectCellEditor.prototype.onEnterKeyDown = function () {\n        this.selectionConfirmed = true;\n        this.params.stopEditing();\n    };\n    RichSelectCellEditor.prototype.onNavigationKeyPressed = function (event, key) {\n        // if we don't stop propagation, then the grids navigation kicks in\n        event.stopPropagation();\n        var oldIndex = this.params.values.indexOf(this.selectedValue);\n        var newIndex = key === ag_grid_community_1.Constants.KEY_UP ? oldIndex - 1 : oldIndex + 1;\n        if (newIndex >= 0 && newIndex < this.params.values.length) {\n            var valueToSelect = this.params.values[newIndex];\n            this.setSelectedValue(valueToSelect);\n        }\n    };\n    RichSelectCellEditor.prototype.searchText = function (key) {\n        if (typeof key !== 'string') {\n            if (!ag_grid_community_1._.isCharacterKey(key)) {\n                return;\n            }\n            key = key.key;\n        }\n        this.searchString += key;\n        this.runSearch();\n        this.clearSearchString();\n    };\n    RichSelectCellEditor.prototype.runSearch = function () {\n        var suggestions = ag_grid_community_1._.fuzzySuggestions(this.searchString, this.params.values, true, true);\n        if (!suggestions.length) {\n            return;\n        }\n        this.setSelectedValue(suggestions[0]);\n    };\n    RichSelectCellEditor.prototype.clearSearchString = function () {\n        this.searchString = '';\n    };\n    RichSelectCellEditor.prototype.renderSelectedValue = function () {\n        var _this = this;\n        var valueFormatted = this.params.formatValue(this.selectedValue);\n        var eValue = this.eValue;\n        var params = {\n            value: this.selectedValue,\n            valueFormatted: valueFormatted,\n            api: this.gridOptionsWrapper.getApi()\n        };\n        var promise = this.userComponentFactory.newCellRenderer(this.params, params);\n        if (promise != null) {\n            ag_grid_community_1._.bindCellRendererToHtmlElement(promise, eValue);\n        }\n        else {\n            eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n        }\n        if (promise) {\n            promise.then(function (renderer) {\n                if (renderer && renderer.destroy) {\n                    _this.addDestroyFunc(function () { return renderer.destroy(); });\n                }\n            });\n        }\n        else {\n            if (ag_grid_community_1._.exists(this.selectedValue)) {\n                eValue.innerHTML = valueFormatted;\n            }\n            else {\n                ag_grid_community_1._.clearElement(eValue);\n            }\n        }\n    };\n    RichSelectCellEditor.prototype.setSelectedValue = function (value) {\n        if (this.selectedValue === value) {\n            return;\n        }\n        var index = this.params.values.indexOf(value);\n        if (index >= 0) {\n            this.selectedValue = value;\n            this.virtualList.ensureIndexVisible(index);\n            this.virtualList.refresh();\n        }\n    };\n    RichSelectCellEditor.prototype.createRowComponent = function (value) {\n        var valueFormatted = this.params.formatValue(value);\n        var row = new richSelectRow_1.RichSelectRow(this.params);\n        this.getContext().wireBean(row);\n        row.setState(value, valueFormatted, value === this.selectedValue);\n        return row;\n    };\n    RichSelectCellEditor.prototype.onMouseMove = function (mouseEvent) {\n        var rect = this.virtualList.getGui().getBoundingClientRect();\n        var scrollTop = this.virtualList.getScrollTop();\n        var mouseY = mouseEvent.clientY - rect.top + scrollTop;\n        var row = Math.floor(mouseY / this.virtualList.getRowHeight());\n        var value = this.params.values[row];\n        // not using utils.exist() as want empty string test to pass\n        if (value !== undefined) {\n            this.setSelectedValue(value);\n        }\n    };\n    RichSelectCellEditor.prototype.onClick = function () {\n        this.selectionConfirmed = true;\n        this.params.stopEditing();\n    };\n    // we need to have the gui attached before we can draw the virtual rows, as the\n    // virtual row logic needs info about the gui state\n    RichSelectCellEditor.prototype.afterGuiAttached = function () {\n        var selectedIndex = this.params.values.indexOf(this.selectedValue);\n        // we have to call this here to get the list to have the right height, ie\n        // otherwise it would not have scrolls yet and ensureIndexVisible would do nothing\n        this.virtualList.refresh();\n        if (selectedIndex >= 0) {\n            this.virtualList.ensureIndexVisible(selectedIndex);\n        }\n        // we call refresh again, as the list could of moved, and we need to render the new rows\n        this.virtualList.refresh();\n        if (this.focusAfterAttached) {\n            this.getGui().focus();\n        }\n    };\n    RichSelectCellEditor.prototype.getValue = function () {\n        // NOTE: we don't use valueParser for Set Filter. The user should provide values that are to be\n        // set into the data. valueParser only really makese sense when the user is typing in text (not picking\n        // form a set).\n        return this.selectionConfirmed ? this.selectedValue : this.originalSelectedValue;\n    };\n    // tab index is needed so we can focus, which is needed for keyboard events\n    RichSelectCellEditor.TEMPLATE = \"<div class=\\\"ag-rich-select\\\" tabindex=\\\"0\\\">\\n            <div ref=\\\"eValue\\\" class=\\\"ag-rich-select-value\\\"></div>\\n            <div ref=\\\"eList\\\" class=\\\"ag-rich-select-list\\\"></div>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", ag_grid_community_1.UserComponentFactory)\n    ], RichSelectCellEditor.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], RichSelectCellEditor.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eValue'),\n        __metadata(\"design:type\", HTMLElement)\n    ], RichSelectCellEditor.prototype, \"eValue\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eList'),\n        __metadata(\"design:type\", HTMLElement)\n    ], RichSelectCellEditor.prototype, \"eList\", void 0);\n    return RichSelectCellEditor;\n}(ag_grid_community_1.PopupComponent));\nexports.RichSelectCellEditor = RichSelectCellEditor;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/rendering/richSelect/richSelectCellEditor.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/rendering/richSelect/richSelectRow.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/rendering/richSelect/richSelectRow.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar RichSelectRow = /** @class */ (function (_super) {\n    __extends(RichSelectRow, _super);\n    function RichSelectRow(params) {\n        var _this = _super.call(this, '<div class=\"ag-rich-select-row\"></div>') || this;\n        _this.params = params;\n        return _this;\n    }\n    RichSelectRow.prototype.setState = function (value, valueFormatted, selected) {\n        var rendererSuccessful = this.populateWithRenderer(value, valueFormatted);\n        if (!rendererSuccessful) {\n            this.populateWithoutRenderer(value, valueFormatted);\n        }\n        ag_grid_community_1._.addOrRemoveCssClass(this.getGui(), 'ag-rich-select-row-selected', selected);\n    };\n    RichSelectRow.prototype.populateWithoutRenderer = function (value, valueFormatted) {\n        var valueFormattedExits = valueFormatted !== null && valueFormatted !== undefined;\n        var valueToRender = valueFormattedExits ? valueFormatted : value;\n        if (ag_grid_community_1._.exists(valueToRender) && valueToRender !== '') {\n            // not using innerHTML to prevent injection of HTML\n            // https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML#Security_considerations\n            this.getGui().textContent = valueToRender.toString();\n        }\n        else {\n            // putting in blank, so if missing, at least the user can click on it\n            this.getGui().innerHTML = '&nbsp;';\n        }\n    };\n    RichSelectRow.prototype.populateWithRenderer = function (value, valueFormatted) {\n        var _this = this;\n        // bad coder here - we are not populating all values of the cellRendererParams\n        var params = {\n            value: value,\n            valueFormatted: valueFormatted,\n            api: this.gridOptionsWrapper.getApi()\n        };\n        var cellRendererPromise = this.userComponentFactory.newCellRenderer(this.params, params);\n        if (cellRendererPromise != null) {\n            ag_grid_community_1._.bindCellRendererToHtmlElement(cellRendererPromise, this.getGui());\n        }\n        else {\n            this.getGui().innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n        }\n        if (cellRendererPromise) {\n            cellRendererPromise.then(function (childComponent) {\n                if (childComponent && childComponent.destroy) {\n                    _this.addDestroyFunc(childComponent.destroy.bind(childComponent));\n                }\n            });\n            return true;\n        }\n        return false;\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", ag_grid_community_1.UserComponentFactory)\n    ], RichSelectRow.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], RichSelectRow.prototype, \"gridOptionsWrapper\", void 0);\n    return RichSelectRow;\n}(ag_grid_community_1.Component));\nexports.RichSelectRow = RichSelectRow;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/rendering/richSelect/richSelectRow.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/rendering/virtualList.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/rendering/virtualList.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar VirtualList = /** @class */ (function (_super) {\n    __extends(VirtualList, _super);\n    function VirtualList() {\n        var _this = _super.call(this, undefined) || this;\n        _this.rowsInBodyContainer = {};\n        _this.rowHeight = 20;\n        return _this;\n    }\n    VirtualList.prototype.init = function () {\n        this.setTemplate(VirtualList.TEMPLATE);\n        this.eListContainer = this.queryForHtmlElement(\".ag-virtual-list-container\");\n        this.addScrollListener();\n        var item = document.createElement('div');\n        ag_grid_community_1._.addCssClass(item, 'ag-virtual-list-item');\n        this.rowHeight = this.getItemHeight();\n    };\n    VirtualList.prototype.getItemHeight = function () {\n        return this.gridOptionsWrapper.getVirtualItemHeight();\n    };\n    VirtualList.prototype.ensureIndexVisible = function (index) {\n        var lastRow = this.model.getRowCount();\n        if (typeof index !== 'number' || index < 0 || index >= lastRow) {\n            console.warn('invalid row index for ensureIndexVisible: ' + index);\n            return;\n        }\n        // let nodeAtIndex = this.rowModel.getRow(index);\n        var rowTopPixel = index * this.rowHeight;\n        var rowBottomPixel = rowTopPixel + this.rowHeight;\n        var viewportTopPixel = this.getGui().scrollTop;\n        var viewportHeight = this.getGui().offsetHeight;\n        var viewportBottomPixel = viewportTopPixel + viewportHeight;\n        var viewportScrolledPastRow = viewportTopPixel > rowTopPixel;\n        var viewportScrolledBeforeRow = viewportBottomPixel < rowBottomPixel;\n        if (viewportScrolledPastRow) {\n            // if row is before, scroll up with row at top\n            this.getGui().scrollTop = rowTopPixel;\n        }\n        else if (viewportScrolledBeforeRow) {\n            // if row is below, scroll down with row at bottom\n            var newScrollPosition = rowBottomPixel - viewportHeight;\n            this.getGui().scrollTop = newScrollPosition;\n        }\n    };\n    VirtualList.prototype.setComponentCreator = function (componentCreator) {\n        this.componentCreator = componentCreator;\n    };\n    VirtualList.prototype.getRowHeight = function () {\n        return this.rowHeight;\n    };\n    VirtualList.prototype.getScrollTop = function () {\n        return this.getGui().scrollTop;\n    };\n    VirtualList.prototype.setRowHeight = function (rowHeight) {\n        this.rowHeight = rowHeight;\n        this.refresh();\n    };\n    VirtualList.prototype.refresh = function () {\n        if (ag_grid_community_1._.missing(this.model)) {\n            return;\n        }\n        this.eListContainer.style.height = (this.model.getRowCount() * this.rowHeight) + \"px\";\n        this.clearVirtualRows();\n        this.drawVirtualRows();\n    };\n    VirtualList.prototype.clearVirtualRows = function () {\n        var rowsToRemove = Object.keys(this.rowsInBodyContainer);\n        this.removeVirtualRows(rowsToRemove);\n    };\n    VirtualList.prototype.drawVirtualRows = function () {\n        var topPixel = this.getGui().scrollTop;\n        var bottomPixel = topPixel + this.getGui().offsetHeight;\n        var firstRow = Math.floor(topPixel / this.rowHeight);\n        var lastRow = Math.floor(bottomPixel / this.rowHeight);\n        this.ensureRowsRendered(firstRow, lastRow);\n    };\n    VirtualList.prototype.ensureRowsRendered = function (start, finish) {\n        // at the end, this array will contain the items we need to remove\n        var rowsToRemove = Object.keys(this.rowsInBodyContainer);\n        // add in new rows\n        for (var rowIndex = start; rowIndex <= finish; rowIndex++) {\n            // see if item already there, and if yes, take it out of the 'to remove' array\n            if (rowsToRemove.indexOf(rowIndex.toString()) >= 0) {\n                rowsToRemove.splice(rowsToRemove.indexOf(rowIndex.toString()), 1);\n                continue;\n            }\n            // check this row actually exists (in case overflow buffer window exceeds real data)\n            if (this.model.getRowCount() > rowIndex) {\n                var value = this.model.getRow(rowIndex);\n                this.insertRow(value, rowIndex);\n            }\n        }\n        // at this point, everything in our 'rowsToRemove' . . .\n        this.removeVirtualRows(rowsToRemove);\n    };\n    // takes array of row id's\n    VirtualList.prototype.removeVirtualRows = function (rowsToRemove) {\n        var _this = this;\n        rowsToRemove.forEach(function (index) {\n            var component = _this.rowsInBodyContainer[index];\n            _this.eListContainer.removeChild(component.eDiv);\n            if (component.rowComponent.destroy) {\n                component.rowComponent.destroy();\n            }\n            delete _this.rowsInBodyContainer[index];\n        });\n    };\n    VirtualList.prototype.insertRow = function (value, rowIndex) {\n        var eDiv = document.createElement('div');\n        ag_grid_community_1._.addCssClass(eDiv, 'ag-virtual-list-item');\n        eDiv.style.top = (this.rowHeight * rowIndex) + \"px\";\n        var rowComponent = this.componentCreator(value);\n        eDiv.appendChild(rowComponent.getGui());\n        this.eListContainer.appendChild(eDiv);\n        this.rowsInBodyContainer[rowIndex] = {\n            rowComponent: rowComponent,\n            eDiv: eDiv\n        };\n    };\n    VirtualList.prototype.addScrollListener = function () {\n        var _this = this;\n        this.addGuiEventListener('scroll', function () {\n            _this.drawVirtualRows();\n        });\n    };\n    VirtualList.prototype.setModel = function (model) {\n        this.model = model;\n    };\n    VirtualList.TEMPLATE = \"<div class=\\\"ag-virtual-list-viewport\\\">\\n            <div class=\\\"ag-virtual-list-container\\\"></div>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.Autowired('environment'),\n        __metadata(\"design:type\", ag_grid_community_1.Environment)\n    ], VirtualList.prototype, \"environment\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], VirtualList.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], VirtualList.prototype, \"init\", null);\n    return VirtualList;\n}(ag_grid_community_1.Component));\nexports.VirtualList = VirtualList;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/rendering/virtualList.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/rowModels/serverSide/serverSideBlock.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/rowModels/serverSide/serverSideBlock.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar ServerSideBlock = /** @class */ (function (_super) {\n    __extends(ServerSideBlock, _super);\n    function ServerSideBlock(pageNumber, parentRowNode, params, parentCache) {\n        var _this = _super.call(this, pageNumber, params) || this;\n        _this.params = params;\n        _this.parentRowNode = parentRowNode;\n        _this.parentCache = parentCache;\n        _this.level = parentRowNode.level + 1;\n        _this.groupLevel = params.rowGroupCols ? _this.level < params.rowGroupCols.length : undefined;\n        _this.leafGroup = params.rowGroupCols ? _this.level === params.rowGroupCols.length - 1 : false;\n        return _this;\n    }\n    ServerSideBlock.prototype.init = function () {\n        this.usingTreeData = this.gridOptionsWrapper.isTreeData();\n        this.usingMasterDetail = this.gridOptionsWrapper.isMasterDetail();\n        if (!this.usingTreeData && this.groupLevel) {\n            var groupColVo = this.params.rowGroupCols[this.level];\n            this.groupField = groupColVo.field;\n            this.rowGroupColumn = this.columnController.getRowGroupColumns()[this.level];\n        }\n        this.createNodeIdPrefix();\n        _super.prototype.init.call(this, {\n            context: this.getContext(),\n            rowRenderer: this.rowRenderer\n        });\n    };\n    ServerSideBlock.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('ServerSideBlock');\n    };\n    ServerSideBlock.prototype.createNodeIdPrefix = function () {\n        var parts = [];\n        var rowNode = this.parentRowNode;\n        // pull keys from all parent nodes, but do not include the root node\n        while (rowNode && rowNode.level >= 0) {\n            parts.push(rowNode.key);\n            rowNode = rowNode.parent;\n        }\n        if (parts.length > 0) {\n            this.nodeIdPrefix = parts.reverse().join('-') + '-';\n        }\n    };\n    ServerSideBlock.prototype.createIdForIndex = function (index) {\n        if (ag_grid_community_1._.exists(this.nodeIdPrefix)) {\n            return this.nodeIdPrefix + index.toString();\n        }\n        else {\n            return index.toString();\n        }\n    };\n    ServerSideBlock.prototype.getNodeIdPrefix = function () {\n        return this.nodeIdPrefix;\n    };\n    ServerSideBlock.prototype.getRow = function (displayRowIndex) {\n        var bottomPointer = this.getStartRow();\n        // the end row depends on whether all this block is used or not. if the virtual row count\n        // is before the end, then not all the row is used\n        var virtualRowCount = this.parentCache.getVirtualRowCount();\n        var endRow = this.getEndRow();\n        var actualEnd = (virtualRowCount < endRow) ? virtualRowCount : endRow;\n        var topPointer = actualEnd - 1;\n        if (ag_grid_community_1._.missing(topPointer) || ag_grid_community_1._.missing(bottomPointer)) {\n            console.warn(\"ag-grid: error: topPointer = \" + topPointer + \", bottomPointer = \" + bottomPointer);\n            return null;\n        }\n        while (true) {\n            var midPointer = Math.floor((bottomPointer + topPointer) / 2);\n            var currentRowNode = _super.prototype.getRowUsingLocalIndex.call(this, midPointer);\n            // first check current row for index\n            if (currentRowNode.rowIndex === displayRowIndex) {\n                return currentRowNode;\n            }\n            // then check if current row contains a detail row with the index\n            var expandedMasterRow = currentRowNode.master && currentRowNode.expanded;\n            if (expandedMasterRow && currentRowNode.detailNode.rowIndex === displayRowIndex) {\n                return currentRowNode.detailNode;\n            }\n            // then check if child cache contains index\n            var childrenCache = currentRowNode.childrenCache;\n            if (currentRowNode.expanded && childrenCache && childrenCache.isDisplayIndexInCache(displayRowIndex)) {\n                return childrenCache.getRow(displayRowIndex);\n            }\n            // otherwise adjust pointers to continue searching for index\n            if (currentRowNode.rowIndex < displayRowIndex) {\n                bottomPointer = midPointer + 1;\n            }\n            else if (currentRowNode.rowIndex > displayRowIndex) {\n                topPointer = midPointer - 1;\n            }\n            else {\n                console.warn(\"ag-Grid: error: unable to locate rowIndex = \" + displayRowIndex + \" in cache\");\n                return null;\n            }\n        }\n    };\n    ServerSideBlock.prototype.setDataAndId = function (rowNode, data, index) {\n        var _this = this;\n        rowNode.stub = false;\n        if (ag_grid_community_1._.exists(data)) {\n            // if the user is not providing id's, then we build an id based on the index.\n            // for infinite scrolling, the index is used on it's own. for Server Side Row Model,\n            // we combine the index with the level and group key, so that the id is\n            // unique across the set.\n            //\n            // unique id is needed for selection (so selection can be maintained when\n            // doing server side sorting / filtering) - if user is not providing id's\n            // (and we use the indexes) then selection will not work between sorting &\n            // filtering.\n            //\n            // id's are also used by the row renderer for updating the dom as it identifies\n            // rowNodes by id\n            var idToUse = this.createIdForIndex(index);\n            rowNode.setDataAndId(data, idToUse);\n            rowNode.setRowHeight(this.gridOptionsWrapper.getRowHeightForNode(rowNode).height);\n            if (this.usingTreeData) {\n                var getServerSideGroupKey = this.gridOptionsWrapper.getServerSideGroupKeyFunc();\n                if (ag_grid_community_1._.exists(getServerSideGroupKey) && getServerSideGroupKey) {\n                    rowNode.key = getServerSideGroupKey(rowNode.data);\n                }\n                var isServerSideGroup = this.gridOptionsWrapper.getIsServerSideGroupFunc();\n                if (ag_grid_community_1._.exists(isServerSideGroup) && isServerSideGroup) {\n                    rowNode.group = isServerSideGroup(rowNode.data);\n                }\n            }\n            else if (rowNode.group) {\n                rowNode.key = this.valueService.getValue(this.rowGroupColumn, rowNode);\n                if (rowNode.key === null || rowNode.key === undefined) {\n                    ag_grid_community_1._.doOnce(function () {\n                        console.warn(\"null and undefined values are not allowed for server side row model keys\");\n                        if (_this.rowGroupColumn) {\n                            console.warn(\"column = \" + _this.rowGroupColumn.getId());\n                        }\n                        console.warn(\"data is \", rowNode.data);\n                    }, 'ServerSideBlock-CannotHaveNullOrUndefinedForKey');\n                }\n            }\n            else if (this.usingMasterDetail) {\n                var isRowMasterFunc = this.gridOptionsWrapper.getIsRowMasterFunc();\n                if (ag_grid_community_1._.exists(isRowMasterFunc) && isRowMasterFunc) {\n                    rowNode.master = isRowMasterFunc(rowNode.data);\n                }\n                else {\n                    rowNode.master = true;\n                }\n            }\n        }\n        else {\n            rowNode.setDataAndId(undefined, undefined);\n            rowNode.key = null;\n        }\n        if (this.usingTreeData || this.groupLevel) {\n            this.setGroupDataIntoRowNode(rowNode);\n            this.setChildCountIntoRowNode(rowNode);\n        }\n    };\n    ServerSideBlock.prototype.setChildCountIntoRowNode = function (rowNode) {\n        var getChildCount = this.gridOptionsWrapper.getChildCountFunc();\n        if (getChildCount) {\n            rowNode.allChildrenCount = getChildCount(rowNode.data);\n        }\n    };\n    ServerSideBlock.prototype.setGroupDataIntoRowNode = function (rowNode) {\n        var _this = this;\n        var groupDisplayCols = this.columnController.getGroupDisplayColumns();\n        var usingTreeData = this.gridOptionsWrapper.isTreeData();\n        groupDisplayCols.forEach(function (col) {\n            if (usingTreeData) {\n                if (ag_grid_community_1._.missing(rowNode.groupData)) {\n                    rowNode.groupData = {};\n                }\n                rowNode.groupData[col.getColId()] = rowNode.key;\n            }\n            else if (col.isRowGroupDisplayed(_this.rowGroupColumn.getId())) {\n                var groupValue = _this.valueService.getValue(_this.rowGroupColumn, rowNode);\n                if (ag_grid_community_1._.missing(rowNode.groupData)) {\n                    rowNode.groupData = {};\n                }\n                rowNode.groupData[col.getColId()] = groupValue;\n            }\n        });\n    };\n    ServerSideBlock.prototype.loadFromDatasource = function () {\n        var _this = this;\n        var params = this.createLoadParams();\n        window.setTimeout(function () {\n            if (_this.params.datasource) {\n                _this.params.datasource.getRows(params);\n            }\n        }, 0);\n    };\n    ServerSideBlock.prototype.createBlankRowNode = function (rowIndex) {\n        var rowNode = _super.prototype.createBlankRowNode.call(this, rowIndex);\n        rowNode.group = this.groupLevel;\n        rowNode.leafGroup = this.leafGroup;\n        rowNode.level = this.level;\n        rowNode.uiLevel = this.level;\n        rowNode.parent = this.parentRowNode;\n        // stub gets set to true here, and then false when this rowNode gets it's data\n        rowNode.stub = true;\n        if (rowNode.group) {\n            rowNode.expanded = false;\n            rowNode.field = this.groupField;\n            rowNode.rowGroupColumn = this.rowGroupColumn;\n        }\n        return rowNode;\n    };\n    ServerSideBlock.prototype.createGroupKeys = function (groupNode) {\n        var keys = [];\n        var pointer = groupNode;\n        while (pointer && pointer.level >= 0) {\n            keys.push(pointer.key);\n            pointer = pointer.parent;\n        }\n        keys.reverse();\n        return keys;\n    };\n    ServerSideBlock.prototype.isPixelInRange = function (pixel) {\n        return pixel >= this.blockTop && pixel < (this.blockTop + this.blockHeight);\n    };\n    ServerSideBlock.prototype.getRowBounds = function (index, virtualRowCount) {\n        var start = this.getStartRow();\n        var end = this.getEndRow();\n        var extractRowBounds = function (rowNode) {\n            return {\n                rowHeight: rowNode.rowHeight,\n                rowTop: rowNode.rowTop\n            };\n        };\n        for (var i = start; i <= end; i++) {\n            // the blocks can have extra rows in them, if they are the last block\n            // in the cache and the virtual row count doesn't divide evenly by the\n            if (i >= virtualRowCount) {\n                continue;\n            }\n            var rowNode = this.getRowUsingLocalIndex(i);\n            if (rowNode) {\n                if (rowNode.rowIndex === index) {\n                    return extractRowBounds(rowNode);\n                }\n                if (rowNode.group && rowNode.expanded && ag_grid_community_1._.exists(rowNode.childrenCache)) {\n                    var serverSideCache = rowNode.childrenCache;\n                    if (serverSideCache.isDisplayIndexInCache(index)) {\n                        return serverSideCache.getRowBounds(index);\n                    }\n                }\n                else if (rowNode.master && rowNode.expanded && ag_grid_community_1._.exists(rowNode.detailNode)) {\n                    if (rowNode.detailNode.rowIndex === index) {\n                        return extractRowBounds(rowNode.detailNode);\n                    }\n                }\n            }\n        }\n        console.error(\" ag-Grid: looking for invalid row index in Server Side Row Model, index=\" + index);\n        return null;\n    };\n    ServerSideBlock.prototype.getRowIndexAtPixel = function (pixel, virtualRowCount) {\n        var start = this.getStartRow();\n        var end = this.getEndRow();\n        for (var i = start; i <= end; i++) {\n            // the blocks can have extra rows in them, if they are the last block\n            // in the cache and the virtual row count doesn't divide evenly by the\n            if (i >= virtualRowCount) {\n                continue;\n            }\n            var rowNode = this.getRowUsingLocalIndex(i);\n            if (rowNode) {\n                // first check if pixel is in range of current row\n                if (rowNode.isPixelInRange(pixel)) {\n                    return rowNode.rowIndex;\n                }\n                // then check if current row contains a detail row with pixel in range\n                var expandedMasterRow = rowNode.master && rowNode.expanded;\n                if (expandedMasterRow && rowNode.detailNode.isPixelInRange(pixel)) {\n                    return rowNode.detailNode.rowIndex;\n                }\n                // then check if it's a group row with a child cache with pixel in range\n                if (rowNode.group && rowNode.expanded && ag_grid_community_1._.exists(rowNode.childrenCache)) {\n                    var serverSideCache = rowNode.childrenCache;\n                    if (serverSideCache.isPixelInRange(pixel)) {\n                        return serverSideCache.getRowIndexAtPixel(pixel);\n                    }\n                }\n            }\n        }\n        console.warn(\"ag-Grid: invalid pixel range for server side block \" + pixel);\n        return 0;\n    };\n    ServerSideBlock.prototype.clearRowTops = function (virtualRowCount) {\n        this.forEachRowNode(virtualRowCount, function (rowNode) {\n            rowNode.clearRowTop();\n            var hasChildCache = rowNode.group && ag_grid_community_1._.exists(rowNode.childrenCache);\n            if (hasChildCache) {\n                var serverSideCache = rowNode.childrenCache;\n                serverSideCache.clearRowTops();\n            }\n        });\n    };\n    ServerSideBlock.prototype.setDisplayIndexes = function (displayIndexSeq, virtualRowCount, nextRowTop) {\n        this.displayIndexStart = displayIndexSeq.peek();\n        this.blockTop = nextRowTop.value;\n        this.forEachRowNode(virtualRowCount, function (rowNode) {\n            rowNode.setRowIndex(displayIndexSeq.next());\n            rowNode.setRowTop(nextRowTop.value);\n            nextRowTop.value += rowNode.rowHeight;\n            var hasDetailRow = rowNode.master && rowNode.expanded;\n            if (hasDetailRow) {\n                rowNode.detailNode.setRowIndex(displayIndexSeq.next());\n                rowNode.detailNode.setRowTop(nextRowTop.value);\n                nextRowTop.value += rowNode.detailNode.rowHeight;\n            }\n            var hasChildCache = rowNode.group && ag_grid_community_1._.exists(rowNode.childrenCache);\n            if (hasChildCache) {\n                var serverSideCache = rowNode.childrenCache;\n                if (rowNode.expanded) {\n                    serverSideCache.setDisplayIndexes(displayIndexSeq, nextRowTop);\n                }\n                else {\n                    // we need to clear the row tops, as the row renderer depends on\n                    // this to know if the row should be faded out\n                    serverSideCache.clearRowTops();\n                }\n            }\n        });\n        this.displayIndexEnd = displayIndexSeq.peek();\n        this.blockHeight = nextRowTop.value - this.blockTop;\n    };\n    ServerSideBlock.prototype.forEachRowNode = function (virtualRowCount, callback) {\n        var start = this.getStartRow();\n        var end = this.getEndRow();\n        for (var i = start; i <= end; i++) {\n            // the blocks can have extra rows in them, if they are the last block\n            // in the cache and the virtual row count doesn't divide evenly by the\n            if (i >= virtualRowCount) {\n                continue;\n            }\n            var rowNode = this.getRowUsingLocalIndex(i);\n            if (rowNode) {\n                callback(rowNode);\n            }\n        }\n    };\n    ServerSideBlock.prototype.createLoadParams = function () {\n        var groupKeys = this.createGroupKeys(this.parentRowNode);\n        var request = {\n            startRow: this.getStartRow(),\n            endRow: this.getEndRow(),\n            rowGroupCols: this.params.rowGroupCols,\n            valueCols: this.params.valueCols,\n            pivotCols: this.params.pivotCols,\n            pivotMode: this.params.pivotMode,\n            groupKeys: groupKeys,\n            filterModel: this.params.filterModel,\n            sortModel: this.params.sortModel\n        };\n        var params = {\n            successCallback: this.pageLoaded.bind(this, this.getVersion()),\n            failCallback: this.pageLoadFailed.bind(this),\n            request: request,\n            parentNode: this.parentRowNode\n        };\n        return params;\n    };\n    ServerSideBlock.prototype.isDisplayIndexInBlock = function (displayIndex) {\n        return displayIndex >= this.displayIndexStart && displayIndex < this.displayIndexEnd;\n    };\n    ServerSideBlock.prototype.isBlockBefore = function (displayIndex) {\n        return displayIndex >= this.displayIndexEnd;\n    };\n    ServerSideBlock.prototype.getDisplayIndexStart = function () {\n        return this.displayIndexStart;\n    };\n    ServerSideBlock.prototype.getDisplayIndexEnd = function () {\n        return this.displayIndexEnd;\n    };\n    ServerSideBlock.prototype.getBlockHeight = function () {\n        return this.blockHeight;\n    };\n    ServerSideBlock.prototype.getBlockTop = function () {\n        return this.blockTop;\n    };\n    ServerSideBlock.prototype.isGroupLevel = function () {\n        return this.groupLevel;\n    };\n    ServerSideBlock.prototype.getGroupField = function () {\n        return this.groupField;\n    };\n    ServerSideBlock.DefaultBlockSize = 100;\n    __decorate([\n        ag_grid_community_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", ag_grid_community_1.RowRenderer)\n    ], ServerSideBlock.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], ServerSideBlock.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('valueService'),\n        __metadata(\"design:type\", ag_grid_community_1.ValueService)\n    ], ServerSideBlock.prototype, \"valueService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ServerSideBlock.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ServerSideBlock.prototype, \"init\", null);\n    __decorate([\n        __param(0, ag_grid_community_1.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [ag_grid_community_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], ServerSideBlock.prototype, \"setBeans\", null);\n    return ServerSideBlock;\n}(ag_grid_community_1.RowNodeBlock));\nexports.ServerSideBlock = ServerSideBlock;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/rowModels/serverSide/serverSideBlock.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/rowModels/serverSide/serverSideCache.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/rowModels/serverSide/serverSideCache.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar serverSideBlock_1 = __webpack_require__(/*! ./serverSideBlock */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowModels/serverSide/serverSideBlock.js\");\nvar ServerSideCache = /** @class */ (function (_super) {\n    __extends(ServerSideCache, _super);\n    function ServerSideCache(cacheParams, parentRowNode) {\n        var _this = _super.call(this, cacheParams) || this;\n        // this will always be zero for the top level cache only,\n        // all the other ones change as the groups open and close\n        _this.displayIndexStart = 0;\n        _this.displayIndexEnd = 0; // not sure if setting this one to zero is necessary\n        _this.cacheTop = 0;\n        _this.blockHeights = {};\n        _this.parentRowNode = parentRowNode;\n        return _this;\n    }\n    ServerSideCache.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('ServerSideCache');\n    };\n    ServerSideCache.prototype.init = function () {\n        _super.prototype.init.call(this);\n    };\n    ServerSideCache.prototype.getRowBounds = function (index) {\n        var _this = this;\n        this.logger.log(\"getRowBounds(\" + index + \")\");\n        // we return null if row not found\n        // note - cast to \"any\" due to https://github.com/Microsoft/TypeScript/issues/11498\n        // should be RowBounds\n        var result;\n        var blockFound = false;\n        // note - cast to \"any\" due to https://github.com/Microsoft/TypeScript/issues/11498\n        // should be ServerSideBlock\n        var lastBlock = null;\n        this.forEachBlockInOrder(function (block) {\n            if (blockFound) {\n                return;\n            }\n            if (block.isDisplayIndexInBlock(index)) {\n                result = block.getRowBounds(index, _this.getVirtualRowCount());\n                blockFound = true;\n            }\n            else if (block.isBlockBefore(index)) {\n                lastBlock = block;\n            }\n        });\n        if (!blockFound) {\n            var nextRowTop = void 0;\n            var nextRowIndex = void 0;\n            if (lastBlock !== null) {\n                nextRowTop = lastBlock.getBlockTop() + lastBlock.getBlockHeight();\n                nextRowIndex = lastBlock.getDisplayIndexEnd();\n            }\n            else {\n                nextRowTop = this.cacheTop;\n                nextRowIndex = this.displayIndexStart;\n            }\n            var rowsBetween = index - nextRowIndex;\n            result = {\n                rowHeight: this.cacheParams.rowHeight,\n                rowTop: nextRowTop + rowsBetween * this.cacheParams.rowHeight\n            };\n        }\n        // NOTE: what about purged blocks\n        this.logger.log(\"getRowBounds(\" + index + \"), result = \" + result);\n        return result;\n    };\n    ServerSideCache.prototype.destroyBlock = function (block) {\n        _super.prototype.destroyBlock.call(this, block);\n    };\n    ServerSideCache.prototype.getRowIndexAtPixel = function (pixel) {\n        var _this = this;\n        this.logger.log(\"getRowIndexAtPixel(\" + pixel + \")\");\n        // we return null if row not found\n        // note - cast to \"any\" due to https://github.com/Microsoft/TypeScript/issues/11498\n        // should be number\n        var result;\n        var blockFound = false;\n        // note - cast to \"any\" due to https://github.com/Microsoft/TypeScript/issues/11498\n        // should be ServerSideBlock\n        var lastBlock;\n        this.forEachBlockInOrder(function (block) {\n            if (blockFound) {\n                return;\n            }\n            if (block.isPixelInRange(pixel)) {\n                result = block.getRowIndexAtPixel(pixel, _this.getVirtualRowCount());\n                blockFound = true;\n            }\n            else if (block.getBlockTop() < pixel) {\n                lastBlock = block;\n            }\n        });\n        if (!blockFound) {\n            var nextRowTop = void 0;\n            var nextRowIndex = void 0;\n            if (lastBlock) {\n                nextRowTop = lastBlock.getBlockTop() + lastBlock.getBlockHeight();\n                nextRowIndex = lastBlock.getDisplayIndexEnd();\n            }\n            else {\n                nextRowTop = this.cacheTop;\n                nextRowIndex = this.displayIndexStart;\n            }\n            var pixelsBetween = pixel - nextRowTop;\n            var rowsBetween = (pixelsBetween / this.cacheParams.rowHeight) | 0;\n            result = nextRowIndex + rowsBetween;\n        }\n        var lastAllowedIndex = this.getDisplayIndexEnd() - 1;\n        if (result > lastAllowedIndex) {\n            result = lastAllowedIndex;\n        }\n        //NOTE: purged\n        this.logger.log(\"getRowIndexAtPixel(\" + pixel + \") result = \" + result);\n        return result;\n    };\n    ServerSideCache.prototype.clearRowTops = function () {\n        var _this = this;\n        this.forEachBlockInOrder(function (block) { return block.clearRowTops(_this.getVirtualRowCount()); });\n    };\n    ServerSideCache.prototype.setDisplayIndexes = function (displayIndexSeq, nextRowTop) {\n        var _this = this;\n        this.displayIndexStart = displayIndexSeq.peek();\n        this.cacheTop = nextRowTop.value;\n        var lastBlockId = -1;\n        var blockSize = this.getBlockSize();\n        this.forEachBlockInOrder(function (currentBlock, blockId) {\n            // if we skipped blocks, then we need to skip the row indexes. we assume that all missing\n            // blocks are made up of closed RowNodes only (if they were groups), as we never expire from\n            // the cache if any row nodes are open.\n            var blocksSkippedCount = blockId - lastBlockId - 1;\n            var rowsSkippedCount = blocksSkippedCount * blockSize;\n            if (rowsSkippedCount > 0) {\n                displayIndexSeq.skip(rowsSkippedCount);\n            }\n            for (var i = 1; i <= blocksSkippedCount; i++) {\n                var blockToAddId = blockId - i;\n                if (ag_grid_community_1._.exists(_this.blockHeights[blockToAddId])) {\n                    nextRowTop.value += _this.blockHeights[blockToAddId];\n                }\n                else {\n                    nextRowTop.value += blockSize * _this.cacheParams.rowHeight;\n                }\n            }\n            lastBlockId = blockId;\n            currentBlock.setDisplayIndexes(displayIndexSeq, _this.getVirtualRowCount(), nextRowTop);\n            _this.blockHeights[blockId] = currentBlock.getBlockHeight();\n        });\n        // if any blocks missing at the end, need to increase the row index for them also\n        // eg if block size = 10, we have total rows of 25 (indexes 0 .. 24), but first 2 blocks loaded (because\n        // last row was ejected from cache), then:\n        // lastVisitedRow = 19, virtualRowCount = 25, rows not accounted for = 5 (24 - 19)\n        var lastVisitedRow = ((lastBlockId + 1) * blockSize) - 1;\n        var rowCount = this.getVirtualRowCount();\n        var rowsNotAccountedFor = rowCount - lastVisitedRow - 1;\n        if (rowsNotAccountedFor > 0) {\n            displayIndexSeq.skip(rowsNotAccountedFor);\n            nextRowTop.value += rowsNotAccountedFor * this.cacheParams.rowHeight;\n        }\n        this.displayIndexEnd = displayIndexSeq.peek();\n        this.cacheHeight = nextRowTop.value - this.cacheTop;\n    };\n    // gets called in a) init() above and b) by the grid\n    ServerSideCache.prototype.getRow = function (displayRowIndex, dontCreateBlock) {\n        if (dontCreateBlock === void 0) { dontCreateBlock = false; }\n        // this can happen if asking for a row that doesn't exist in the model,\n        // eg if a cell range is selected, and the user filters so rows no longer\n        // exist\n        if (!this.isDisplayIndexInCache(displayRowIndex)) {\n            return null;\n        }\n        // if we have the block, then this is the block\n        var block = null;\n        // this is the last block that we have BEFORE the right block\n        // note - cast to \"any\" due to https://github.com/Microsoft/TypeScript/issues/11498\n        // should be ServerSideBlock\n        var beforeBlock = null;\n        this.forEachBlockInOrder(function (currentBlock) {\n            if (currentBlock.isDisplayIndexInBlock(displayRowIndex)) {\n                block = currentBlock;\n            }\n            else if (currentBlock.isBlockBefore(displayRowIndex)) {\n                // this will get assigned many times, but the last time will\n                // be the closest block to the required block that is BEFORE\n                beforeBlock = currentBlock;\n            }\n        });\n        // when we are moving rows around, we don't want to trigger loads\n        if (ag_grid_community_1._.missing(block) && dontCreateBlock) {\n            return null;\n        }\n        var blockSize = this.getBlockSize();\n        // if block not found, we need to load it\n        if (ag_grid_community_1._.missing(block)) {\n            var blockNumber = void 0;\n            var displayIndexStart_1;\n            var nextRowTop = void 0;\n            // because missing blocks are always fully closed, we can work out\n            // the start index of the block we want by hopping from the closest block,\n            // as we know the row count in closed blocks is equal to the page size\n            if (beforeBlock) {\n                blockNumber = beforeBlock.getBlockNumber() + 1;\n                displayIndexStart_1 = beforeBlock.getDisplayIndexEnd();\n                nextRowTop = beforeBlock.getBlockHeight() + beforeBlock.getBlockTop();\n                var isInRange = function () {\n                    return displayRowIndex >= displayIndexStart_1 && displayRowIndex < (displayIndexStart_1 + blockSize);\n                };\n                while (!isInRange()) {\n                    displayIndexStart_1 += blockSize;\n                    var cachedBlockHeight = this.blockHeights[blockNumber];\n                    if (ag_grid_community_1._.exists(cachedBlockHeight)) {\n                        nextRowTop += cachedBlockHeight;\n                    }\n                    else {\n                        nextRowTop += this.cacheParams.rowHeight * blockSize;\n                    }\n                    blockNumber++;\n                }\n            }\n            else {\n                var localIndex = displayRowIndex - this.displayIndexStart;\n                blockNumber = Math.floor(localIndex / blockSize);\n                displayIndexStart_1 = this.displayIndexStart + (blockNumber * blockSize);\n                nextRowTop = this.cacheTop + (blockNumber * blockSize * this.cacheParams.rowHeight);\n            }\n            block = this.createBlock(blockNumber, displayIndexStart_1, { value: nextRowTop });\n            this.logger.log(\"block missing, rowIndex = \" + displayRowIndex + \", creating #\" + blockNumber + \", displayIndexStart = \" + displayIndexStart_1);\n        }\n        return block ? block.getRow(displayRowIndex) : null;\n    };\n    ServerSideCache.prototype.getBlockSize = function () {\n        return this.cacheParams.blockSize ? this.cacheParams.blockSize : serverSideBlock_1.ServerSideBlock.DefaultBlockSize;\n    };\n    ServerSideCache.prototype.getTopLevelRowDisplayedIndex = function (topLevelIndex) {\n        var blockSize = this.getBlockSize();\n        var blockId = Math.floor(topLevelIndex / blockSize);\n        var block = this.getBlock(blockId);\n        if (block) {\n            // if we found a block, means row is in memory, so we can report the row index directly\n            var rowNode = block.getRowUsingLocalIndex(topLevelIndex, true);\n            return rowNode.rowIndex;\n        }\n        else {\n            // otherwise we need to calculate it from the previous block\n            var blockBefore_1;\n            this.forEachBlockInOrder(function (currentBlock, currentId) {\n                if (blockId > currentId) {\n                    // this will get assigned many times, but the last time will\n                    // be the closest block to the required block that is BEFORE\n                    blockBefore_1 = currentBlock;\n                }\n            });\n            if (blockBefore_1) {\n                // note: the local index is the same as the top level index, two terms for same thing\n                //\n                // get index of the last row before this row\n                // eg if blocksize = 100, then:\n                //   last row of first block is 99 (100 * 1) -1;\n                //   last row of second block is 199 (100 * 2) -1;\n                var lastRowTopLevelIndex = (blockSize * (blockBefore_1.getBlockNumber() + 1)) - 1;\n                // this is the last loaded rownode in the cache that is before the row we are interested in.\n                // we are guaranteed no rows are open. so the difference between the topTopIndex will be the\n                // same as the difference between the displayed index\n                var indexDiff = topLevelIndex - lastRowTopLevelIndex;\n                var lastRowNode = blockBefore_1.getRowUsingLocalIndex(lastRowTopLevelIndex, true);\n                return lastRowNode.rowIndex + indexDiff;\n            }\n            else {\n                return topLevelIndex;\n            }\n        }\n    };\n    ServerSideCache.prototype.createBlock = function (blockNumber, displayIndex, nextRowTop) {\n        var newBlock = new serverSideBlock_1.ServerSideBlock(blockNumber, this.parentRowNode, this.cacheParams, this);\n        this.getContext().wireBean(newBlock);\n        var displayIndexSequence = new ag_grid_community_1.NumberSequence(displayIndex);\n        newBlock.setDisplayIndexes(displayIndexSequence, this.getVirtualRowCount(), nextRowTop);\n        this.postCreateBlock(newBlock);\n        return newBlock;\n    };\n    ServerSideCache.prototype.getDisplayIndexEnd = function () {\n        return this.displayIndexEnd;\n    };\n    ServerSideCache.prototype.isDisplayIndexInCache = function (displayIndex) {\n        if (this.getVirtualRowCount() === 0) {\n            return false;\n        }\n        return displayIndex >= this.displayIndexStart && displayIndex < this.displayIndexEnd;\n    };\n    ServerSideCache.prototype.getChildCache = function (keys) {\n        var _this = this;\n        if (ag_grid_community_1._.missingOrEmpty(keys)) {\n            return this;\n        }\n        var nextKey = keys[0];\n        var nextServerSideCache = null;\n        this.forEachBlockInOrder(function (block) {\n            // callback: (rowNode: RowNode, index: number) => void, sequence: NumberSequence, rowCount: number\n            block.forEachNodeShallow(function (rowNode) {\n                if (rowNode.key === nextKey) {\n                    nextServerSideCache = rowNode.childrenCache;\n                }\n            }, new ag_grid_community_1.NumberSequence(), _this.getVirtualRowCount());\n        });\n        if (nextServerSideCache) {\n            var keyListForNextLevel = keys.slice(1, keys.length);\n            return nextServerSideCache ? nextServerSideCache.getChildCache(keyListForNextLevel) : null;\n        }\n        else {\n            return null;\n        }\n    };\n    ServerSideCache.prototype.isPixelInRange = function (pixel) {\n        if (this.getVirtualRowCount() === 0) {\n            return false;\n        }\n        return pixel >= this.cacheTop && pixel < (this.cacheTop + this.cacheHeight);\n    };\n    ServerSideCache.prototype.refreshCacheAfterSort = function (changedColumnsInSort, rowGroupColIds) {\n        var _this = this;\n        var level = this.parentRowNode.level + 1;\n        var grouping = level < this.cacheParams.rowGroupCols.length;\n        var shouldPurgeCache;\n        if (grouping) {\n            var groupColVo = this.cacheParams.rowGroupCols[level];\n            var groupField = groupColVo.field;\n            var rowGroupBlock = rowGroupColIds.indexOf(groupField) > -1;\n            var sortingByGroup = changedColumnsInSort.indexOf(groupField) > -1;\n            shouldPurgeCache = rowGroupBlock && sortingByGroup;\n        }\n        else {\n            shouldPurgeCache = true;\n        }\n        if (shouldPurgeCache) {\n            this.purgeCache();\n        }\n        else {\n            this.forEachBlockInOrder(function (block) {\n                if (block.isGroupLevel()) {\n                    var callback = function (rowNode) {\n                        var nextCache = rowNode.childrenCache;\n                        if (nextCache) {\n                            nextCache.refreshCacheAfterSort(changedColumnsInSort, rowGroupColIds);\n                        }\n                    };\n                    block.forEachNodeShallow(callback, new ag_grid_community_1.NumberSequence(), _this.getVirtualRowCount());\n                }\n            });\n        }\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], ServerSideCache.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ServerSideCache.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        __param(0, ag_grid_community_1.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [ag_grid_community_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], ServerSideCache.prototype, \"setBeans\", null);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ServerSideCache.prototype, \"init\", null);\n    return ServerSideCache;\n}(ag_grid_community_1.RowNodeCache));\nexports.ServerSideCache = ServerSideCache;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/rowModels/serverSide/serverSideCache.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/rowModels/serverSide/serverSideRowModel.js":
/*!*************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/rowModels/serverSide/serverSideRowModel.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar serverSideCache_1 = __webpack_require__(/*! ./serverSideCache */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowModels/serverSide/serverSideCache.js\");\nvar serverSideBlock_1 = __webpack_require__(/*! ./serverSideBlock */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowModels/serverSide/serverSideBlock.js\");\nvar ServerSideRowModel = /** @class */ (function (_super) {\n    __extends(ServerSideRowModel, _super);\n    function ServerSideRowModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // we don't implement as lazy row heights is not supported in this row model\n    ServerSideRowModel.prototype.ensureRowHeightsValid = function (startPixel, endPixel, startLimitIndex, endLimitIndex) { return false; };\n    ServerSideRowModel.prototype.postConstruct = function () {\n        this.rowHeight = this.gridOptionsWrapper.getRowHeightAsNumber();\n        this.addEventListeners();\n        var datasource = this.gridOptionsWrapper.getServerSideDatasource();\n        if (ag_grid_community_1._.exists(datasource)) {\n            this.setDatasource(datasource);\n        }\n    };\n    ServerSideRowModel.prototype.destroyDatasource = function () {\n        if (this.datasource) {\n            if (this.datasource.destroy) {\n                this.datasource.destroy();\n            }\n            this.rowRenderer.datasourceChanged();\n            this.datasource = undefined;\n        }\n    };\n    ServerSideRowModel.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('ServerSideRowModel');\n    };\n    ServerSideRowModel.prototype.addEventListeners = function () {\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onColumnRowGroupChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_ROW_GROUP_OPENED, this.onRowGroupOpened.bind(this));\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onPivotModeChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.onColumnEverything.bind(this));\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_COLUMN_VALUE_CHANGED, this.onValueChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_COLUMN_PIVOT_CHANGED, this.onColumnPivotChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_SORT_CHANGED, this.onSortChanged.bind(this));\n    };\n    ServerSideRowModel.prototype.setDatasource = function (datasource) {\n        this.destroyDatasource();\n        this.datasource = datasource;\n        this.reset();\n    };\n    ServerSideRowModel.prototype.isLastRowFound = function () {\n        if (this.cacheExists()) {\n            return this.rootNode.childrenCache.isMaxRowFound();\n        }\n        else {\n            return false;\n        }\n    };\n    ServerSideRowModel.prototype.onColumnEverything = function () {\n        // this is a hack for one customer only, so they can suppress the resetting of the columns.\n        // The problem the customer had was they were api.setColumnDefs() after the data source came\n        // back with data. So this stops the reload from the grid after the data comes back.\n        // Once we have \"AG-1591 Allow delta changes to columns\" fixed, then this hack can be taken out.\n        if (this.gridOptionsWrapper.isSuppressEnterpriseResetOnNewColumns()) {\n            return;\n        }\n        // every other customer can continue as normal and have it working!!!\n        // check if anything pertaining to fetching data has changed, and if it has, reset, but if\n        // it has not, don't reset\n        var resetRequired;\n        if (!this.cacheParams) {\n            resetRequired = true;\n        }\n        else {\n            var rowGroupColumnVos = this.toValueObjects(this.columnController.getRowGroupColumns());\n            var valueColumnVos = this.toValueObjects(this.columnController.getValueColumns());\n            var pivotColumnVos = this.toValueObjects(this.columnController.getPivotColumns());\n            var sortModelDifferent = !ag_grid_community_1._.jsonEquals(this.cacheParams.sortModel, this.sortController.getSortModel());\n            var rowGroupDifferent = !ag_grid_community_1._.jsonEquals(this.cacheParams.rowGroupCols, rowGroupColumnVos);\n            var pivotDifferent = !ag_grid_community_1._.jsonEquals(this.cacheParams.pivotCols, pivotColumnVos);\n            var valuesDifferent = !ag_grid_community_1._.jsonEquals(this.cacheParams.valueCols, valueColumnVos);\n            resetRequired = sortModelDifferent || rowGroupDifferent || pivotDifferent || valuesDifferent;\n        }\n        if (resetRequired) {\n            this.reset();\n        }\n    };\n    ServerSideRowModel.prototype.onFilterChanged = function () {\n        this.reset();\n    };\n    // returns back all the cols that were effected by the sorting. eg if we were sorting by col A,\n    // and now we are sorting by col B, the list of impacted cols should be A and B. so if a cache\n    // is impacted by sorting on A or B then it needs to be refreshed. this includes where the cache\n    // was previously sorted by A and then the A sort now needs to be cleared.\n    ServerSideRowModel.prototype.findChangedColumnsInSort = function (newSortModel, oldSortModel) {\n        var allColsInBothSorts = [];\n        [newSortModel, oldSortModel].forEach(function (sortModel) {\n            if (sortModel) {\n                var ids = sortModel.map(function (sm) { return sm.colId; });\n                allColsInBothSorts = allColsInBothSorts.concat(ids);\n            }\n        });\n        var differentSorts = function (oldSortItem, newSortItem) {\n            var oldSort = oldSortItem ? oldSortItem.sort : null;\n            var newSort = newSortItem ? newSortItem.sort : null;\n            return oldSort !== newSort;\n        };\n        var differentIndexes = function (oldSortItem, newSortItem) {\n            var oldIndex = oldSortModel.indexOf(oldSortItem);\n            var newIndex = newSortModel.indexOf(newSortItem);\n            return oldIndex !== newIndex;\n        };\n        return allColsInBothSorts.filter(function (colId) {\n            var oldSortItem = ag_grid_community_1._.find(oldSortModel, function (sm) { return sm.colId === colId; });\n            var newSortItem = ag_grid_community_1._.find(newSortModel, function (sm) { return sm.colId === colId; });\n            return differentSorts(oldSortItem, newSortItem) || differentIndexes(oldSortItem, newSortItem);\n        });\n    };\n    ServerSideRowModel.prototype.onSortChanged = function () {\n        if (!this.cacheExists()) {\n            return;\n        }\n        var newSortModel = this.extractSortModel();\n        var oldSortModel = this.cacheParams.sortModel;\n        var changedColumnsInSort = this.findChangedColumnsInSort(newSortModel, oldSortModel);\n        this.cacheParams.sortModel = newSortModel;\n        var rowGroupColIds = this.columnController.getRowGroupColumns().map(function (col) { return col.getId(); });\n        var serverSideCache = this.rootNode.childrenCache;\n        var sortingWithValueCol = this.isSortingWithValueColumn(changedColumnsInSort);\n        var sortingWithSecondaryCol = this.isSortingWithSecondaryColumn(changedColumnsInSort);\n        var sortAlwaysResets = this.gridOptionsWrapper.isServerSideSortingAlwaysResets();\n        if (sortAlwaysResets || sortingWithValueCol || sortingWithSecondaryCol) {\n            this.reset();\n        }\n        else {\n            serverSideCache.refreshCacheAfterSort(changedColumnsInSort, rowGroupColIds);\n        }\n    };\n    ServerSideRowModel.prototype.onValueChanged = function () {\n        this.reset();\n    };\n    ServerSideRowModel.prototype.onColumnRowGroupChanged = function () {\n        this.reset();\n    };\n    ServerSideRowModel.prototype.onColumnPivotChanged = function () {\n        this.reset();\n    };\n    ServerSideRowModel.prototype.onPivotModeChanged = function () {\n        this.reset();\n    };\n    ServerSideRowModel.prototype.onRowGroupOpened = function (event) {\n        var _this = this;\n        var rowNode = event.node;\n        if (rowNode.expanded) {\n            if (rowNode.master) {\n                this.createDetailNode(rowNode);\n            }\n            else if (ag_grid_community_1._.missing(rowNode.childrenCache)) {\n                this.createNodeCache(rowNode);\n            }\n        }\n        else {\n            if (this.gridOptionsWrapper.isPurgeClosedRowNodes() && ag_grid_community_1._.exists(rowNode.childrenCache)) {\n                rowNode.childrenCache.destroy();\n                rowNode.childrenCache = null;\n            }\n        }\n        var shouldAnimate = function () {\n            var rowAnimationEnabled = _this.gridOptionsWrapper.isAnimateRows();\n            if (rowNode.master) {\n                return rowAnimationEnabled && rowNode.expanded;\n            }\n            return rowAnimationEnabled;\n        };\n        this.updateRowIndexesAndBounds();\n        var modelUpdatedEvent = {\n            type: ag_grid_community_1.Events.EVENT_MODEL_UPDATED,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            newPage: false,\n            newData: false,\n            animate: shouldAnimate(),\n            keepRenderedRows: true\n        };\n        this.eventService.dispatchEvent(modelUpdatedEvent);\n    };\n    ServerSideRowModel.prototype.reset = function () {\n        this.rootNode = new ag_grid_community_1.RowNode();\n        this.rootNode.group = true;\n        this.rootNode.level = -1;\n        this.getContext().wireBean(this.rootNode);\n        if (this.datasource) {\n            this.createNewRowNodeBlockLoader();\n            this.cacheParams = this.createCacheParams();\n            this.createNodeCache(this.rootNode);\n            this.updateRowIndexesAndBounds();\n        }\n        // this event: 1) clears selection 2) updates filters 3) shows/hides 'no rows' overlay\n        var rowDataChangedEvent = {\n            type: ag_grid_community_1.Events.EVENT_ROW_DATA_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(rowDataChangedEvent);\n        // this gets the row to render rows (or remove the previously rendered rows, as it's blank to start).\n        // important to NOT pass in an event with keepRenderedRows or animate, as we want the renderer\n        // to treat the rows as new rows, as it's all new data\n        var modelUpdatedEvent = {\n            type: ag_grid_community_1.Events.EVENT_MODEL_UPDATED,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            animate: false,\n            keepRenderedRows: false,\n            newData: false,\n            newPage: false\n        };\n        this.eventService.dispatchEvent(modelUpdatedEvent);\n    };\n    ServerSideRowModel.prototype.createNewRowNodeBlockLoader = function () {\n        this.destroyRowNodeBlockLoader();\n        var maxConcurrentRequests = this.gridOptionsWrapper.getMaxConcurrentDatasourceRequests();\n        var blockLoadDebounceMillis = this.gridOptionsWrapper.getBlockLoadDebounceMillis();\n        this.rowNodeBlockLoader = new ag_grid_community_1.RowNodeBlockLoader(maxConcurrentRequests, blockLoadDebounceMillis);\n        this.getContext().wireBean(this.rowNodeBlockLoader);\n    };\n    ServerSideRowModel.prototype.destroyRowNodeBlockLoader = function () {\n        if (this.rowNodeBlockLoader) {\n            this.rowNodeBlockLoader.destroy();\n            this.rowNodeBlockLoader = undefined;\n        }\n    };\n    ServerSideRowModel.prototype.toValueObjects = function (columns) {\n        var _this = this;\n        return columns.map(function (col) { return ({\n            id: col.getId(),\n            aggFunc: col.getAggFunc(),\n            displayName: _this.columnController.getDisplayNameForColumn(col, 'model'),\n            field: col.getColDef().field\n        }); });\n    };\n    ServerSideRowModel.prototype.createCacheParams = function () {\n        var rowGroupColumnVos = this.toValueObjects(this.columnController.getRowGroupColumns());\n        var valueColumnVos = this.toValueObjects(this.columnController.getValueColumns());\n        var pivotColumnVos = this.toValueObjects(this.columnController.getPivotColumns());\n        var dynamicRowHeight = this.gridOptionsWrapper.isDynamicRowHeight();\n        var maxBlocksInCache = this.gridOptionsWrapper.getMaxBlocksInCache();\n        if (dynamicRowHeight && maxBlocksInCache >= 0) {\n            console.warn('ag-Grid: Server Side Row Model does not support Dynamic Row Height and Cache Purging. ' +\n                'Either a) remove getRowHeight() callback or b) remove maxBlocksInCache property. Purging has been disabled.');\n            maxBlocksInCache = undefined;\n        }\n        if (maxBlocksInCache >= 0 && this.columnController.isAutoRowHeightActive()) {\n            console.warn('ag-Grid: Server Side Row Model does not support Auto Row Height and Cache Purging. ' +\n                'Either a) remove colDef.autoHeight or b) remove maxBlocksInCache property. Purging has been disabled.');\n            maxBlocksInCache = undefined;\n        }\n        var params = {\n            // the columns the user has grouped and aggregated by\n            valueCols: valueColumnVos,\n            rowGroupCols: rowGroupColumnVos,\n            pivotCols: pivotColumnVos,\n            pivotMode: this.columnController.isPivotMode(),\n            // sort and filter model\n            filterModel: this.filterManager.getFilterModel(),\n            sortModel: this.extractSortModel(),\n            rowNodeBlockLoader: this.rowNodeBlockLoader,\n            datasource: this.datasource,\n            lastAccessedSequence: new ag_grid_community_1.NumberSequence(),\n            overflowSize: 1,\n            initialRowCount: 1,\n            maxConcurrentRequests: this.gridOptionsWrapper.getMaxConcurrentDatasourceRequests() || 0,\n            maxBlocksInCache: maxBlocksInCache,\n            blockSize: this.gridOptionsWrapper.getCacheBlockSize(),\n            rowHeight: this.rowHeight,\n            dynamicRowHeight: dynamicRowHeight\n        };\n        // set defaults\n        if (!(params.maxConcurrentRequests >= 1)) {\n            params.maxConcurrentRequests = 2;\n        }\n        // page size needs to be 1 or greater. having it at 1 would be silly, as you would be hitting the\n        // server for one page at a time. so the default if not specified is 100.\n        if (!(params.blockSize >= 1)) {\n            params.blockSize = serverSideBlock_1.ServerSideBlock.DefaultBlockSize;\n        }\n        // if user doesn't give initial rows to display, we assume zero\n        if (!(params.initialRowCount >= 1)) {\n            params.initialRowCount = 0;\n        }\n        // if user doesn't provide overflow, we use default overflow of 1, so user can scroll past\n        // the current page and request first row of next page\n        if (!(params.overflowSize >= 1)) {\n            params.overflowSize = 1;\n        }\n        return params;\n    };\n    ServerSideRowModel.prototype.createNodeCache = function (rowNode) {\n        var cache = new serverSideCache_1.ServerSideCache(this.cacheParams, rowNode);\n        this.getContext().wireBean(cache);\n        cache.addEventListener(ag_grid_community_1.RowNodeCache.EVENT_CACHE_UPDATED, this.onCacheUpdated.bind(this));\n        rowNode.childrenCache = cache;\n    };\n    ServerSideRowModel.prototype.onCacheUpdated = function () {\n        this.updateRowIndexesAndBounds();\n        var modelUpdatedEvent = {\n            type: ag_grid_community_1.Events.EVENT_MODEL_UPDATED,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            animate: this.gridOptionsWrapper.isAnimateRows(),\n            keepRenderedRows: true,\n            newPage: false,\n            newData: false\n        };\n        this.eventService.dispatchEvent(modelUpdatedEvent);\n    };\n    ServerSideRowModel.prototype.updateRowIndexesAndBounds = function () {\n        if (this.cacheExists()) {\n            // NOTE: should not be casting here, the RowModel should use IServerSideRowModel interface?\n            var serverSideCache = this.rootNode.childrenCache;\n            this.resetRowTops(serverSideCache);\n            this.setDisplayIndexes(serverSideCache);\n        }\n    };\n    ServerSideRowModel.prototype.setDisplayIndexes = function (cache) {\n        var numberSequence = new ag_grid_community_1.NumberSequence();\n        var nextRowTop = { value: 0 };\n        cache.setDisplayIndexes(numberSequence, nextRowTop);\n    };\n    // resetting row tops is needed for animation, as part of the operation is saving the old location,\n    // which is needed for rows that are transitioning in\n    ServerSideRowModel.prototype.resetRowTops = function (cache) {\n        var numberSequence = new ag_grid_community_1.NumberSequence();\n        cache.forEachNodeDeep(function (rowNode) { return rowNode.clearRowTop(); }, numberSequence);\n    };\n    ServerSideRowModel.prototype.getRow = function (index) {\n        if (this.cacheExists()) {\n            return this.rootNode.childrenCache.getRow(index);\n        }\n        return null;\n    };\n    ServerSideRowModel.prototype.getRowCount = function () {\n        if (!this.cacheExists()) {\n            return 1;\n        }\n        var serverSideCache = this.rootNode.childrenCache;\n        var res = serverSideCache.getDisplayIndexEnd();\n        return res;\n    };\n    ServerSideRowModel.prototype.getTopLevelRowCount = function () {\n        if (!this.cacheExists()) {\n            return 1;\n        }\n        var serverSideCache = this.rootNode.childrenCache;\n        return serverSideCache.getVirtualRowCount();\n    };\n    ServerSideRowModel.prototype.getTopLevelRowDisplayedIndex = function (topLevelIndex) {\n        if (!this.cacheExists()) {\n            return topLevelIndex;\n        }\n        var serverSideCache = this.rootNode.childrenCache;\n        return serverSideCache.getTopLevelRowDisplayedIndex(topLevelIndex);\n    };\n    ServerSideRowModel.prototype.getRowBounds = function (index) {\n        if (!this.cacheExists()) {\n            return {\n                rowTop: 0,\n                rowHeight: this.rowHeight\n            };\n        }\n        var serverSideCache = this.rootNode.childrenCache;\n        return serverSideCache.getRowBounds(index);\n    };\n    ServerSideRowModel.prototype.getRowIndexAtPixel = function (pixel) {\n        if (pixel === 0) {\n            return 0;\n        }\n        if (!this.cacheExists()) {\n            return 0;\n        }\n        var serverSideCache = this.rootNode.childrenCache;\n        return serverSideCache.getRowIndexAtPixel(pixel);\n    };\n    ServerSideRowModel.prototype.getCurrentPageHeight = function () {\n        return this.rowHeight * this.getRowCount();\n    };\n    ServerSideRowModel.prototype.isEmpty = function () {\n        return false;\n    };\n    ServerSideRowModel.prototype.isRowsToRender = function () {\n        return this.cacheExists() && this.getRowCount() > 0;\n    };\n    ServerSideRowModel.prototype.getType = function () {\n        return ag_grid_community_1.Constants.ROW_MODEL_TYPE_SERVER_SIDE;\n    };\n    ServerSideRowModel.prototype.forEachNode = function (callback) {\n        if (this.cacheExists()) {\n            this.rootNode.childrenCache.forEachNodeDeep(callback);\n        }\n    };\n    ServerSideRowModel.prototype.executeOnCache = function (route, callback) {\n        if (this.cacheExists()) {\n            var topLevelCache = this.rootNode.childrenCache;\n            var cacheToPurge = topLevelCache.getChildCache(route);\n            if (cacheToPurge) {\n                callback(cacheToPurge);\n            }\n        }\n    };\n    ServerSideRowModel.prototype.purgeCache = function (route) {\n        if (route === void 0) { route = []; }\n        this.executeOnCache(route, function (cache) { return cache.purgeCache(); });\n    };\n    ServerSideRowModel.prototype.getNodesInRangeForSelection = function (firstInRange, lastInRange) {\n        if (ag_grid_community_1._.exists(firstInRange) && firstInRange.parent !== lastInRange.parent) {\n            return [];\n        }\n        return lastInRange.parent.childrenCache.getRowNodesInRange(firstInRange, lastInRange);\n    };\n    ServerSideRowModel.prototype.getRowNode = function (id) {\n        var result = null;\n        this.forEachNode(function (rowNode) {\n            if (rowNode.id === id) {\n                result = rowNode;\n            }\n            if (rowNode.detailNode && rowNode.detailNode.id === id) {\n                result = rowNode.detailNode;\n            }\n        });\n        return result;\n    };\n    ServerSideRowModel.prototype.getBlockState = function () {\n        if (this.rowNodeBlockLoader) {\n            return this.rowNodeBlockLoader.getBlockState();\n        }\n        else {\n            return null;\n        }\n    };\n    // always returns true - this is used by the\n    ServerSideRowModel.prototype.isRowPresent = function (rowNode) {\n        var foundRowNode = this.getRowNode(rowNode.id);\n        return !!foundRowNode;\n    };\n    ServerSideRowModel.prototype.extractSortModel = function () {\n        var sortModel = this.sortController.getSortModel();\n        // when using tree data we just return the sort model with the 'ag-Grid-AutoColumn' as is, i.e not broken out\n        // into it's constitute group columns as they are not defined up front and can vary per node.\n        if (this.gridOptionsWrapper.isTreeData()) {\n            return sortModel;\n        }\n        var rowGroupCols = this.toValueObjects(this.columnController.getRowGroupColumns());\n        // find index of auto group column in sort model\n        var autoGroupIndex = -1;\n        for (var i = 0; i < sortModel.length; ++i) {\n            if (sortModel[i].colId === ag_grid_community_1.Constants.GROUP_AUTO_COLUMN_ID) {\n                autoGroupIndex = i;\n                break;\n            }\n        }\n        // replace auto column with individual group columns\n        if (autoGroupIndex > -1) {\n            var individualGroupCols = rowGroupCols.map(function (group) {\n                return {\n                    colId: group.field,\n                    sort: sortModel[autoGroupIndex].sort\n                };\n            });\n            // remove auto group column\n            sortModel.splice(autoGroupIndex, 1);\n            var _loop_1 = function (i) {\n                var individualGroupCol = individualGroupCols[i];\n                // don't add individual group column if non group column already exists as it gets precedence\n                var sameNonGroupColumnExists = sortModel.some(function (sm) { return sm.colId === individualGroupCol.colId; });\n                if (sameNonGroupColumnExists) {\n                    return \"continue\";\n                }\n                sortModel.splice(autoGroupIndex++, 0, individualGroupCol);\n            };\n            // insert individual group columns\n            for (var i = 0; i < individualGroupCols.length; i++) {\n                _loop_1(i);\n            }\n        }\n        // strip out multi-column prefix on colId's\n        if (this.gridOptionsWrapper.isGroupMultiAutoColumn()) {\n            var multiColumnPrefix = ag_grid_community_1.Constants.GROUP_AUTO_COLUMN_ID + \"-\";\n            for (var i = 0; i < sortModel.length; ++i) {\n                if (sortModel[i].colId.indexOf(multiColumnPrefix) > -1) {\n                    sortModel[i].colId = sortModel[i].colId.substr(multiColumnPrefix.length);\n                }\n            }\n        }\n        return sortModel;\n    };\n    ServerSideRowModel.prototype.isSortingWithValueColumn = function (changedColumnsInSort) {\n        var valueColIds = this.columnController.getValueColumns().map(function (col) { return col.getColId(); });\n        for (var i = 0; i < changedColumnsInSort.length; i++) {\n            if (valueColIds.indexOf(changedColumnsInSort[i]) > -1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    ServerSideRowModel.prototype.isSortingWithSecondaryColumn = function (changedColumnsInSort) {\n        if (!this.columnController.getSecondaryColumns()) {\n            return false;\n        }\n        var secondaryColIds = this.columnController.getSecondaryColumns().map(function (col) { return col.getColId(); });\n        for (var i = 0; i < changedColumnsInSort.length; i++) {\n            if (secondaryColIds.indexOf(changedColumnsInSort[i]) > -1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    ServerSideRowModel.prototype.cacheExists = function () {\n        return ag_grid_community_1._.exists(this.rootNode) && ag_grid_community_1._.exists(this.rootNode.childrenCache);\n    };\n    ServerSideRowModel.prototype.createDetailNode = function (masterNode) {\n        if (ag_grid_community_1._.exists(masterNode.detailNode)) {\n            return masterNode.detailNode;\n        }\n        else {\n            var detailNode = new ag_grid_community_1.RowNode();\n            this.getContext().wireBean(detailNode);\n            detailNode.detail = true;\n            detailNode.selectable = false;\n            detailNode.parent = masterNode;\n            if (ag_grid_community_1._.exists(masterNode.id)) {\n                detailNode.id = 'detail_' + masterNode.id;\n            }\n            detailNode.data = masterNode.data;\n            detailNode.level = masterNode.level + 1;\n            var defaultDetailRowHeight = 200;\n            var rowHeight = this.gridOptionsWrapper.getRowHeightForNode(detailNode).height;\n            detailNode.rowHeight = rowHeight ? rowHeight : defaultDetailRowHeight;\n            masterNode.detailNode = detailNode;\n            return detailNode;\n        }\n    };\n    ServerSideRowModel.prototype.isLoading = function () {\n        return this.rowNodeBlockLoader ? this.rowNodeBlockLoader.isLoading() : false;\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ServerSideRowModel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], ServerSideRowModel.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], ServerSideRowModel.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('filterManager'),\n        __metadata(\"design:type\", ag_grid_community_1.FilterManager)\n    ], ServerSideRowModel.prototype, \"filterManager\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('sortController'),\n        __metadata(\"design:type\", ag_grid_community_1.SortController)\n    ], ServerSideRowModel.prototype, \"sortController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], ServerSideRowModel.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnApi'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnApi)\n    ], ServerSideRowModel.prototype, \"columnApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", ag_grid_community_1.RowRenderer)\n    ], ServerSideRowModel.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ServerSideRowModel.prototype, \"postConstruct\", null);\n    __decorate([\n        ag_grid_community_1.PreDestroy,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ServerSideRowModel.prototype, \"destroyDatasource\", null);\n    __decorate([\n        __param(0, ag_grid_community_1.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [ag_grid_community_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], ServerSideRowModel.prototype, \"setBeans\", null);\n    ServerSideRowModel = __decorate([\n        ag_grid_community_1.Bean('rowModel')\n    ], ServerSideRowModel);\n    return ServerSideRowModel;\n}(ag_grid_community_1.BeanStub));\nexports.ServerSideRowModel = ServerSideRowModel;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/rowModels/serverSide/serverSideRowModel.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/rowModels/viewport/viewportRowModel.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/rowModels/viewport/viewportRowModel.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar ViewportRowModel = /** @class */ (function () {\n    function ViewportRowModel() {\n        // rowRenderer tells us these\n        this.firstRow = -1;\n        this.lastRow = -1;\n        // datasource tells us this\n        this.rowCount = -1;\n        this.rowNodesByIndex = {};\n    }\n    // we don't implement as lazy row heights is not supported in this row model\n    ViewportRowModel.prototype.ensureRowHeightsValid = function (startPixel, endPixel, startLimitIndex, endLimitIndex) { return false; };\n    ViewportRowModel.prototype.init = function () {\n        this.rowHeight = this.gridOptionsWrapper.getRowHeightAsNumber();\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_VIEWPORT_CHANGED, this.onViewportChanged.bind(this));\n        var viewportEnabled = this.gridOptionsWrapper.isRowModelViewport();\n        if (viewportEnabled && this.gridOptionsWrapper.getViewportDatasource()) {\n            this.setViewportDatasource(this.gridOptionsWrapper.getViewportDatasource());\n        }\n    };\n    ViewportRowModel.prototype.isLastRowFound = function () {\n        return true;\n    };\n    ViewportRowModel.prototype.destroyDatasource = function () {\n        if (this.viewportDatasource) {\n            if (this.viewportDatasource.destroy) {\n                this.viewportDatasource.destroy();\n            }\n            this.rowRenderer.datasourceChanged();\n            this.firstRow = -1;\n            this.lastRow = -1;\n        }\n    };\n    ViewportRowModel.prototype.calculateFirstRow = function (firstRenderedRow) {\n        var bufferSize = this.gridOptionsWrapper.getViewportRowModelBufferSize();\n        var pageSize = this.gridOptionsWrapper.getViewportRowModelPageSize();\n        var afterBuffer = firstRenderedRow - bufferSize;\n        if (afterBuffer < 0) {\n            return 0;\n        }\n        else {\n            return Math.floor(afterBuffer / pageSize) * pageSize;\n        }\n    };\n    ViewportRowModel.prototype.calculateLastRow = function (lastRenderedRow) {\n        if (lastRenderedRow === -1) {\n            return lastRenderedRow;\n        }\n        var bufferSize = this.gridOptionsWrapper.getViewportRowModelBufferSize();\n        var pageSize = this.gridOptionsWrapper.getViewportRowModelPageSize();\n        var afterBuffer = lastRenderedRow + bufferSize;\n        var result = Math.ceil(afterBuffer / pageSize) * pageSize;\n        var lastRowIndex = this.rowCount - 1;\n        return Math.min(result, lastRowIndex);\n    };\n    ViewportRowModel.prototype.onViewportChanged = function (event) {\n        var newFirst = this.calculateFirstRow(event.firstRow);\n        var newLast = this.calculateLastRow(event.lastRow);\n        if (this.firstRow !== newFirst || this.lastRow !== newLast) {\n            this.firstRow = newFirst;\n            this.lastRow = newLast;\n            this.purgeRowsNotInViewport();\n            if (this.viewportDatasource) {\n                this.viewportDatasource.setViewportRange(this.firstRow, this.lastRow);\n            }\n        }\n    };\n    ViewportRowModel.prototype.purgeRowsNotInViewport = function () {\n        var _this = this;\n        Object.keys(this.rowNodesByIndex).forEach(function (indexStr) {\n            var index = parseInt(indexStr, 10);\n            if (index < _this.firstRow || index > _this.lastRow) {\n                delete _this.rowNodesByIndex[index];\n            }\n        });\n    };\n    ViewportRowModel.prototype.setViewportDatasource = function (viewportDatasource) {\n        this.destroyDatasource();\n        this.viewportDatasource = viewportDatasource;\n        this.rowCount = 0;\n        if (!viewportDatasource.init) {\n            console.warn('ag-Grid: viewport is missing init method.');\n        }\n        else {\n            viewportDatasource.init({\n                setRowCount: this.setRowCount.bind(this),\n                setRowData: this.setRowData.bind(this),\n                getRow: this.getRow.bind(this)\n            });\n        }\n    };\n    ViewportRowModel.prototype.getType = function () {\n        return ag_grid_community_1.Constants.ROW_MODEL_TYPE_VIEWPORT;\n    };\n    ViewportRowModel.prototype.getRow = function (rowIndex) {\n        if (!this.rowNodesByIndex[rowIndex]) {\n            this.rowNodesByIndex[rowIndex] = this.createBlankRowNode(rowIndex);\n        }\n        return this.rowNodesByIndex[rowIndex];\n    };\n    ViewportRowModel.prototype.getRowNode = function (id) {\n        var result = null;\n        this.forEachNode(function (rowNode) {\n            if (rowNode.id === id) {\n                result = rowNode;\n            }\n        });\n        return result;\n    };\n    ViewportRowModel.prototype.getRowCount = function () {\n        return this.rowCount;\n    };\n    ViewportRowModel.prototype.getRowIndexAtPixel = function (pixel) {\n        if (this.rowHeight !== 0) { // avoid divide by zero error\n            return Math.floor(pixel / this.rowHeight);\n        }\n        else {\n            return 0;\n        }\n    };\n    ViewportRowModel.prototype.getRowBounds = function (index) {\n        return {\n            rowHeight: this.rowHeight,\n            rowTop: this.rowHeight * index\n        };\n    };\n    ViewportRowModel.prototype.getTopLevelRowCount = function () {\n        return this.getRowCount();\n    };\n    ViewportRowModel.prototype.getTopLevelRowDisplayedIndex = function (topLevelIndex) {\n        return topLevelIndex;\n    };\n    ViewportRowModel.prototype.getCurrentPageHeight = function () {\n        return this.rowCount * this.rowHeight;\n    };\n    ViewportRowModel.prototype.isEmpty = function () {\n        return this.rowCount > 0;\n    };\n    ViewportRowModel.prototype.isRowsToRender = function () {\n        return this.rowCount > 0;\n    };\n    ViewportRowModel.prototype.getNodesInRangeForSelection = function (firstInRange, lastInRange) {\n        var firstIndex = ag_grid_community_1._.missing(firstInRange) ? 0 : firstInRange.rowIndex;\n        var lastIndex = lastInRange.rowIndex;\n        var firstNodeOutOfRange = firstIndex < this.firstRow || firstIndex > this.lastRow;\n        var lastNodeOutOfRange = lastIndex < this.firstRow || lastIndex > this.lastRow;\n        if (firstNodeOutOfRange || lastNodeOutOfRange) {\n            return [];\n        }\n        var result = [];\n        var startIndex = firstIndex <= lastIndex ? firstIndex : lastIndex;\n        var endIndex = firstIndex <= lastIndex ? lastIndex : firstIndex;\n        for (var i = startIndex; i <= endIndex; i++) {\n            result.push(this.rowNodesByIndex[i]);\n        }\n        return result;\n    };\n    ViewportRowModel.prototype.forEachNode = function (callback) {\n        var _this = this;\n        var callbackCount = 0;\n        Object.keys(this.rowNodesByIndex).forEach(function (indexStr) {\n            var index = parseInt(indexStr, 10);\n            var rowNode = _this.rowNodesByIndex[index];\n            callback(rowNode, callbackCount);\n            callbackCount++;\n        });\n    };\n    ViewportRowModel.prototype.setRowData = function (rowData) {\n        var _this = this;\n        ag_grid_community_1._.iterateObject(rowData, function (indexStr, dataItem) {\n            var index = parseInt(indexStr, 10);\n            // we should never keep rows that we didn't specifically ask for, this\n            // guarantees the contract we have with the server.\n            if (index >= _this.firstRow && index <= _this.lastRow) {\n                var rowNode = _this.rowNodesByIndex[index];\n                // the abnormal case is we requested a row even though the grid didn't need it\n                // as a result of the paging and buffer (ie the row is off screen), in which\n                // case we need to create a new node now\n                if (ag_grid_community_1._.missing(rowNode)) {\n                    rowNode = _this.createBlankRowNode(index);\n                    _this.rowNodesByIndex[index] = rowNode;\n                }\n                // now we deffo have a row node, so set in the details\n                // if the grid already asked for this row (the normal case), then we would\n                // of put a placeholder node in place.\n                rowNode.setDataAndId(dataItem, index.toString());\n            }\n        });\n    };\n    ViewportRowModel.prototype.createBlankRowNode = function (rowIndex) {\n        var rowNode = new ag_grid_community_1.RowNode();\n        this.context.wireBean(rowNode);\n        rowNode.setRowHeight(this.rowHeight);\n        rowNode.setRowTop(this.rowHeight * rowIndex);\n        rowNode.setRowIndex(rowIndex);\n        return rowNode;\n    };\n    ViewportRowModel.prototype.setRowCount = function (rowCount) {\n        if (rowCount !== this.rowCount) {\n            this.rowCount = rowCount;\n            var event_1 = {\n                type: ag_grid_community_1.Events.EVENT_MODEL_UPDATED,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                newData: false,\n                newPage: false,\n                keepRenderedRows: false,\n                animate: false\n            };\n            this.eventService.dispatchEvent(event_1);\n        }\n    };\n    ViewportRowModel.prototype.isRowPresent = function (rowNode) {\n        return false;\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ViewportRowModel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], ViewportRowModel.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('selectionController'),\n        __metadata(\"design:type\", ag_grid_community_1.SelectionController)\n    ], ViewportRowModel.prototype, \"selectionController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('context'),\n        __metadata(\"design:type\", ag_grid_community_1.Context)\n    ], ViewportRowModel.prototype, \"context\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], ViewportRowModel.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnApi'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnApi)\n    ], ViewportRowModel.prototype, \"columnApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", ag_grid_community_1.RowRenderer)\n    ], ViewportRowModel.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ViewportRowModel.prototype, \"init\", null);\n    __decorate([\n        ag_grid_community_1.PreDestroy,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ViewportRowModel.prototype, \"destroyDatasource\", null);\n    ViewportRowModel = __decorate([\n        ag_grid_community_1.Bean('rowModel')\n    ], ViewportRowModel);\n    return ViewportRowModel;\n}());\nexports.ViewportRowModel = ViewportRowModel;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/rowModels/viewport/viewportRowModel.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/rowStages/aggregationStage.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/rowStages/aggregationStage.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar pivotStage_1 = __webpack_require__(/*! ./pivotStage */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowStages/pivotStage.js\");\nvar aggFuncService_1 = __webpack_require__(/*! ../aggregation/aggFuncService */ \"../../node_modules/ag-grid-enterprise/dist/lib/aggregation/aggFuncService.js\");\nvar AggregationStage = /** @class */ (function () {\n    function AggregationStage() {\n    }\n    // it's possible to recompute the aggregate without doing the other parts\n    // + gridApi.recomputeAggregates()\n    AggregationStage.prototype.execute = function (params) {\n        // we don't do aggregation if doing legacy tree good\n        var doingLegacyTreeData = ag_grid_community_1._.exists(this.gridOptionsWrapper.getNodeChildDetailsFunc());\n        if (doingLegacyTreeData) {\n            return null;\n        }\n        // if changed path is active, it means we came from a) change detection or b) transaction update.\n        // for both of these, if no value columns are present, it means there is nothing to aggregate now\n        // and there is no cleanup to be done (as value columns don't change between transactions or change\n        // detections). if no value columns and no changed path, means we have to go through all nodes in\n        // case we need to clean up agg data from before.\n        var noValueColumns = ag_grid_community_1._.missingOrEmpty(this.columnController.getValueColumns());\n        var noUserAgg = !this.gridOptionsWrapper.getGroupRowAggNodesFunc();\n        var changedPathActive = params.changedPath && params.changedPath.isActive();\n        if (noValueColumns && noUserAgg && changedPathActive) {\n            return;\n        }\n        var aggDetails = this.createAggDetails(params);\n        this.recursivelyCreateAggData(aggDetails);\n    };\n    AggregationStage.prototype.createAggDetails = function (params) {\n        var pivotActive = this.columnController.isPivotActive();\n        var measureColumns = this.columnController.getValueColumns();\n        var pivotColumns = pivotActive ? this.columnController.getPivotColumns() : [];\n        var aggDetails = {\n            changedPath: params.changedPath,\n            valueColumns: measureColumns,\n            pivotColumns: pivotColumns\n        };\n        return aggDetails;\n    };\n    AggregationStage.prototype.recursivelyCreateAggData = function (aggDetails) {\n        var _this = this;\n        var callback = function (rowNode) {\n            var hasNoChildren = !rowNode.hasChildren();\n            if (hasNoChildren) {\n                // this check is needed for TreeData, in case the node is no longer a child,\n                // but it was a child previously.\n                if (rowNode.aggData) {\n                    rowNode.setAggData(null);\n                }\n                // never agg data for leaf nodes\n                return;\n            }\n            //Optionally prevent the aggregation at the root Node\n            //https://ag-grid.atlassian.net/browse/AG-388\n            var isRootNode = rowNode.level === -1;\n            if (isRootNode) {\n                var notPivoting = !_this.columnController.isPivotMode();\n                var suppressAggAtRootLevel = _this.gridOptionsWrapper.isSuppressAggAtRootLevel();\n                if (suppressAggAtRootLevel && notPivoting) {\n                    return;\n                }\n            }\n            _this.aggregateRowNode(rowNode, aggDetails);\n        };\n        aggDetails.changedPath.forEachChangedNodeDepthFirst(callback, true);\n    };\n    AggregationStage.prototype.aggregateRowNode = function (rowNode, aggDetails) {\n        var measureColumnsMissing = aggDetails.valueColumns.length === 0;\n        var pivotColumnsMissing = aggDetails.pivotColumns.length === 0;\n        var userFunc = this.gridOptionsWrapper.getGroupRowAggNodesFunc();\n        var aggResult;\n        if (userFunc) {\n            aggResult = userFunc(rowNode.childrenAfterFilter);\n        }\n        else if (measureColumnsMissing) {\n            aggResult = null;\n        }\n        else if (pivotColumnsMissing) {\n            aggResult = this.aggregateRowNodeUsingValuesOnly(rowNode, aggDetails);\n        }\n        else {\n            aggResult = this.aggregateRowNodeUsingValuesAndPivot(rowNode);\n        }\n        rowNode.setAggData(aggResult);\n        // if we are grouping, then it's possible there is a sibling footer\n        // to the group, so update the data here also if there is one\n        if (rowNode.sibling) {\n            rowNode.sibling.setAggData(aggResult);\n        }\n    };\n    AggregationStage.prototype.aggregateRowNodeUsingValuesAndPivot = function (rowNode) {\n        var _this = this;\n        var result = {};\n        var pivotColumnDefs = this.pivotStage.getPivotColumnDefs();\n        // Step 1: process value columns\n        pivotColumnDefs\n            .filter(function (v) { return !ag_grid_community_1._.exists(v.pivotTotalColumnIds); }) // only process pivot value columns\n            .forEach(function (valueColDef) {\n            var keys = valueColDef.pivotKeys || [];\n            var values;\n            var valueColumn = valueColDef.pivotValueColumn;\n            var colId = valueColDef.colId;\n            if (rowNode.leafGroup) {\n                // lowest level group, get the values from the mapped set\n                values = _this.getValuesFromMappedSet(rowNode.childrenMapped, keys, valueColumn);\n            }\n            else {\n                // value columns and pivot columns, non-leaf group\n                values = _this.getValuesPivotNonLeaf(rowNode, colId);\n            }\n            result[colId] = _this.aggregateValues(values, valueColumn.getAggFunc());\n        });\n        // Step 2: process total columns\n        pivotColumnDefs\n            .filter(function (v) { return ag_grid_community_1._.exists(v.pivotTotalColumnIds); }) // only process pivot total columns\n            .forEach(function (totalColDef) {\n            var aggResults = [];\n            var pivotValueColumn = totalColDef.pivotValueColumn, pivotTotalColumnIds = totalColDef.pivotTotalColumnIds, colId = totalColDef.colId;\n            //retrieve results for colIds associated with this pivot total column\n            if (!pivotTotalColumnIds || !pivotTotalColumnIds.length) {\n                return;\n            }\n            pivotTotalColumnIds.forEach(function (colId) {\n                aggResults.push(result[colId]);\n            });\n            result[colId] = _this.aggregateValues(aggResults, pivotValueColumn.getAggFunc());\n        });\n        return result;\n    };\n    AggregationStage.prototype.aggregateRowNodeUsingValuesOnly = function (rowNode, aggDetails) {\n        var _this = this;\n        var result = {};\n        var changedValueColumns = aggDetails.changedPath.isActive() ?\n            aggDetails.changedPath.getValueColumnsForNode(rowNode, aggDetails.valueColumns)\n            : aggDetails.valueColumns;\n        var notChangedValueColumns = aggDetails.changedPath.isActive() ?\n            aggDetails.changedPath.getNotValueColumnsForNode(rowNode, aggDetails.valueColumns)\n            : null;\n        var values2d = this.getValuesNormal(rowNode, changedValueColumns);\n        var oldValues = rowNode.aggData;\n        changedValueColumns.forEach(function (valueColumn, index) {\n            result[valueColumn.getId()] = _this.aggregateValues(values2d[index], valueColumn.getAggFunc());\n        });\n        if (notChangedValueColumns && oldValues) {\n            notChangedValueColumns.forEach(function (valueColumn) {\n                result[valueColumn.getId()] = oldValues[valueColumn.getId()];\n            });\n        }\n        return result;\n    };\n    AggregationStage.prototype.getValuesPivotNonLeaf = function (rowNode, colId) {\n        var values = [];\n        rowNode.childrenAfterFilter.forEach(function (node) {\n            var value = node.aggData[colId];\n            values.push(value);\n        });\n        return values;\n    };\n    AggregationStage.prototype.getValuesFromMappedSet = function (mappedSet, keys, valueColumn) {\n        var _this = this;\n        var mapPointer = mappedSet;\n        keys.forEach(function (key) { return (mapPointer = mapPointer ? mapPointer[key] : null); });\n        if (!mapPointer) {\n            return [];\n        }\n        var values = [];\n        mapPointer.forEach(function (rowNode) {\n            var value = _this.valueService.getValue(valueColumn, rowNode);\n            values.push(value);\n        });\n        return values;\n    };\n    AggregationStage.prototype.getValuesNormal = function (rowNode, valueColumns) {\n        // create 2d array, of all values for all valueColumns\n        var values = [];\n        valueColumns.forEach(function () { return values.push([]); });\n        var valueColumnCount = valueColumns.length;\n        var rowCount = rowNode.childrenAfterFilter.length;\n        for (var i = 0; i < rowCount; i++) {\n            var childNode = rowNode.childrenAfterFilter[i];\n            for (var j = 0; j < valueColumnCount; j++) {\n                var valueColumn = valueColumns[j];\n                // if the row is a group, then it will only have an agg result value,\n                // which means valueGetter is never used.\n                var value = this.valueService.getValue(valueColumn, childNode);\n                values[j].push(value);\n            }\n        }\n        return values;\n    };\n    AggregationStage.prototype.aggregateValues = function (values, aggFuncOrString) {\n        var aggFunction;\n        if (typeof aggFuncOrString === 'string') {\n            aggFunction = this.aggFuncService.getAggFunc(aggFuncOrString);\n        }\n        else {\n            aggFunction = aggFuncOrString;\n        }\n        if (typeof aggFunction !== 'function') {\n            console.error(\"ag-Grid: unrecognised aggregation function \" + aggFuncOrString);\n            return null;\n        }\n        return aggFunction(values);\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], AggregationStage.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], AggregationStage.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('valueService'),\n        __metadata(\"design:type\", ag_grid_community_1.ValueService)\n    ], AggregationStage.prototype, \"valueService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('pivotStage'),\n        __metadata(\"design:type\", pivotStage_1.PivotStage)\n    ], AggregationStage.prototype, \"pivotStage\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('aggFuncService'),\n        __metadata(\"design:type\", aggFuncService_1.AggFuncService)\n    ], AggregationStage.prototype, \"aggFuncService\", void 0);\n    AggregationStage = __decorate([\n        ag_grid_community_1.Bean('aggregationStage')\n    ], AggregationStage);\n    return AggregationStage;\n}());\nexports.AggregationStage = AggregationStage;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/rowStages/aggregationStage.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/rowStages/groupStage.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/rowStages/groupStage.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar GroupStage = /** @class */ (function () {\n    function GroupStage() {\n        // we use a sequence variable so that each time we do a grouping, we don't\n        // reuse the ids - otherwise the rowRenderer will confuse rowNodes between redraws\n        // when it tries to animate between rows. we set to -1 as others row id 0 will be shared\n        // with the other rows.\n        this.groupIdSequence = new ag_grid_community_1.NumberSequence(1);\n    }\n    GroupStage.prototype.postConstruct = function () {\n        this.usingTreeData = this.gridOptionsWrapper.isTreeData();\n        if (this.usingTreeData) {\n            this.getDataPath = this.gridOptionsWrapper.getDataPathFunc();\n        }\n    };\n    GroupStage.prototype.execute = function (params) {\n        var details = this.createGroupingDetails(params);\n        if (details.transaction) {\n            this.handleTransaction(details);\n        }\n        else {\n            var afterColsChanged = params.afterColumnsChanged === true;\n            this.shotgunResetEverything(details, afterColsChanged);\n        }\n        this.sortGroupsWithComparator(details.rootNode);\n        this.selectableService.updateSelectableAfterGrouping(details.rootNode);\n    };\n    GroupStage.prototype.createGroupingDetails = function (params) {\n        var rowNode = params.rowNode, changedPath = params.changedPath, rowNodeTransaction = params.rowNodeTransaction, rowNodeOrder = params.rowNodeOrder;\n        var groupedCols = this.usingTreeData ? null : this.columnController.getRowGroupColumns();\n        var isGrouping = this.usingTreeData || (groupedCols && groupedCols.length > 0);\n        var usingTransaction = isGrouping && ag_grid_community_1._.exists(rowNodeTransaction);\n        var details = {\n            // someone complained that the parent attribute was causing some change detection\n            // to break is some angular add-on - which i never used. taking the parent out breaks\n            // a cyclic dependency, hence this flag got introduced.\n            includeParents: !this.gridOptionsWrapper.isSuppressParentsInRowNodes(),\n            expandByDefault: this.gridOptionsWrapper.isGroupSuppressRow() ?\n                -1 : this.gridOptionsWrapper.getGroupDefaultExpanded(),\n            groupedCols: groupedCols,\n            rootNode: rowNode,\n            pivotMode: this.columnController.isPivotMode(),\n            groupedColCount: this.usingTreeData || !groupedCols ? 0 : groupedCols.length,\n            rowNodeOrder: rowNodeOrder,\n            // important not to do transaction if we are not grouping, as otherwise the 'insert index' is ignored.\n            // ie, if not grouping, then we just want to shotgun so the rootNode.allLeafChildren gets copied\n            // to rootNode.childrenAfterGroup and maintaining order (as delta transaction misses the order).\n            transaction: usingTransaction ? rowNodeTransaction : null,\n            // if no transaction, then it's shotgun, changed path would be 'not active' at this point anyway\n            changedPath: changedPath\n        };\n        return details;\n    };\n    GroupStage.prototype.handleTransaction = function (details) {\n        var tran = details.transaction;\n        if (tran.add) {\n            this.insertNodes(tran.add, details);\n        }\n        if (tran.update) {\n            this.moveNodesInWrongPath(tran.update, details);\n        }\n        if (tran.remove) {\n            this.removeNodes(tran.remove, details);\n        }\n        if (details.rowNodeOrder) {\n            this.sortChildren(details);\n        }\n    };\n    // this is used when doing delta updates, eg Redux, keeps nodes in right order\n    GroupStage.prototype.sortChildren = function (details) {\n        details.changedPath.forEachChangedNodeDepthFirst(function (rowNode) {\n            ag_grid_community_1._.sortRowNodesByOrder(rowNode.childrenAfterGroup, details.rowNodeOrder);\n        });\n    };\n    GroupStage.prototype.sortGroupsWithComparator = function (rootNode) {\n        // we don't do group sorting for tree data\n        if (this.usingTreeData) {\n            return;\n        }\n        var comparator = this.gridOptionsWrapper.getDefaultGroupSortComparator();\n        if (ag_grid_community_1._.exists(comparator)) {\n            recursiveSort(rootNode);\n        }\n        function recursiveSort(rowNode) {\n            var doSort = ag_grid_community_1._.exists(rowNode.childrenAfterGroup) &&\n                // we only want to sort groups, so we do not sort leafs (a leaf group has leafs as children)\n                !rowNode.leafGroup;\n            if (doSort) {\n                rowNode.childrenAfterGroup.sort(comparator);\n                rowNode.childrenAfterGroup.forEach(function (childNode) { return recursiveSort(childNode); });\n            }\n        }\n    };\n    GroupStage.prototype.getExistingPathForNode = function (node, details) {\n        var res = [];\n        // when doing tree data, the node is part of the path,\n        // but when doing grid grouping, the node is not part of the path so we start with the parent.\n        var pointer = this.usingTreeData ? node : node.parent;\n        while (pointer && pointer !== details.rootNode) {\n            res.push({\n                key: pointer.key,\n                rowGroupColumn: pointer.rowGroupColumn,\n                field: pointer.field\n            });\n            pointer = pointer.parent;\n        }\n        res.reverse();\n        return res;\n    };\n    GroupStage.prototype.moveNodesInWrongPath = function (childNodes, details) {\n        var _this = this;\n        childNodes.forEach(function (childNode) {\n            // we add node, even if parent has not changed, as the data could have\n            // changed, hence aggregations will be wrong\n            if (details.changedPath.isActive()) {\n                details.changedPath.addParentNode(childNode.parent);\n            }\n            var infoToKeyMapper = function (item) { return item.key; };\n            var oldPath = _this.getExistingPathForNode(childNode, details).map(infoToKeyMapper);\n            var newPath = _this.getGroupInfo(childNode, details).map(infoToKeyMapper);\n            var nodeInCorrectPath = ag_grid_community_1._.compareArrays(oldPath, newPath);\n            if (!nodeInCorrectPath) {\n                _this.moveNode(childNode, details);\n            }\n        });\n    };\n    GroupStage.prototype.moveNode = function (childNode, details) {\n        this.removeNodesInStages([childNode], details);\n        this.insertOneNode(childNode, details);\n        // hack - if we didn't do this, then renaming a tree item (ie changing rowNode.key) wouldn't get\n        // refreshed into the gui.\n        // this is needed to kick off the event that rowComp listens to for refresh. this in turn\n        // then will get each cell in the row to refresh - which is what we need as we don't know which\n        // columns will be displaying the rowNode.key info.\n        childNode.setData(childNode.data);\n        // we add both old and new parents to changed path, as both will need to be refreshed.\n        // we already added the old parent (in calling method), so just add the new parent here\n        if (details.changedPath.isActive()) {\n            var newParent = childNode.parent;\n            details.changedPath.addParentNode(newParent);\n        }\n    };\n    GroupStage.prototype.removeNodes = function (leafRowNodes, details) {\n        this.removeNodesInStages(leafRowNodes, details);\n        if (details.changedPath.isActive()) {\n            leafRowNodes.forEach(function (rowNode) { return details.changedPath.addParentNode(rowNode.parent); });\n        }\n    };\n    GroupStage.prototype.removeNodesInStages = function (leafRowNodes, details) {\n        this.removeNodesFromParents(leafRowNodes, details);\n        this.postRemoveCreateFillerNodes(leafRowNodes, details);\n        this.postRemoveRemoveEmptyGroups(leafRowNodes, details);\n    };\n    GroupStage.prototype.forEachParentGroup = function (details, child, callback) {\n        var pointer = child.parent;\n        while (pointer && pointer !== details.rootNode) {\n            callback(pointer);\n            pointer = pointer.parent;\n        }\n    };\n    GroupStage.prototype.removeNodesFromParents = function (nodesToRemove, details) {\n        var _this = this;\n        var batchRemover = new BatchRemover();\n        nodesToRemove.forEach(function (nodeToRemove) {\n            _this.removeFromParent(nodeToRemove, batchRemover);\n            // remove from allLeafChildren. we clear down all parents EXCEPT the Root Node, as\n            // the ClientSideNodeManager is responsible for the Root Node.\n            _this.forEachParentGroup(details, nodeToRemove, function (parentNode) {\n                batchRemover.removeFromAllLeafChildren(parentNode, nodeToRemove);\n            });\n        });\n        batchRemover.flush();\n    };\n    GroupStage.prototype.postRemoveCreateFillerNodes = function (nodesToRemove, details) {\n        var _this = this;\n        nodesToRemove.forEach(function (nodeToRemove) {\n            // if not group, and children are present, need to move children to a group.\n            // otherwise if no children, we can just remove without replacing.\n            var replaceWithGroup = nodeToRemove.hasChildren();\n            if (replaceWithGroup) {\n                var oldPath = _this.getExistingPathForNode(nodeToRemove, details);\n                // because we just removed the userGroup, this will always return new support group\n                var newGroupNode_1 = _this.findParentForNode(nodeToRemove, oldPath, details);\n                // these properties are the ones that will be incorrect in the newly created group,\n                // so copy them from the old childNode\n                newGroupNode_1.expanded = nodeToRemove.expanded;\n                newGroupNode_1.allLeafChildren = nodeToRemove.allLeafChildren;\n                newGroupNode_1.childrenAfterGroup = nodeToRemove.childrenAfterGroup;\n                newGroupNode_1.childrenMapped = nodeToRemove.childrenMapped;\n                newGroupNode_1.childrenAfterGroup.forEach(function (rowNode) { return rowNode.parent = newGroupNode_1; });\n            }\n        });\n    };\n    GroupStage.prototype.postRemoveRemoveEmptyGroups = function (nodesToRemove, details) {\n        var _this = this;\n        // we do this multiple times, as when we remove groups, that means the parent of just removed\n        // group can then be empty. to get around this, if we remove, then we check everything again for\n        // newly emptied groups. the max number of times this will execute is the depth of the group tree.\n        var checkAgain = true;\n        var groupShouldBeRemoved = function (rowNode) {\n            // because of the while loop below, it's possible we already moved the node,\n            // so double check before trying to remove again.\n            var mapKey = _this.getChildrenMappedKey(rowNode.key, rowNode.rowGroupColumn);\n            var parentRowNode = rowNode.parent;\n            var groupAlreadyRemoved = (parentRowNode && parentRowNode.childrenMapped) ?\n                !parentRowNode.childrenMapped[mapKey] : true;\n            if (groupAlreadyRemoved) {\n                // if not linked, then group was already removed\n                return false;\n            }\n            else {\n                // if still not removed, then we remove if this group is empty\n                return rowNode.isEmptyRowGroupNode();\n            }\n        };\n        var _loop_1 = function () {\n            checkAgain = false;\n            var batchRemover = new BatchRemover();\n            nodesToRemove.forEach(function (nodeToRemove) {\n                // remove empty groups\n                _this.forEachParentGroup(details, nodeToRemove, function (rowNode) {\n                    if (groupShouldBeRemoved(rowNode)) {\n                        checkAgain = true;\n                        _this.removeFromParent(rowNode, batchRemover);\n                        // we remove selection on filler nodes here, as the selection would not be removed\n                        // from the RowNodeManager, as filler nodes don't exist on the RowNodeManager\n                        rowNode.setSelected(false);\n                    }\n                });\n            });\n            batchRemover.flush();\n        };\n        while (checkAgain) {\n            _loop_1();\n        }\n    };\n    // removes the node from the parent by:\n    // a) removing from childrenAfterGroup (using batchRemover if present, otherwise immediately)\n    // b) removing from childrenMapped (immediately)\n    // c) setRowTop(null) - as the rowRenderer uses this to know the RowNode is no longer needed\n    GroupStage.prototype.removeFromParent = function (child, batchRemover) {\n        if (child.parent) {\n            if (batchRemover) {\n                batchRemover.removeFromChildrenAfterGroup(child.parent, child);\n            }\n            else {\n                ag_grid_community_1._.removeFromArray(child.parent.childrenAfterGroup, child);\n            }\n        }\n        var mapKey = this.getChildrenMappedKey(child.key, child.rowGroupColumn);\n        if (child.parent && child.parent.childrenMapped) {\n            child.parent.childrenMapped[mapKey] = undefined;\n        }\n        // this is important for transition, see rowComp removeFirstPassFuncs. when doing animation and\n        // remove, if rowTop is still present, the rowComp thinks it's just moved position.\n        child.setRowTop(null);\n    };\n    GroupStage.prototype.addToParent = function (child, parent) {\n        var mapKey = this.getChildrenMappedKey(child.key, child.rowGroupColumn);\n        if (parent) {\n            if (parent.childrenMapped) {\n                parent.childrenMapped[mapKey] = child;\n            }\n            parent.childrenAfterGroup.push(child);\n        }\n    };\n    GroupStage.prototype.areGroupColsEqual = function (d1, d2) {\n        if (d1 == null || d2 == null) {\n            return false;\n        }\n        if (d1.pivotMode !== d2.pivotMode) {\n            return false;\n        }\n        if (!ag_grid_community_1._.compareArrays(d1.groupedCols, d2.groupedCols)) {\n            return false;\n        }\n        return true;\n    };\n    GroupStage.prototype.shotgunResetEverything = function (details, afterColumnsChanged) {\n        var skipStage = afterColumnsChanged ?\n            this.usingTreeData || this.areGroupColsEqual(details, this.oldGroupingDetails)\n            : false;\n        this.oldGroupingDetails = details;\n        if (skipStage) {\n            return;\n        }\n        // because we are not creating the root node each time, we have the logic\n        // here to change leafGroup once.\n        // we set .leafGroup to false for tree data, as .leafGroup is only used when pivoting, and pivoting\n        // isn't allowed with treeData, so the grid never actually use .leafGroup when doing treeData.\n        details.rootNode.leafGroup = this.usingTreeData ? false : details.groupedCols.length === 0;\n        // we are doing everything from scratch, so reset childrenAfterGroup and childrenMapped from the rootNode\n        details.rootNode.childrenAfterGroup = [];\n        details.rootNode.childrenMapped = {};\n        this.insertNodes(details.rootNode.allLeafChildren, details);\n    };\n    GroupStage.prototype.insertNodes = function (newRowNodes, details) {\n        var _this = this;\n        newRowNodes.forEach(function (rowNode) {\n            _this.insertOneNode(rowNode, details);\n            if (details.changedPath.isActive()) {\n                details.changedPath.addParentNode(rowNode.parent);\n            }\n        });\n    };\n    GroupStage.prototype.insertOneNode = function (childNode, details) {\n        var path = this.getGroupInfo(childNode, details);\n        var parentGroup = this.findParentForNode(childNode, path, details);\n        if (!parentGroup.group) {\n            console.warn(\"ag-Grid: duplicate group keys for row data, keys should be unique\", [parentGroup.data, childNode.data]);\n        }\n        if (this.usingTreeData) {\n            this.swapGroupWithUserNode(parentGroup, childNode);\n        }\n        else {\n            childNode.parent = parentGroup;\n            childNode.level = path.length;\n            parentGroup.childrenAfterGroup.push(childNode);\n        }\n    };\n    GroupStage.prototype.findParentForNode = function (childNode, path, details) {\n        var _this = this;\n        var nextNode = details.rootNode;\n        path.forEach(function (groupInfo, level) {\n            nextNode = _this.getOrCreateNextNode(nextNode, groupInfo, level, details);\n            // node gets added to all group nodes.\n            // note: we do not add to rootNode here, as the rootNode is the master list of rowNodes\n            nextNode.allLeafChildren.push(childNode);\n        });\n        return nextNode;\n    };\n    GroupStage.prototype.swapGroupWithUserNode = function (fillerGroup, userGroup) {\n        userGroup.parent = fillerGroup.parent;\n        userGroup.key = fillerGroup.key;\n        userGroup.field = fillerGroup.field;\n        userGroup.groupData = fillerGroup.groupData;\n        userGroup.level = fillerGroup.level;\n        userGroup.expanded = fillerGroup.expanded;\n        // we set .leafGroup to false for tree data, as .leafGroup is only used when pivoting, and pivoting\n        // isn't allowed with treeData, so the grid never actually use .leafGroup when doing treeData.\n        userGroup.leafGroup = fillerGroup.leafGroup;\n        // always null for userGroups, as row grouping is not allowed when doing tree data\n        userGroup.rowGroupIndex = fillerGroup.rowGroupIndex;\n        userGroup.allLeafChildren = fillerGroup.allLeafChildren;\n        userGroup.childrenAfterGroup = fillerGroup.childrenAfterGroup;\n        userGroup.childrenMapped = fillerGroup.childrenMapped;\n        this.removeFromParent(fillerGroup);\n        userGroup.childrenAfterGroup.forEach(function (rowNode) { return rowNode.parent = userGroup; });\n        this.addToParent(userGroup, fillerGroup.parent);\n    };\n    GroupStage.prototype.getOrCreateNextNode = function (parentGroup, groupInfo, level, details) {\n        var mapKey = this.getChildrenMappedKey(groupInfo.key, groupInfo.rowGroupColumn);\n        var nextNode = parentGroup.childrenMapped ? parentGroup.childrenMapped[mapKey] : undefined;\n        if (!nextNode) {\n            nextNode = this.createGroup(groupInfo, parentGroup, level, details);\n            // attach the new group to the parent\n            this.addToParent(nextNode, parentGroup);\n        }\n        return nextNode;\n    };\n    GroupStage.prototype.createGroup = function (groupInfo, parent, level, details) {\n        var _this = this;\n        var groupNode = new ag_grid_community_1.RowNode();\n        this.context.wireBean(groupNode);\n        groupNode.group = true;\n        groupNode.field = groupInfo.field;\n        groupNode.rowGroupColumn = groupInfo.rowGroupColumn;\n        groupNode.groupData = {};\n        var groupDisplayCols = this.columnController.getGroupDisplayColumns();\n        groupDisplayCols.forEach(function (col) {\n            // newGroup.rowGroupColumn=null when working off GroupInfo, and we always display the group in the group column\n            // if rowGroupColumn is present, then it's grid row grouping and we only include if configuration says so\n            var displayGroupForCol = _this.usingTreeData || (groupNode.rowGroupColumn ? col.isRowGroupDisplayed(groupNode.rowGroupColumn.getId()) : false);\n            if (displayGroupForCol) {\n                groupNode.groupData[col.getColId()] = groupInfo.key;\n            }\n        });\n        // we use negative number for the ids of the groups, this makes sure we don't clash with the\n        // id's of the leaf nodes.\n        groupNode.id = (this.groupIdSequence.next() * -1).toString();\n        groupNode.key = groupInfo.key;\n        groupNode.level = level;\n        groupNode.leafGroup = this.usingTreeData ? false : level === (details.groupedColCount - 1);\n        // if doing pivoting, then the leaf group is never expanded,\n        // as we do not show leaf rows\n        if (details.pivotMode && groupNode.leafGroup) {\n            groupNode.expanded = false;\n        }\n        else {\n            groupNode.expanded = this.isExpanded(details.expandByDefault, level);\n        }\n        groupNode.allLeafChildren = [];\n        // why is this done here? we are not updating the children could as we go,\n        // i suspect this is updated in the filter stage\n        groupNode.setAllChildrenCount(0);\n        groupNode.rowGroupIndex = this.usingTreeData ? null : level;\n        groupNode.childrenAfterGroup = [];\n        groupNode.childrenMapped = {};\n        groupNode.parent = details.includeParents ? parent : null;\n        return groupNode;\n    };\n    GroupStage.prototype.getChildrenMappedKey = function (key, rowGroupColumn) {\n        if (rowGroupColumn) {\n            // grouping by columns\n            return rowGroupColumn.getId() + '-' + key;\n        }\n        else {\n            // tree data - we don't have rowGroupColumns\n            return key;\n        }\n    };\n    GroupStage.prototype.isExpanded = function (expandByDefault, level) {\n        if (expandByDefault === -1) {\n            return true;\n        }\n        else {\n            return level < expandByDefault;\n        }\n    };\n    GroupStage.prototype.getGroupInfo = function (rowNode, details) {\n        if (this.usingTreeData) {\n            return this.getGroupInfoFromCallback(rowNode);\n        }\n        else {\n            return this.getGroupInfoFromGroupColumns(rowNode, details);\n        }\n    };\n    GroupStage.prototype.getGroupInfoFromCallback = function (rowNode) {\n        var keys = this.getDataPath ? this.getDataPath(rowNode.data) : null;\n        if (keys === null || keys === undefined || keys.length === 0) {\n            ag_grid_community_1._.doOnce(function () { return console.warn(\"getDataPath() should not return an empty path for data\", rowNode.data); }, 'groupStage.getGroupInfoFromCallback');\n        }\n        var groupInfoMapper = function (key) { return ({ key: key, field: null, rowGroupColumn: null }); };\n        return keys ? keys.map(groupInfoMapper) : [];\n    };\n    GroupStage.prototype.getGroupInfoFromGroupColumns = function (rowNode, details) {\n        var _this = this;\n        var res = [];\n        details.groupedCols.forEach(function (groupCol) {\n            var key = _this.valueService.getKeyForNode(groupCol, rowNode);\n            var keyExists = key !== null && key !== undefined;\n            // unbalanced tree and pivot mode don't work together - not because of the grid, it doesn't make\n            // mathematical sense as you are building up a cube. so if pivot mode, we put in a blank key where missing.\n            // this keeps the tree balanced and hence can be represented as a group.\n            if (details.pivotMode && !keyExists) {\n                key = ' ';\n                keyExists = true;\n            }\n            if (keyExists) {\n                var item = {\n                    key: key,\n                    field: groupCol.getColDef().field,\n                    rowGroupColumn: groupCol\n                };\n                res.push(item);\n            }\n        });\n        return res;\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('selectionController'),\n        __metadata(\"design:type\", ag_grid_community_1.SelectionController)\n    ], GroupStage.prototype, \"selectionController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], GroupStage.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], GroupStage.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('selectableService'),\n        __metadata(\"design:type\", ag_grid_community_1.SelectableService)\n    ], GroupStage.prototype, \"selectableService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('valueService'),\n        __metadata(\"design:type\", ag_grid_community_1.ValueService)\n    ], GroupStage.prototype, \"valueService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], GroupStage.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('context'),\n        __metadata(\"design:type\", ag_grid_community_1.Context)\n    ], GroupStage.prototype, \"context\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GroupStage.prototype, \"postConstruct\", null);\n    GroupStage = __decorate([\n        ag_grid_community_1.Bean('groupStage')\n    ], GroupStage);\n    return GroupStage;\n}());\nexports.GroupStage = GroupStage;\n// doing _.removeFromArray() multiple times on a large list can be a bottleneck.\n// when doing large deletes (eg removing 1,000 rows) then we would be calling _.removeFromArray()\n// a thousands of times, in particular RootNode.allGroupChildren could be a large list, and\n// 1,000 removes is time consuming as each one requires traversing the full list.\n// to get around this, we do all the removes in a batch. this class manages the batch.\n//\n// This problem was brought to light by a client (AG-2879), with dataset of 20,000\n// in 10,000 groups (2 items per group), then deleting all rows with transaction,\n// it took about 20 seconds to delete. with the BathRemoved, the reduced to less than 1 second.\nvar BatchRemover = /** @class */ (function () {\n    function BatchRemover() {\n        this.allSets = {};\n        this.allParents = [];\n    }\n    BatchRemover.prototype.removeFromChildrenAfterGroup = function (parent, child) {\n        var set = this.getSet(parent);\n        set.removeFromChildrenAfterGroup[child.id] = true;\n    };\n    BatchRemover.prototype.removeFromAllLeafChildren = function (parent, child) {\n        var set = this.getSet(parent);\n        set.removeFromAllLeafChildren[child.id] = true;\n    };\n    BatchRemover.prototype.getSet = function (parent) {\n        if (!this.allSets[parent.id]) {\n            this.allSets[parent.id] = {\n                removeFromAllLeafChildren: {},\n                removeFromChildrenAfterGroup: {}\n            };\n            this.allParents.push(parent);\n        }\n        return this.allSets[parent.id];\n    };\n    BatchRemover.prototype.flush = function () {\n        var _this = this;\n        this.allParents.forEach(function (parent) {\n            var nodeDetails = _this.allSets[parent.id];\n            parent.childrenAfterGroup = parent.childrenAfterGroup.filter(function (child) {\n                var res = !nodeDetails.removeFromChildrenAfterGroup[child.id];\n                return res;\n            });\n            parent.allLeafChildren = parent.allLeafChildren.filter(function (child) { return !nodeDetails.removeFromAllLeafChildren[child.id]; });\n        });\n        this.allSets = {};\n        this.allParents.length = 0;\n    };\n    return BatchRemover;\n}());\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/rowStages/groupStage.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/rowStages/pivotColDefService.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/rowStages/pivotColDefService.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar PivotColDefService = /** @class */ (function () {\n    function PivotColDefService() {\n    }\n    PivotColDefService.prototype.createPivotColumnDefs = function (uniqueValues) {\n        // this is passed to the columnController, to configure the columns and groups we show\n        var pivotColumnGroupDefs = [];\n        // this is used by the aggregation stage, to do the aggregation based on the pivot columns\n        var pivotColumnDefs = [];\n        var pivotColumns = this.columnController.getPivotColumns();\n        var valueColumns = this.columnController.getValueColumns();\n        var levelsDeep = pivotColumns.length;\n        var columnIdSequence = new ag_grid_community_1.NumberSequence();\n        this.recursivelyAddGroup(pivotColumnGroupDefs, pivotColumnDefs, 1, uniqueValues, [], columnIdSequence, levelsDeep, pivotColumns);\n        this.addRowGroupTotals(pivotColumnGroupDefs, pivotColumnDefs, valueColumns, pivotColumns, columnIdSequence);\n        this.addPivotTotalsToGroups(pivotColumnGroupDefs, pivotColumnDefs, columnIdSequence);\n        // we clone, so the colDefs in pivotColumnsGroupDefs and pivotColumnDefs are not shared. this is so that\n        // any changes the user makes (via processSecondaryColumnDefinitions) don't impact the internal aggregations,\n        // as these use the col defs also\n        var pivotColumnDefsClone = pivotColumnDefs.map(function (colDef) { return ag_grid_community_1._.cloneObject(colDef); });\n        return {\n            pivotColumnGroupDefs: pivotColumnGroupDefs,\n            pivotColumnDefs: pivotColumnDefsClone\n        };\n    };\n    // parentChildren - the list of colDefs we are adding to\n    // @index - how far the column is from the top (also same as pivotKeys.length)\n    // @uniqueValues - the values for which we should create a col for\n    // @pivotKeys - the keys for the pivot, eg if pivoting on {Language,Country} then could be {English,Ireland}\n    PivotColDefService.prototype.recursivelyAddGroup = function (parentChildren, pivotColumnDefs, index, uniqueValues, pivotKeys, columnIdSequence, levelsDeep, primaryPivotColumns) {\n        var _this = this;\n        ag_grid_community_1._.iterateObject(uniqueValues, function (key, value) {\n            var newPivotKeys = pivotKeys.slice(0);\n            newPivotKeys.push(key);\n            var createGroup = index !== levelsDeep;\n            if (createGroup) {\n                var groupDef = {\n                    children: [],\n                    headerName: key,\n                    pivotKeys: newPivotKeys,\n                    columnGroupShow: 'open',\n                    groupId: 'pivot' + columnIdSequence.next()\n                };\n                parentChildren.push(groupDef);\n                _this.recursivelyAddGroup(groupDef.children, pivotColumnDefs, index + 1, value, newPivotKeys, columnIdSequence, levelsDeep, primaryPivotColumns);\n            }\n            else {\n                var measureColumns = _this.columnController.getValueColumns();\n                var valueGroup_1 = {\n                    children: [],\n                    headerName: key,\n                    pivotKeys: newPivotKeys,\n                    columnGroupShow: 'open',\n                    groupId: 'pivot' + columnIdSequence.next()\n                };\n                // if no value columns selected, then we insert one blank column, so the user at least sees columns\n                // rendered. otherwise the grid would render with no columns (just empty groups) which would give the\n                // impression that the grid is broken\n                if (measureColumns.length === 0) {\n                    // this is the blank column, for when no value columns enabled.\n                    var colDef_1 = _this.createColDef(null, '-', newPivotKeys, columnIdSequence);\n                    valueGroup_1.children.push(colDef_1);\n                    pivotColumnDefs.push(colDef_1);\n                }\n                else {\n                    measureColumns.forEach(function (measureColumn) {\n                        var columnName = _this.columnController.getDisplayNameForColumn(measureColumn, 'header');\n                        var colDef = _this.createColDef(measureColumn, columnName, newPivotKeys, columnIdSequence);\n                        colDef.columnGroupShow = 'open';\n                        valueGroup_1.children.push(colDef);\n                        pivotColumnDefs.push(colDef);\n                    });\n                }\n                parentChildren.push(valueGroup_1);\n            }\n        });\n        // sort by either user provided comparator, or our own one\n        var colDef = primaryPivotColumns[index - 1].getColDef();\n        var userComparator = colDef.pivotComparator;\n        var comparator = this.headerNameComparator.bind(this, userComparator);\n        parentChildren.sort(comparator);\n    };\n    PivotColDefService.prototype.addPivotTotalsToGroups = function (pivotColumnGroupDefs, pivotColumnDefs, columnIdSequence) {\n        var _this = this;\n        if (!this.gridOptionsWrapper.getPivotColumnGroupTotals()) {\n            return;\n        }\n        var insertAfter = this.gridOptionsWrapper.getPivotColumnGroupTotals() === 'after';\n        var valueCols = this.columnController.getValueColumns();\n        var aggFuncs = valueCols.map(function (valueCol) { return valueCol.getAggFunc(); });\n        // don't add pivot totals if there is less than 1 aggFunc or they are not all the same\n        if (!aggFuncs || aggFuncs.length < 1 || !this.sameAggFuncs(aggFuncs)) {\n            // console.warn('ag-Grid: aborting adding pivot total columns - value columns require same aggFunc');\n            return;\n        }\n        // arbitrarily select a value column to use as a template for pivot columns\n        var valueColumn = valueCols[0];\n        pivotColumnGroupDefs.forEach(function (groupDef) {\n            _this.recursivelyAddPivotTotal(groupDef, pivotColumnDefs, columnIdSequence, valueColumn, insertAfter);\n        });\n    };\n    PivotColDefService.prototype.recursivelyAddPivotTotal = function (groupDef, pivotColumnDefs, columnIdSequence, valueColumn, insertAfter) {\n        var _this = this;\n        var group = groupDef;\n        if (!group.children) {\n            var def = groupDef;\n            return def.colId ? [def.colId] : null;\n        }\n        var colIds = [];\n        // need to recurse children first to obtain colIds used in the aggregation stage\n        group.children\n            .forEach(function (grp) {\n            var childColIds = _this.recursivelyAddPivotTotal(grp, pivotColumnDefs, columnIdSequence, valueColumn, insertAfter);\n            if (childColIds) {\n                colIds = colIds.concat(childColIds);\n            }\n        });\n        // only add total colDef if there is more than 1 child node\n        if (group.children.length > 1) {\n            //create total colDef using an arbitrary value column as a template\n            var totalColDef = this.createColDef(valueColumn, 'Total', groupDef.pivotKeys, columnIdSequence);\n            totalColDef.pivotTotalColumnIds = colIds;\n            totalColDef.aggFunc = valueColumn.getAggFunc();\n            // add total colDef to group and pivot colDefs array\n            var children = groupDef.children;\n            insertAfter ? children.push(totalColDef) : children.unshift(totalColDef);\n            pivotColumnDefs.push(totalColDef);\n        }\n        return colIds;\n    };\n    PivotColDefService.prototype.addRowGroupTotals = function (pivotColumnGroupDefs, pivotColumnDefs, valueColumns, pivotColumns, columnIdSequence) {\n        var _this = this;\n        if (!this.gridOptionsWrapper.getPivotRowTotals()) {\n            return;\n        }\n        var insertAfter = this.gridOptionsWrapper.getPivotRowTotals() === 'after';\n        // order of row group totals depends on position\n        var valueCols = insertAfter ? valueColumns.slice() : valueColumns.slice().reverse();\n        var _loop_1 = function (i) {\n            var valueCol = valueCols[i];\n            var colIds = [];\n            pivotColumnGroupDefs.forEach(function (groupDef) {\n                colIds = colIds.concat(_this.extractColIdsForValueColumn(groupDef, valueCol));\n            });\n            var levelsDeep = pivotColumns.length;\n            this_1.createRowGroupTotal(pivotColumnGroupDefs, pivotColumnDefs, 1, [], columnIdSequence, levelsDeep, pivotColumns, valueCol, colIds, insertAfter);\n        };\n        var this_1 = this;\n        for (var i = 0; i < valueCols.length; i++) {\n            _loop_1(i);\n        }\n    };\n    PivotColDefService.prototype.extractColIdsForValueColumn = function (groupDef, valueColumn) {\n        var _this = this;\n        var group = groupDef;\n        if (!group.children) {\n            var colDef = group;\n            return colDef.pivotValueColumn === valueColumn && colDef.colId ? [colDef.colId] : [];\n        }\n        var colIds = [];\n        group.children\n            .forEach(function (grp) {\n            _this.extractColIdsForValueColumn(grp, valueColumn);\n            var childColIds = _this.extractColIdsForValueColumn(grp, valueColumn);\n            colIds = colIds.concat(childColIds);\n        });\n        return colIds;\n    };\n    PivotColDefService.prototype.createRowGroupTotal = function (parentChildren, pivotColumnDefs, index, pivotKeys, columnIdSequence, levelsDeep, primaryPivotColumns, valueColumn, colIds, insertAfter) {\n        var newPivotKeys = pivotKeys.slice(0);\n        var createGroup = index !== levelsDeep;\n        if (createGroup) {\n            var groupDef = {\n                children: [],\n                pivotKeys: newPivotKeys,\n                groupId: 'pivot' + columnIdSequence.next()\n            };\n            insertAfter ? parentChildren.push(groupDef) : parentChildren.unshift(groupDef);\n            this.createRowGroupTotal(groupDef.children, pivotColumnDefs, index + 1, newPivotKeys, columnIdSequence, levelsDeep, primaryPivotColumns, valueColumn, colIds, insertAfter);\n        }\n        else {\n            var measureColumns = this.columnController.getValueColumns();\n            var valueGroup = {\n                children: [],\n                pivotKeys: newPivotKeys,\n                groupId: 'pivot' + columnIdSequence.next()\n            };\n            if (measureColumns.length === 0) {\n                var colDef = this.createColDef(null, '-', newPivotKeys, columnIdSequence);\n                valueGroup.children.push(colDef);\n                pivotColumnDefs.push(colDef);\n            }\n            else {\n                var columnName = this.columnController.getDisplayNameForColumn(valueColumn, 'header');\n                var colDef = this.createColDef(valueColumn, columnName, newPivotKeys, columnIdSequence);\n                colDef.pivotTotalColumnIds = colIds;\n                valueGroup.children.push(colDef);\n                pivotColumnDefs.push(colDef);\n            }\n            insertAfter ? parentChildren.push(valueGroup) : parentChildren.unshift(valueGroup);\n        }\n    };\n    PivotColDefService.prototype.createColDef = function (valueColumn, headerName, pivotKeys, columnIdSequence) {\n        var colDef = {};\n        if (valueColumn) {\n            var colDefToCopy = valueColumn.getColDef();\n            ag_grid_community_1._.assign(colDef, colDefToCopy);\n            // even if original column was hidden, we always show the pivot value column, otherwise it would be\n            // very confusing for people thinking the pivot is broken\n            colDef.hide = false;\n        }\n        colDef.headerName = headerName;\n        colDef.colId = 'pivot_' + columnIdSequence.next();\n        // pivot columns repeat over field, so it makes sense to use the unique id instead. For example if you want to\n        // assign values to pinned bottom rows using setPinnedBottomRowData the value service will use this colId.\n        colDef.field = colDef.colId;\n        colDef.pivotKeys = pivotKeys;\n        colDef.pivotValueColumn = valueColumn;\n        colDef.filter = false;\n        return colDef;\n    };\n    PivotColDefService.prototype.sameAggFuncs = function (aggFuncs) {\n        if (aggFuncs.length == 1) {\n            return true;\n        }\n        //check if all aggFunc's match\n        for (var i = 1; i < aggFuncs.length; i++) {\n            if (aggFuncs[i] !== aggFuncs[0]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    PivotColDefService.prototype.headerNameComparator = function (userComparator, a, b) {\n        if (userComparator) {\n            return userComparator(a.headerName, b.headerName);\n        }\n        else {\n            if (a.headerName && !b.headerName) {\n                return 1;\n            }\n            else if (!a.headerName && b.headerName) {\n                return -1;\n            }\n            // slightly naff here - just to satify typescript\n            // really should be &&, but if so ts complains\n            // the above if/else checks would deal with either being falsy, so at this stage if either are falsy, both are\n            // ..still naff though\n            if (!a.headerName || !b.headerName) {\n                return 0;\n            }\n            if (a.headerName < b.headerName) {\n                return -1;\n            }\n            else if (a.headerName > b.headerName) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        }\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], PivotColDefService.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], PivotColDefService.prototype, \"gridOptionsWrapper\", void 0);\n    PivotColDefService = __decorate([\n        ag_grid_community_1.Bean('pivotColDefService')\n    ], PivotColDefService);\n    return PivotColDefService;\n}());\nexports.PivotColDefService = PivotColDefService;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/rowStages/pivotColDefService.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/rowStages/pivotStage.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/rowStages/pivotStage.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar pivotColDefService_1 = __webpack_require__(/*! ./pivotColDefService */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowStages/pivotColDefService.js\");\nvar PivotStage = /** @class */ (function () {\n    function PivotStage() {\n        this.uniqueValues = {};\n    }\n    PivotStage.prototype.execute = function (params) {\n        var rootNode = params.rowNode;\n        var changedPath = params.changedPath;\n        if (this.columnController.isPivotActive()) {\n            this.executePivotOn(rootNode, changedPath);\n        }\n        else {\n            this.executePivotOff(changedPath);\n        }\n    };\n    PivotStage.prototype.executePivotOff = function (changedPath) {\n        this.aggregationColumnsHashLastTime = null;\n        this.uniqueValues = {};\n        if (this.columnController.isSecondaryColumnsPresent()) {\n            this.columnController.setSecondaryColumns(null, \"rowModelUpdated\");\n            if (changedPath) {\n                changedPath.setInactive();\n            }\n        }\n    };\n    PivotStage.prototype.executePivotOn = function (rootNode, changedPath) {\n        var uniqueValues = this.bucketUpRowNodes(rootNode);\n        var uniqueValuesChanged = this.setUniqueValues(uniqueValues);\n        var aggregationColumns = this.columnController.getValueColumns();\n        var aggregationColumnsHash = aggregationColumns.map(function (column) { return column.getId(); }).join('#');\n        var aggregationFuncsHash = aggregationColumns.map(function (column) { return column.getAggFunc().toString(); }).join('#');\n        var aggregationColumnsChanged = this.aggregationColumnsHashLastTime !== aggregationColumnsHash;\n        var aggregationFuncsChanged = this.aggregationFuncsHashLastTime !== aggregationFuncsHash;\n        this.aggregationColumnsHashLastTime = aggregationColumnsHash;\n        this.aggregationFuncsHashLastTime = aggregationFuncsHash;\n        if (uniqueValuesChanged || aggregationColumnsChanged || aggregationFuncsChanged) {\n            var result = this.pivotColDefService.createPivotColumnDefs(this.uniqueValues);\n            this.pivotColumnGroupDefs = result.pivotColumnGroupDefs;\n            this.pivotColumnDefs = result.pivotColumnDefs;\n            this.columnController.setSecondaryColumns(this.pivotColumnGroupDefs, \"rowModelUpdated\");\n            // because the secondary columns have changed, then the aggregation needs to visit the whole\n            // tree again, so we make the changedPath not active, to force aggregation to visit all paths.\n            if (changedPath) {\n                changedPath.setInactive();\n            }\n        }\n    };\n    PivotStage.prototype.setUniqueValues = function (newValues) {\n        var json1 = JSON.stringify(newValues);\n        var json2 = JSON.stringify(this.uniqueValues);\n        var uniqueValuesChanged = json1 !== json2;\n        // we only continue the below if the unique values are different, as otherwise\n        // the result will be the same as the last time we did it\n        if (uniqueValuesChanged) {\n            this.uniqueValues = newValues;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    // returns true if values were different\n    PivotStage.prototype.bucketUpRowNodes = function (rootNode) {\n        var _this = this;\n        // accessed from inside inner function\n        var uniqueValues = {};\n        // finds all leaf groups and calls mapRowNode with it\n        var recursivelySearchForLeafNodes = function (rowNode) {\n            if (rowNode.leafGroup) {\n                _this.bucketRowNode(rowNode, uniqueValues);\n            }\n            else {\n                rowNode.childrenAfterFilter.forEach(function (child) {\n                    recursivelySearchForLeafNodes(child);\n                });\n            }\n        };\n        recursivelySearchForLeafNodes(rootNode);\n        return uniqueValues;\n    };\n    PivotStage.prototype.bucketRowNode = function (rowNode, uniqueValues) {\n        var pivotColumns = this.columnController.getPivotColumns();\n        if (pivotColumns.length === 0) {\n            rowNode.childrenMapped = null;\n            return;\n        }\n        rowNode.childrenMapped = this.bucketChildren(rowNode.childrenAfterFilter, pivotColumns, 0, uniqueValues);\n    };\n    PivotStage.prototype.bucketChildren = function (children, pivotColumns, pivotIndex, uniqueValues) {\n        var _this = this;\n        var mappedChildren = {};\n        var pivotColumn = pivotColumns[pivotIndex];\n        // map the children out based on the pivot column\n        children.forEach(function (child) {\n            var key = _this.valueService.getKeyForNode(pivotColumn, child);\n            if (ag_grid_community_1._.missing(key)) {\n                key = '';\n            }\n            if (!uniqueValues[key]) {\n                uniqueValues[key] = {};\n            }\n            if (!mappedChildren[key]) {\n                mappedChildren[key] = [];\n            }\n            mappedChildren[key].push(child);\n        });\n        // if it's the last pivot column, return as is, otherwise go one level further in the map\n        if (pivotIndex === pivotColumns.length - 1) {\n            return mappedChildren;\n        }\n        else {\n            var result_1 = {};\n            ag_grid_community_1._.iterateObject(mappedChildren, function (key, value) {\n                result_1[key] = _this.bucketChildren(value, pivotColumns, pivotIndex + 1, uniqueValues[key]);\n            });\n            return result_1;\n        }\n    };\n    PivotStage.prototype.getPivotColumnDefs = function () {\n        return this.pivotColumnDefs;\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], PivotStage.prototype, \"rowModel\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('valueService'),\n        __metadata(\"design:type\", ag_grid_community_1.ValueService)\n    ], PivotStage.prototype, \"valueService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], PivotStage.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], PivotStage.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('pivotColDefService'),\n        __metadata(\"design:type\", pivotColDefService_1.PivotColDefService)\n    ], PivotStage.prototype, \"pivotColDefService\", void 0);\n    PivotStage = __decorate([\n        ag_grid_community_1.Bean('pivotStage')\n    ], PivotStage);\n    return PivotStage;\n}());\nexports.PivotStage = PivotStage;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/rowStages/pivotStage.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFilter.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFilter.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar setValueModel_1 = __webpack_require__(/*! ./setValueModel */ \"../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setValueModel.js\");\nvar setFilterListItem_1 = __webpack_require__(/*! ./setFilterListItem */ \"../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFilterListItem.js\");\nvar virtualList_1 = __webpack_require__(/*! ../rendering/virtualList */ \"../../node_modules/ag-grid-enterprise/dist/lib/rendering/virtualList.js\");\nvar CheckboxState;\n(function (CheckboxState) {\n    CheckboxState[CheckboxState[\"CHECKED\"] = 0] = \"CHECKED\";\n    CheckboxState[CheckboxState[\"UNCHECKED\"] = 1] = \"UNCHECKED\";\n    CheckboxState[CheckboxState[\"INTERMEDIATE\"] = 2] = \"INTERMEDIATE\";\n})(CheckboxState || (CheckboxState = {}));\nvar SetFilter = /** @class */ (function (_super) {\n    __extends(SetFilter, _super);\n    function SetFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // unlike the simple filter's, nothing in the set filter UI shows/hides.\n    // maybe this method belongs in abstractSimpleFilter???\n    SetFilter.prototype.updateUiVisibility = function () { };\n    SetFilter.prototype.createBodyTemplate = function () {\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        return \"<div ref=\\\"ag-filter-loading\\\" class=\\\"loading-filter ag-hidden\\\">\" + translate('loadingOoo', 'Loading...') + \"</div>\\n                <div>\\n                    <div class=\\\"ag-filter-header-container\\\" role=\\\"presentation\\\">\\n                        <div class=\\\"ag-input-wrapper\\\" id=\\\"ag-mini-filter\\\" role=\\\"presentation\\\">\\n                            <input ref=\\\"eMiniFilter\\\" class=\\\"ag-filter-filter\\\" type=\\\"text\\\" placeholder=\\\"\" + translate('searchOoo', 'Search...') + \"\\\"/>\\n                        </div>\\n                        <label ref=\\\"eSelectAllContainer\\\" class=\\\"ag-set-filter-item\\\">\\n                            <div ref=\\\"eSelectAll\\\" class=\\\"ag-filter-checkbox\\\"></div><span class=\\\"ag-filter-value\\\">(\" + translate('selectAll', 'Select All') + \")</span>\\n                        </label>\\n                    </div>\\n                    <div ref=\\\"eSetFilterList\\\" class=\\\"ag-set-filter-list\\\" role=\\\"presentation\\\"></div>\\n                </div>\";\n    };\n    SetFilter.prototype.resetUiToDefaults = function () {\n        this.setMiniFilter(null);\n        this.valueModel.setModel(null, true);\n        this.selectEverything();\n    };\n    SetFilter.prototype.setModelIntoUi = function (model) {\n        this.resetUiToDefaults();\n        if (model) {\n            // also supporting old filter model for backwards compatibility\n            var newValues = (model instanceof Array) ? model : model.values;\n            this.valueModel.setModel(newValues);\n            this.updateSelectAll();\n            this.virtualList.refresh();\n        }\n    };\n    SetFilter.prototype.getModelFromUi = function () {\n        var values = this.valueModel.getModel();\n        if (!values) {\n            return null;\n        }\n        if (this.gridOptionsWrapper.isEnableOldSetFilterModel()) {\n            // this is a hack, it breaks casting rules, to apply with old model\n            return values;\n        }\n        else {\n            return {\n                values: values,\n                filterType: 'set'\n            };\n        }\n    };\n    SetFilter.prototype.areModelsEqual = function (a, b) {\n        return false;\n    };\n    SetFilter.prototype.setParams = function (params) {\n        _super.prototype.setParams.call(this, params);\n        this.setFilterParams = params;\n        this.eCheckedIcon = ag_grid_community_1._.createIconNoSpan('checkboxChecked', this.gridOptionsWrapper, this.setFilterParams.column);\n        this.eUncheckedIcon = ag_grid_community_1._.createIconNoSpan('checkboxUnchecked', this.gridOptionsWrapper, this.setFilterParams.column);\n        this.eIndeterminateCheckedIcon = ag_grid_community_1._.createIconNoSpan('checkboxIndeterminate', this.gridOptionsWrapper, this.setFilterParams.column);\n        this.initialiseFilterBodyUi();\n        var doSyncLikeExcel = params.syncValuesLikeExcel\n            // sync like excel only withs with CSRM\n            && this.rowModel.getType() === ag_grid_community_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE\n            // sync only needed if user not providing values\n            && !params.values;\n        if (doSyncLikeExcel) {\n            this.setupSyncValuesLikeExcel();\n        }\n    };\n    SetFilter.prototype.resetFilterValuesAndReapplyModel = function () {\n        var modelBeforeUpdate = this.getModel();\n        this.resetFilterValues();\n        if (modelBeforeUpdate) {\n            this.setModel(modelBeforeUpdate);\n        }\n    };\n    SetFilter.prototype.setupSyncValuesLikeExcel = function () {\n        var _this = this;\n        var col = this.setFilterParams.column;\n        var rowDataUpdatedListener = function () {\n            _this.resetFilterValuesAndReapplyModel();\n        };\n        var cellValueChangedListener = function (event) {\n            // only interested in changes to do with this column\n            if (event.column !== col) {\n                return;\n            }\n            _this.resetFilterValuesAndReapplyModel();\n        };\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_ROW_DATA_UPDATED, rowDataUpdatedListener);\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_CELL_VALUE_CHANGED, cellValueChangedListener);\n    };\n    SetFilter.prototype.updateCheckboxIcon = function () {\n        ag_grid_community_1._.clearElement(this.eSelectAll);\n        var icon;\n        switch (this.selectAllState) {\n            case CheckboxState.INTERMEDIATE:\n                icon = this.eIndeterminateCheckedIcon;\n                break;\n            case CheckboxState.CHECKED:\n                icon = this.eCheckedIcon;\n                break;\n            case CheckboxState.UNCHECKED:\n                icon = this.eUncheckedIcon;\n                break;\n            default: // default happens when initialising for first time\n                icon = this.eCheckedIcon;\n                break;\n        }\n        this.eSelectAll.appendChild(icon);\n    };\n    SetFilter.prototype.setLoading = function (loading) {\n        ag_grid_community_1._.setDisplayed(this.eFilterLoading, loading);\n    };\n    SetFilter.prototype.initialiseFilterBodyUi = function () {\n        var _this = this;\n        this.virtualList = new virtualList_1.VirtualList();\n        this.getContext().wireBean(this.virtualList);\n        var eSetFilterList = this.getRefElement('eSetFilterList');\n        if (eSetFilterList) {\n            eSetFilterList.appendChild(this.virtualList.getGui());\n        }\n        if (ag_grid_community_1._.exists(this.setFilterParams.cellHeight)) {\n            this.virtualList.setRowHeight(this.setFilterParams.cellHeight);\n        }\n        this.virtualList.setComponentCreator(this.createSetListItem.bind(this));\n        this.valueModel = new setValueModel_1.SetValueModel(this.setFilterParams.colDef, this.setFilterParams.rowModel, this.setFilterParams.valueGetter, this.setFilterParams.doesRowPassOtherFilter, this.setFilterParams.suppressSorting, function (values, toSelect) { return _this.setFilterValues(values, toSelect ? false : true, toSelect ? true : false, toSelect); }, this.setLoading.bind(this), this.valueFormatterService, this.setFilterParams.column);\n        this.virtualList.setModel(new ModelWrapper(this.valueModel));\n        ag_grid_community_1._.setDisplayed(this.getGui().querySelector('#ag-mini-filter'), !this.setFilterParams.suppressMiniFilter);\n        this.eMiniFilter.value = this.valueModel.getMiniFilter();\n        this.addDestroyableEventListener(this.eMiniFilter, 'input', this.onMiniFilterInput.bind(this));\n        this.addDestroyableEventListener(this.eMiniFilter, 'keypress', this.onMiniFilterKeyPress.bind(this));\n        this.updateCheckboxIcon();\n        this.addDestroyableEventListener(this.eSelectAllContainer, 'click', this.onSelectAll.bind(this));\n        this.updateSelectAll();\n        if (this.setFilterParams.suppressSelectAll) {\n            ag_grid_community_1._.setDisplayed(this.eSelectAllContainer, false);\n        }\n        this.virtualList.refresh();\n    };\n    SetFilter.prototype.createSetListItem = function (value) {\n        var _this = this;\n        var listItem = new setFilterListItem_1.SetFilterListItem(value, this.setFilterParams.column);\n        this.getContext().wireBean(listItem);\n        listItem.setSelected(this.valueModel.isValueSelected(value));\n        listItem.addEventListener(setFilterListItem_1.SetFilterListItem.EVENT_SELECTED, function () {\n            _this.onItemSelected(value, listItem.isSelected());\n        });\n        return listItem;\n    };\n    // we need to have the gui attached before we can draw the virtual rows, as the\n    // virtual row logic needs info about the gui state\n    SetFilter.prototype.afterGuiAttached = function (params) {\n        this.virtualList.refresh();\n        this.eMiniFilter.focus();\n    };\n    SetFilter.prototype.applyModel = function () {\n        var _this = this;\n        var res = _super.prototype.applyModel.call(this);\n        // keep the appliedModelValuesMapped in sync with the applied model\n        var appliedModel = this.getModel();\n        if (appliedModel) {\n            this.appliedModelValuesMapped = {};\n            appliedModel.values.forEach(function (value) { return _this.appliedModelValuesMapped[value] = true; });\n        }\n        else {\n            this.appliedModelValuesMapped = undefined;\n        }\n        return res;\n    };\n    SetFilter.prototype.doesFilterPass = function (params) {\n        // should never happen, if filter model not set, then this method should never be called\n        if (!this.appliedModelValuesMapped) {\n            return true;\n        }\n        var value = this.setFilterParams.valueGetter(params.node);\n        if (this.setFilterParams.colDef.keyCreator) {\n            value = this.setFilterParams.colDef.keyCreator({ value: value });\n        }\n        value = ag_grid_community_1._.makeNull(value);\n        if (Array.isArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                var valueExistsInMap = !!this.appliedModelValuesMapped[value[i]];\n                if (valueExistsInMap) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else {\n            var valueExistsInMap = !!this.appliedModelValuesMapped[value];\n            return valueExistsInMap;\n        }\n    };\n    SetFilter.prototype.onNewRowsLoaded = function () {\n        var valuesType = this.valueModel.getValuesType();\n        var valuesTypeProvided = valuesType === setValueModel_1.SetFilterModelValuesType.PROVIDED_CB\n            || valuesType === setValueModel_1.SetFilterModelValuesType.PROVIDED_LIST;\n        // if the user is providing values, and we are keeping the previous selection, then\n        // loading new rows into the grid should have no impact.\n        var newRowsActionKeep = this.isNewRowsActionKeep();\n        if (newRowsActionKeep && valuesTypeProvided) {\n            return;\n        }\n        var everythingSelected = !this.getModel();\n        // default is reset\n        this.valueModel.refreshAfterNewRowsLoaded(newRowsActionKeep, everythingSelected);\n        this.updateSelectAll();\n        this.virtualList.refresh();\n        this.applyModel();\n    };\n    //noinspection JSUnusedGlobalSymbols\n    /**\n     * Public method provided so the user can change the value of the filter once\n     * the filter has been already started\n     * @param options The options to use.\n     * @param selectAll If by default all the values should be selected.\n     * @param notify If we should let know the model that the values of the filter have changed\n     * @param toSelect The subset of options to subselect\n     */\n    SetFilter.prototype.setFilterValues = function (options, selectAll, notify, toSelect) {\n        var _this = this;\n        if (selectAll === void 0) { selectAll = false; }\n        if (notify === void 0) { notify = true; }\n        this.valueModel.onFilterValuesReady(function () {\n            var keepSelection = _this.setFilterParams && _this.setFilterParams.newRowsAction === 'keep';\n            _this.valueModel.setValuesType(setValueModel_1.SetFilterModelValuesType.PROVIDED_LIST);\n            _this.valueModel.refreshValues(options, keepSelection, selectAll);\n            _this.updateSelectAll();\n            var actualToSelect = toSelect ? toSelect : options;\n            actualToSelect.forEach(function (option) { return _this.valueModel.selectValue(option); });\n            _this.virtualList.refresh();\n            if (notify) {\n                // this.onUiChangedListener(true);\n                _this.onUiChanged();\n            }\n        });\n    };\n    //noinspection JSUnusedGlobalSymbols\n    /**\n     * Public method provided so the user can reset the values of the filter once that it has started\n     * @param options The options to use.\n     */\n    SetFilter.prototype.resetFilterValues = function () {\n        this.valueModel.setValuesType(setValueModel_1.SetFilterModelValuesType.NOT_PROVIDED);\n        this.onNewRowsLoaded();\n    };\n    SetFilter.prototype.onAnyFilterChanged = function () {\n        this.valueModel.refreshAfterAnyFilterChanged();\n        this.virtualList.refresh();\n    };\n    SetFilter.prototype.updateSelectAll = function () {\n        if (this.valueModel.isEverythingSelected()) {\n            this.selectAllState = CheckboxState.CHECKED;\n        }\n        else if (this.valueModel.isNothingSelected()) {\n            this.selectAllState = CheckboxState.UNCHECKED;\n        }\n        else {\n            this.selectAllState = CheckboxState.INTERMEDIATE;\n        }\n        this.updateCheckboxIcon();\n    };\n    SetFilter.prototype.onMiniFilterKeyPress = function (e) {\n        if (ag_grid_community_1._.isKeyPressed(e, ag_grid_community_1.Constants.KEY_ENTER)) {\n            this.onEnterKeyOnMiniFilter();\n        }\n    };\n    SetFilter.prototype.onEnterKeyOnMiniFilter = function () {\n        this.valueModel.selectAllFromMiniFilter();\n        this.virtualList.refresh();\n        this.updateSelectAll();\n        this.onUiChanged();\n    };\n    SetFilter.prototype.onMiniFilterInput = function () {\n        var miniFilterChanged = this.valueModel.setMiniFilter(this.eMiniFilter.value);\n        if (miniFilterChanged) {\n            this.virtualList.refresh();\n        }\n        this.updateSelectAll();\n    };\n    SetFilter.prototype.onSelectAll = function (event) {\n        event.preventDefault();\n        ag_grid_community_1._.addAgGridEventPath(event);\n        if (this.selectAllState === CheckboxState.CHECKED) {\n            this.selectAllState = CheckboxState.UNCHECKED;\n        }\n        else {\n            this.selectAllState = CheckboxState.CHECKED;\n        }\n        this.doSelectAll();\n    };\n    SetFilter.prototype.doSelectAll = function () {\n        var checked = this.selectAllState === CheckboxState.CHECKED;\n        if (checked) {\n            this.valueModel.selectAllUsingMiniFilter();\n        }\n        else {\n            this.valueModel.selectNothingUsingMiniFilter();\n        }\n        this.virtualList.refresh();\n        this.onUiChanged();\n        this.updateSelectAll();\n    };\n    SetFilter.prototype.onItemSelected = function (value, selected) {\n        if (selected) {\n            this.valueModel.selectValue(value);\n        }\n        else {\n            this.valueModel.unselectValue(value);\n        }\n        this.updateSelectAll();\n        this.onUiChanged();\n    };\n    SetFilter.prototype.setMiniFilter = function (newMiniFilter) {\n        this.valueModel.setMiniFilter(newMiniFilter);\n        this.eMiniFilter.value = this.valueModel.getMiniFilter();\n    };\n    SetFilter.prototype.getMiniFilter = function () {\n        return this.valueModel.getMiniFilter();\n    };\n    SetFilter.prototype.selectEverything = function () {\n        this.valueModel.selectAllUsingMiniFilter();\n        this.updateSelectAll();\n        this.virtualList.refresh();\n    };\n    SetFilter.prototype.selectNothing = function () {\n        this.valueModel.selectNothingUsingMiniFilter();\n        this.updateSelectAll();\n        this.virtualList.refresh();\n    };\n    SetFilter.prototype.unselectValue = function (value) {\n        this.valueModel.unselectValue(value);\n        this.updateSelectAll();\n        this.virtualList.refresh();\n    };\n    SetFilter.prototype.selectValue = function (value) {\n        this.valueModel.selectValue(value);\n        this.updateSelectAll();\n        this.virtualList.refresh();\n    };\n    SetFilter.prototype.isValueSelected = function (value) {\n        return this.valueModel.isValueSelected(value);\n    };\n    SetFilter.prototype.isEverythingSelected = function () {\n        return this.valueModel.isEverythingSelected();\n    };\n    SetFilter.prototype.isNothingSelected = function () {\n        return this.valueModel.isNothingSelected();\n    };\n    SetFilter.prototype.getUniqueValueCount = function () {\n        return this.valueModel.getUniqueValueCount();\n    };\n    SetFilter.prototype.getUniqueValue = function (index) {\n        return this.valueModel.getUniqueValue(index);\n    };\n    __decorate([\n        ag_grid_community_1.RefSelector('eSelectAll'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], SetFilter.prototype, \"eSelectAll\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eSelectAllContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], SetFilter.prototype, \"eSelectAllContainer\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eMiniFilter'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], SetFilter.prototype, \"eMiniFilter\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('ag-filter-loading'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], SetFilter.prototype, \"eFilterLoading\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('valueFormatterService'),\n        __metadata(\"design:type\", ag_grid_community_1.ValueFormatterService)\n    ], SetFilter.prototype, \"valueFormatterService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], SetFilter.prototype, \"eventService\", void 0);\n    return SetFilter;\n}(ag_grid_community_1.ProvidedFilter));\nexports.SetFilter = SetFilter;\nvar ModelWrapper = /** @class */ (function () {\n    function ModelWrapper(model) {\n        this.model = model;\n    }\n    ModelWrapper.prototype.getRowCount = function () {\n        return this.model.getDisplayedValueCount();\n    };\n    ModelWrapper.prototype.getRow = function (index) {\n        return this.model.getDisplayedValue(index);\n    };\n    return ModelWrapper;\n}());\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFilter.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFilterListItem.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFilterListItem.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar SetFilterListItem = /** @class */ (function (_super) {\n    __extends(SetFilterListItem, _super);\n    function SetFilterListItem(value, column) {\n        var _this = _super.call(this, SetFilterListItem.TEMPLATE) || this;\n        _this.selected = true;\n        _this.value = value;\n        _this.column = column;\n        return _this;\n    }\n    SetFilterListItem.prototype.useCellRenderer = function (target, eTarget, params) {\n        var cellRendererPromise = this.userComponentFactory.newCellRenderer(target.filterParams, params);\n        if (cellRendererPromise != null) {\n            ag_grid_community_1._.bindCellRendererToHtmlElement(cellRendererPromise, eTarget);\n        }\n        else {\n            if (params.valueFormatted == null && params.value == null) {\n                var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n                eTarget.innerText = '(' + localeTextFunc('blanks', 'Blanks') + ')';\n            }\n            else {\n                eTarget.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n            }\n        }\n        return cellRendererPromise;\n    };\n    SetFilterListItem.prototype.init = function () {\n        var _this = this;\n        this.eCheckedIcon = ag_grid_community_1._.createIconNoSpan('checkboxChecked', this.gridOptionsWrapper, this.column);\n        this.eUncheckedIcon = ag_grid_community_1._.createIconNoSpan('checkboxUnchecked', this.gridOptionsWrapper, this.column);\n        this.eCheckbox = this.queryForHtmlElement(\".ag-filter-checkbox\");\n        this.eClickableArea = this.getGui();\n        this.updateCheckboxIcon();\n        this.render();\n        var listener = function (mouseEvent) {\n            mouseEvent.preventDefault();\n            ag_grid_community_1._.addAgGridEventPath(mouseEvent);\n            _this.selected = !_this.selected;\n            _this.updateCheckboxIcon();\n            var event = {\n                type: SetFilterListItem.EVENT_SELECTED\n            };\n            return _this.dispatchEvent(event);\n        };\n        this.addDestroyableEventListener(this.eClickableArea, 'click', listener);\n    };\n    SetFilterListItem.prototype.isSelected = function () {\n        return this.selected;\n    };\n    SetFilterListItem.prototype.setSelected = function (selected) {\n        this.selected = selected;\n        this.updateCheckboxIcon();\n    };\n    SetFilterListItem.prototype.updateCheckboxIcon = function () {\n        ag_grid_community_1._.clearElement(this.eCheckbox);\n        if (this.isSelected()) {\n            this.eCheckbox.appendChild(this.eCheckedIcon);\n        }\n        else {\n            this.eCheckbox.appendChild(this.eUncheckedIcon);\n        }\n    };\n    SetFilterListItem.prototype.render = function () {\n        var _this = this;\n        var valueElement = this.queryForHtmlElement(\".ag-filter-value\");\n        var valueFormatted = this.valueFormatterService.formatValue(this.column, null, null, this.value);\n        var colDef = this.column.getColDef();\n        var params = {\n            value: this.value,\n            valueFormatted: valueFormatted,\n            api: this.gridOptionsWrapper.getApi()\n        };\n        var componentPromise = this.useCellRenderer(colDef, valueElement, params);\n        if (!componentPromise) {\n            return;\n        }\n        componentPromise.then(function (component) {\n            if (component && component.destroy) {\n                _this.addDestroyFunc(component.destroy.bind(component));\n            }\n        });\n    };\n    SetFilterListItem.EVENT_SELECTED = 'selected';\n    SetFilterListItem.TEMPLATE = \"<label class=\\\"ag-set-filter-item\\\">\\n            <div class=\\\"ag-filter-checkbox\\\"></div>\\n            <span class=\\\"ag-filter-value\\\"></span>\\n        </label>\";\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], SetFilterListItem.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('valueFormatterService'),\n        __metadata(\"design:type\", ag_grid_community_1.ValueFormatterService)\n    ], SetFilterListItem.prototype, \"valueFormatterService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", ag_grid_community_1.UserComponentFactory)\n    ], SetFilterListItem.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SetFilterListItem.prototype, \"init\", null);\n    return SetFilterListItem;\n}(ag_grid_community_1.Component));\nexports.SetFilterListItem = SetFilterListItem;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFilterListItem.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFloatingFilter.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFloatingFilter.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar SetFloatingFilterComp = /** @class */ (function (_super) {\n    __extends(SetFloatingFilterComp, _super);\n    function SetFloatingFilterComp() {\n        return _super.call(this, \"<div class=\\\"ag-input-wrapper\\\" role=\\\"presentation\\\"><input ref=\\\"eFloatingFilterText\\\" class=\\\"ag-floating-filter-input\\\"></div>\") || this;\n    }\n    SetFloatingFilterComp.prototype.init = function (params) {\n        this.eFloatingFilterText.disabled = true;\n        this.column = params.column;\n    };\n    SetFloatingFilterComp.prototype.onParentModelChanged = function (parentModel) {\n        if (!parentModel) {\n            this.eFloatingFilterText.value = '';\n            return;\n        }\n        // also supporting old filter model for backwards compatibility\n        var values = (parentModel instanceof Array) ? parentModel : parentModel.values;\n        if (!values || values.length === 0) {\n            this.eFloatingFilterText.value = '';\n            return;\n        }\n        // format all the values, if a formatter is provided\n        for (var i = 0; i < values.length; i++) {\n            var valueUnformatted = values[i];\n            var valueFormatted = this.valueFormatterService.formatValue(this.column, null, null, valueUnformatted);\n            if (valueFormatted != null) {\n                values[i] = valueFormatted;\n            }\n        }\n        var arrayToDisplay = values.length > 10 ? values.slice(0, 10).concat('...') : values;\n        var valuesString = \"(\" + values.length + \") \" + arrayToDisplay.join(\",\");\n        this.eFloatingFilterText.value = valuesString;\n    };\n    __decorate([\n        ag_grid_community_1.RefSelector('eFloatingFilterText'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], SetFloatingFilterComp.prototype, \"eFloatingFilterText\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('valueFormatterService'),\n        __metadata(\"design:type\", ag_grid_community_1.ValueFormatterService)\n    ], SetFloatingFilterComp.prototype, \"valueFormatterService\", void 0);\n    return SetFloatingFilterComp;\n}(ag_grid_community_1.Component));\nexports.SetFloatingFilterComp = SetFloatingFilterComp;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFloatingFilter.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setValueModel.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setValueModel.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\n// we cannot have 'null' as a key in a JavaScript map,\n// it needs to be a string. so we use this string for\n// storing null values.\nvar NULL_VALUE = '___NULL___';\nvar SetFilterModelValuesType;\n(function (SetFilterModelValuesType) {\n    SetFilterModelValuesType[SetFilterModelValuesType[\"PROVIDED_LIST\"] = 0] = \"PROVIDED_LIST\";\n    SetFilterModelValuesType[SetFilterModelValuesType[\"PROVIDED_CB\"] = 1] = \"PROVIDED_CB\";\n    SetFilterModelValuesType[SetFilterModelValuesType[\"NOT_PROVIDED\"] = 2] = \"NOT_PROVIDED\";\n})(SetFilterModelValuesType = exports.SetFilterModelValuesType || (exports.SetFilterModelValuesType = {}));\nvar SetValueModel = /** @class */ (function () {\n    function SetValueModel(colDef, rowModel, valueGetter, doesRowPassOtherFilters, suppressSorting, modelUpdatedFunc, isLoadingFunc, valueFormatterService, column) {\n        this.suppressSorting = suppressSorting;\n        this.colDef = colDef;\n        this.valueGetter = valueGetter;\n        this.doesRowPassOtherFilters = doesRowPassOtherFilters;\n        this.modelUpdatedFunc = modelUpdatedFunc;\n        this.isLoadingFunc = isLoadingFunc;\n        this.valueFormatterService = valueFormatterService;\n        this.column = column;\n        if (rowModel.getType() === ag_grid_community_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            this.clientSideRowModel = rowModel;\n        }\n        this.filterParams = this.colDef.filterParams ? this.colDef.filterParams : {};\n        if (ag_grid_community_1._.exists(this.filterParams) && ag_grid_community_1._.exists(this.filterParams.values)) {\n            this.valuesType = Array.isArray(this.filterParams.values) ?\n                SetFilterModelValuesType.PROVIDED_LIST :\n                SetFilterModelValuesType.PROVIDED_CB;\n            this.showingAvailableOnly = this.filterParams.suppressRemoveEntries !== true;\n        }\n        else {\n            this.valuesType = SetFilterModelValuesType.NOT_PROVIDED;\n            this.showingAvailableOnly = true;\n        }\n        this.createAllUniqueValues();\n        this.createAvailableUniqueValues();\n        // by default, no filter, so we display everything\n        this.displayedValues = this.availableUniqueValues;\n        this.miniFilter = null;\n        // we use a map rather than an array for the selected values as the lookup\n        // for a map is much faster than the lookup for an array, especially when\n        // the length of the array is thousands of records long\n        this.selectedValuesMap = {};\n        this.selectAllUsingMiniFilter();\n        this.formatter = this.filterParams.textFormatter ? this.filterParams.textFormatter : ag_grid_community_1.TextFilter.DEFAULT_FORMATTER;\n    }\n    // if keepSelection not set will always select all filters\n    // if keepSelection set will keep current state of selected filters\n    //    unless selectAll chosen in which case will select all\n    SetValueModel.prototype.refreshAfterNewRowsLoaded = function (keepSelection, everythingSelected) {\n        this.createAllUniqueValues();\n        this.refreshSelection(keepSelection, everythingSelected);\n    };\n    // if keepSelection not set will always select all filters\n    // if keepSelection set will keep current state of selected filters\n    //    unless selectAll chosen in which case will select all\n    SetValueModel.prototype.refreshValues = function (valuesToUse, keepSelection, isSelectAll) {\n        this.setValues(valuesToUse);\n        this.refreshSelection(keepSelection, isSelectAll);\n    };\n    SetValueModel.prototype.refreshSelection = function (keepSelection, isSelectAll) {\n        this.createAvailableUniqueValues();\n        var oldModel = Object.keys(this.selectedValuesMap);\n        this.selectedValuesMap = {};\n        this.processMiniFilter();\n        if (keepSelection) {\n            this.setModel(oldModel, isSelectAll);\n        }\n        else {\n            this.selectAllUsingMiniFilter();\n        }\n    };\n    SetValueModel.prototype.refreshAfterAnyFilterChanged = function () {\n        if (this.showingAvailableOnly) {\n            this.createAvailableUniqueValues();\n            this.processMiniFilter();\n        }\n    };\n    SetValueModel.prototype.createAllUniqueValues = function () {\n        if (this.areValuesSync()) {\n            var valuesToUse = this.extractSyncValuesToUse();\n            this.setValues(valuesToUse);\n            this.filterValuesPromise = ag_grid_community_1.Promise.resolve([]);\n        }\n        else {\n            this.filterValuesExternalPromise = ag_grid_community_1.Promise.external();\n            this.filterValuesPromise = this.filterValuesExternalPromise.promise;\n            this.isLoadingFunc(true);\n            this.setValues([]);\n            var callback_1 = this.filterParams.values;\n            var params_1 = {\n                success: this.onAsyncValuesLoaded.bind(this),\n                colDef: this.colDef\n            };\n            window.setTimeout(function () { return callback_1(params_1); }, 0);\n        }\n    };\n    SetValueModel.prototype.onAsyncValuesLoaded = function (values) {\n        this.modelUpdatedFunc(values);\n        this.isLoadingFunc(false);\n        this.filterValuesExternalPromise.resolve(values);\n    };\n    SetValueModel.prototype.areValuesSync = function () {\n        return this.valuesType == SetFilterModelValuesType.PROVIDED_LIST || this.valuesType == SetFilterModelValuesType.NOT_PROVIDED;\n    };\n    SetValueModel.prototype.setValuesType = function (value) {\n        this.valuesType = value;\n    };\n    SetValueModel.prototype.getValuesType = function () {\n        return this.valuesType;\n    };\n    SetValueModel.prototype.setValues = function (valuesToUse) {\n        this.allUniqueValues = valuesToUse;\n        if (!this.suppressSorting) {\n            this.sortValues(this.allUniqueValues);\n        }\n    };\n    SetValueModel.prototype.extractSyncValuesToUse = function () {\n        var valuesToUse;\n        if (this.valuesType == SetFilterModelValuesType.PROVIDED_LIST) {\n            if (Array.isArray(this.filterParams.values)) {\n                valuesToUse = ag_grid_community_1._.toStrings(this.filterParams.values);\n            }\n            else {\n                // In this case the values are async but have already been resolved, so we can reuse them\n                valuesToUse = this.allUniqueValues;\n            }\n        }\n        else if (this.valuesType == SetFilterModelValuesType.PROVIDED_CB) {\n            throw Error(\"ag-grid: Error extracting values to use. We should not extract the values synchronously when using a callback for the filterParams.values\");\n        }\n        else {\n            var uniqueValuesAsAnyObjects = this.getUniqueValues(false);\n            valuesToUse = ag_grid_community_1._.toStrings(uniqueValuesAsAnyObjects);\n        }\n        return valuesToUse;\n    };\n    SetValueModel.prototype.createAvailableUniqueValues = function () {\n        var dontCheckAvailableValues = !this.showingAvailableOnly || this.valuesType == SetFilterModelValuesType.PROVIDED_LIST || this.valuesType == SetFilterModelValuesType.PROVIDED_CB;\n        if (dontCheckAvailableValues) {\n            this.availableUniqueValues = this.allUniqueValues;\n            return;\n        }\n        var uniqueValuesAsAnyObjects = this.getUniqueValues(true);\n        this.availableUniqueValues = ag_grid_community_1._.toStrings(uniqueValuesAsAnyObjects);\n        this.sortValues(this.availableUniqueValues);\n    };\n    SetValueModel.prototype.sortValues = function (values) {\n        if (this.filterParams && this.filterParams.comparator) {\n            values.sort(this.filterParams.comparator);\n        }\n        else if (this.colDef.comparator) {\n            values.sort(this.colDef.comparator);\n        }\n        else {\n            values.sort(ag_grid_community_1._.defaultComparator);\n        }\n    };\n    SetValueModel.prototype.getUniqueValues = function (filterOutNotAvailable) {\n        var _this = this;\n        var uniqueCheck = {};\n        var result = [];\n        if (!this.clientSideRowModel) {\n            console.error('ag-Grid: Set Filter cannot initialise because you are using a row model that does not contain all rows in the browser. Either use a different filter type, or configure Set Filter such that you provide it with values');\n            return [];\n        }\n        this.clientSideRowModel.forEachLeafNode(function (node) {\n            // only pull values from rows that have data. this means we skip filler group nodes.\n            if (!node.data) {\n                return;\n            }\n            var value = _this.valueGetter(node);\n            if (_this.colDef.keyCreator) {\n                value = _this.colDef.keyCreator({ value: value });\n            }\n            if (value === \"\" || value === undefined) {\n                value = null;\n            }\n            if (filterOutNotAvailable) {\n                if (!_this.doesRowPassOtherFilters(node)) {\n                    return;\n                }\n            }\n            if (value != null && Array.isArray(value)) {\n                for (var j = 0; j < value.length; j++) {\n                    addUniqueValueIfMissing(value[j]);\n                }\n            }\n            else {\n                addUniqueValueIfMissing(value);\n            }\n        });\n        function addUniqueValueIfMissing(value) {\n            if (!uniqueCheck.hasOwnProperty(value)) {\n                result.push(value);\n                uniqueCheck[value] = 1;\n            }\n        }\n        return result;\n    };\n    //sets mini filter. returns true if it changed from last value, otherwise false\n    SetValueModel.prototype.setMiniFilter = function (newMiniFilter) {\n        newMiniFilter = ag_grid_community_1._.makeNull(newMiniFilter);\n        if (this.miniFilter === newMiniFilter) {\n            //do nothing if filter has not changed\n            return false;\n        }\n        this.miniFilter = newMiniFilter;\n        this.processMiniFilter();\n        return true;\n    };\n    SetValueModel.prototype.getMiniFilter = function () {\n        return this.miniFilter;\n    };\n    SetValueModel.prototype.processMiniFilter = function () {\n        // if no filter, just use the unique values\n        if (this.miniFilter === null) {\n            this.displayedValues = this.availableUniqueValues;\n            return;\n        }\n        // if filter present, we filter down the list\n        this.displayedValues = [];\n        var miniFilter = this.formatter(this.miniFilter);\n        // make upper case to have search case insensitive\n        var miniFilterUpperCase = miniFilter.toUpperCase();\n        //This function encapsulates the logic to check if a string matches the mini filter\n        var matchesFn = function (valueToCheck) {\n            if (valueToCheck == null) {\n                return false;\n            }\n            // allow for case insensitive searches, make both filter and value uppercase\n            var valueUpperCase = valueToCheck.toUpperCase();\n            return valueUpperCase.indexOf(miniFilterUpperCase) >= 0;\n        };\n        for (var i = 0, l = this.availableUniqueValues.length; i < l; i++) {\n            var value = this.availableUniqueValues[i];\n            if (value) {\n                var displayedValue = this.formatter(value.toString());\n                var formattedValue = this.valueFormatterService.formatValue(this.column, null, null, displayedValue);\n                if (matchesFn(displayedValue) || matchesFn(formattedValue)) {\n                    this.displayedValues.push(value);\n                }\n            }\n        }\n    };\n    SetValueModel.prototype.getDisplayedValueCount = function () {\n        return this.displayedValues.length;\n    };\n    SetValueModel.prototype.getDisplayedValue = function (index) {\n        return this.displayedValues[index];\n    };\n    SetValueModel.prototype.selectAllUsingMiniFilter = function () {\n        if (!this.filterParams.selectAllOnMiniFilter || !this.miniFilter) {\n            this.selectOn(this.allUniqueValues);\n        }\n        else {\n            this.selectOn(this.displayedValues);\n        }\n    };\n    SetValueModel.prototype.selectOn = function (toSelectOn) {\n        var count = toSelectOn.length;\n        for (var i = 0; i < count; i++) {\n            var key = toSelectOn[i];\n            var safeKey = this.valueToKey(key);\n            this.selectedValuesMap[safeKey] = null;\n        }\n        this.selectedValuesCount = Object.keys(this.selectedValuesMap).length;\n    };\n    SetValueModel.prototype.valueToKey = function (key) {\n        if (key === null) {\n            return NULL_VALUE;\n        }\n        else {\n            return key;\n        }\n    };\n    SetValueModel.prototype.keyToValue = function (value) {\n        if (value === NULL_VALUE) {\n            return null;\n        }\n        else {\n            return value;\n        }\n    };\n    SetValueModel.prototype.isFilterActive = function () {\n        return this.allUniqueValues.length !== this.selectedValuesCount;\n    };\n    SetValueModel.prototype.selectNothingUsingMiniFilter = function () {\n        var _this = this;\n        if (!this.filterParams.selectAllOnMiniFilter || !this.miniFilter) {\n            this.selectNothing();\n        }\n        else {\n            this.displayedValues.forEach(function (it) { return _this.unselectValue(it); });\n        }\n    };\n    SetValueModel.prototype.selectNothing = function () {\n        this.selectedValuesMap = {};\n        this.selectedValuesCount = 0;\n    };\n    SetValueModel.prototype.getUniqueValueCount = function () {\n        return this.allUniqueValues.length;\n    };\n    SetValueModel.prototype.getUniqueValue = function (index) {\n        return this.allUniqueValues[index];\n    };\n    SetValueModel.prototype.unselectValue = function (value) {\n        var safeKey = this.valueToKey(value);\n        if (this.selectedValuesMap[safeKey] !== undefined) {\n            delete this.selectedValuesMap[safeKey];\n            this.selectedValuesCount--;\n        }\n    };\n    SetValueModel.prototype.selectAllFromMiniFilter = function () {\n        this.selectNothing();\n        this.selectAllUsingMiniFilter();\n    };\n    SetValueModel.prototype.selectValue = function (value) {\n        var safeKey = this.valueToKey(value);\n        if (this.selectedValuesMap[safeKey] === undefined) {\n            this.selectedValuesMap[safeKey] = null;\n            this.selectedValuesCount++;\n        }\n    };\n    SetValueModel.prototype.isValueSelected = function (value) {\n        var safeKey = this.valueToKey(value);\n        return this.selectedValuesMap[safeKey] !== undefined;\n    };\n    SetValueModel.prototype.isEverythingSelected = function () {\n        var _this = this;\n        if (!this.filterParams.selectAllOnMiniFilter || !this.miniFilter) {\n            return this.allUniqueValues.length === this.selectedValuesCount;\n        }\n        else {\n            return this.displayedValues.filter(function (it) { return _this.isValueSelected(it); }).length === this.displayedValues.length;\n        }\n    };\n    SetValueModel.prototype.isNothingSelected = function () {\n        var _this = this;\n        if (!this.filterParams.selectAllOnMiniFilter || !this.miniFilter) {\n            return this.selectedValuesCount === 0;\n        }\n        else {\n            return this.displayedValues.filter(function (it) { return _this.isValueSelected(it); }).length === 0;\n        }\n    };\n    SetValueModel.prototype.getModel = function () {\n        var _this = this;\n        if (!this.isFilterActive()) {\n            return null;\n        }\n        var selectedValues = [];\n        ag_grid_community_1._.iterateObject(this.selectedValuesMap, function (key) {\n            var value = _this.keyToValue(key);\n            selectedValues.push(value);\n        });\n        return selectedValues;\n    };\n    SetValueModel.prototype.setModel = function (model, isSelectAll) {\n        var _this = this;\n        if (isSelectAll === void 0) { isSelectAll = false; }\n        if (this.areValuesSync()) {\n            this.setSyncModel(model, isSelectAll);\n        }\n        else {\n            this.filterValuesExternalPromise.promise.then(function (values) {\n                _this.setSyncModel(model, isSelectAll);\n                _this.modelUpdatedFunc(values, model);\n            });\n        }\n    };\n    SetValueModel.prototype.setSyncModel = function (model, isSelectAll) {\n        if (isSelectAll === void 0) { isSelectAll = false; }\n        if (model && !isSelectAll) {\n            this.selectNothingUsingMiniFilter();\n            for (var i = 0; i < model.length; i++) {\n                var rawValue = model[i];\n                var value = this.keyToValue(rawValue);\n                if (this.allUniqueValues.indexOf(value) >= 0) {\n                    this.selectValue(value);\n                }\n            }\n        }\n        else {\n            this.selectAllUsingMiniFilter();\n        }\n    };\n    SetValueModel.prototype.onFilterValuesReady = function (callback) {\n        //This guarantees that if the user is racing to set values async into the set filter, only the first instance\n        //will be used\n        // ie Values are async and the user manually wants to override them before the retrieval of values is triggered\n        // (set filter values in the following example)\n        // http://plnkr.co/edit/eFka7ynvPj68tL3VJFWf?p=preview\n        this.filterValuesPromise.firstOneOnly(callback);\n    };\n    return SetValueModel;\n}());\nexports.SetValueModel = SetValueModel;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setValueModel.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/horizontalResizeComp.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/horizontalResizeComp.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar HorizontalResizeComp = /** @class */ (function (_super) {\n    __extends(HorizontalResizeComp, _super);\n    function HorizontalResizeComp() {\n        return _super.call(this, \"<div class=\\\"ag-tool-panel-horizontal-resize\\\"></div>\") || this;\n    }\n    HorizontalResizeComp.prototype.setElementToResize = function (elementToResize) {\n        this.elementToResize = elementToResize;\n    };\n    HorizontalResizeComp.prototype.postConstruct = function () {\n        var finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n            eResizeBar: this.getGui(),\n            dragStartPixels: 1,\n            onResizeStart: this.onResizeStart.bind(this),\n            onResizing: this.onResizing.bind(this),\n            onResizeEnd: this.onResizing.bind(this)\n        });\n        this.addDestroyFunc(finishedWithResizeFunc);\n    };\n    HorizontalResizeComp.prototype.onResizeStart = function () {\n        this.startingWidth = this.elementToResize.offsetWidth;\n    };\n    HorizontalResizeComp.prototype.onResizing = function (delta) {\n        var direction = this.gridOptionsWrapper.isEnableRtl() ? -1 : 1;\n        var newWidth = Math.max(100, Math.floor(this.startingWidth - (delta * direction)));\n        this.elementToResize.style.width = newWidth + \"px\";\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('horizontalResizeService'),\n        __metadata(\"design:type\", ag_grid_community_1.HorizontalResizeService)\n    ], HorizontalResizeComp.prototype, \"horizontalResizeService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], HorizontalResizeComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], HorizontalResizeComp.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HorizontalResizeComp.prototype, \"postConstruct\", null);\n    return HorizontalResizeComp;\n}(ag_grid_community_1.Component));\nexports.HorizontalResizeComp = HorizontalResizeComp;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/horizontalResizeComp.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/columnToolPanel.js":
/*!********************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/columnToolPanel.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar main_1 = __webpack_require__(/*! ag-grid-community/main */ \"../../node_modules/ag-grid-community/main.js\");\nvar pivotModePanel_1 = __webpack_require__(/*! ./panels/pivotModePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/pivotModePanel.js\");\nvar rowGroupDropZonePanel_1 = __webpack_require__(/*! ./panels/rowGroupDropZonePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/rowGroupDropZonePanel.js\");\nvar valueDropZonePanel_1 = __webpack_require__(/*! ./panels/valueDropZonePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/valueDropZonePanel.js\");\nvar pivotDropZonePanel_1 = __webpack_require__(/*! ./panels/pivotDropZonePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/pivotDropZonePanel.js\");\nvar primaryColsPanel_1 = __webpack_require__(/*! ./panels/primaryColsPanel/primaryColsPanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsPanel.js\");\nvar ColumnToolPanel = /** @class */ (function (_super) {\n    __extends(ColumnToolPanel, _super);\n    function ColumnToolPanel() {\n        var _this = _super.call(this, ColumnToolPanel.TEMPLATE) || this;\n        _this.initialised = false;\n        _this.childDestroyFuncs = [];\n        return _this;\n    }\n    // lazy initialise the panel\n    ColumnToolPanel.prototype.setVisible = function (visible) {\n        _super.prototype.setDisplayed.call(this, visible);\n        if (visible && !this.initialised) {\n            this.init(this.params);\n        }\n    };\n    ColumnToolPanel.prototype.init = function (params) {\n        var defaultParams = {\n            suppressSideButtons: false,\n            suppressColumnSelectAll: false,\n            suppressColumnFilter: false,\n            suppressColumnExpandAll: false,\n            contractColumnSelection: false,\n            suppressPivotMode: false,\n            suppressRowGroups: false,\n            suppressValues: false,\n            suppressPivots: false,\n            api: this.gridApi\n        };\n        main_1._.mergeDeep(defaultParams, params);\n        this.params = defaultParams;\n        if (!this.params.suppressPivotMode) {\n            this.addComponent(new pivotModePanel_1.PivotModePanel());\n        }\n        this.addComponent(new primaryColsPanel_1.PrimaryColsPanel(true, this.params));\n        if (!this.params.suppressRowGroups) {\n            this.addComponent(new rowGroupDropZonePanel_1.RowGroupDropZonePanel(false));\n        }\n        if (!this.params.suppressValues) {\n            this.addComponent(new valueDropZonePanel_1.ValuesDropZonePanel(false));\n        }\n        if (!this.params.suppressPivots) {\n            this.addComponent(new pivotDropZonePanel_1.PivotDropZonePanel(false));\n        }\n        this.initialised = true;\n    };\n    ColumnToolPanel.prototype.addComponent = function (component) {\n        this.getContext().wireBean(component);\n        this.getGui().appendChild(component.getGui());\n        this.childDestroyFuncs.push(component.destroy.bind(component));\n    };\n    ColumnToolPanel.prototype.destroyChildren = function () {\n        this.childDestroyFuncs.forEach(function (func) { return func(); });\n        this.childDestroyFuncs.length = 0;\n        main_1._.clearElement(this.getGui());\n    };\n    ColumnToolPanel.prototype.refresh = function () {\n        this.destroyChildren();\n        this.init(this.params);\n    };\n    ColumnToolPanel.prototype.destroy = function () {\n        this.destroyChildren();\n        _super.prototype.destroy.call(this);\n    };\n    ColumnToolPanel.TEMPLATE = \"<div class=\\\"ag-column-panel\\\"></div>\";\n    __decorate([\n        main_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], ColumnToolPanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.Autowired(\"gridApi\"),\n        __metadata(\"design:type\", main_1.GridApi)\n    ], ColumnToolPanel.prototype, \"gridApi\", void 0);\n    __decorate([\n        main_1.Autowired(\"eventService\"),\n        __metadata(\"design:type\", main_1.EventService)\n    ], ColumnToolPanel.prototype, \"eventService\", void 0);\n    return ColumnToolPanel;\n}(main_1.Component));\nexports.ColumnToolPanel = ColumnToolPanel;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/columnToolPanel.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/dropZone/baseDropZonePanel.js":
/*!*******************************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/dropZone/baseDropZonePanel.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar main_1 = __webpack_require__(/*! ag-grid-community/main */ \"../../node_modules/ag-grid-community/main.js\");\nvar dropZoneColumnComp_1 = __webpack_require__(/*! ./dropZoneColumnComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/dropZone/dropZoneColumnComp.js\");\nvar BaseDropZonePanel = /** @class */ (function (_super) {\n    __extends(BaseDropZonePanel, _super);\n    function BaseDropZonePanel(horizontal, valueColumn, name) {\n        var _this = _super.call(this, \"<div class=\\\"ag-column-drop ag-unselectable ag-column-drop-\" + (horizontal ? 'horizontal' : 'vertical') + \" ag-column-drop-\" + name + \"\\\"></div>\") || this;\n        _this.state = BaseDropZonePanel.STATE_NOT_DRAGGING;\n        _this.guiDestroyFunctions = [];\n        _this.childColumnComponents = [];\n        _this.horizontal = horizontal;\n        _this.valueColumn = valueColumn;\n        _this.eColumnDropList = main_1._.loadTemplate('<div class=\"ag-column-drop-list\"></div>');\n        return _this;\n    }\n    BaseDropZonePanel.prototype.isHorizontal = function () {\n        return this.horizontal;\n    };\n    BaseDropZonePanel.prototype.setBeans = function (beans) {\n        this.beans = beans;\n    };\n    BaseDropZonePanel.prototype.destroy = function () {\n        this.destroyGui();\n        _super.prototype.destroy.call(this);\n    };\n    BaseDropZonePanel.prototype.destroyGui = function () {\n        this.guiDestroyFunctions.forEach(function (func) { return func(); });\n        this.guiDestroyFunctions.length = 0;\n        this.childColumnComponents.length = 0;\n        main_1._.clearElement(this.getGui());\n        main_1._.clearElement(this.eColumnDropList);\n    };\n    BaseDropZonePanel.prototype.init = function (params) {\n        this.params = params;\n        this.logger = this.beans.loggerFactory.create('AbstractColumnDropPanel');\n        this.beans.eventService.addEventListener(main_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.refreshGui.bind(this));\n        this.addDestroyableEventListener(this.beans.gridOptionsWrapper, 'functionsReadOnly', this.refreshGui.bind(this));\n        this.setupDropTarget();\n        // we don't know if this bean will be initialised before columnController.\n        // if columnController first, then below will work\n        // if columnController second, then below will put blank in, and then above event gets first when columnController is set up\n        this.refreshGui();\n    };\n    BaseDropZonePanel.prototype.setupDropTarget = function () {\n        this.dropTarget = {\n            getContainer: this.getGui.bind(this),\n            getIconName: this.getIconName.bind(this),\n            onDragging: this.onDragging.bind(this),\n            onDragEnter: this.onDragEnter.bind(this),\n            onDragLeave: this.onDragLeave.bind(this),\n            onDragStop: this.onDragStop.bind(this),\n            isInterestedIn: this.isInterestedIn.bind(this)\n        };\n        this.beans.dragAndDropService.addDropTarget(this.dropTarget);\n    };\n    BaseDropZonePanel.prototype.isInterestedIn = function (type) {\n        // not interested in row drags\n        return type === main_1.DragSourceType.HeaderCell || type === main_1.DragSourceType.ToolPanel;\n    };\n    BaseDropZonePanel.prototype.checkInsertIndex = function (draggingEvent) {\n        var newIndex;\n        if (this.horizontal) {\n            newIndex = this.getNewHorizontalInsertIndex(draggingEvent);\n        }\n        else {\n            newIndex = this.getNewVerticalInsertIndex(draggingEvent);\n        }\n        // <0 happens when drag is no a direction we are interested in, eg drag is up/down but in horizontal panel\n        if (newIndex < 0) {\n            return false;\n        }\n        var changed = newIndex !== this.insertIndex;\n        if (changed) {\n            this.insertIndex = newIndex;\n        }\n        return changed;\n    };\n    BaseDropZonePanel.prototype.getNewHorizontalInsertIndex = function (draggingEvent) {\n        if (main_1._.missing(draggingEvent.hDirection)) {\n            return -1;\n        }\n        var newIndex = 0;\n        var mouseEvent = draggingEvent.event;\n        var enableRtl = this.beans.gridOptionsWrapper.isEnableRtl();\n        var goingLeft = draggingEvent.hDirection === main_1.HDirection.Left;\n        var mouseX = mouseEvent.clientX;\n        this.childColumnComponents.forEach(function (childColumn) {\n            var rect = childColumn.getGui().getBoundingClientRect();\n            var rectX = goingLeft ? rect.right : rect.left;\n            var horizontalFit = enableRtl ? (mouseX <= rectX) : (mouseX >= rectX);\n            if (horizontalFit) {\n                newIndex++;\n            }\n        });\n        return newIndex;\n    };\n    BaseDropZonePanel.prototype.getNewVerticalInsertIndex = function (draggingEvent) {\n        if (main_1._.missing(draggingEvent.vDirection)) {\n            return -1;\n        }\n        var newIndex = 0;\n        var mouseEvent = draggingEvent.event;\n        this.childColumnComponents.forEach(function (childColumn) {\n            var rect = childColumn.getGui().getBoundingClientRect();\n            if (draggingEvent.vDirection === main_1.VDirection.Down) {\n                var verticalFit = mouseEvent.clientY >= rect.top;\n                if (verticalFit) {\n                    newIndex++;\n                }\n            }\n            else {\n                var verticalFit = mouseEvent.clientY >= rect.bottom;\n                if (verticalFit) {\n                    newIndex++;\n                }\n            }\n        });\n        return newIndex;\n    };\n    BaseDropZonePanel.prototype.checkDragStartedBySelf = function (draggingEvent) {\n        if (this.state !== BaseDropZonePanel.STATE_NOT_DRAGGING) {\n            return;\n        }\n        this.state = BaseDropZonePanel.STATE_REARRANGE_COLUMNS;\n        this.potentialDndColumns = draggingEvent.dragSource.dragItemCallback().columns || [];\n        this.refreshGui();\n        this.checkInsertIndex(draggingEvent);\n        this.refreshGui();\n    };\n    BaseDropZonePanel.prototype.onDragging = function (draggingEvent) {\n        this.checkDragStartedBySelf(draggingEvent);\n        var positionChanged = this.checkInsertIndex(draggingEvent);\n        if (positionChanged) {\n            this.refreshGui();\n        }\n    };\n    BaseDropZonePanel.prototype.onDragEnter = function (draggingEvent) {\n        // this will contain all columns that are potential drops\n        var dragColumns = draggingEvent.dragSource.dragItemCallback().columns || [];\n        this.state = BaseDropZonePanel.STATE_NEW_COLUMNS_IN;\n        // take out columns that are not groupable\n        var goodDragColumns = main_1._.filter(dragColumns, this.isColumnDroppable.bind(this));\n        var weHaveColumnsToDrag = goodDragColumns.length > 0;\n        if (weHaveColumnsToDrag) {\n            this.potentialDndColumns = goodDragColumns;\n            this.checkInsertIndex(draggingEvent);\n            this.refreshGui();\n        }\n    };\n    BaseDropZonePanel.prototype.isPotentialDndColumns = function () {\n        return main_1._.existsAndNotEmpty(this.potentialDndColumns);\n    };\n    BaseDropZonePanel.prototype.onDragLeave = function (draggingEvent) {\n        // if the dragging started from us, we remove the group, however if it started\n        // someplace else, then we don't, as it was only 'asking'\n        if (this.state === BaseDropZonePanel.STATE_REARRANGE_COLUMNS) {\n            var columns = draggingEvent.dragSource.dragItemCallback().columns || [];\n            this.removeColumns(columns);\n        }\n        if (this.isPotentialDndColumns()) {\n            this.potentialDndColumns = [];\n            this.refreshGui();\n        }\n        this.state = BaseDropZonePanel.STATE_NOT_DRAGGING;\n    };\n    BaseDropZonePanel.prototype.onDragStop = function () {\n        if (this.isPotentialDndColumns()) {\n            var success = void 0;\n            if (this.state === BaseDropZonePanel.STATE_NEW_COLUMNS_IN) {\n                this.addColumns(this.potentialDndColumns);\n                success = true;\n            }\n            else {\n                success = this.rearrangeColumns(this.potentialDndColumns);\n            }\n            this.potentialDndColumns = [];\n            // if the function is passive, then we don't refresh, as we assume the client application\n            // is going to call setRowGroups / setPivots / setValues at a later point which will then\n            // cause a refresh. this gives a nice gui where the ghost stays until the app has caught\n            // up with the changes.\n            if (this.beans.gridOptionsWrapper.isFunctionsPassive()) {\n                // when functions are passive, we don't refresh,\n                // unless there was no change in the order, then we\n                // do need to refresh to reset the columns\n                if (!success) {\n                    this.refreshGui();\n                }\n            }\n            else {\n                this.refreshGui();\n            }\n        }\n        this.state = BaseDropZonePanel.STATE_NOT_DRAGGING;\n    };\n    BaseDropZonePanel.prototype.removeColumns = function (columnsToRemove) {\n        var newColumnList = this.getExistingColumns().slice();\n        columnsToRemove.forEach(function (column) { return main_1._.removeFromArray(newColumnList, column); });\n        this.updateColumns(newColumnList);\n    };\n    BaseDropZonePanel.prototype.addColumns = function (columnsToAdd) {\n        var newColumnList = this.getExistingColumns().slice();\n        main_1._.insertArrayIntoArray(newColumnList, columnsToAdd, this.insertIndex);\n        this.updateColumns(newColumnList);\n    };\n    BaseDropZonePanel.prototype.rearrangeColumns = function (columnsToAdd) {\n        var newColumnList = this.getNonGhostColumns().slice();\n        main_1._.insertArrayIntoArray(newColumnList, columnsToAdd, this.insertIndex);\n        var noChangeDetected = main_1._.shallowCompare(newColumnList, this.getExistingColumns());\n        if (noChangeDetected) {\n            return false;\n        }\n        else {\n            this.updateColumns(newColumnList);\n            return true;\n        }\n    };\n    BaseDropZonePanel.prototype.refreshGui = function () {\n        // we reset the scroll position after the refresh.\n        // if we don't do this, then the list will always scroll to the top\n        // each time we refresh it. this is because part of the refresh empties\n        // out the list which sets scroll to zero. so the user could be just\n        // reordering the list - we want to prevent the resetting of the scroll.\n        // this is relevant for vertical display only (as horizontal has no scroll)\n        var scrollTop = this.eColumnDropList.scrollTop;\n        this.destroyGui();\n        this.addIconAndTitleToGui();\n        this.addEmptyMessageToGui();\n        this.addColumnsToGui();\n        if (!this.isHorizontal()) {\n            this.eColumnDropList.scrollTop = scrollTop;\n        }\n    };\n    BaseDropZonePanel.prototype.getNonGhostColumns = function () {\n        var _this = this;\n        var existingColumns = this.getExistingColumns();\n        var nonGhostColumns;\n        if (this.isPotentialDndColumns()) {\n            nonGhostColumns = main_1._.filter(existingColumns, function (column) { return _this.potentialDndColumns.indexOf(column) < 0; });\n        }\n        else {\n            nonGhostColumns = existingColumns;\n        }\n        return nonGhostColumns;\n    };\n    BaseDropZonePanel.prototype.addColumnsToGui = function () {\n        var _this = this;\n        var nonGhostColumns = this.getNonGhostColumns();\n        var itemsToAddToGui = [];\n        var addingGhosts = this.isPotentialDndColumns();\n        nonGhostColumns.forEach(function (column, index) {\n            if (addingGhosts && index >= _this.insertIndex) {\n                return;\n            }\n            var columnComponent = _this.createColumnComponent(column, false);\n            itemsToAddToGui.push(columnComponent);\n        });\n        if (this.isPotentialDndColumns()) {\n            this.potentialDndColumns.forEach(function (column) {\n                var columnComponent = _this.createColumnComponent(column, true);\n                itemsToAddToGui.push(columnComponent);\n            });\n            nonGhostColumns.forEach(function (column, index) {\n                if (index < _this.insertIndex) {\n                    return;\n                }\n                var columnComponent = _this.createColumnComponent(column, false);\n                itemsToAddToGui.push(columnComponent);\n            });\n        }\n        this.getGui().appendChild(this.eColumnDropList);\n        itemsToAddToGui.forEach(function (columnComponent, index) {\n            var needSeparator = index !== 0;\n            if (needSeparator) {\n                _this.addArrow(_this.eColumnDropList);\n            }\n            _this.eColumnDropList.appendChild(columnComponent.getGui());\n        });\n    };\n    BaseDropZonePanel.prototype.createColumnComponent = function (column, ghost) {\n        var columnComponent = new dropZoneColumnComp_1.DropZoneColumnComp(column, this.dropTarget, ghost, this.valueColumn);\n        columnComponent.addEventListener(dropZoneColumnComp_1.DropZoneColumnComp.EVENT_COLUMN_REMOVE, this.removeColumns.bind(this, [column]));\n        this.beans.context.wireBean(columnComponent);\n        this.guiDestroyFunctions.push(function () { return columnComponent.destroy(); });\n        if (!ghost) {\n            this.childColumnComponents.push(columnComponent);\n        }\n        return columnComponent;\n    };\n    BaseDropZonePanel.prototype.addIconAndTitleToGui = function () {\n        var iconFaded = this.horizontal && this.isExistingColumnsEmpty();\n        var eGroupIcon = this.params.icon;\n        var eContainer = document.createElement('div');\n        main_1._.addCssClass(eGroupIcon, 'ag-column-drop-icon');\n        main_1._.addOrRemoveCssClass(eGroupIcon, 'ag-faded', iconFaded);\n        eContainer.appendChild(eGroupIcon);\n        if (!this.horizontal) {\n            var eTitle = document.createElement('span');\n            eTitle.innerHTML = this.params.title;\n            main_1._.addCssClass(eTitle, 'ag-column-drop-title');\n            main_1._.addOrRemoveCssClass(eTitle, 'ag-faded', iconFaded);\n            eContainer.appendChild(eTitle);\n        }\n        this.getGui().appendChild(eContainer);\n    };\n    BaseDropZonePanel.prototype.isExistingColumnsEmpty = function () {\n        return this.getExistingColumns().length === 0;\n    };\n    BaseDropZonePanel.prototype.addEmptyMessageToGui = function () {\n        var showEmptyMessage = this.isExistingColumnsEmpty() && !this.isPotentialDndColumns();\n        if (!showEmptyMessage) {\n            return;\n        }\n        var eMessage = document.createElement('span');\n        eMessage.innerHTML = this.params.emptyMessage;\n        main_1._.addCssClass(eMessage, 'ag-column-drop-empty-message');\n        this.getGui().appendChild(eMessage);\n    };\n    BaseDropZonePanel.prototype.addArrow = function (eParent) {\n        // only add the arrows if the layout is horizontal\n        if (this.horizontal) {\n            // for RTL it's a left arrow, otherwise it's a right arrow\n            var enableRtl = this.beans.gridOptionsWrapper.isEnableRtl();\n            eParent.appendChild(main_1._.createIconNoSpan(enableRtl ? 'smallLeft' : 'smallRight', this.beans.gridOptionsWrapper));\n        }\n    };\n    BaseDropZonePanel.STATE_NOT_DRAGGING = 'notDragging';\n    BaseDropZonePanel.STATE_NEW_COLUMNS_IN = 'newColumnsIn';\n    BaseDropZonePanel.STATE_REARRANGE_COLUMNS = 'rearrangeColumns';\n    BaseDropZonePanel.CHAR_LEFT_ARROW = '&#8592;';\n    BaseDropZonePanel.CHAR_RIGHT_ARROW = '&#8594;';\n    return BaseDropZonePanel;\n}(main_1.Component));\nexports.BaseDropZonePanel = BaseDropZonePanel;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/dropZone/baseDropZonePanel.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/dropZone/dropZoneColumnComp.js":
/*!********************************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/dropZone/dropZoneColumnComp.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar aggFuncService_1 = __webpack_require__(/*! ../../../../aggregation/aggFuncService */ \"../../node_modules/ag-grid-enterprise/dist/lib/aggregation/aggFuncService.js\");\nvar virtualList_1 = __webpack_require__(/*! ../../../../rendering/virtualList */ \"../../node_modules/ag-grid-enterprise/dist/lib/rendering/virtualList.js\");\nvar DropZoneColumnComp = /** @class */ (function (_super) {\n    __extends(DropZoneColumnComp, _super);\n    function DropZoneColumnComp(column, dragSourceDropTarget, ghost, valueColumn) {\n        var _this = _super.call(this) || this;\n        _this.popupShowing = false;\n        _this.valueColumn = valueColumn;\n        _this.column = column;\n        _this.dragSourceDropTarget = dragSourceDropTarget;\n        _this.ghost = ghost;\n        return _this;\n    }\n    DropZoneColumnComp.prototype.init = function () {\n        this.setTemplate(DropZoneColumnComp.TEMPLATE);\n        this.eDragHandle.appendChild(ag_grid_community_1._.createIconNoSpan('columnDrag', this.gridOptionsWrapper));\n        this.btRemove.appendChild(ag_grid_community_1._.createIconNoSpan('cancel', this.gridOptionsWrapper));\n        this.displayName = this.columnController.getDisplayNameForColumn(this.column, 'columnDrop');\n        this.setupComponents();\n        if (!this.ghost && !this.gridOptionsWrapper.isFunctionsReadOnly()) {\n            this.addDragSource();\n        }\n    };\n    DropZoneColumnComp.prototype.addDragSource = function () {\n        var _this = this;\n        var dragSource = {\n            type: ag_grid_community_1.DragSourceType.ToolPanel,\n            eElement: this.eDragHandle,\n            dragItemCallback: function () { return _this.createDragItem(); },\n            dragItemName: this.displayName,\n            dragSourceDropTarget: this.dragSourceDropTarget\n        };\n        this.dragAndDropService.addDragSource(dragSource, true);\n        this.addDestroyFunc(function () { return _this.dragAndDropService.removeDragSource(dragSource); });\n    };\n    DropZoneColumnComp.prototype.createDragItem = function () {\n        var visibleState = {};\n        visibleState[this.column.getId()] = this.column.isVisible();\n        return {\n            columns: [this.column],\n            visibleState: visibleState\n        };\n    };\n    DropZoneColumnComp.prototype.setupComponents = function () {\n        this.setTextValue();\n        this.setupRemove();\n        if (this.ghost) {\n            ag_grid_community_1._.addCssClass(this.getGui(), 'ag-column-drop-cell-ghost');\n        }\n        if (this.valueColumn && !this.gridOptionsWrapper.isFunctionsReadOnly()) {\n            this.addGuiEventListener('click', this.onShowAggFuncSelection.bind(this));\n        }\n    };\n    DropZoneColumnComp.prototype.setupRemove = function () {\n        var _this = this;\n        ag_grid_community_1._.setDisplayed(this.btRemove, !this.gridOptionsWrapper.isFunctionsReadOnly());\n        this.addDestroyableEventListener(this.btRemove, 'click', function (mouseEvent) {\n            var agEvent = { type: DropZoneColumnComp.EVENT_COLUMN_REMOVE };\n            _this.dispatchEvent(agEvent);\n            mouseEvent.stopPropagation();\n        });\n        var touchListener = new ag_grid_community_1.TouchListener(this.btRemove);\n        this.addDestroyableEventListener(touchListener, ag_grid_community_1.TouchListener.EVENT_TAP, function (event) {\n            var agEvent = { type: DropZoneColumnComp.EVENT_COLUMN_REMOVE };\n            _this.dispatchEvent(agEvent);\n        });\n        this.addDestroyFunc(touchListener.destroy.bind(touchListener));\n    };\n    DropZoneColumnComp.prototype.setTextValue = function () {\n        var displayValue;\n        if (this.valueColumn) {\n            var aggFunc = this.column.getAggFunc();\n            // if aggFunc is a string, we can use it, but if it's a function, then we swap with 'func'\n            var aggFuncString = (typeof aggFunc === 'string') ? aggFunc : 'agg';\n            var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n            var aggFuncStringTranslated = localeTextFunc(aggFuncString, aggFuncString);\n            displayValue = aggFuncStringTranslated + \"(\" + this.displayName + \")\";\n        }\n        else {\n            displayValue = this.displayName;\n        }\n        var displayValueSanitised = ag_grid_community_1._.escape(displayValue);\n        this.eText.innerHTML = displayValueSanitised;\n    };\n    DropZoneColumnComp.prototype.onShowAggFuncSelection = function () {\n        var _this = this;\n        if (this.popupShowing) {\n            return;\n        }\n        this.popupShowing = true;\n        var virtualList = new virtualList_1.VirtualList();\n        var rows = this.aggFuncService.getFuncNames(this.column);\n        virtualList.setModel({\n            getRow: function (index) { return rows[index]; },\n            getRowCount: function () { return rows.length; }\n        });\n        this.getContext().wireBean(virtualList);\n        var ePopup = ag_grid_community_1._.loadTemplate('<div class=\"ag-select-agg-func-popup\"></div>');\n        ePopup.style.top = '0px';\n        ePopup.style.left = '0px';\n        ePopup.appendChild(virtualList.getGui());\n        // ePopup.style.height = this.gridOptionsWrapper.getAggFuncPopupHeight() + 'px';\n        ePopup.style.width = this.getGui().clientWidth + 'px';\n        var popupHiddenFunc = function () {\n            virtualList.destroy();\n            _this.popupShowing = false;\n        };\n        var hidePopup = this.popupService.addAsModalPopup(ePopup, true, popupHiddenFunc);\n        virtualList.setComponentCreator(this.createAggSelect.bind(this, hidePopup));\n        this.popupService.positionPopupUnderComponent({\n            type: 'aggFuncSelect',\n            eventSource: this.getGui(),\n            ePopup: ePopup,\n            keepWithinBounds: true,\n            column: this.column\n        });\n        virtualList.refresh();\n    };\n    DropZoneColumnComp.prototype.createAggSelect = function (hidePopup, value) {\n        var _this = this;\n        var itemSelected = function () {\n            hidePopup();\n            if (_this.gridOptionsWrapper.isFunctionsPassive()) {\n                var event_1 = {\n                    type: ag_grid_community_1.Events.EVENT_COLUMN_AGG_FUNC_CHANGE_REQUEST,\n                    columns: [_this.column],\n                    aggFunc: value,\n                    api: _this.gridApi,\n                    columnApi: _this.columnApi\n                };\n                _this.eventService.dispatchEvent(event_1);\n            }\n            else {\n                _this.columnController.setColumnAggFunc(_this.column, value, \"toolPanelDragAndDrop\");\n            }\n        };\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        var aggFuncString = value.toString();\n        var aggFuncStringTranslated = localeTextFunc(aggFuncString, aggFuncString);\n        var comp = new AggItemComp(itemSelected, aggFuncStringTranslated);\n        return comp;\n    };\n    DropZoneColumnComp.EVENT_COLUMN_REMOVE = 'columnRemove';\n    DropZoneColumnComp.TEMPLATE = \"<span class=\\\"ag-column-drop-cell\\\">\\n          <span ref=\\\"eDragHandle\\\" class=\\\"ag-column-drag\\\"></span>\\n          <span ref=\\\"eText\\\" class=\\\"ag-column-drop-cell-text\\\"></span>\\n          <span ref=\\\"btRemove\\\" class=\\\"ag-column-drop-cell-button\\\"></span>\\n        </span>\";\n    __decorate([\n        ag_grid_community_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", ag_grid_community_1.DragAndDropService)\n    ], DropZoneColumnComp.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], DropZoneColumnComp.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('popupService'),\n        __metadata(\"design:type\", ag_grid_community_1.PopupService)\n    ], DropZoneColumnComp.prototype, \"popupService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('aggFuncService'),\n        __metadata(\"design:type\", aggFuncService_1.AggFuncService)\n    ], DropZoneColumnComp.prototype, \"aggFuncService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], DropZoneColumnComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], DropZoneColumnComp.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnApi'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnApi)\n    ], DropZoneColumnComp.prototype, \"columnApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], DropZoneColumnComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eText'),\n        __metadata(\"design:type\", HTMLElement)\n    ], DropZoneColumnComp.prototype, \"eText\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eDragHandle'),\n        __metadata(\"design:type\", HTMLElement)\n    ], DropZoneColumnComp.prototype, \"eDragHandle\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('btRemove'),\n        __metadata(\"design:type\", HTMLElement)\n    ], DropZoneColumnComp.prototype, \"btRemove\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], DropZoneColumnComp.prototype, \"init\", null);\n    return DropZoneColumnComp;\n}(ag_grid_community_1.Component));\nexports.DropZoneColumnComp = DropZoneColumnComp;\nvar AggItemComp = /** @class */ (function (_super) {\n    __extends(AggItemComp, _super);\n    function AggItemComp(itemSelected, value) {\n        var _this = _super.call(this, '<div class=\"ag-select-agg-func-item\"/>') || this;\n        _this.getGui().innerText = value;\n        _this.value = value;\n        _this.addGuiEventListener('click', itemSelected);\n        return _this;\n    }\n    return AggItemComp;\n}(ag_grid_community_1.Component));\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/dropZone/dropZoneColumnComp.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/gridHeaderDropZones.js":
/*!************************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/gridHeaderDropZones.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar main_1 = __webpack_require__(/*! ag-grid-community/main */ \"../../node_modules/ag-grid-community/main.js\");\nvar rowGroupDropZonePanel_1 = __webpack_require__(/*! ./panels/rowGroupDropZonePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/rowGroupDropZonePanel.js\");\nvar pivotDropZonePanel_1 = __webpack_require__(/*! ./panels/pivotDropZonePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/pivotDropZonePanel.js\");\nvar GridHeaderDropZones = /** @class */ (function (_super) {\n    __extends(GridHeaderDropZones, _super);\n    function GridHeaderDropZones() {\n        return _super.call(this) || this;\n    }\n    GridHeaderDropZones.prototype.postConstruct = function () {\n        this.setGui(this.createNorthPanel());\n        this.eventService.addEventListener(main_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onRowGroupChanged.bind(this));\n        this.eventService.addEventListener(main_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.onRowGroupChanged.bind(this));\n        this.onRowGroupChanged();\n    };\n    GridHeaderDropZones.prototype.createNorthPanel = function () {\n        var _this = this;\n        var topPanelGui = document.createElement('div');\n        var dropPanelVisibleListener = this.onDropPanelVisible.bind(this);\n        this.rowGroupComp = new rowGroupDropZonePanel_1.RowGroupDropZonePanel(true);\n        this.getContext().wireBean(this.rowGroupComp);\n        this.addDestroyFunc(function () { return _this.rowGroupComp.destroy(); });\n        this.pivotComp = new pivotDropZonePanel_1.PivotDropZonePanel(true);\n        this.getContext().wireBean(this.pivotComp);\n        this.addDestroyFunc(function () { return _this.pivotComp.destroy(); });\n        topPanelGui.appendChild(this.rowGroupComp.getGui());\n        topPanelGui.appendChild(this.pivotComp.getGui());\n        this.rowGroupComp.addEventListener(main_1.Component.EVENT_DISPLAYED_CHANGED, dropPanelVisibleListener);\n        this.pivotComp.addEventListener(main_1.Component.EVENT_DISPLAYED_CHANGED, dropPanelVisibleListener);\n        this.addDestroyFunc(function () {\n            _this.rowGroupComp.removeEventListener(main_1.Component.EVENT_DISPLAYED_CHANGED, dropPanelVisibleListener);\n            _this.pivotComp.removeEventListener(main_1.Component.EVENT_DISPLAYED_CHANGED, dropPanelVisibleListener);\n        });\n        this.onDropPanelVisible();\n        return topPanelGui;\n    };\n    GridHeaderDropZones.prototype.onDropPanelVisible = function () {\n        var bothDisplayed = this.rowGroupComp.isDisplayed() && this.pivotComp.isDisplayed();\n        this.rowGroupComp.addOrRemoveCssClass('ag-width-half', bothDisplayed);\n        this.pivotComp.addOrRemoveCssClass('ag-width-half', bothDisplayed);\n    };\n    GridHeaderDropZones.prototype.onRowGroupChanged = function () {\n        if (!this.rowGroupComp) {\n            return;\n        }\n        var rowGroupPanelShow = this.gridOptionsWrapper.getRowGroupPanelShow();\n        if (rowGroupPanelShow === main_1.Constants.ALWAYS) {\n            this.rowGroupComp.setDisplayed(true);\n        }\n        else if (rowGroupPanelShow === main_1.Constants.ONLY_WHEN_GROUPING) {\n            var grouping = !this.columnController.isRowGroupEmpty();\n            this.rowGroupComp.setDisplayed(grouping);\n        }\n        else {\n            this.rowGroupComp.setDisplayed(false);\n        }\n    };\n    __decorate([\n        main_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], GridHeaderDropZones.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.Autowired('columnController'),\n        __metadata(\"design:type\", main_1.ColumnController)\n    ], GridHeaderDropZones.prototype, \"columnController\", void 0);\n    __decorate([\n        main_1.Autowired('eventService'),\n        __metadata(\"design:type\", main_1.EventService)\n    ], GridHeaderDropZones.prototype, \"eventService\", void 0);\n    __decorate([\n        main_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GridHeaderDropZones.prototype, \"postConstruct\", null);\n    return GridHeaderDropZones;\n}(main_1.Component));\nexports.GridHeaderDropZones = GridHeaderDropZones;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/gridHeaderDropZones.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/pivotDropZonePanel.js":
/*!******************************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/pivotDropZonePanel.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar main_1 = __webpack_require__(/*! ag-grid-community/main */ \"../../node_modules/ag-grid-community/main.js\");\nvar baseDropZonePanel_1 = __webpack_require__(/*! ../dropZone/baseDropZonePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/dropZone/baseDropZonePanel.js\");\nvar PivotDropZonePanel = /** @class */ (function (_super) {\n    __extends(PivotDropZonePanel, _super);\n    function PivotDropZonePanel(horizontal) {\n        return _super.call(this, horizontal, false, 'pivot') || this;\n    }\n    PivotDropZonePanel.prototype.passBeansUp = function () {\n        _super.prototype.setBeans.call(this, {\n            gridOptionsWrapper: this.gridOptionsWrapper,\n            eventService: this.eventService,\n            context: this.getContext(),\n            loggerFactory: this.loggerFactory,\n            dragAndDropService: this.dragAndDropService\n        });\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        var emptyMessage = localeTextFunc('pivotColumnsEmptyMessage', 'Drag here to set column labels');\n        var title = localeTextFunc('pivots', 'Column Labels');\n        _super.prototype.init.call(this, {\n            dragAndDropIcon: main_1.DragAndDropService.ICON_GROUP,\n            icon: main_1._.createIconNoSpan('pivotPanel', this.gridOptionsWrapper, null),\n            emptyMessage: emptyMessage,\n            title: title\n        });\n        this.addDestroyableEventListener(this.eventService, main_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.refresh.bind(this));\n        this.addDestroyableEventListener(this.eventService, main_1.Events.EVENT_COLUMN_PIVOT_CHANGED, this.refresh.bind(this));\n        this.addDestroyableEventListener(this.eventService, main_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.checkVisibility.bind(this));\n        this.refresh();\n    };\n    PivotDropZonePanel.prototype.refresh = function () {\n        this.checkVisibility();\n        this.refreshGui();\n    };\n    PivotDropZonePanel.prototype.checkVisibility = function () {\n        var pivotMode = this.columnController.isPivotMode();\n        if (this.isHorizontal()) {\n            // what we do for horizontal (ie the pivot panel at the top) depends\n            // on the user property as well as pivotMode.\n            switch (this.gridOptionsWrapper.getPivotPanelShow()) {\n                case 'always':\n                    this.setDisplayed(pivotMode);\n                    break;\n                case 'onlyWhenPivoting':\n                    var pivotActive = this.columnController.isPivotActive();\n                    this.setDisplayed(pivotMode && pivotActive);\n                    break;\n                default:\n                    // never show it\n                    this.setDisplayed(false);\n                    break;\n            }\n        }\n        else {\n            // in toolPanel, the pivot panel is always shown when pivot mode is on\n            this.setDisplayed(pivotMode);\n        }\n    };\n    PivotDropZonePanel.prototype.isColumnDroppable = function (column) {\n        if (this.gridOptionsWrapper.isFunctionsReadOnly()) {\n            return false;\n        }\n        // we never allow grouping of secondary columns\n        if (!column.isPrimary()) {\n            return false;\n        }\n        var allowPivot = column.isAllowPivot();\n        var columnNotAlreadyPivoted = !column.isPivotActive();\n        return allowPivot && columnNotAlreadyPivoted;\n    };\n    PivotDropZonePanel.prototype.updateColumns = function (columns) {\n        if (this.gridOptionsWrapper.isFunctionsPassive()) {\n            var event_1 = {\n                type: main_1.Events.EVENT_COLUMN_PIVOT_CHANGE_REQUEST,\n                columns: columns,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_1);\n        }\n        else {\n            this.columnController.setPivotColumns(columns, \"toolPanelUi\");\n        }\n    };\n    PivotDropZonePanel.prototype.getIconName = function () {\n        return this.isPotentialDndColumns() ? main_1.DragAndDropService.ICON_PIVOT : main_1.DragAndDropService.ICON_NOT_ALLOWED;\n    };\n    PivotDropZonePanel.prototype.getExistingColumns = function () {\n        return this.columnController.getPivotColumns();\n    };\n    __decorate([\n        main_1.Autowired('columnController'),\n        __metadata(\"design:type\", main_1.ColumnController)\n    ], PivotDropZonePanel.prototype, \"columnController\", void 0);\n    __decorate([\n        main_1.Autowired('eventService'),\n        __metadata(\"design:type\", main_1.EventService)\n    ], PivotDropZonePanel.prototype, \"eventService\", void 0);\n    __decorate([\n        main_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], PivotDropZonePanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.Autowired('loggerFactory'),\n        __metadata(\"design:type\", main_1.LoggerFactory)\n    ], PivotDropZonePanel.prototype, \"loggerFactory\", void 0);\n    __decorate([\n        main_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", main_1.DragAndDropService)\n    ], PivotDropZonePanel.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        main_1.Autowired('columnApi'),\n        __metadata(\"design:type\", main_1.ColumnApi)\n    ], PivotDropZonePanel.prototype, \"columnApi\", void 0);\n    __decorate([\n        main_1.Autowired('gridApi'),\n        __metadata(\"design:type\", main_1.GridApi)\n    ], PivotDropZonePanel.prototype, \"gridApi\", void 0);\n    __decorate([\n        main_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], PivotDropZonePanel.prototype, \"passBeansUp\", null);\n    return PivotDropZonePanel;\n}(baseDropZonePanel_1.BaseDropZonePanel));\nexports.PivotDropZonePanel = PivotDropZonePanel;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/pivotDropZonePanel.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/pivotModePanel.js":
/*!**************************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/pivotModePanel.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar main_1 = __webpack_require__(/*! ag-grid-community/main */ \"../../node_modules/ag-grid-community/main.js\");\nvar PivotModePanel = /** @class */ (function (_super) {\n    __extends(PivotModePanel, _super);\n    function PivotModePanel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PivotModePanel.prototype.createTemplate = function () {\n        return \"<div class=\\\"ag-pivot-mode-panel\\\">\\n                <ag-checkbox ref=\\\"cbPivotMode\\\" class=\\\"ag-pivot-mode-select\\\"></ag-checkbox>\\n            </div>\";\n    };\n    PivotModePanel.prototype.init = function () {\n        this.setTemplate(this.createTemplate());\n        this.cbPivotMode.setValue(this.columnController.isPivotMode());\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        this.cbPivotMode.setLabel(localeTextFunc('pivotMode', 'Pivot Mode'));\n        this.addDestroyableEventListener(this.cbPivotMode, main_1.AgCheckbox.EVENT_CHANGED, this.onBtPivotMode.bind(this));\n        this.addDestroyableEventListener(this.eventService, main_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.onPivotModeChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, main_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onPivotModeChanged.bind(this));\n    };\n    PivotModePanel.prototype.onBtPivotMode = function () {\n        var newValue = this.cbPivotMode.getValue();\n        if (newValue !== this.columnController.isPivotMode()) {\n            this.columnController.setPivotMode(newValue, \"toolPanelUi\");\n            var api = this.gridOptionsWrapper.getApi();\n            if (api) {\n                api.refreshHeader();\n            }\n        }\n    };\n    PivotModePanel.prototype.onPivotModeChanged = function () {\n        var pivotModeActive = this.columnController.isPivotMode();\n        this.cbPivotMode.setValue(pivotModeActive);\n    };\n    __decorate([\n        main_1.Autowired('columnController'),\n        __metadata(\"design:type\", main_1.ColumnController)\n    ], PivotModePanel.prototype, \"columnController\", void 0);\n    __decorate([\n        main_1.Autowired('eventService'),\n        __metadata(\"design:type\", main_1.EventService)\n    ], PivotModePanel.prototype, \"eventService\", void 0);\n    __decorate([\n        main_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], PivotModePanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.RefSelector('cbPivotMode'),\n        __metadata(\"design:type\", main_1.AgCheckbox)\n    ], PivotModePanel.prototype, \"cbPivotMode\", void 0);\n    __decorate([\n        main_1.PreConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], PivotModePanel.prototype, \"init\", null);\n    return PivotModePanel;\n}(main_1.Component));\nexports.PivotModePanel = PivotModePanel;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/pivotModePanel.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsHeaderPanel.js":
/*!***************************************************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsHeaderPanel.js ***!
  \***************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar main_1 = __webpack_require__(/*! ag-grid-community/main */ \"../../node_modules/ag-grid-community/main.js\");\nvar SELECTED_STATE;\n(function (SELECTED_STATE) {\n    SELECTED_STATE[SELECTED_STATE[\"CHECKED\"] = 0] = \"CHECKED\";\n    SELECTED_STATE[SELECTED_STATE[\"UNCHECKED\"] = 1] = \"UNCHECKED\";\n    SELECTED_STATE[SELECTED_STATE[\"INDETERMINATE\"] = 2] = \"INDETERMINATE\";\n})(SELECTED_STATE = exports.SELECTED_STATE || (exports.SELECTED_STATE = {}));\nvar PrimaryColsHeaderPanel = /** @class */ (function (_super) {\n    __extends(PrimaryColsHeaderPanel, _super);\n    function PrimaryColsHeaderPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.expandState = SELECTED_STATE.CHECKED;\n        _this.selectState = SELECTED_STATE.CHECKED;\n        return _this;\n    }\n    PrimaryColsHeaderPanel.prototype.preConstruct = function () {\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        this.setTemplate(\"<div class=\\\"ag-primary-cols-header-panel\\\" role=\\\"presentation\\\">\\n            <div ref=\\\"eExpand\\\"></div>\\n            <div ref=\\\"eSelect\\\"></div>\\n            <div class=\\\"ag-input-wrapper ag-primary-cols-filter-wrapper\\\" ref=\\\"eFilterWrapper\\\" role=\\\"presentation\\\">\\n                <input class=\\\"ag-primary-cols-filter\\\" ref=\\\"eFilterTextField\\\" type=\\\"text\\\" placeholder=\\\"\" + translate('filterOoo', 'Filter...') + \"\\\">        \\n            </div>\\n        </div>\");\n    };\n    PrimaryColsHeaderPanel.prototype.postConstruct = function () {\n        this.addEventListeners();\n        this.createExpandIcons();\n        this.createCheckIcons();\n        this.setExpandState(SELECTED_STATE.CHECKED);\n        this.addDestroyableEventListener(this.eExpand, 'click', this.onExpandClicked.bind(this));\n        this.addDestroyableEventListener(this.eSelect, 'click', this.onSelectClicked.bind(this));\n        this.addDestroyableEventListener(this.eFilterTextField, 'input', this.onFilterTextChanged.bind(this));\n    };\n    PrimaryColsHeaderPanel.prototype.init = function (params) {\n        this.params = params;\n        if (this.columnController.isReady()) {\n            this.setColumnsCheckedState();\n            this.showOrHideOptions();\n        }\n    };\n    PrimaryColsHeaderPanel.prototype.createExpandIcons = function () {\n        this.eExpand.appendChild(this.eExpandChecked = main_1._.createIconNoSpan('columnSelectOpen', this.gridOptionsWrapper));\n        this.eExpand.appendChild(this.eExpandUnchecked = main_1._.createIconNoSpan('columnSelectClosed', this.gridOptionsWrapper));\n        this.eExpand.appendChild(this.eExpandIndeterminate = main_1._.createIconNoSpan('columnSelectIndeterminate', this.gridOptionsWrapper));\n    };\n    PrimaryColsHeaderPanel.prototype.createCheckIcons = function () {\n        this.eSelect.appendChild(this.eSelectChecked = main_1._.createIconNoSpan('checkboxChecked', this.gridOptionsWrapper));\n        this.eSelect.appendChild(this.eSelectUnchecked = main_1._.createIconNoSpan('checkboxUnchecked', this.gridOptionsWrapper));\n        this.eSelect.appendChild(this.eSelectIndeterminate = main_1._.createIconNoSpan('checkboxIndeterminate', this.gridOptionsWrapper));\n    };\n    // we only show expand / collapse if we are showing columns\n    PrimaryColsHeaderPanel.prototype.showOrHideOptions = function () {\n        var showFilter = !this.params.suppressColumnFilter;\n        var showSelect = !this.params.suppressColumnSelectAll;\n        var showExpand = !this.params.suppressColumnExpandAll;\n        var groupsPresent = this.columnController.isPrimaryColumnGroupsPresent();\n        main_1._.setDisplayed(this.eFilterWrapper, showFilter);\n        main_1._.setDisplayed(this.eSelect, showSelect);\n        main_1._.setDisplayed(this.eExpand, showExpand && groupsPresent);\n    };\n    PrimaryColsHeaderPanel.prototype.addEventListeners = function () {\n        var _this = this;\n        var eventsImpactingCheckedState = [\n            main_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED,\n            main_1.Events.EVENT_COLUMN_PIVOT_CHANGED,\n            main_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED,\n            main_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED,\n            main_1.Events.EVENT_COLUMN_VALUE_CHANGED,\n            main_1.Events.EVENT_COLUMN_VISIBLE,\n            main_1.Events.EVENT_NEW_COLUMNS_LOADED\n        ];\n        eventsImpactingCheckedState.forEach(function (event) {\n            _this.addDestroyableEventListener(_this.eventService, event, _this.setColumnsCheckedState.bind(_this));\n        });\n        this.addDestroyableEventListener(this.eventService, main_1.Events.EVENT_NEW_COLUMNS_LOADED, this.showOrHideOptions.bind(this));\n    };\n    PrimaryColsHeaderPanel.prototype.onFilterTextChanged = function () {\n        var _this = this;\n        if (!this.onFilterTextChangedDebounced) {\n            this.onFilterTextChangedDebounced = main_1._.debounce(function () {\n                var filterText = _this.eFilterTextField.value;\n                _this.dispatchEvent({ type: 'filterChanged', filterText: filterText });\n            }, 400);\n        }\n        this.onFilterTextChangedDebounced();\n    };\n    PrimaryColsHeaderPanel.prototype.onSelectClicked = function () {\n        // here we just fire the event. the following happens is the flow of events:\n        // 1. event here fired.\n        // 2. toolpanel updates the columns.\n        // 3. column controller fires events of column updated\n        // 4. update in this panel is updated based on events fired by column controller\n        if (this.selectState === SELECTED_STATE.CHECKED) {\n            this.dispatchEvent({ type: 'unselectAll' });\n        }\n        else {\n            this.dispatchEvent({ type: 'selectAll' });\n        }\n    };\n    PrimaryColsHeaderPanel.prototype.onExpandClicked = function () {\n        if (this.expandState === SELECTED_STATE.CHECKED) {\n            this.dispatchEvent({ type: 'collapseAll' });\n        }\n        else {\n            this.dispatchEvent({ type: 'expandAll' });\n        }\n    };\n    PrimaryColsHeaderPanel.prototype.setExpandState = function (state) {\n        this.expandState = state;\n        main_1._.setDisplayed(this.eExpandChecked, this.expandState === SELECTED_STATE.CHECKED);\n        main_1._.setDisplayed(this.eExpandUnchecked, this.expandState === SELECTED_STATE.UNCHECKED);\n        main_1._.setDisplayed(this.eExpandIndeterminate, this.expandState === SELECTED_STATE.INDETERMINATE);\n    };\n    PrimaryColsHeaderPanel.prototype.setColumnsCheckedState = function () {\n        var allPrimaryColumns = this.columnController.getAllPrimaryColumns();\n        var columns = [];\n        if (allPrimaryColumns !== null) {\n            columns = allPrimaryColumns.filter(function (col) { return !col.getColDef().lockVisible; });\n        }\n        var pivotMode = this.columnController.isPivotMode();\n        var checkedCount = 0;\n        var uncheckedCount = 0;\n        columns.forEach(function (col) {\n            // ignore lock visible columns\n            if (col.getColDef().lockVisible) {\n                return;\n            }\n            // not not count columns not in tool panel\n            var colDef = col.getColDef();\n            if (colDef && colDef.suppressToolPanel) {\n                return;\n            }\n            var checked;\n            if (pivotMode) {\n                var noPivotModeOptionsAllowed = !col.isAllowPivot() && !col.isAllowRowGroup() && !col.isAllowValue();\n                if (noPivotModeOptionsAllowed) {\n                    return;\n                }\n                checked = col.isValueActive() || col.isPivotActive() || col.isRowGroupActive();\n            }\n            else {\n                checked = col.isVisible();\n            }\n            if (checked) {\n                checkedCount++;\n            }\n            else {\n                uncheckedCount++;\n            }\n        });\n        if (checkedCount > 0 && uncheckedCount > 0) {\n            this.selectState = SELECTED_STATE.INDETERMINATE;\n        }\n        else if (uncheckedCount > 0) {\n            this.selectState = SELECTED_STATE.UNCHECKED;\n        }\n        else {\n            this.selectState = SELECTED_STATE.CHECKED;\n        }\n        main_1._.setDisplayed(this.eSelectChecked, this.selectState === SELECTED_STATE.CHECKED);\n        main_1._.setDisplayed(this.eSelectUnchecked, this.selectState === SELECTED_STATE.UNCHECKED);\n        main_1._.setDisplayed(this.eSelectIndeterminate, this.selectState === SELECTED_STATE.INDETERMINATE);\n    };\n    __decorate([\n        main_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], PrimaryColsHeaderPanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.Autowired('columnController'),\n        __metadata(\"design:type\", main_1.ColumnController)\n    ], PrimaryColsHeaderPanel.prototype, \"columnController\", void 0);\n    __decorate([\n        main_1.Autowired('eventService'),\n        __metadata(\"design:type\", main_1.EventService)\n    ], PrimaryColsHeaderPanel.prototype, \"eventService\", void 0);\n    __decorate([\n        main_1.RefSelector('eFilterTextField'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], PrimaryColsHeaderPanel.prototype, \"eFilterTextField\", void 0);\n    __decorate([\n        main_1.RefSelector('eExpand'),\n        __metadata(\"design:type\", HTMLElement)\n    ], PrimaryColsHeaderPanel.prototype, \"eExpand\", void 0);\n    __decorate([\n        main_1.RefSelector('eSelect'),\n        __metadata(\"design:type\", HTMLElement)\n    ], PrimaryColsHeaderPanel.prototype, \"eSelect\", void 0);\n    __decorate([\n        main_1.RefSelector('eFilterWrapper'),\n        __metadata(\"design:type\", HTMLElement)\n    ], PrimaryColsHeaderPanel.prototype, \"eFilterWrapper\", void 0);\n    __decorate([\n        main_1.PreConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], PrimaryColsHeaderPanel.prototype, \"preConstruct\", null);\n    __decorate([\n        main_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], PrimaryColsHeaderPanel.prototype, \"postConstruct\", null);\n    return PrimaryColsHeaderPanel;\n}(main_1.Component));\nexports.PrimaryColsHeaderPanel = PrimaryColsHeaderPanel;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsHeaderPanel.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsListPanel.js":
/*!*************************************************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsListPanel.js ***!
  \*************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar main_1 = __webpack_require__(/*! ag-grid-community/main */ \"../../node_modules/ag-grid-community/main.js\");\nvar toolPanelColumnGroupComp_1 = __webpack_require__(/*! ./toolPanelColumnGroupComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/toolPanelColumnGroupComp.js\");\nvar toolPanelColumnComp_1 = __webpack_require__(/*! ./toolPanelColumnComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/toolPanelColumnComp.js\");\nvar primaryColsHeaderPanel_1 = __webpack_require__(/*! ./primaryColsHeaderPanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsHeaderPanel.js\");\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar PrimaryColsListPanel = /** @class */ (function (_super) {\n    __extends(PrimaryColsListPanel, _super);\n    function PrimaryColsListPanel() {\n        return _super.call(this, PrimaryColsListPanel.TEMPLATE) || this;\n    }\n    PrimaryColsListPanel.prototype.init = function (params, allowDragging) {\n        this.params = params;\n        this.allowDragging = allowDragging;\n        this.addDestroyableEventListener(this.globalEventService, main_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.onColumnsChanged.bind(this));\n        this.expandGroupsByDefault = !this.params.contractColumnSelection;\n        if (this.columnController.isReady()) {\n            this.onColumnsChanged();\n        }\n    };\n    PrimaryColsListPanel.prototype.onColumnsChanged = function () {\n        this.destroyColumnComps();\n        this.columnTree = this.columnController.getPrimaryColumnTree();\n        var groupsExist = this.columnController.isPrimaryColumnGroupsPresent();\n        this.recursivelyAddComps(this.columnTree, 0, groupsExist);\n        this.updateVisibilityOfRows();\n    };\n    PrimaryColsListPanel.prototype.destroyColumnComps = function () {\n        main_1._.clearElement(this.getGui());\n        if (this.columnComps) {\n            main_1._.iterateObject(this.columnComps, function (key, renderedItem) { return renderedItem.destroy(); });\n        }\n        this.columnComps = {};\n    };\n    PrimaryColsListPanel.prototype.recursivelyAddGroupComps = function (columnGroup, dept, groupsExist) {\n        // only render group if user provided the definition\n        var newDept;\n        if (columnGroup.getColGroupDef() && columnGroup.getColGroupDef().suppressToolPanel) {\n            return;\n        }\n        if (!columnGroup.isPadding()) {\n            var renderedGroup = new toolPanelColumnGroupComp_1.ToolPanelColumnGroupComp(columnGroup, dept, this.onGroupExpanded.bind(this), this.allowDragging, this.expandGroupsByDefault);\n            this.getContext().wireBean(renderedGroup);\n            this.getGui().appendChild(renderedGroup.getGui());\n            // we want to indent on the gui for the children\n            newDept = dept + 1;\n            this.columnComps[columnGroup.getId()] = renderedGroup;\n        }\n        else {\n            // no children, so no indent\n            newDept = dept;\n        }\n        this.recursivelyAddComps(columnGroup.getChildren(), newDept, groupsExist);\n    };\n    PrimaryColsListPanel.prototype.onGroupExpanded = function () {\n        this.updateVisibilityOfRows();\n        this.fireExpandedEvent();\n    };\n    PrimaryColsListPanel.prototype.fireExpandedEvent = function () {\n        var _this = this;\n        var expandedCount = 0;\n        var notExpandedCount = 0;\n        var recursiveFunc = function (items) {\n            items.forEach(function (item) {\n                // only interested in groups\n                if (item instanceof main_1.OriginalColumnGroup) {\n                    var comp = _this.columnComps[item.getId()];\n                    if (comp) {\n                        if (comp.isExpanded()) {\n                            expandedCount++;\n                        }\n                        else {\n                            notExpandedCount++;\n                        }\n                    }\n                    var columnGroup = item;\n                    var groupChildren = columnGroup.getChildren();\n                    recursiveFunc(groupChildren);\n                }\n            });\n        };\n        recursiveFunc(this.columnTree);\n        var state;\n        if (expandedCount > 0 && notExpandedCount > 0) {\n            state = primaryColsHeaderPanel_1.SELECTED_STATE.INDETERMINATE;\n        }\n        else if (notExpandedCount > 0) {\n            state = primaryColsHeaderPanel_1.SELECTED_STATE.UNCHECKED;\n        }\n        else {\n            state = primaryColsHeaderPanel_1.SELECTED_STATE.CHECKED;\n        }\n        this.dispatchEvent({ type: 'groupExpanded', state: state });\n    };\n    PrimaryColsListPanel.prototype.recursivelyAddColumnComps = function (column, dept, groupsExist) {\n        if (column.getColDef() && column.getColDef().suppressToolPanel) {\n            return;\n        }\n        var columnComp = new toolPanelColumnComp_1.ToolPanelColumnComp(column, dept, this.allowDragging, groupsExist);\n        this.getContext().wireBean(columnComp);\n        this.getGui().appendChild(columnComp.getGui());\n        this.columnComps[column.getId()] = columnComp;\n    };\n    PrimaryColsListPanel.prototype.recursivelyAddComps = function (tree, dept, groupsExist) {\n        var _this = this;\n        tree.forEach(function (child) {\n            if (child instanceof main_1.OriginalColumnGroup) {\n                _this.recursivelyAddGroupComps(child, dept, groupsExist);\n            }\n            else {\n                _this.recursivelyAddColumnComps(child, dept, groupsExist);\n            }\n        });\n    };\n    PrimaryColsListPanel.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.destroyColumnComps();\n    };\n    PrimaryColsListPanel.prototype.doSetExpandedAll = function (value) {\n        main_1._.iterateObject(this.columnComps, function (key, renderedItem) {\n            if (renderedItem.isExpandable()) {\n                renderedItem.setExpanded(value);\n            }\n        });\n    };\n    PrimaryColsListPanel.prototype.setFilterText = function (filterText) {\n        this.filterText = main_1._.exists(filterText) ? filterText.toLowerCase() : null;\n        this.updateVisibilityOfRows();\n    };\n    PrimaryColsListPanel.prototype.updateVisibilityOfRows = function () {\n        // we have to create the filter results first as that requires dept first search, then setting\n        // the visibility requires breadth first search. this is because a group passes filter if CHILDREN\n        // pass filter, a column passes group open/closed visibility if a PARENT is open. so we need to do\n        // two recursions. we pass the result of the first recursion to the second.\n        var filterResults = main_1._.exists(this.filterText) ? this.createFilterResults() : null;\n        this.recursivelySetVisibility(this.columnTree, true, filterResults);\n    };\n    PrimaryColsListPanel.prototype.createFilterResults = function () {\n        var _this = this;\n        var filterResults = {};\n        // we recurse dept first - as the item should show if any of the children are showing\n        var recursivelyCheckFilter = function (items) {\n            var atLeastOneThisLevelPassed = false;\n            items.forEach(function (item) {\n                var atLeastOneChildPassed = false;\n                if (item instanceof main_1.OriginalColumnGroup) {\n                    var columnGroup = item;\n                    var groupChildren = columnGroup.getChildren();\n                    atLeastOneChildPassed = recursivelyCheckFilter(groupChildren);\n                }\n                var filterPasses;\n                if (atLeastOneChildPassed) {\n                    filterPasses = true;\n                }\n                else {\n                    var comp = _this.columnComps[item.getId()];\n                    if (comp && _this.filterText) {\n                        var displayName = comp.getDisplayName();\n                        filterPasses = displayName !== null ? displayName.toLowerCase().indexOf(_this.filterText) >= 0 : true;\n                    }\n                    else {\n                        // if this is a dummy column group, we should return false here\n                        filterPasses = item instanceof main_1.OriginalColumnGroup && item.getOriginalParent() ? true : false;\n                    }\n                }\n                filterResults[item.getId()] = filterPasses;\n                if (filterPasses) {\n                    atLeastOneThisLevelPassed = true;\n                }\n            });\n            return atLeastOneThisLevelPassed;\n        };\n        recursivelyCheckFilter(this.columnTree);\n        return filterResults;\n    };\n    PrimaryColsListPanel.prototype.recursivelySetVisibility = function (columnTree, parentGroupsOpen, filterResults) {\n        var _this = this;\n        columnTree.forEach(function (child) {\n            var comp = _this.columnComps[child.getId()];\n            if (comp) {\n                var passesFilter = filterResults ? filterResults[child.getId()] : true;\n                comp.setDisplayed(parentGroupsOpen && passesFilter);\n            }\n            if (child instanceof main_1.OriginalColumnGroup) {\n                var columnGroup = child;\n                var childrenOpen = void 0;\n                if (comp) {\n                    var expanded = comp.isExpanded();\n                    childrenOpen = parentGroupsOpen ? expanded : false;\n                }\n                else {\n                    childrenOpen = parentGroupsOpen;\n                }\n                var children = columnGroup.getChildren();\n                _this.recursivelySetVisibility(children, childrenOpen, filterResults);\n            }\n        });\n    };\n    PrimaryColsListPanel.prototype.doSetSelectedAll = function (checked) {\n        if (this.columnApi.isPivotMode()) {\n            // if pivot mode is on, then selecting columns has special meaning (eg group, aggregate, pivot etc),\n            // so there is no bulk operation we can do.\n            main_1._.iterateObject(this.columnComps, function (key, column) {\n                column.onSelectAllChanged(checked);\n            });\n        }\n        else {\n            // however if pivot mode is off, then it's all about column visibility so we can do a bulk\n            // operation directly with the column controller. we could column.onSelectAllChanged(checked)\n            // as above, however this would work on each column independently and take longer.\n            var primaryCols = this.columnApi.getPrimaryColumns();\n            this.columnApi.setColumnsVisible(primaryCols, checked);\n        }\n    };\n    PrimaryColsListPanel.TEMPLATE = \"<div class=\\\"ag-primary-cols-list-panel\\\"></div>\";\n    __decorate([\n        main_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], PrimaryColsListPanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.Autowired('columnController'),\n        __metadata(\"design:type\", main_1.ColumnController)\n    ], PrimaryColsListPanel.prototype, \"columnController\", void 0);\n    __decorate([\n        main_1.Autowired('eventService'),\n        __metadata(\"design:type\", main_1.EventService)\n    ], PrimaryColsListPanel.prototype, \"globalEventService\", void 0);\n    __decorate([\n        main_1.Autowired('columnApi'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnApi)\n    ], PrimaryColsListPanel.prototype, \"columnApi\", void 0);\n    return PrimaryColsListPanel;\n}(main_1.Component));\nexports.PrimaryColsListPanel = PrimaryColsListPanel;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsListPanel.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsPanel.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsPanel.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar main_1 = __webpack_require__(/*! ag-grid-community/main */ \"../../node_modules/ag-grid-community/main.js\");\nvar primaryColsListPanel_1 = __webpack_require__(/*! ./primaryColsListPanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsListPanel.js\");\nvar primaryColsHeaderPanel_1 = __webpack_require__(/*! ./primaryColsHeaderPanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsHeaderPanel.js\");\nvar PrimaryColsPanel = /** @class */ (function (_super) {\n    __extends(PrimaryColsPanel, _super);\n    // we allow dragging in the toolPanel, but not when this component appears in the column menu\n    function PrimaryColsPanel(allowDragging, params) {\n        var _this = _super.call(this, PrimaryColsPanel.TEMPLATE) || this;\n        _this.allowDragging = allowDragging;\n        _this.params = params;\n        return _this;\n    }\n    PrimaryColsPanel.prototype.init = function () {\n        this.primaryColsHeaderPanel.init(this.params);\n        this.primaryColsListPanel.init(this.params, this.allowDragging);\n        var hideFilter = this.params.suppressColumnFilter;\n        var hideSelect = this.params.suppressColumnSelectAll;\n        var hideExpand = this.params.suppressColumnExpandAll;\n        if (hideExpand && hideFilter && hideSelect) {\n            this.primaryColsHeaderPanel.setDisplayed(false);\n        }\n        this.addDestroyableEventListener(this.primaryColsHeaderPanel, 'expandAll', this.onExpandAll.bind(this));\n        this.addDestroyableEventListener(this.primaryColsHeaderPanel, 'collapseAll', this.onCollapseAll.bind(this));\n        this.addDestroyableEventListener(this.primaryColsHeaderPanel, 'selectAll', this.onSelectAll.bind(this));\n        this.addDestroyableEventListener(this.primaryColsHeaderPanel, 'unselectAll', this.onUnselectAll.bind(this));\n        this.addDestroyableEventListener(this.primaryColsHeaderPanel, 'filterChanged', this.onFilterChanged.bind(this));\n        this.addDestroyableEventListener(this.primaryColsListPanel, 'groupExpanded', this.onGroupExpanded.bind(this));\n    };\n    PrimaryColsPanel.prototype.onFilterChanged = function (event) {\n        this.primaryColsListPanel.setFilterText(event.filterText);\n    };\n    PrimaryColsPanel.prototype.onSelectAll = function () {\n        this.primaryColsListPanel.doSetSelectedAll(true);\n    };\n    PrimaryColsPanel.prototype.onUnselectAll = function () {\n        this.primaryColsListPanel.doSetSelectedAll(false);\n    };\n    PrimaryColsPanel.prototype.onExpandAll = function () {\n        this.primaryColsListPanel.doSetExpandedAll(true);\n    };\n    PrimaryColsPanel.prototype.onCollapseAll = function () {\n        this.primaryColsListPanel.doSetExpandedAll(false);\n    };\n    PrimaryColsPanel.prototype.onGroupExpanded = function (event) {\n        this.primaryColsHeaderPanel.setExpandState(event.state);\n    };\n    PrimaryColsPanel.TEMPLATE = \"<div class=\\\"ag-column-select-panel\\\">\\n            <ag-primary-cols-header ref=\\\"primaryColsHeaderPanel\\\"></ag-primary-cols-header>\\n            <ag-primary-cols-list ref=\\\"primaryColsListPanel\\\"></ag-primary-cols-list>\\n        </div>\";\n    __decorate([\n        main_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], PrimaryColsPanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.RefSelector('primaryColsHeaderPanel'),\n        __metadata(\"design:type\", primaryColsHeaderPanel_1.PrimaryColsHeaderPanel)\n    ], PrimaryColsPanel.prototype, \"primaryColsHeaderPanel\", void 0);\n    __decorate([\n        main_1.RefSelector('primaryColsListPanel'),\n        __metadata(\"design:type\", primaryColsListPanel_1.PrimaryColsListPanel)\n    ], PrimaryColsPanel.prototype, \"primaryColsListPanel\", void 0);\n    __decorate([\n        main_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], PrimaryColsPanel.prototype, \"init\", null);\n    return PrimaryColsPanel;\n}(main_1.Component));\nexports.PrimaryColsPanel = PrimaryColsPanel;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsPanel.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/toolPanelColumnComp.js":
/*!************************************************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/toolPanelColumnComp.js ***!
  \************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar main_1 = __webpack_require__(/*! ag-grid-community/main */ \"../../node_modules/ag-grid-community/main.js\");\nvar ToolPanelColumnComp = /** @class */ (function (_super) {\n    __extends(ToolPanelColumnComp, _super);\n    function ToolPanelColumnComp(column, columnDept, allowDragging, groupsExist) {\n        var _this = _super.call(this) || this;\n        _this.processingColumnStateChange = false;\n        _this.column = column;\n        _this.columnDept = columnDept;\n        _this.allowDragging = allowDragging;\n        _this.groupsExist = groupsExist;\n        return _this;\n    }\n    ToolPanelColumnComp.prototype.init = function () {\n        this.setTemplate(ToolPanelColumnComp.TEMPLATE);\n        this.eDragHandle = main_1._.createIconNoSpan('columnDrag', this.gridOptionsWrapper);\n        main_1._.addCssClass(this.eDragHandle, 'ag-column-drag');\n        this.cbSelect.getGui().insertAdjacentElement('afterend', this.eDragHandle);\n        this.displayName = this.columnController.getDisplayNameForColumn(this.column, 'toolPanel');\n        var displayNameSanitised = main_1._.escape(this.displayName);\n        this.eLabel.innerHTML = displayNameSanitised;\n        // if grouping, we add an extra level of indent, to cater for expand/contract icons we need to indent for\n        var indent = this.columnDept;\n        if (this.groupsExist) {\n            this.addCssClass('ag-toolpanel-add-group-indent');\n        }\n        this.addCssClass(\"ag-toolpanel-indent-\" + indent);\n        this.setupDragging();\n        this.addDestroyableEventListener(this.eventService, main_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onColumnStateChanged.bind(this));\n        this.addDestroyableEventListener(this.column, main_1.Column.EVENT_VALUE_CHANGED, this.onColumnStateChanged.bind(this));\n        this.addDestroyableEventListener(this.column, main_1.Column.EVENT_PIVOT_CHANGED, this.onColumnStateChanged.bind(this));\n        this.addDestroyableEventListener(this.column, main_1.Column.EVENT_ROW_GROUP_CHANGED, this.onColumnStateChanged.bind(this));\n        this.addDestroyableEventListener(this.column, main_1.Column.EVENT_VISIBLE_CHANGED, this.onColumnStateChanged.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, 'functionsReadOnly', this.onColumnStateChanged.bind(this));\n        this.addDestroyableEventListener(this.cbSelect, main_1.AgCheckbox.EVENT_CHANGED, this.onCheckboxChanged.bind(this));\n        this.addDestroyableEventListener(this.eLabel, 'click', this.onLabelClicked.bind(this));\n        this.onColumnStateChanged();\n        main_1.CssClassApplier.addToolPanelClassesFromColDef(this.column.getColDef(), this.getGui(), this.gridOptionsWrapper, this.column, null);\n    };\n    ToolPanelColumnComp.prototype.onLabelClicked = function () {\n        if (this.gridOptionsWrapper.isFunctionsReadOnly()) {\n            return;\n        }\n        var nextState = !this.cbSelect.getValue();\n        this.onChangeCommon(nextState);\n    };\n    ToolPanelColumnComp.prototype.onCheckboxChanged = function (event) {\n        this.onChangeCommon(event.selected);\n    };\n    ToolPanelColumnComp.prototype.onChangeCommon = function (nextState) {\n        // ignore lock visible columns\n        if (this.column.getColDef().lockVisible) {\n            return;\n        }\n        // only want to action if the user clicked the checkbox, not is we are setting the checkbox because\n        // of a change in the model\n        if (this.processingColumnStateChange) {\n            return;\n        }\n        // action in a timeout, as the action takes some time, we want to update the icons first\n        // so the user gets nice feedback when they click. otherwise there would be a lag and the\n        // user would think the checkboxes were clunky\n        if (this.columnController.isPivotMode()) {\n            if (nextState) {\n                this.actionCheckedPivotMode();\n            }\n            else {\n                this.actionUnCheckedPivotMode();\n            }\n        }\n        else {\n            this.columnController.setColumnVisible(this.column, nextState, \"columnMenu\");\n        }\n        if (this.selectionCallback) {\n            this.selectionCallback(this.isSelected());\n        }\n    };\n    ToolPanelColumnComp.prototype.actionUnCheckedPivotMode = function () {\n        var functionPassive = this.gridOptionsWrapper.isFunctionsPassive();\n        var column = this.column;\n        var columnController = this.columnController;\n        // remove pivot if column is pivoted\n        if (column.isPivotActive()) {\n            if (functionPassive) {\n                var copyOfPivotColumns = this.columnController.getPivotColumns().slice();\n                copyOfPivotColumns.push(column);\n                var event_1 = {\n                    type: main_1.Events.EVENT_COLUMN_PIVOT_CHANGE_REQUEST,\n                    columns: copyOfPivotColumns,\n                    api: this.gridApi,\n                    columnApi: this.columnApi\n                };\n                this.eventService.dispatchEvent(event_1);\n            }\n            else {\n                columnController.removePivotColumn(column, \"columnMenu\");\n            }\n        }\n        // remove value if column is value\n        if (column.isValueActive()) {\n            if (functionPassive) {\n                var copyOfValueColumns = this.columnController.getValueColumns().slice();\n                copyOfValueColumns.push(column);\n                var event_2 = {\n                    type: main_1.Events.EVENT_COLUMN_VALUE_CHANGE_REQUEST,\n                    columns: copyOfValueColumns,\n                    api: this.gridApi,\n                    columnApi: this.columnApi\n                };\n                this.eventService.dispatchEvent(event_2);\n            }\n            else {\n                columnController.removeValueColumn(column, \"columnMenu\");\n            }\n        }\n        // remove group if column is grouped\n        if (column.isRowGroupActive()) {\n            if (functionPassive) {\n                var copyOfRowGroupColumns = this.columnController.getRowGroupColumns().slice();\n                copyOfRowGroupColumns.push(column);\n                var event_3 = {\n                    type: main_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST,\n                    columns: copyOfRowGroupColumns,\n                    api: this.gridApi,\n                    columnApi: this.columnApi\n                };\n                this.eventService.dispatchEvent(event_3);\n            }\n            else {\n                columnController.removeRowGroupColumn(column, \"columnMenu\");\n            }\n        }\n    };\n    ToolPanelColumnComp.prototype.actionCheckedPivotMode = function () {\n        var column = this.column;\n        // function already active, so do nothing\n        if (column.isValueActive() || column.isPivotActive() || column.isRowGroupActive()) {\n            return;\n        }\n        var functionPassive = this.gridOptionsWrapper.isFunctionsPassive();\n        if (column.isAllowValue()) {\n            if (functionPassive) {\n                var copyOfValueColumns = this.columnController.getValueColumns().slice();\n                main_1._.removeFromArray(copyOfValueColumns, column);\n                var event_4 = {\n                    type: main_1.Events.EVENT_COLUMN_VALUE_CHANGE_REQUEST,\n                    api: this.gridApi,\n                    columnApi: this.columnApi,\n                    columns: copyOfValueColumns\n                };\n                this.eventService.dispatchEvent(event_4);\n            }\n            else {\n                this.columnController.addValueColumn(column, \"columnMenu\");\n            }\n        }\n        else if (column.isAllowRowGroup()) {\n            if (functionPassive) {\n                var copyOfRowGroupColumns = this.columnController.getRowGroupColumns().slice();\n                main_1._.removeFromArray(copyOfRowGroupColumns, column);\n                var event_5 = {\n                    type: main_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST,\n                    api: this.gridApi,\n                    columnApi: this.columnApi,\n                    columns: copyOfRowGroupColumns\n                };\n                this.eventService.dispatchEvent(event_5);\n            }\n            else {\n                this.columnController.addRowGroupColumn(column, \"columnMenu\");\n            }\n        }\n        else if (column.isAllowPivot()) {\n            if (functionPassive) {\n                var copyOfPivotColumns = this.columnController.getPivotColumns().slice();\n                main_1._.removeFromArray(copyOfPivotColumns, column);\n                var event_6 = {\n                    type: main_1.Events.EVENT_COLUMN_PIVOT_CHANGE_REQUEST,\n                    api: this.gridApi,\n                    columnApi: this.columnApi,\n                    columns: copyOfPivotColumns\n                };\n                this.eventService.dispatchEvent(event_6);\n            }\n            else {\n                this.columnController.addPivotColumn(column, \"columnMenu\");\n            }\n        }\n    };\n    ToolPanelColumnComp.prototype.setupDragging = function () {\n        var _this = this;\n        if (!this.allowDragging) {\n            main_1._.setDisplayed(this.eDragHandle, false);\n            return;\n        }\n        var dragSource = {\n            type: main_1.DragSourceType.ToolPanel,\n            eElement: this.eDragHandle,\n            dragItemName: this.displayName,\n            dragItemCallback: function () { return _this.createDragItem(); }\n        };\n        this.dragAndDropService.addDragSource(dragSource, true);\n        this.addDestroyFunc(function () { return _this.dragAndDropService.removeDragSource(dragSource); });\n    };\n    ToolPanelColumnComp.prototype.createDragItem = function () {\n        var visibleState = {};\n        visibleState[this.column.getId()] = this.column.isVisible();\n        return {\n            columns: [this.column],\n            visibleState: visibleState\n        };\n    };\n    ToolPanelColumnComp.prototype.onColumnStateChanged = function () {\n        this.processingColumnStateChange = true;\n        var isPivotMode = this.columnController.isPivotMode();\n        if (isPivotMode) {\n            // if reducing, checkbox means column is one of pivot, value or group\n            var anyFunctionActive = this.column.isAnyFunctionActive();\n            this.cbSelect.setValue(anyFunctionActive);\n            if (this.selectionCallback) {\n                this.selectionCallback(this.isSelected());\n            }\n        }\n        else {\n            // if not reducing, the checkbox tells us if column is visible or not\n            this.cbSelect.setValue(this.column.isVisible());\n            if (this.selectionCallback) {\n                this.selectionCallback(this.isSelected());\n            }\n        }\n        var checkboxReadOnly;\n        if (isPivotMode) {\n            // when in pivot mode, the item should be read only if:\n            //  a) gui is not allowed make any changes\n            var functionsReadOnly = this.gridOptionsWrapper.isFunctionsReadOnly();\n            //  b) column is not allow any functions on it\n            var noFunctionsAllowed = !this.column.isAnyFunctionAllowed();\n            checkboxReadOnly = functionsReadOnly || noFunctionsAllowed;\n        }\n        else {\n            // when in normal mode, the checkbox is read only if visibility is locked\n            checkboxReadOnly = !!this.column.getColDef().lockVisible;\n        }\n        this.cbSelect.setReadOnly(checkboxReadOnly);\n        var checkboxPassive = isPivotMode && this.gridOptionsWrapper.isFunctionsPassive();\n        this.cbSelect.setPassive(checkboxPassive);\n        this.processingColumnStateChange = false;\n    };\n    ToolPanelColumnComp.prototype.getDisplayName = function () {\n        return this.displayName;\n    };\n    ToolPanelColumnComp.prototype.onSelectAllChanged = function (value) {\n        if (value !== this.cbSelect.getValue()) {\n            if (!this.cbSelect.isReadOnly()) {\n                this.cbSelect.toggle();\n            }\n        }\n    };\n    ToolPanelColumnComp.prototype.isSelected = function () {\n        return this.cbSelect.getValue();\n    };\n    ToolPanelColumnComp.prototype.isSelectable = function () {\n        return !this.cbSelect.isReadOnly();\n    };\n    ToolPanelColumnComp.prototype.isExpandable = function () {\n        return false;\n    };\n    ToolPanelColumnComp.prototype.setExpanded = function (value) {\n        console.warn('ag-grid: can not expand a column item that does not represent a column group header');\n    };\n    ToolPanelColumnComp.TEMPLATE = \"<div class=\\\"ag-column-tool-panel-column\\\">\\n            <ag-checkbox ref=\\\"cbSelect\\\" class=\\\"ag-column-select-checkbox\\\"></ag-checkbox>\\n            <span class=\\\"ag-column-tool-panel-column-label\\\" ref=\\\"eLabel\\\"></span>\\n        </div>\";\n    __decorate([\n        main_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], ToolPanelColumnComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.Autowired('columnController'),\n        __metadata(\"design:type\", main_1.ColumnController)\n    ], ToolPanelColumnComp.prototype, \"columnController\", void 0);\n    __decorate([\n        main_1.Autowired('eventService'),\n        __metadata(\"design:type\", main_1.EventService)\n    ], ToolPanelColumnComp.prototype, \"eventService\", void 0);\n    __decorate([\n        main_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", main_1.DragAndDropService)\n    ], ToolPanelColumnComp.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        main_1.Autowired('columnApi'),\n        __metadata(\"design:type\", main_1.ColumnApi)\n    ], ToolPanelColumnComp.prototype, \"columnApi\", void 0);\n    __decorate([\n        main_1.Autowired('gridApi'),\n        __metadata(\"design:type\", main_1.GridApi)\n    ], ToolPanelColumnComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        main_1.RefSelector('eLabel'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ToolPanelColumnComp.prototype, \"eLabel\", void 0);\n    __decorate([\n        main_1.RefSelector('cbSelect'),\n        __metadata(\"design:type\", main_1.AgCheckbox)\n    ], ToolPanelColumnComp.prototype, \"cbSelect\", void 0);\n    __decorate([\n        main_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ToolPanelColumnComp.prototype, \"init\", null);\n    return ToolPanelColumnComp;\n}(main_1.Component));\nexports.ToolPanelColumnComp = ToolPanelColumnComp;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/toolPanelColumnComp.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/toolPanelColumnGroupComp.js":
/*!*****************************************************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/toolPanelColumnGroupComp.js ***!
  \*****************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar main_1 = __webpack_require__(/*! ag-grid-community/main */ \"../../node_modules/ag-grid-community/main.js\");\nvar ToolPanelColumnGroupComp = /** @class */ (function (_super) {\n    __extends(ToolPanelColumnGroupComp, _super);\n    function ToolPanelColumnGroupComp(columnGroup, columnDept, expandedCallback, allowDragging, expandByDefault) {\n        var _this = _super.call(this) || this;\n        _this.processingColumnStateChange = false;\n        _this.columnGroup = columnGroup;\n        _this.columnDept = columnDept;\n        _this.expandedCallback = expandedCallback;\n        _this.allowDragging = allowDragging;\n        _this.expanded = expandByDefault;\n        return _this;\n    }\n    ToolPanelColumnGroupComp.prototype.init = function () {\n        this.setTemplate(ToolPanelColumnGroupComp.TEMPLATE);\n        this.eDragHandle = main_1._.createIconNoSpan('columnDrag', this.gridOptionsWrapper);\n        main_1._.addCssClass(this.eDragHandle, 'ag-column-drag');\n        this.cbSelect.getGui().insertAdjacentElement('afterend', this.eDragHandle);\n        // this.displayName = this.columnGroup.getColGroupDef() ? this.columnGroup.getColGroupDef().headerName : null;\n        this.displayName = this.columnController.getDisplayNameForOriginalColumnGroup(null, this.columnGroup, 'toolPanel');\n        if (main_1._.missing(this.displayName)) {\n            this.displayName = '>>';\n        }\n        this.eLabel.innerHTML = this.displayName ? this.displayName : '';\n        this.setupExpandContract();\n        this.addCssClass('ag-toolpanel-indent-' + this.columnDept);\n        this.addDestroyableEventListener(this.eventService, main_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onColumnStateChanged.bind(this));\n        this.addDestroyableEventListener(this.eLabel, 'click', this.onLabelClicked.bind(this));\n        this.addDestroyableEventListener(this.cbSelect, main_1.AgCheckbox.EVENT_CHANGED, this.onCheckboxChanged.bind(this));\n        this.setOpenClosedIcons();\n        this.setupDragging();\n        this.onColumnStateChanged();\n        this.addVisibilityListenersToAllChildren();\n        main_1.CssClassApplier.addToolPanelClassesFromColDef(this.columnGroup.getColGroupDef(), this.getGui(), this.gridOptionsWrapper, null, this.columnGroup);\n    };\n    ToolPanelColumnGroupComp.prototype.addVisibilityListenersToAllChildren = function () {\n        var _this = this;\n        this.columnGroup.getLeafColumns().forEach(function (column) {\n            _this.addDestroyableEventListener(column, main_1.Column.EVENT_VISIBLE_CHANGED, _this.onColumnStateChanged.bind(_this));\n            _this.addDestroyableEventListener(column, main_1.Column.EVENT_VALUE_CHANGED, _this.onColumnStateChanged.bind(_this));\n            _this.addDestroyableEventListener(column, main_1.Column.EVENT_PIVOT_CHANGED, _this.onColumnStateChanged.bind(_this));\n            _this.addDestroyableEventListener(column, main_1.Column.EVENT_ROW_GROUP_CHANGED, _this.onColumnStateChanged.bind(_this));\n        });\n    };\n    ToolPanelColumnGroupComp.prototype.setupDragging = function () {\n        var _this = this;\n        if (!this.allowDragging) {\n            main_1._.setDisplayed(this.eDragHandle, false);\n            return;\n        }\n        var dragSource = {\n            type: main_1.DragSourceType.ToolPanel,\n            eElement: this.eDragHandle,\n            dragItemName: this.displayName,\n            dragItemCallback: function () { return _this.createDragItem(); }\n        };\n        this.dragAndDropService.addDragSource(dragSource, true);\n        this.addDestroyFunc(function () { return _this.dragAndDropService.removeDragSource(dragSource); });\n    };\n    ToolPanelColumnGroupComp.prototype.createDragItem = function () {\n        var visibleState = {};\n        this.columnGroup.getLeafColumns().forEach(function (col) {\n            visibleState[col.getId()] = col.isVisible();\n        });\n        return {\n            columns: this.columnGroup.getLeafColumns(),\n            visibleState: visibleState\n        };\n    };\n    ToolPanelColumnGroupComp.prototype.setupExpandContract = function () {\n        this.eGroupClosedIcon.appendChild(main_1._.createIcon('columnSelectClosed', this.gridOptionsWrapper, null));\n        this.eGroupOpenedIcon.appendChild(main_1._.createIcon('columnSelectOpen', this.gridOptionsWrapper, null));\n        this.addDestroyableEventListener(this.eGroupClosedIcon, 'click', this.onExpandOrContractClicked.bind(this));\n        this.addDestroyableEventListener(this.eGroupOpenedIcon, 'click', this.onExpandOrContractClicked.bind(this));\n        var touchListener = new main_1.TouchListener(this.eColumnGroupIcons, true);\n        this.addDestroyableEventListener(touchListener, main_1.TouchListener.EVENT_TAP, this.onExpandOrContractClicked.bind(this));\n        this.addDestroyFunc(touchListener.destroy.bind(touchListener));\n    };\n    ToolPanelColumnGroupComp.prototype.onLabelClicked = function () {\n        var nextState = !this.cbSelect.getValue();\n        this.onChangeCommon(nextState);\n    };\n    ToolPanelColumnGroupComp.prototype.onCheckboxChanged = function (event) {\n        this.onChangeCommon(event.selected);\n    };\n    ToolPanelColumnGroupComp.prototype.onChangeCommon = function (nextState) {\n        if (this.processingColumnStateChange) {\n            return;\n        }\n        var childColumns = this.columnGroup.getLeafColumns();\n        if (this.columnController.isPivotMode()) {\n            if (nextState) {\n                this.actionCheckedReduce(childColumns);\n            }\n            else {\n                this.actionUnCheckedReduce(childColumns);\n            }\n        }\n        else {\n            var isAllowedColumn = function (c) { return !c.getColDef().lockVisible && !c.getColDef().suppressToolPanel; };\n            var allowedColumns = childColumns.filter(isAllowedColumn);\n            this.columnController.setColumnsVisible(allowedColumns, nextState, \"toolPanelUi\");\n        }\n        if (this.selectionCallback) {\n            this.selectionCallback(this.isSelected());\n        }\n    };\n    ToolPanelColumnGroupComp.prototype.actionUnCheckedReduce = function (columns) {\n        var columnsToUnPivot = [];\n        var columnsToUnValue = [];\n        var columnsToUnGroup = [];\n        columns.forEach(function (column) {\n            if (column.isPivotActive()) {\n                columnsToUnPivot.push(column);\n            }\n            if (column.isRowGroupActive()) {\n                columnsToUnGroup.push(column);\n            }\n            if (column.isValueActive()) {\n                columnsToUnValue.push(column);\n            }\n        });\n        if (columnsToUnPivot.length > 0) {\n            this.columnController.removePivotColumns(columnsToUnPivot, \"toolPanelUi\");\n        }\n        if (columnsToUnGroup.length > 0) {\n            this.columnController.removeRowGroupColumns(columnsToUnGroup, \"toolPanelUi\");\n        }\n        if (columnsToUnValue.length > 0) {\n            this.columnController.removeValueColumns(columnsToUnValue, \"toolPanelUi\");\n        }\n    };\n    ToolPanelColumnGroupComp.prototype.actionCheckedReduce = function (columns) {\n        var columnsToAggregate = [];\n        var columnsToGroup = [];\n        var columnsToPivot = [];\n        columns.forEach(function (column) {\n            // don't change any column that's already got a function active\n            if (column.isAnyFunctionActive()) {\n                return;\n            }\n            if (column.isAllowValue()) {\n                columnsToAggregate.push(column);\n            }\n            else if (column.isAllowRowGroup()) {\n                columnsToGroup.push(column);\n            }\n            else if (column.isAllowRowGroup()) {\n                columnsToPivot.push(column);\n            }\n        });\n        if (columnsToAggregate.length > 0) {\n            this.columnController.addValueColumns(columnsToAggregate, \"toolPanelUi\");\n        }\n        if (columnsToGroup.length > 0) {\n            this.columnController.addRowGroupColumns(columnsToGroup, \"toolPanelUi\");\n        }\n        if (columnsToPivot.length > 0) {\n            this.columnController.addPivotColumns(columnsToPivot, \"toolPanelUi\");\n        }\n    };\n    ToolPanelColumnGroupComp.prototype.onColumnStateChanged = function () {\n        var selectedValue = this.workOutSelectedValue();\n        var readOnlyValue = this.workOutReadOnlyValue();\n        this.processingColumnStateChange = true;\n        this.cbSelect.setValue(selectedValue);\n        if (this.selectionCallback) {\n            this.selectionCallback(this.isSelected());\n        }\n        this.cbSelect.setReadOnly(readOnlyValue);\n        this.processingColumnStateChange = false;\n    };\n    ToolPanelColumnGroupComp.prototype.workOutReadOnlyValue = function () {\n        var pivotMode = this.columnController.isPivotMode();\n        var colsThatCanAction = 0;\n        this.columnGroup.getLeafColumns().forEach(function (col) {\n            if (pivotMode) {\n                if (col.isAnyFunctionAllowed()) {\n                    colsThatCanAction++;\n                }\n            }\n            else {\n                if (!col.getColDef().lockVisible) {\n                    colsThatCanAction++;\n                }\n            }\n        });\n        return colsThatCanAction === 0;\n    };\n    ToolPanelColumnGroupComp.prototype.workOutSelectedValue = function () {\n        var pivotMode = this.columnController.isPivotMode();\n        var leafColumns = this.columnGroup.getLeafColumns();\n        var len = leafColumns.length;\n        var count = { visible: 0, hidden: 0 };\n        var ignoredChildCount = { visible: 0, hidden: 0 };\n        for (var i = 0; i < len; i++) {\n            var column = leafColumns[i];\n            // ignore lock visible columns and columns set to 'suppressToolPanel'\n            var ignore = column.getColDef().lockVisible || column.getColDef().suppressToolPanel;\n            var type = this.isColumnVisible(column, pivotMode) ? 'visible' : 'hidden';\n            count[type]++;\n            if (!ignore) {\n                continue;\n            }\n            ignoredChildCount[type]++;\n        }\n        // if all columns are ignored we use the regular count, if not\n        // we only consider the columns that were not ignored\n        if (ignoredChildCount.visible + ignoredChildCount.hidden !== len) {\n            count.visible -= ignoredChildCount.visible;\n            count.hidden -= ignoredChildCount.hidden;\n        }\n        var selectedValue;\n        if (count.visible > 0 && count.hidden > 0) {\n            selectedValue = null;\n        }\n        else if (count.visible > 0) {\n            selectedValue = true;\n        }\n        else {\n            selectedValue = false;\n        }\n        return selectedValue == null ? undefined : selectedValue;\n    };\n    ToolPanelColumnGroupComp.prototype.isColumnVisible = function (column, pivotMode) {\n        if (pivotMode) {\n            var pivoted = column.isPivotActive();\n            var grouped = column.isRowGroupActive();\n            var aggregated = column.isValueActive();\n            return pivoted || grouped || aggregated;\n        }\n        else {\n            return column.isVisible();\n        }\n    };\n    ToolPanelColumnGroupComp.prototype.onExpandOrContractClicked = function () {\n        this.expanded = !this.expanded;\n        this.setOpenClosedIcons();\n        this.expandedCallback();\n    };\n    ToolPanelColumnGroupComp.prototype.setOpenClosedIcons = function () {\n        var folderOpen = this.expanded;\n        main_1._.setDisplayed(this.eGroupClosedIcon, !folderOpen);\n        main_1._.setDisplayed(this.eGroupOpenedIcon, folderOpen);\n    };\n    ToolPanelColumnGroupComp.prototype.isExpanded = function () {\n        return this.expanded;\n    };\n    ToolPanelColumnGroupComp.prototype.getDisplayName = function () {\n        return this.displayName;\n    };\n    ToolPanelColumnGroupComp.prototype.onSelectAllChanged = function (value) {\n        if ((value && !this.cbSelect.getValue()) ||\n            (!value && this.cbSelect.getValue())) {\n            if (!this.cbSelect.isReadOnly()) {\n                this.cbSelect.toggle();\n            }\n        }\n    };\n    ToolPanelColumnGroupComp.prototype.isSelected = function () {\n        return this.cbSelect.getValue();\n    };\n    ToolPanelColumnGroupComp.prototype.isSelectable = function () {\n        return !this.cbSelect.isReadOnly();\n    };\n    ToolPanelColumnGroupComp.prototype.isExpandable = function () {\n        return true;\n    };\n    ToolPanelColumnGroupComp.prototype.setExpanded = function (value) {\n        if (this.expanded !== value) {\n            this.onExpandOrContractClicked();\n        }\n    };\n    ToolPanelColumnGroupComp.TEMPLATE = \"<div class=\\\"ag-column-tool-panel-column-group\\\">\\n            <span class=\\\"ag-column-group-icons\\\" ref=\\\"eColumnGroupIcons\\\" >\\n                <span class=\\\"ag-column-group-closed-icon\\\" ref=\\\"eGroupOpenedIcon\\\"></span>\\n                <span class=\\\"ag-column-group-opened-icon\\\" ref=\\\"eGroupClosedIcon\\\"></span>\\n            </span>\\n            <ag-checkbox ref=\\\"cbSelect\\\" class=\\\"ag-column-select-checkbox\\\"></ag-checkbox>\\n            <span class=\\\"ag-column-tool-panel-column-label\\\" ref=\\\"eLabel\\\"></span>\\n        </div>\";\n    __decorate([\n        main_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], ToolPanelColumnGroupComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.Autowired('columnController'),\n        __metadata(\"design:type\", main_1.ColumnController)\n    ], ToolPanelColumnGroupComp.prototype, \"columnController\", void 0);\n    __decorate([\n        main_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", main_1.DragAndDropService)\n    ], ToolPanelColumnGroupComp.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        main_1.Autowired('eventService'),\n        __metadata(\"design:type\", main_1.EventService)\n    ], ToolPanelColumnGroupComp.prototype, \"eventService\", void 0);\n    __decorate([\n        main_1.RefSelector('cbSelect'),\n        __metadata(\"design:type\", main_1.AgCheckbox)\n    ], ToolPanelColumnGroupComp.prototype, \"cbSelect\", void 0);\n    __decorate([\n        main_1.RefSelector('eLabel'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ToolPanelColumnGroupComp.prototype, \"eLabel\", void 0);\n    __decorate([\n        main_1.RefSelector('eGroupOpenedIcon'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ToolPanelColumnGroupComp.prototype, \"eGroupOpenedIcon\", void 0);\n    __decorate([\n        main_1.RefSelector('eGroupClosedIcon'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ToolPanelColumnGroupComp.prototype, \"eGroupClosedIcon\", void 0);\n    __decorate([\n        main_1.RefSelector('eColumnGroupIcons'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ToolPanelColumnGroupComp.prototype, \"eColumnGroupIcons\", void 0);\n    __decorate([\n        main_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ToolPanelColumnGroupComp.prototype, \"init\", null);\n    return ToolPanelColumnGroupComp;\n}(main_1.Component));\nexports.ToolPanelColumnGroupComp = ToolPanelColumnGroupComp;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/toolPanelColumnGroupComp.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/rowGroupDropZonePanel.js":
/*!*********************************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/rowGroupDropZonePanel.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar main_1 = __webpack_require__(/*! ag-grid-community/main */ \"../../node_modules/ag-grid-community/main.js\");\nvar baseDropZonePanel_1 = __webpack_require__(/*! ../dropZone/baseDropZonePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/dropZone/baseDropZonePanel.js\");\nvar RowGroupDropZonePanel = /** @class */ (function (_super) {\n    __extends(RowGroupDropZonePanel, _super);\n    function RowGroupDropZonePanel(horizontal) {\n        return _super.call(this, horizontal, false, 'row-group') || this;\n    }\n    RowGroupDropZonePanel.prototype.passBeansUp = function () {\n        _super.prototype.setBeans.call(this, {\n            gridOptionsWrapper: this.gridOptionsWrapper,\n            eventService: this.eventService,\n            context: this.getContext(),\n            loggerFactory: this.loggerFactory,\n            dragAndDropService: this.dragAndDropService\n        });\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        var emptyMessage = localeTextFunc('rowGroupColumnsEmptyMessage', 'Drag here to set row groups');\n        var title = localeTextFunc('groups', 'Row Groups');\n        _super.prototype.init.call(this, {\n            dragAndDropIcon: main_1.DragAndDropService.ICON_GROUP,\n            icon: main_1._.createIconNoSpan('rowGroupPanel', this.gridOptionsWrapper, null),\n            emptyMessage: emptyMessage,\n            title: title\n        });\n        this.addDestroyableEventListener(this.eventService, main_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.refreshGui.bind(this));\n    };\n    RowGroupDropZonePanel.prototype.isColumnDroppable = function (column) {\n        if (this.gridOptionsWrapper.isFunctionsReadOnly()) {\n            return false;\n        }\n        // we never allow grouping of secondary columns\n        if (!column.isPrimary()) {\n            return false;\n        }\n        var columnGroupable = column.isAllowRowGroup();\n        var columnNotAlreadyGrouped = !column.isRowGroupActive();\n        return columnGroupable && columnNotAlreadyGrouped;\n    };\n    RowGroupDropZonePanel.prototype.updateColumns = function (columns) {\n        if (this.gridOptionsWrapper.isFunctionsPassive()) {\n            var event_1 = {\n                type: main_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST,\n                columns: columns,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_1);\n        }\n        else {\n            this.columnController.setRowGroupColumns(columns, \"toolPanelUi\");\n        }\n    };\n    RowGroupDropZonePanel.prototype.getIconName = function () {\n        return this.isPotentialDndColumns() ? main_1.DragAndDropService.ICON_GROUP : main_1.DragAndDropService.ICON_NOT_ALLOWED;\n    };\n    RowGroupDropZonePanel.prototype.getExistingColumns = function () {\n        return this.columnController.getRowGroupColumns();\n    };\n    __decorate([\n        main_1.Autowired('columnController'),\n        __metadata(\"design:type\", main_1.ColumnController)\n    ], RowGroupDropZonePanel.prototype, \"columnController\", void 0);\n    __decorate([\n        main_1.Autowired('eventService'),\n        __metadata(\"design:type\", main_1.EventService)\n    ], RowGroupDropZonePanel.prototype, \"eventService\", void 0);\n    __decorate([\n        main_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], RowGroupDropZonePanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.Autowired('loggerFactory'),\n        __metadata(\"design:type\", main_1.LoggerFactory)\n    ], RowGroupDropZonePanel.prototype, \"loggerFactory\", void 0);\n    __decorate([\n        main_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", main_1.DragAndDropService)\n    ], RowGroupDropZonePanel.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        main_1.Autowired('columnApi'),\n        __metadata(\"design:type\", main_1.ColumnApi)\n    ], RowGroupDropZonePanel.prototype, \"columnApi\", void 0);\n    __decorate([\n        main_1.Autowired('gridApi'),\n        __metadata(\"design:type\", main_1.GridApi)\n    ], RowGroupDropZonePanel.prototype, \"gridApi\", void 0);\n    __decorate([\n        main_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], RowGroupDropZonePanel.prototype, \"passBeansUp\", null);\n    return RowGroupDropZonePanel;\n}(baseDropZonePanel_1.BaseDropZonePanel));\nexports.RowGroupDropZonePanel = RowGroupDropZonePanel;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/rowGroupDropZonePanel.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/valueDropZonePanel.js":
/*!******************************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/valueDropZonePanel.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar main_1 = __webpack_require__(/*! ag-grid-community/main */ \"../../node_modules/ag-grid-community/main.js\");\nvar baseDropZonePanel_1 = __webpack_require__(/*! ../dropZone/baseDropZonePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/dropZone/baseDropZonePanel.js\");\nvar ValuesDropZonePanel = /** @class */ (function (_super) {\n    __extends(ValuesDropZonePanel, _super);\n    function ValuesDropZonePanel(horizontal) {\n        return _super.call(this, horizontal, true, 'values') || this;\n    }\n    ValuesDropZonePanel.prototype.passBeansUp = function () {\n        _super.prototype.setBeans.call(this, {\n            gridOptionsWrapper: this.gridOptionsWrapper,\n            eventService: this.eventService,\n            context: this.getContext(),\n            loggerFactory: this.loggerFactory,\n            dragAndDropService: this.dragAndDropService\n        });\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        var emptyMessage = localeTextFunc('valueColumnsEmptyMessage', 'Drag here to aggregate');\n        var title = localeTextFunc('values', 'Values');\n        _super.prototype.init.call(this, {\n            dragAndDropIcon: main_1.DragAndDropService.ICON_AGGREGATE,\n            icon: main_1._.createIconNoSpan('valuePanel', this.gridOptionsWrapper, null),\n            emptyMessage: emptyMessage,\n            title: title\n        });\n        this.addDestroyableEventListener(this.eventService, main_1.Events.EVENT_COLUMN_VALUE_CHANGED, this.refreshGui.bind(this));\n    };\n    ValuesDropZonePanel.prototype.getIconName = function () {\n        return this.isPotentialDndColumns() ? main_1.DragAndDropService.ICON_AGGREGATE : main_1.DragAndDropService.ICON_NOT_ALLOWED;\n    };\n    ValuesDropZonePanel.prototype.isColumnDroppable = function (column) {\n        if (this.gridOptionsWrapper.isFunctionsReadOnly()) {\n            return false;\n        }\n        // we never allow grouping of secondary columns\n        if (!column.isPrimary()) {\n            return false;\n        }\n        var columnValue = column.isAllowValue();\n        var columnNotValue = !column.isValueActive();\n        return columnValue && columnNotValue;\n    };\n    ValuesDropZonePanel.prototype.updateColumns = function (columns) {\n        if (this.gridOptionsWrapper.isFunctionsPassive()) {\n            var event_1 = {\n                type: main_1.Events.EVENT_COLUMN_VALUE_CHANGE_REQUEST,\n                columns: columns,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_1);\n        }\n        else {\n            this.columnController.setValueColumns(columns, \"toolPanelUi\");\n        }\n    };\n    ValuesDropZonePanel.prototype.getExistingColumns = function () {\n        return this.columnController.getValueColumns();\n    };\n    __decorate([\n        main_1.Autowired('columnController'),\n        __metadata(\"design:type\", main_1.ColumnController)\n    ], ValuesDropZonePanel.prototype, \"columnController\", void 0);\n    __decorate([\n        main_1.Autowired('eventService'),\n        __metadata(\"design:type\", main_1.EventService)\n    ], ValuesDropZonePanel.prototype, \"eventService\", void 0);\n    __decorate([\n        main_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", main_1.GridOptionsWrapper)\n    ], ValuesDropZonePanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        main_1.Autowired('loggerFactory'),\n        __metadata(\"design:type\", main_1.LoggerFactory)\n    ], ValuesDropZonePanel.prototype, \"loggerFactory\", void 0);\n    __decorate([\n        main_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", main_1.DragAndDropService)\n    ], ValuesDropZonePanel.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        main_1.Autowired('columnApi'),\n        __metadata(\"design:type\", main_1.ColumnApi)\n    ], ValuesDropZonePanel.prototype, \"columnApi\", void 0);\n    __decorate([\n        main_1.Autowired('gridApi'),\n        __metadata(\"design:type\", main_1.GridApi)\n    ], ValuesDropZonePanel.prototype, \"gridApi\", void 0);\n    __decorate([\n        main_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ValuesDropZonePanel.prototype, \"passBeansUp\", null);\n    return ValuesDropZonePanel;\n}(baseDropZonePanel_1.BaseDropZonePanel));\nexports.ValuesDropZonePanel = ValuesDropZonePanel;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/valueDropZonePanel.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/filters/filtersToolPanel.js":
/*!*********************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/filters/filtersToolPanel.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar toolPanelFilterComp_1 = __webpack_require__(/*! ./toolPanelFilterComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/filters/toolPanelFilterComp.js\");\nvar FiltersToolPanel = /** @class */ (function (_super) {\n    __extends(FiltersToolPanel, _super);\n    function FiltersToolPanel() {\n        var _this = _super.call(this, FiltersToolPanel.TEMPLATE) || this;\n        _this.initialised = false;\n        return _this;\n    }\n    FiltersToolPanel.prototype.init = function () {\n        var _this = this;\n        this.initialised = true;\n        this.eventService.addEventListener('newColumnsLoaded', function () { return _this.onColumnsChanged(); });\n        if (this.columnController.isReady()) {\n            this.onColumnsChanged();\n        }\n    };\n    FiltersToolPanel.prototype.onColumnsChanged = function () {\n        var _this = this;\n        var eGui = this.getGui();\n        ag_grid_community_1._.clearElement(eGui);\n        var primaryCols = this.columnController.getAllPrimaryColumns();\n        if (!primaryCols) {\n            return;\n        }\n        var primaryColsWithFilter = primaryCols.filter(function (col) { return col.isFilterAllowed(); });\n        primaryColsWithFilter.forEach(function (col) { return _this.addColumnComps(col); });\n    };\n    // we don't support refreshing, but must implement because it's on the tool panel interface\n    FiltersToolPanel.prototype.refresh = function () {\n    };\n    // lazy initialise the panel\n    FiltersToolPanel.prototype.setVisible = function (visible) {\n        _super.prototype.setDisplayed.call(this, visible);\n        if (visible && !this.initialised) {\n            this.init();\n        }\n    };\n    FiltersToolPanel.prototype.addColumnComps = function (column) {\n        var toolPanelFilterComp = new toolPanelFilterComp_1.ToolPanelFilterComp();\n        this.getContext().wireBean(toolPanelFilterComp);\n        toolPanelFilterComp.setColumn(column);\n        this.appendChild(toolPanelFilterComp);\n    };\n    FiltersToolPanel.TEMPLATE = \"<div class=\\\"ag-filter-panel\\\" ref=\\\"ePanelContainer\\\" />\";\n    __decorate([\n        ag_grid_community_1.Autowired(\"eventService\"),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], FiltersToolPanel.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], FiltersToolPanel.prototype, \"columnController\", void 0);\n    return FiltersToolPanel;\n}(ag_grid_community_1.Component));\nexports.FiltersToolPanel = FiltersToolPanel;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/filters/filtersToolPanel.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/filters/toolPanelFilterComp.js":
/*!************************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/filters/toolPanelFilterComp.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar ToolPanelFilterComp = /** @class */ (function (_super) {\n    __extends(ToolPanelFilterComp, _super);\n    function ToolPanelFilterComp() {\n        var _this = _super.call(this, ToolPanelFilterComp.TEMPLATE) || this;\n        _this.expanded = false;\n        return _this;\n    }\n    ToolPanelFilterComp.prototype.postConstruct = function () {\n        this.eExpandChecked = ag_grid_community_1._.createIconNoSpan('columnSelectOpen', this.gridOptionsWrapper);\n        this.eExpandUnchecked = ag_grid_community_1._.createIconNoSpan('columnSelectClosed', this.gridOptionsWrapper);\n        this.eExpand.appendChild(this.eExpandChecked);\n        this.eExpand.appendChild(this.eExpandUnchecked);\n    };\n    ToolPanelFilterComp.prototype.setColumn = function (column) {\n        this.column = column;\n        var displayName = this.columnController.getDisplayNameForColumn(this.column, 'header', false);\n        this.eFilterName.innerText = displayName;\n        this.addDestroyableEventListener(this.eFilterToolPanelHeader, 'click', this.doExpandOrCollapse.bind(this));\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_FILTER_OPENED, this.onFilterOpened.bind(this));\n        this.addInIcon('filter', this.eFilterIcon, this.column);\n        ag_grid_community_1._.addOrRemoveCssClass(this.eFilterIcon, 'ag-hidden', !this.isFilterActive());\n        ag_grid_community_1._.addCssClass(this.eExpandChecked, 'ag-hidden');\n        this.addDestroyableEventListener(this.column, ag_grid_community_1.Column.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n    };\n    ToolPanelFilterComp.prototype.addInIcon = function (iconName, eParent, column) {\n        if (eParent == null) {\n            return;\n        }\n        var eIcon = ag_grid_community_1._.createIconNoSpan(iconName, this.gridOptionsWrapper, column);\n        eIcon.innerHTML = '&nbsp';\n        eParent.appendChild(eIcon);\n    };\n    ToolPanelFilterComp.prototype.isFilterActive = function () {\n        return this.filterManager.isFilterActive(this.column);\n    };\n    ToolPanelFilterComp.prototype.onFilterChanged = function () {\n        ag_grid_community_1._.addOrRemoveCssClass(this.eFilterIcon, 'ag-hidden', !this.isFilterActive());\n    };\n    ToolPanelFilterComp.prototype.doExpandOrCollapse = function () {\n        this.expanded ? this.doCollapse() : this.doExpand();\n    };\n    ToolPanelFilterComp.prototype.doExpand = function () {\n        var _this = this;\n        this.expanded = true;\n        var container = ag_grid_community_1._.loadTemplate(\"<div class=\\\"ag-filter-air\\\" />\");\n        this.filterManager.getOrCreateFilterWrapper(this.column, 'TOOLBAR').filterPromise.then(function (filter) {\n            container.appendChild(filter.getGui());\n            _this.agFilterToolPanelBody.appendChild(container);\n            if (filter.afterGuiAttached) {\n                filter.afterGuiAttached({});\n            }\n        });\n        ag_grid_community_1._.setDisplayed(this.eExpandChecked, true);\n        ag_grid_community_1._.setDisplayed(this.eExpandUnchecked, false);\n    };\n    ToolPanelFilterComp.prototype.doCollapse = function () {\n        this.expanded = false;\n        this.agFilterToolPanelBody.removeChild(this.agFilterToolPanelBody.children[0]);\n        ag_grid_community_1._.setDisplayed(this.eExpandChecked, false);\n        ag_grid_community_1._.setDisplayed(this.eExpandUnchecked, true);\n    };\n    ToolPanelFilterComp.prototype.onFilterOpened = function (event) {\n        if (event.source !== 'COLUMN_MENU') {\n            return;\n        }\n        if (event.column !== this.column) {\n            return;\n        }\n        if (!this.expanded) {\n            return;\n        }\n        this.doCollapse();\n    };\n    ToolPanelFilterComp.TEMPLATE = \"<div class=\\\"ag-filter-toolpanel-instance\\\" >\\n            <div class=\\\"ag-filter-toolpanel-header ag-header-cell-label\\\" ref=\\\"eFilterToolPanelHeader\\\">\\n                <div ref=\\\"eExpand\\\"></div>\\n                <span ref=\\\"eFilterName\\\" class=\\\"ag-header-cell-text\\\"></span>\\n                <span ref=\\\"eFilterIcon\\\" class=\\\"ag-header-icon ag-filter-icon\\\" aria-hidden=\\\"true\\\"></span>\\n            </div>\\n            <div class=\\\"ag-filter-toolpanel-body ag-filter\\\" ref=\\\"agFilterToolPanelBody\\\"/>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], ToolPanelFilterComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('filterManager'),\n        __metadata(\"design:type\", ag_grid_community_1.FilterManager)\n    ], ToolPanelFilterComp.prototype, \"filterManager\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], ToolPanelFilterComp.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ToolPanelFilterComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('columnController'),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], ToolPanelFilterComp.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eFilterToolPanelHeader'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ToolPanelFilterComp.prototype, \"eFilterToolPanelHeader\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eFilterName'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ToolPanelFilterComp.prototype, \"eFilterName\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('agFilterToolPanelBody'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ToolPanelFilterComp.prototype, \"agFilterToolPanelBody\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eFilterIcon'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ToolPanelFilterComp.prototype, \"eFilterIcon\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eExpand'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ToolPanelFilterComp.prototype, \"eExpand\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ToolPanelFilterComp.prototype, \"postConstruct\", null);\n    return ToolPanelFilterComp;\n}(ag_grid_community_1.Component));\nexports.ToolPanelFilterComp = ToolPanelFilterComp;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/filters/toolPanelFilterComp.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/sideBarButtonsComp.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/sideBarButtonsComp.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar SideBarButtonsComp = /** @class */ (function (_super) {\n    __extends(SideBarButtonsComp, _super);\n    function SideBarButtonsComp() {\n        var _this = _super.call(this, SideBarButtonsComp.TEMPLATE) || this;\n        _this.buttonComps = [];\n        return _this;\n    }\n    SideBarButtonsComp.prototype.setToolPanelDefs = function (toolPanelDefs) {\n        toolPanelDefs.forEach(this.addButtonComp.bind(this));\n    };\n    SideBarButtonsComp.prototype.setActiveButton = function (id) {\n        this.buttonComps.forEach(function (comp) {\n            comp.setSelected(id === comp.getToolPanelId());\n        });\n    };\n    SideBarButtonsComp.prototype.addButtonComp = function (def) {\n        var _this = this;\n        var buttonComp = new SideBarButtonComp(def);\n        this.getContext().wireBean(buttonComp);\n        this.buttonComps.push(buttonComp);\n        this.getGui().appendChild(buttonComp.getGui());\n        buttonComp.addEventListener(SideBarButtonComp.EVENT_TOGGLE_BUTTON_CLICKED, function () {\n            _this.dispatchEvent({\n                type: SideBarButtonsComp.EVENT_SIDE_BAR_BUTTON_CLICKED,\n                toolPanelId: def.id\n            });\n        });\n    };\n    SideBarButtonsComp.prototype.clearButtons = function () {\n        if (this.buttonComps) {\n            this.buttonComps.forEach(function (comp) { return comp.destroy(); });\n        }\n        ag_grid_community_1._.clearElement(this.getGui());\n        this.buttonComps.length = 0;\n    };\n    SideBarButtonsComp.prototype.destroy = function () {\n        this.clearButtons();\n        _super.prototype.destroy.call(this);\n    };\n    SideBarButtonsComp.EVENT_SIDE_BAR_BUTTON_CLICKED = 'sideBarButtonClicked';\n    SideBarButtonsComp.TEMPLATE = \"<div class=\\\"ag-side-buttons\\\"></div>\";\n    __decorate([\n        ag_grid_community_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], SideBarButtonsComp.prototype, \"gridOptionsWrapper\", void 0);\n    return SideBarButtonsComp;\n}(ag_grid_community_1.Component));\nexports.SideBarButtonsComp = SideBarButtonsComp;\nvar SideBarButtonComp = /** @class */ (function (_super) {\n    __extends(SideBarButtonComp, _super);\n    function SideBarButtonComp(toolPanelDef) {\n        var _this = _super.call(this) || this;\n        _this.toolPanelDef = toolPanelDef;\n        return _this;\n    }\n    SideBarButtonComp.prototype.getToolPanelId = function () {\n        return this.toolPanelDef.id;\n    };\n    SideBarButtonComp.prototype.postConstruct = function () {\n        var template = this.createTemplate();\n        this.setTemplate(template);\n        var toggleButton = this.eToggleButton;\n        var iconDiv = toggleButton.querySelector('div');\n        iconDiv.insertAdjacentElement('afterbegin', ag_grid_community_1._.createIconNoSpan(this.toolPanelDef.iconKey, this.gridOptionsWrapper));\n        this.addDestroyableEventListener(this.eToggleButton, 'click', this.onButtonPressed.bind(this));\n    };\n    SideBarButtonComp.prototype.createTemplate = function () {\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        var def = this.toolPanelDef;\n        var label = translate(def.labelKey, def.labelDefault);\n        var res = \"<div class=\\\"ag-side-button\\\">\\n                <button type=\\\"button\\\" ref=\\\"eToggleButton\\\">\\n                    <div></div>\\n                    <span>\" + label + \"</span>\\n                </button>\\n            </div>\";\n        return res;\n    };\n    SideBarButtonComp.prototype.onButtonPressed = function () {\n        this.dispatchEvent({ type: SideBarButtonComp.EVENT_TOGGLE_BUTTON_CLICKED });\n    };\n    SideBarButtonComp.prototype.setSelected = function (selected) {\n        this.addOrRemoveCssClass('ag-selected', selected);\n    };\n    SideBarButtonComp.EVENT_TOGGLE_BUTTON_CLICKED = 'toggleButtonClicked';\n    __decorate([\n        ag_grid_community_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], SideBarButtonComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eToggleButton'),\n        __metadata(\"design:type\", HTMLButtonElement)\n    ], SideBarButtonComp.prototype, \"eToggleButton\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SideBarButtonComp.prototype, \"postConstruct\", null);\n    return SideBarButtonComp;\n}(ag_grid_community_1.Component));\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/sideBarButtonsComp.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/sideBarComp.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/sideBarComp.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar sideBarButtonsComp_1 = __webpack_require__(/*! ./sideBarButtonsComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/sideBarButtonsComp.js\");\nvar toolPanelWrapper_1 = __webpack_require__(/*! ./toolPanelWrapper */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/toolPanelWrapper.js\");\nvar SideBarComp = /** @class */ (function (_super) {\n    __extends(SideBarComp, _super);\n    function SideBarComp() {\n        var _this = _super.call(this, SideBarComp.TEMPLATE) || this;\n        _this.toolPanelWrappers = [];\n        return _this;\n    }\n    SideBarComp.prototype.postConstruct = function () {\n        this.sideBarButtonsComp.addEventListener(sideBarButtonsComp_1.SideBarButtonsComp.EVENT_SIDE_BAR_BUTTON_CLICKED, this.onToolPanelButtonClicked.bind(this));\n        this.setSideBarDef();\n    };\n    SideBarComp.prototype.onToolPanelButtonClicked = function (event) {\n        var id = event.toolPanelId;\n        var openedItem = this.openedItem();\n        // if item was already open, we close it\n        if (openedItem === id) {\n            this.openToolPanel(undefined); // passing undefined closes\n        }\n        else {\n            this.openToolPanel(id);\n        }\n    };\n    SideBarComp.prototype.clearDownUi = function () {\n        this.sideBarButtonsComp.clearButtons();\n        this.destroyToolPanelWrappers();\n    };\n    SideBarComp.prototype.setSideBarDef = function () {\n        var _this = this;\n        var sideBar = this.gridOptionsWrapper.getSideBar();\n        var sideBarExists = !!sideBar && !!sideBar.toolPanels;\n        if (sideBarExists) {\n            var toolPanelDefs = sideBar.toolPanels;\n            this.sideBarButtonsComp.setToolPanelDefs(toolPanelDefs);\n            this.setupToolPanels(toolPanelDefs);\n            if (!sideBar.hiddenByDefault) {\n                this.openToolPanel(sideBar.defaultToolPanel);\n            }\n        }\n        var sideBarVisible = sideBarExists && !sideBar.hiddenByDefault;\n        setTimeout(function () { return _this.setDisplayed(sideBarVisible); }, 0);\n    };\n    SideBarComp.prototype.setupToolPanels = function (defs) {\n        var _this = this;\n        defs.forEach(function (def) {\n            if (def.id == null) {\n                console.warn(\"ag-grid: please review all your toolPanel components, it seems like at least one of them doesn't have an id\");\n                return;\n            }\n            var wrapper = new toolPanelWrapper_1.ToolPanelWrapper();\n            _this.getContext().wireBean(wrapper);\n            wrapper.setToolPanelDef(def);\n            wrapper.setDisplayed(false);\n            _this.getGui().appendChild(wrapper.getGui());\n            _this.toolPanelWrappers.push(wrapper);\n        });\n    };\n    SideBarComp.prototype.refresh = function () {\n        this.toolPanelWrappers.forEach(function (wrapper) { return wrapper.refresh(); });\n    };\n    SideBarComp.prototype.openToolPanel = function (key) {\n        var currentlyOpenedKey = this.openedItem();\n        if (currentlyOpenedKey === key) {\n            return;\n        }\n        this.toolPanelWrappers.forEach(function (wrapper) {\n            var show = key === wrapper.getToolPanelId();\n            wrapper.setDisplayed(show);\n        });\n        var newlyOpenedKey = this.openedItem();\n        var openToolPanelChanged = currentlyOpenedKey !== newlyOpenedKey;\n        if (openToolPanelChanged) {\n            this.sideBarButtonsComp.setActiveButton(key);\n            this.raiseToolPanelVisibleEvent(key);\n        }\n    };\n    SideBarComp.prototype.raiseToolPanelVisibleEvent = function (key) {\n        var event = {\n            type: ag_grid_community_1.Events.EVENT_TOOL_PANEL_VISIBLE_CHANGED,\n            source: key,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi()\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    SideBarComp.prototype.close = function () {\n        this.openToolPanel(undefined);\n    };\n    SideBarComp.prototype.isToolPanelShowing = function () {\n        return !!this.openedItem();\n    };\n    SideBarComp.prototype.openedItem = function () {\n        var activeToolPanel = null;\n        this.toolPanelWrappers.forEach(function (wrapper) {\n            if (wrapper.isDisplayed()) {\n                activeToolPanel = wrapper.getToolPanelId();\n            }\n        });\n        return activeToolPanel;\n    };\n    // get called after user sets new sideBarDef via the API\n    SideBarComp.prototype.reset = function () {\n        this.clearDownUi();\n        this.setSideBarDef();\n    };\n    SideBarComp.prototype.destroyToolPanelWrappers = function () {\n        this.toolPanelWrappers.forEach(function (wrapper) {\n            ag_grid_community_1._.removeFromParent(wrapper.getGui());\n            wrapper.destroy();\n        });\n        this.toolPanelWrappers.length = 0;\n    };\n    SideBarComp.prototype.destroy = function () {\n        this.destroyToolPanelWrappers();\n        _super.prototype.destroy.call(this);\n    };\n    SideBarComp.TEMPLATE = \"<div class=\\\"ag-side-bar ag-unselectable\\\">\\n              <ag-side-bar-buttons ref=\\\"sideBarButtons\\\">\\n          </div>\";\n    __decorate([\n        ag_grid_community_1.Autowired(\"eventService\"),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], SideBarComp.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], SideBarComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('sideBarButtons'),\n        __metadata(\"design:type\", sideBarButtonsComp_1.SideBarButtonsComp)\n    ], SideBarComp.prototype, \"sideBarButtonsComp\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SideBarComp.prototype, \"postConstruct\", null);\n    return SideBarComp;\n}(ag_grid_community_1.Component));\nexports.SideBarComp = SideBarComp;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/sideBarComp.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/sideBar/toolPanelWrapper.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/sideBar/toolPanelWrapper.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar horizontalResizeComp_1 = __webpack_require__(/*! ./horizontalResizeComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/horizontalResizeComp.js\");\nvar ToolPanelWrapper = /** @class */ (function (_super) {\n    __extends(ToolPanelWrapper, _super);\n    function ToolPanelWrapper() {\n        return _super.call(this, ToolPanelWrapper.TEMPLATE) || this;\n    }\n    ToolPanelWrapper.prototype.getToolPanelId = function () {\n        return this.toolPanelId;\n    };\n    ToolPanelWrapper.prototype.setToolPanelDef = function (toolPanelDef) {\n        this.toolPanelId = toolPanelDef.id;\n        var params = {\n            api: this.gridOptionsWrapper.getApi()\n        };\n        var componentPromise = this.userComponentFactory.newToolPanelComponent(toolPanelDef, params);\n        if (componentPromise == null) {\n            console.warn(\"ag-grid: error processing tool panel component \" + toolPanelDef.id + \". You need to specify either 'toolPanel' or 'toolPanelFramework'\");\n            return;\n        }\n        componentPromise.then(this.setToolPanelComponent.bind(this));\n    };\n    ToolPanelWrapper.prototype.setupResize = function () {\n        var resizeBar = new horizontalResizeComp_1.HorizontalResizeComp();\n        this.getContext().wireBean(resizeBar);\n        resizeBar.setElementToResize(this.getGui());\n        this.appendChild(resizeBar);\n    };\n    ToolPanelWrapper.prototype.setToolPanelComponent = function (compInstance) {\n        this.toolPanelCompInstance = compInstance;\n        this.appendChild(compInstance);\n    };\n    ToolPanelWrapper.prototype.refresh = function () {\n        this.toolPanelCompInstance.refresh();\n    };\n    ToolPanelWrapper.TEMPLATE = \"<div class=\\\"ag-tool-panel-wrapper\\\"/>\";\n    __decorate([\n        ag_grid_community_1.Autowired(\"userComponentFactory\"),\n        __metadata(\"design:type\", ag_grid_community_1.UserComponentFactory)\n    ], ToolPanelWrapper.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], ToolPanelWrapper.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ToolPanelWrapper.prototype, \"setupResize\", null);\n    return ToolPanelWrapper;\n}(ag_grid_community_1.Component));\nexports.ToolPanelWrapper = ToolPanelWrapper;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/sideBar/toolPanelWrapper.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/aggregationComp.js":
/*!**************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/aggregationComp.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar rangeController_1 = __webpack_require__(/*! ../../rangeController */ \"../../node_modules/ag-grid-enterprise/dist/lib/rangeController.js\");\nvar nameValueComp_1 = __webpack_require__(/*! ./nameValueComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/nameValueComp.js\");\nvar AggregationComp = /** @class */ (function (_super) {\n    __extends(AggregationComp, _super);\n    function AggregationComp() {\n        return _super.call(this, AggregationComp.TEMPLATE) || this;\n    }\n    AggregationComp.prototype.postConstruct = function () {\n        if (!this.isValidRowModel()) {\n            console.warn(\"ag-Grid: agAggregationComponent should only be used with the client and server side row model.\");\n            return;\n        }\n        this.avgAggregationComp.setLabel('average', 'Average');\n        this.countAggregationComp.setLabel('count', 'Count');\n        this.minAggregationComp.setLabel('min', 'Min');\n        this.maxAggregationComp.setLabel('max', 'Max');\n        this.sumAggregationComp.setLabel('sum', 'Sum');\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_RANGE_SELECTION_CHANGED, this.onRangeSelectionChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_MODEL_UPDATED, this.onRangeSelectionChanged.bind(this));\n    };\n    AggregationComp.prototype.isValidRowModel = function () {\n        // this component is only really useful with client or server side rowmodels\n        var rowModelType = this.gridApi.getModel().getType();\n        return rowModelType === 'clientSide' || rowModelType === 'serverSide';\n    };\n    AggregationComp.prototype.init = function () {\n    };\n    AggregationComp.prototype.setAggregationComponentValue = function (aggFuncName, value, visible) {\n        var statusBarValueComponent = this.getAggregationValueComponent(aggFuncName);\n        if (ag_grid_community_1._.exists(statusBarValueComponent) && statusBarValueComponent) {\n            statusBarValueComponent.setValue(ag_grid_community_1._.formatNumberTwoDecimalPlacesAndCommas(value));\n            statusBarValueComponent.setDisplayed(visible);\n        }\n    };\n    AggregationComp.prototype.getAggregationValueComponent = function (aggFuncName) {\n        // converts user supplied agg name to our reference - eg: sum => sumAggregationComp\n        var refComponentName = aggFuncName + \"AggregationComp\";\n        // if the user has specified the agAggregationPanelComp but no aggFuncs we show the all\n        // if the user has specified the agAggregationPanelComp and aggFuncs, then we only show the aggFuncs listed\n        var statusBarValueComponent = null;\n        var aggregationPanelConfig = ag_grid_community_1._.exists(this.gridOptions.statusBar) && this.gridOptions.statusBar ? ag_grid_community_1._.find(this.gridOptions.statusBar.statusPanels, function (panel) { return panel.statusPanel === 'agAggregationComponent'; }) : null;\n        if (ag_grid_community_1._.exists(aggregationPanelConfig) && aggregationPanelConfig) {\n            // a little defensive here - if no statusPanelParams show it, if componentParams we also expect aggFuncs\n            if (!ag_grid_community_1._.exists(aggregationPanelConfig.statusPanelParams) ||\n                (ag_grid_community_1._.exists(aggregationPanelConfig.statusPanelParams) &&\n                    ag_grid_community_1._.exists(aggregationPanelConfig.statusPanelParams.aggFuncs) &&\n                    ag_grid_community_1._.exists(ag_grid_community_1._.find(aggregationPanelConfig.statusPanelParams.aggFuncs, function (func) { return func === aggFuncName; })))) {\n                statusBarValueComponent = this[refComponentName];\n            }\n        }\n        else {\n            // components not specified - assume we can show this component\n            statusBarValueComponent = this[refComponentName];\n        }\n        // either we can't find it (which would indicate a typo or similar user side), or the user has deliberately\n        // not listed the component in aggFuncs\n        return statusBarValueComponent;\n    };\n    AggregationComp.prototype.onRangeSelectionChanged = function () {\n        var _this = this;\n        var cellRanges = this.rangeController.getCellRanges();\n        var sum = 0;\n        var count = 0;\n        var numberCount = 0;\n        var min = null;\n        var max = 0;\n        var cellsSoFar = {};\n        if (cellRanges && !ag_grid_community_1._.missingOrEmpty(cellRanges)) {\n            cellRanges.forEach(function (cellRange) {\n                var currentRow = _this.rangeController.getRangeStartRow(cellRange);\n                var lastRow = _this.rangeController.getRangeEndRow(cellRange);\n                while (true) {\n                    var finishedAllRows = ag_grid_community_1._.missing(currentRow) || !currentRow || _this.rowPositionUtils.before(lastRow, currentRow);\n                    if (finishedAllRows || !currentRow || !cellRange.columns) {\n                        break;\n                    }\n                    cellRange.columns.forEach(function (col) {\n                        if (currentRow === null) {\n                            return;\n                        }\n                        // we only want to include each cell once, in case a cell is in multiple ranges\n                        var cellId = _this.cellPositionUtils.createId({\n                            rowPinned: currentRow.rowPinned,\n                            column: col,\n                            rowIndex: currentRow.rowIndex\n                        });\n                        if (cellsSoFar[cellId]) {\n                            return;\n                        }\n                        cellsSoFar[cellId] = true;\n                        var rowNode = _this.rowRenderer.getRowNode(currentRow);\n                        if (ag_grid_community_1._.missing(rowNode)) {\n                            return;\n                        }\n                        var value = _this.valueService.getValue(col, rowNode);\n                        // if empty cell, skip it, doesn't impact count or anything\n                        if (ag_grid_community_1._.missing(value) || value === '') {\n                            return;\n                        }\n                        // see if value is wrapped, can happen when doing count() or avg() functions\n                        if (value.value) {\n                            value = value.value;\n                        }\n                        if (typeof value === 'string') {\n                            value = Number(value);\n                        }\n                        if (typeof value === 'number' && !isNaN(value)) {\n                            sum += value;\n                            if (max === null || value > max) {\n                                max = value;\n                            }\n                            if (min === null || value < min) {\n                                min = value;\n                            }\n                            numberCount++;\n                        }\n                        count++;\n                    });\n                    currentRow = _this.cellNavigationService.getRowBelow(currentRow);\n                }\n            });\n        }\n        var gotResult = count > 1;\n        var gotNumberResult = numberCount > 1;\n        // we show count even if no numbers\n        this.setAggregationComponentValue('count', count, gotResult);\n        // show if numbers found\n        this.setAggregationComponentValue('sum', sum, gotNumberResult);\n        this.setAggregationComponentValue('min', min, gotNumberResult);\n        this.setAggregationComponentValue('max', max, gotNumberResult);\n        this.setAggregationComponentValue('avg', (sum / numberCount), gotNumberResult);\n    };\n    AggregationComp.TEMPLATE = \"<div class=\\\"ag-status-panel ag-status-panel-aggregations\\\">\\n                <ag-name-value ref=\\\"avgAggregationComp\\\"></ag-name-value>\\n                <ag-name-value ref=\\\"countAggregationComp\\\"></ag-name-value>\\n                <ag-name-value ref=\\\"minAggregationComp\\\"></ag-name-value>\\n                <ag-name-value ref=\\\"maxAggregationComp\\\"></ag-name-value>\\n                <ag-name-value ref=\\\"sumAggregationComp\\\"></ag-name-value>\\n            </div>\";\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], AggregationComp.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rangeController'),\n        __metadata(\"design:type\", rangeController_1.RangeController)\n    ], AggregationComp.prototype, \"rangeController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('valueService'),\n        __metadata(\"design:type\", ag_grid_community_1.ValueService)\n    ], AggregationComp.prototype, \"valueService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('cellNavigationService'),\n        __metadata(\"design:type\", ag_grid_community_1.CellNavigationService)\n    ], AggregationComp.prototype, \"cellNavigationService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", ag_grid_community_1.RowRenderer)\n    ], AggregationComp.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], AggregationComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptions'),\n        __metadata(\"design:type\", Object)\n    ], AggregationComp.prototype, \"gridOptions\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], AggregationComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('cellPositionUtils'),\n        __metadata(\"design:type\", ag_grid_community_1.CellPositionUtils)\n    ], AggregationComp.prototype, \"cellPositionUtils\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowPositionUtils'),\n        __metadata(\"design:type\", ag_grid_community_1.RowPositionUtils)\n    ], AggregationComp.prototype, \"rowPositionUtils\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('sumAggregationComp'),\n        __metadata(\"design:type\", nameValueComp_1.NameValueComp)\n    ], AggregationComp.prototype, \"sumAggregationComp\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('countAggregationComp'),\n        __metadata(\"design:type\", nameValueComp_1.NameValueComp)\n    ], AggregationComp.prototype, \"countAggregationComp\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('minAggregationComp'),\n        __metadata(\"design:type\", nameValueComp_1.NameValueComp)\n    ], AggregationComp.prototype, \"minAggregationComp\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('maxAggregationComp'),\n        __metadata(\"design:type\", nameValueComp_1.NameValueComp)\n    ], AggregationComp.prototype, \"maxAggregationComp\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('avgAggregationComp'),\n        __metadata(\"design:type\", nameValueComp_1.NameValueComp)\n    ], AggregationComp.prototype, \"avgAggregationComp\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AggregationComp.prototype, \"postConstruct\", null);\n    return AggregationComp;\n}(ag_grid_community_1.Component));\nexports.AggregationComp = AggregationComp;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/aggregationComp.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/filteredRowsComp.js":
/*!***************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/filteredRowsComp.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar nameValueComp_1 = __webpack_require__(/*! ./nameValueComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/nameValueComp.js\");\nvar FilteredRowsComp = /** @class */ (function (_super) {\n    __extends(FilteredRowsComp, _super);\n    function FilteredRowsComp() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FilteredRowsComp.prototype.postConstruct = function () {\n        this.setLabel('filteredRows', 'Filtered');\n        // this component is only really useful with client side row model\n        if (this.gridApi.getModel().getType() !== 'clientSide') {\n            console.warn(\"ag-Grid: agFilteredRowCountComponent should only be used with the client side row model.\");\n            return;\n        }\n        this.addCssClass('ag-status-panel');\n        this.addCssClass('ag-status-panel-filtered-row-count');\n        this.setDisplayed(true);\n        var listener = this.onDataChanged.bind(this);\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_MODEL_UPDATED, listener);\n    };\n    FilteredRowsComp.prototype.onDataChanged = function () {\n        var totalRowCountValue = this.getTotalRowCountValue();\n        var filteredRowCountValue = this.getFilteredRowCountValue();\n        this.setValue(filteredRowCountValue);\n        this.setDisplayed(totalRowCountValue !== filteredRowCountValue);\n    };\n    FilteredRowsComp.prototype.getTotalRowCountValue = function () {\n        var totalRowCount = 0;\n        this.gridApi.forEachNode(function (node) { return totalRowCount += 1; });\n        return totalRowCount;\n    };\n    FilteredRowsComp.prototype.getFilteredRowCountValue = function () {\n        var filteredRowCount = 0;\n        this.gridApi.forEachNodeAfterFilter(function (node) {\n            if (!node.group) {\n                filteredRowCount += 1;\n            }\n        });\n        return filteredRowCount;\n    };\n    FilteredRowsComp.prototype.init = function () { };\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], FilteredRowsComp.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], FilteredRowsComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], FilteredRowsComp.prototype, \"postConstruct\", null);\n    return FilteredRowsComp;\n}(nameValueComp_1.NameValueComp));\nexports.FilteredRowsComp = FilteredRowsComp;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/filteredRowsComp.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/nameValueComp.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/nameValueComp.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar NameValueComp = /** @class */ (function (_super) {\n    __extends(NameValueComp, _super);\n    function NameValueComp() {\n        return _super.call(this, NameValueComp.TEMPLATE) || this;\n    }\n    NameValueComp.prototype.setLabel = function (key, defaultValue) {\n        // we want to hide until the first value comes in\n        this.setDisplayed(false);\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        this.eLabel.innerHTML = localeTextFunc(key, defaultValue);\n    };\n    NameValueComp.prototype.setValue = function (value) {\n        this.eValue.innerHTML = value;\n    };\n    NameValueComp.TEMPLATE = \"<div class=\\\"ag-name-value\\\">  \\n            <span ref=\\\"eLabel\\\"></span>:&nbsp;\\n            <span ref=\\\"eValue\\\" class=\\\"ag-name-value-value\\\"></span>\\n        </div>\";\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], NameValueComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eLabel'),\n        __metadata(\"design:type\", HTMLElement)\n    ], NameValueComp.prototype, \"eLabel\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eValue'),\n        __metadata(\"design:type\", HTMLElement)\n    ], NameValueComp.prototype, \"eValue\", void 0);\n    return NameValueComp;\n}(ag_grid_community_1.Component));\nexports.NameValueComp = NameValueComp;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/nameValueComp.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/selectedRowsComp.js":
/*!***************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/selectedRowsComp.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar nameValueComp_1 = __webpack_require__(/*! ./nameValueComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/nameValueComp.js\");\nvar SelectedRowsComp = /** @class */ (function (_super) {\n    __extends(SelectedRowsComp, _super);\n    function SelectedRowsComp() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SelectedRowsComp.prototype.postConstruct = function () {\n        if (!this.isValidRowModel()) {\n            console.warn(\"ag-Grid: agSelectedRowCountComponent should only be used with the client and server side row model.\");\n            return;\n        }\n        this.setLabel('selectedRows', 'Selected');\n        this.addCssClass('ag-status-panel');\n        this.addCssClass('ag-status-panel-selected-row-count');\n        var selectedRowCount = this.gridApi.getSelectedRows().length;\n        this.setValue(selectedRowCount);\n        this.setDisplayed(selectedRowCount > 0);\n        var eventListener = this.onRowSelectionChanged.bind(this);\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_MODEL_UPDATED, eventListener);\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_SELECTION_CHANGED, eventListener);\n    };\n    SelectedRowsComp.prototype.isValidRowModel = function () {\n        // this component is only really useful with client or server side rowmodels\n        var rowModelType = this.gridApi.getModel().getType();\n        return rowModelType === 'clientSide' || rowModelType === 'serverSide';\n    };\n    SelectedRowsComp.prototype.onRowSelectionChanged = function () {\n        var selectedRowCount = this.gridApi.getSelectedRows().length;\n        this.setValue(selectedRowCount);\n        this.setDisplayed(selectedRowCount > 0);\n    };\n    SelectedRowsComp.prototype.init = function () {\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], SelectedRowsComp.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], SelectedRowsComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectedRowsComp.prototype, \"postConstruct\", null);\n    return SelectedRowsComp;\n}(nameValueComp_1.NameValueComp));\nexports.SelectedRowsComp = SelectedRowsComp;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/selectedRowsComp.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/totalAndFilteredRowsComp.js":
/*!***********************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/totalAndFilteredRowsComp.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar nameValueComp_1 = __webpack_require__(/*! ./nameValueComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/nameValueComp.js\");\nvar TotalAndFilteredRowsComp = /** @class */ (function (_super) {\n    __extends(TotalAndFilteredRowsComp, _super);\n    function TotalAndFilteredRowsComp() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TotalAndFilteredRowsComp.prototype.postConstruct = function () {\n        // this component is only really useful with client side row model\n        if (this.gridApi.getModel().getType() !== 'clientSide') {\n            console.warn(\"ag-Grid: agTotalAndFilteredRowCountComponent should only be used with the client side row model.\");\n            return;\n        }\n        this.setLabel('totalAndFilteredRows', 'Rows');\n        this.addCssClass('ag-status-panel');\n        this.addCssClass('ag-status-panel-total-and-filtered-row-count');\n        this.setDisplayed(true);\n        this.addDestroyableEventListener(this.eventService, ag_grid_community_1.Events.EVENT_MODEL_UPDATED, this.onDataChanged.bind(this));\n    };\n    TotalAndFilteredRowsComp.prototype.onDataChanged = function () {\n        var rowCount = this.getFilteredRowCountValue();\n        var totalRowCount = this.getTotalRowCount();\n        if (rowCount === totalRowCount) {\n            this.setValue(rowCount);\n        }\n        else {\n            var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n            this.setValue(rowCount + \" \" + localeTextFunc('of', 'of') + \" \" + totalRowCount);\n        }\n    };\n    TotalAndFilteredRowsComp.prototype.getFilteredRowCountValue = function () {\n        var filteredRowCount = 0;\n        this.gridApi.forEachNodeAfterFilter(function (node) {\n            if (!node.group) {\n                filteredRowCount++;\n            }\n        });\n        return filteredRowCount;\n    };\n    TotalAndFilteredRowsComp.prototype.getTotalRowCount = function () {\n        var totalRowCount = 0;\n        this.gridApi.forEachNode(function (node) {\n            if (!node.group) {\n                totalRowCount++;\n            }\n        });\n        return totalRowCount;\n    };\n    TotalAndFilteredRowsComp.prototype.init = function () { };\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], TotalAndFilteredRowsComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], TotalAndFilteredRowsComp.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], TotalAndFilteredRowsComp.prototype, \"postConstruct\", null);\n    return TotalAndFilteredRowsComp;\n}(nameValueComp_1.NameValueComp));\nexports.TotalAndFilteredRowsComp = TotalAndFilteredRowsComp;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/totalAndFilteredRowsComp.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/totalRowsComp.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/totalRowsComp.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar nameValueComp_1 = __webpack_require__(/*! ./nameValueComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/nameValueComp.js\");\nvar TotalRowsComp = /** @class */ (function (_super) {\n    __extends(TotalRowsComp, _super);\n    function TotalRowsComp() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TotalRowsComp.prototype.postConstruct = function () {\n        this.setLabel('totalRows', 'Total Rows');\n        // this component is only really useful with client side row model\n        if (this.gridApi.getModel().getType() !== 'clientSide') {\n            console.warn(\"ag-Grid: agTotalRowCountComponent should only be used with the client side row model.\");\n            return;\n        }\n        this.addCssClass('ag-status-panel');\n        this.addCssClass('ag-status-panel-total-row-count');\n        this.setDisplayed(true);\n        var listener = this.onDataChanged.bind(this);\n        this.eventService.addEventListener(ag_grid_community_1.Events.EVENT_MODEL_UPDATED, listener);\n    };\n    TotalRowsComp.prototype.onDataChanged = function () {\n        this.setValue(this.getRowCountValue());\n    };\n    TotalRowsComp.prototype.getRowCountValue = function () {\n        var totalRowCount = 0;\n        this.gridApi.forEachLeafNode(function (node) { return totalRowCount += 1; });\n        return \"\" + totalRowCount;\n    };\n    TotalRowsComp.prototype.init = function () {\n    };\n    __decorate([\n        ag_grid_community_1.Autowired('eventService'),\n        __metadata(\"design:type\", ag_grid_community_1.EventService)\n    ], TotalRowsComp.prototype, \"eventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridApi'),\n        __metadata(\"design:type\", ag_grid_community_1.GridApi)\n    ], TotalRowsComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], TotalRowsComp.prototype, \"postConstruct\", null);\n    return TotalRowsComp;\n}(nameValueComp_1.NameValueComp));\nexports.TotalRowsComp = TotalRowsComp;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/totalRowsComp.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/statusBar/statusBar.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/statusBar/statusBar.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar statusBarService_1 = __webpack_require__(/*! ./statusBarService */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/statusBarService.js\");\nvar StatusBar = /** @class */ (function (_super) {\n    __extends(StatusBar, _super);\n    function StatusBar() {\n        return _super.call(this, StatusBar.TEMPLATE) || this;\n    }\n    StatusBar.prototype.postConstruct = function () {\n        if (this.gridOptions.statusBar && this.gridOptions.statusBar.statusPanels) {\n            var leftStatusPanelComponents = this.gridOptions.statusBar.statusPanels\n                .filter(function (componentConfig) { return componentConfig.align === 'left'; });\n            this.createAndRenderComponents(leftStatusPanelComponents, this.eStatusBarLeft);\n            var centerStatusPanelComponents = this.gridOptions.statusBar.statusPanels\n                .filter(function (componentConfig) { return componentConfig.align === 'center'; });\n            this.createAndRenderComponents(centerStatusPanelComponents, this.eStatusBarCenter);\n            var rightStatusPanelComponents = this.gridOptions.statusBar.statusPanels\n                .filter(function (componentConfig) { return (!componentConfig.align || componentConfig.align === 'right'); });\n            this.createAndRenderComponents(rightStatusPanelComponents, this.eStatusBarRight);\n        }\n    };\n    StatusBar.prototype.createAndRenderComponents = function (statusBarComponents, ePanelComponent) {\n        var _this = this;\n        var componentDetails = [];\n        ag_grid_community_1._.forEach(statusBarComponents, function (componentConfig) {\n            var params = {\n                api: _this.gridOptionsWrapper.getApi(),\n                columnApi: _this.gridOptionsWrapper.getColumnApi(),\n                context: _this.gridOptionsWrapper.getContext()\n            };\n            var promise = _this.userComponentFactory.newStatusPanelComponent(componentConfig, params);\n            componentDetails.push({\n                // default to the component name if no key supplied\n                key: componentConfig.key || componentConfig.statusPanel,\n                promise: promise\n            });\n        });\n        ag_grid_community_1.Promise.all(componentDetails.map(function (details) { return details.promise; }))\n            .then(function () {\n            ag_grid_community_1._.forEach(componentDetails, function (componentDetail) {\n                componentDetail.promise.then(function (component) {\n                    var destroyFunc = function () {\n                        if (component.destroy) {\n                            component.destroy();\n                        }\n                    };\n                    if (_this.isAlive()) {\n                        _this.statusBarService.registerStatusPanel(componentDetail.key, component);\n                        ePanelComponent.appendChild(component.getGui());\n                        _this.addDestroyFunc(destroyFunc);\n                    }\n                    else {\n                        destroyFunc();\n                    }\n                });\n            });\n        });\n    };\n    StatusBar.TEMPLATE = \"<div class=\\\"ag-status-bar\\\">\\n        <div ref=\\\"eStatusBarLeft\\\" class=\\\"ag-status-bar-left\\\"></div>\\n        <div ref=\\\"eStatusBarCenter\\\" class=\\\"ag-status-bar-center\\\"></div>\\n        <div ref=\\\"eStatusBarRight\\\" class=\\\"ag-status-bar-right\\\"></div>\\n    </div>\";\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", ag_grid_community_1.GridOptionsWrapper)\n    ], StatusBar.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('gridOptions'),\n        __metadata(\"design:type\", Object)\n    ], StatusBar.prototype, \"gridOptions\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", ag_grid_community_1.UserComponentFactory)\n    ], StatusBar.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('statusBarService'),\n        __metadata(\"design:type\", statusBarService_1.StatusBarService)\n    ], StatusBar.prototype, \"statusBarService\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eStatusBarLeft'),\n        __metadata(\"design:type\", HTMLElement)\n    ], StatusBar.prototype, \"eStatusBarLeft\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eStatusBarCenter'),\n        __metadata(\"design:type\", HTMLElement)\n    ], StatusBar.prototype, \"eStatusBarCenter\", void 0);\n    __decorate([\n        ag_grid_community_1.RefSelector('eStatusBarRight'),\n        __metadata(\"design:type\", HTMLElement)\n    ], StatusBar.prototype, \"eStatusBarRight\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], StatusBar.prototype, \"postConstruct\", null);\n    return StatusBar;\n}(ag_grid_community_1.Component));\nexports.StatusBar = StatusBar;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/statusBar/statusBar.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/statusBar/statusBarService.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/statusBar/statusBarService.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar StatusBarService = /** @class */ (function () {\n    // tslint:disable-next-line\n    function StatusBarService() {\n        this.allComponents = {};\n    }\n    StatusBarService.prototype.registerStatusPanel = function (key, component) {\n        this.allComponents[key] = component;\n    };\n    StatusBarService.prototype.getStatusPanel = function (key) {\n        return this.allComponents[key];\n    };\n    StatusBarService = __decorate([\n        ag_grid_community_1.Bean('statusBarService'),\n        __metadata(\"design:paramtypes\", [])\n    ], StatusBarService);\n    return StatusBarService;\n}());\nexports.StatusBarService = StatusBarService;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/statusBar/statusBarService.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/abstractSelectionHandle.js":
/*!***************************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/abstractSelectionHandle.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar rangeController_1 = __webpack_require__(/*! ../../rangeController */ \"../../node_modules/ag-grid-enterprise/dist/lib/rangeController.js\");\nvar AbstractSelectionHandle = /** @class */ (function (_super) {\n    __extends(AbstractSelectionHandle, _super);\n    function AbstractSelectionHandle() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.changedCell = false;\n        _this.dragging = false;\n        _this.shouldDestroyOnEndDragging = false;\n        return _this;\n    }\n    AbstractSelectionHandle.prototype.init = function () {\n        var _this = this;\n        this.dragService.addDragSource({\n            dragStartPixels: 0,\n            eElement: this.getGui(),\n            onDragStart: this.onDragStart.bind(this),\n            onDragging: function (e) {\n                _this.dragging = true;\n                _this.rangeController.autoScrollService.check(e);\n                if (_this.changedCell) {\n                    _this.onDrag(e);\n                }\n            },\n            onDragStop: function (e) {\n                _this.dragging = false;\n                _this.onDragEnd(e);\n                _this.clearValues();\n                _this.rangeController.autoScrollService.ensureCleared();\n                ag_grid_community_1._.removeCssClass(document.body, \"ag-dragging-\" + _this.type + \"-handle\");\n                if (_this.shouldDestroyOnEndDragging) {\n                    _this.destroy();\n                }\n            }\n        });\n        this.addDestroyableEventListener(this.getGui(), 'mousedown', this.preventRangeExtension.bind(this));\n    };\n    AbstractSelectionHandle.prototype.isDragging = function () {\n        return this.dragging;\n    };\n    AbstractSelectionHandle.prototype.getCellComp = function () {\n        return this.cellComp;\n    };\n    AbstractSelectionHandle.prototype.setCellComp = function (cellComp) {\n        this.cellComp = cellComp;\n    };\n    AbstractSelectionHandle.prototype.getCellRange = function () {\n        return this.cellRange;\n    };\n    AbstractSelectionHandle.prototype.setCellRange = function (range) {\n        this.cellRange = range;\n    };\n    AbstractSelectionHandle.prototype.getRangeStartRow = function () {\n        return this.rangeStartRow;\n    };\n    AbstractSelectionHandle.prototype.setRangeStartRow = function (row) {\n        this.rangeStartRow = row;\n    };\n    AbstractSelectionHandle.prototype.getRangeEndRow = function () {\n        return this.rangeEndRow;\n    };\n    AbstractSelectionHandle.prototype.setRangeEndRow = function (row) {\n        this.rangeEndRow = row;\n    };\n    AbstractSelectionHandle.prototype.getLastCellHovered = function () {\n        return this.lastCellHovered;\n    };\n    AbstractSelectionHandle.prototype.preventRangeExtension = function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n    AbstractSelectionHandle.prototype.onDragStart = function (e) {\n        this.cellHoverListener = this.addDestroyableEventListener(this.rowRenderer.getGridCore().getRootGui(), 'mousemove', this.updateLastCellPositionHovered.bind(this));\n        ag_grid_community_1._.addCssClass(document.body, \"ag-dragging-\" + this.type + \"-handle\");\n    };\n    AbstractSelectionHandle.prototype.updateLastCellPositionHovered = function (e) {\n        var cell = this.mouseEventService.getCellPositionForEvent(e);\n        if (cell === this.lastCellHovered) {\n            this.changedCell = false;\n            return;\n        }\n        this.lastCellHovered = cell;\n        this.changedCell = true;\n    };\n    AbstractSelectionHandle.prototype.getType = function () {\n        return this.type;\n    };\n    AbstractSelectionHandle.prototype.refresh = function (cellComp) {\n        var _this = this;\n        var oldCellComp = this.getCellComp();\n        var eGui = this.getGui();\n        var cellRange = ag_grid_community_1._.last(this.rangeController.getCellRanges());\n        var start = cellRange.startRow;\n        var end = cellRange.endRow;\n        if (start && end) {\n            var isBefore = this.rowPositionUtils.before(end, start);\n            if (isBefore) {\n                this.setRangeStartRow(end);\n                this.setRangeEndRow(start);\n            }\n            else {\n                this.setRangeStartRow(start);\n                this.setRangeEndRow(end);\n            }\n        }\n        if (oldCellComp !== cellComp) {\n            this.setCellComp(cellComp);\n            window.setTimeout(function () {\n                if (_this.isAlive()) {\n                    cellComp.appendChild(eGui);\n                }\n            }, 1);\n        }\n        this.setCellRange(cellRange);\n    };\n    AbstractSelectionHandle.prototype.clearValues = function () {\n        this.lastCellHovered = undefined;\n        this.removeListeners();\n    };\n    AbstractSelectionHandle.prototype.removeListeners = function () {\n        if (this.cellHoverListener) {\n            this.cellHoverListener();\n            this.cellHoverListener = undefined;\n        }\n    };\n    AbstractSelectionHandle.prototype.destroy = function () {\n        if (!this.shouldDestroyOnEndDragging && this.isDragging()) {\n            ag_grid_community_1._.setDisplayed(this.getGui(), false);\n            this.shouldDestroyOnEndDragging = true;\n            return;\n        }\n        this.shouldDestroyOnEndDragging = false;\n        _super.prototype.destroy.call(this);\n        this.removeListeners();\n        var eGui = this.getGui();\n        if (eGui.parentElement) {\n            eGui.parentElement.removeChild(eGui);\n        }\n    };\n    __decorate([\n        ag_grid_community_1.Autowired(\"rowRenderer\"),\n        __metadata(\"design:type\", ag_grid_community_1.RowRenderer)\n    ], AbstractSelectionHandle.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"dragService\"),\n        __metadata(\"design:type\", ag_grid_community_1.DragService)\n    ], AbstractSelectionHandle.prototype, \"dragService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"rangeController\"),\n        __metadata(\"design:type\", rangeController_1.RangeController)\n    ], AbstractSelectionHandle.prototype, \"rangeController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"mouseEventService\"),\n        __metadata(\"design:type\", ag_grid_community_1.MouseEventService)\n    ], AbstractSelectionHandle.prototype, \"mouseEventService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"columnController\"),\n        __metadata(\"design:type\", ag_grid_community_1.ColumnController)\n    ], AbstractSelectionHandle.prototype, \"columnController\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired(\"cellNavigationService\"),\n        __metadata(\"design:type\", ag_grid_community_1.CellNavigationService)\n    ], AbstractSelectionHandle.prototype, \"cellNavigationService\", void 0);\n    __decorate([\n        ag_grid_community_1.Autowired('rowPositionUtils'),\n        __metadata(\"design:type\", ag_grid_community_1.RowPositionUtils)\n    ], AbstractSelectionHandle.prototype, \"rowPositionUtils\", void 0);\n    __decorate([\n        ag_grid_community_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AbstractSelectionHandle.prototype, \"init\", null);\n    return AbstractSelectionHandle;\n}(ag_grid_community_1.Component));\nexports.AbstractSelectionHandle = AbstractSelectionHandle;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/abstractSelectionHandle.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/fillHandle.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/fillHandle.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar abstractSelectionHandle_1 = __webpack_require__(/*! ./abstractSelectionHandle */ \"../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/abstractSelectionHandle.js\");\nvar FillHandle = /** @class */ (function (_super) {\n    __extends(FillHandle, _super);\n    function FillHandle() {\n        var _this = _super.call(this, FillHandle.TEMPLATE) || this;\n        _this.markedCellComps = [];\n        _this.cellValues = [];\n        _this.isUp = false;\n        _this.isLeft = false;\n        _this.isReduce = false;\n        _this.type = 'fill';\n        return _this;\n    }\n    FillHandle.prototype.onDrag = function (e) {\n        if (!this.initialXY) {\n            var _a = this.getGui().getBoundingClientRect(), x_1 = _a.x, y_1 = _a.y;\n            this.initialXY = { x: x_1, y: y_1 };\n        }\n        var _b = this.initialXY, x = _b.x, y = _b.y;\n        var diffX = Math.abs(x - e.clientX);\n        var diffY = Math.abs(y - e.clientY);\n        var direction = diffX > diffY ? 'x' : 'y';\n        if (direction !== this.dragAxis) {\n            this.dragAxis = direction;\n        }\n        if (!this.initialPosition) {\n            var cellComp = this.getCellComp();\n            if (!cellComp) {\n                return;\n            }\n            this.initialPosition = cellComp.getCellPosition();\n        }\n        var lastCellHovered = this.getLastCellHovered();\n        if (lastCellHovered && lastCellHovered !== this.lastCellMarked) {\n            this.lastCellMarked = lastCellHovered;\n            this.markPathFrom(this.initialPosition, lastCellHovered);\n        }\n    };\n    FillHandle.prototype.onDragEnd = function (e) {\n        if (!this.markedCellComps.length) {\n            return;\n        }\n        var isX = this.dragAxis === 'x';\n        var initialRange = this.getCellRange();\n        var colLen = initialRange.columns.length;\n        var rangeStartRow = this.getRangeStartRow();\n        var rangeEndRow = this.getRangeEndRow();\n        var finalRange;\n        if (!this.isUp && !this.isLeft) {\n            finalRange = this.rangeController.createCellRangeFromCellRangeParams({\n                rowStartIndex: rangeStartRow.rowIndex,\n                rowStartPinned: rangeStartRow.rowPinned,\n                columnStart: initialRange.columns[0],\n                rowEndIndex: isX ? rangeEndRow.rowIndex : this.lastCellMarked.rowIndex,\n                rowEndPinned: isX ? rangeEndRow.rowPinned : this.lastCellMarked.rowPinned,\n                columnEnd: isX ? this.lastCellMarked.column : initialRange.columns[colLen - 1]\n            });\n        }\n        else {\n            var startRow = isX ? rangeStartRow : this.lastCellMarked;\n            finalRange = this.rangeController.createCellRangeFromCellRangeParams({\n                rowStartIndex: startRow.rowIndex,\n                rowStartPinned: startRow.rowPinned,\n                columnStart: isX ? this.lastCellMarked.column : initialRange.columns[0],\n                rowEndIndex: rangeEndRow.rowIndex,\n                rowEndPinned: rangeEndRow.rowPinned,\n                columnEnd: initialRange.columns[colLen - 1]\n            });\n        }\n        if (finalRange) {\n            this.handleValueChanged(initialRange, finalRange, e.altKey);\n            this.rangeController.setCellRanges([finalRange]);\n        }\n    };\n    FillHandle.prototype.handleValueChanged = function (initialRange, finalRange, altKey) {\n        var _this = this;\n        var initialRangeEndRow = this.rangeController.getRangeEndRow(initialRange);\n        var initialRangeStartRow = this.rangeController.getRangeStartRow(initialRange);\n        var finalRangeEndRow = this.rangeController.getRangeEndRow(finalRange);\n        var finalRangeStartRow = this.rangeController.getRangeStartRow(finalRange);\n        var isVertical = this.dragAxis === 'y';\n        // if the range is being reduced in size, all we need to do is\n        // clear the cells that are no longer part of the range\n        if (this.isReduce) {\n            var columns = isVertical\n                ? initialRange.columns\n                : initialRange.columns.filter(function (col) { return finalRange.columns.indexOf(col) < 0; });\n            var startRow = isVertical ? this.cellNavigationService.getRowBelow(finalRangeEndRow) : finalRangeStartRow;\n            if (startRow) {\n                this.clearCellsInRange(startRow, initialRangeEndRow, columns);\n            }\n            return;\n        }\n        var withinInitialRange = true;\n        var values = [];\n        var resetValues = function () {\n            values.length = 0;\n        };\n        var iterateAcrossCells = function (column, columns) {\n            var currentRow = _this.isUp ? initialRangeEndRow : initialRangeStartRow;\n            var finished = false;\n            if (isVertical) {\n                withinInitialRange = true;\n                resetValues();\n            }\n            var _loop_1 = function () {\n                var rowNode = _this.rowPositionUtils.getRowNode(currentRow);\n                if (!rowNode) {\n                    return \"break\";\n                }\n                if (isVertical && column) {\n                    fillValues(values, column, rowNode, function () {\n                        return !_this.rowPositionUtils.sameRow(currentRow, _this.isUp ? initialRangeStartRow : initialRangeEndRow);\n                    });\n                }\n                else if (columns) {\n                    withinInitialRange = true;\n                    resetValues();\n                    ag_grid_community_1._.forEach(columns, (function (col) { return fillValues(values, col, rowNode, function () {\n                        return _this.isLeft ? col !== initialRange.columns[0] : col !== ag_grid_community_1._.last(initialRange.columns);\n                    }); }));\n                }\n                finished = _this.rowPositionUtils.sameRow(currentRow, _this.isUp ? finalRangeStartRow : finalRangeEndRow);\n                currentRow = _this.isUp\n                    ? _this.cellNavigationService.getRowAbove(currentRow)\n                    : _this.cellNavigationService.getRowBelow(currentRow);\n            };\n            while (!finished && currentRow) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        };\n        var fillValues = function (values, col, rowNode, updateInitialSet) {\n            var currentValue;\n            if (withinInitialRange) {\n                currentValue = _this.valueService.getValue(col, rowNode);\n                withinInitialRange = updateInitialSet();\n            }\n            else {\n                currentValue = _this.processValues(values, altKey);\n                _this.valueService.setValue(rowNode, col, currentValue);\n            }\n            values.push(currentValue);\n        };\n        if (isVertical) {\n            initialRange.columns.forEach(function (col) {\n                iterateAcrossCells(col);\n            });\n        }\n        else {\n            var columns = this.isLeft ? finalRange.columns.slice().reverse() : finalRange.columns;\n            iterateAcrossCells(undefined, columns);\n        }\n    };\n    FillHandle.prototype.clearCellsInRange = function (startRow, endRow, columns) {\n        var _this = this;\n        var currentRow = startRow;\n        var finished = false;\n        var _loop_2 = function () {\n            var rowNode = this_1.rowPositionUtils.getRowNode(currentRow);\n            // should never happen, defensive programming\n            if (!rowNode) {\n                return \"break\";\n            }\n            columns.forEach(function (col) {\n                _this.valueService.setValue(rowNode, col, null);\n            });\n            finished = this_1.rowPositionUtils.sameRow(currentRow, endRow);\n            currentRow = this_1.cellNavigationService.getRowBelow(currentRow);\n        };\n        var this_1 = this;\n        while (!finished && currentRow) {\n            var state_2 = _loop_2();\n            if (state_2 === \"break\")\n                break;\n        }\n    };\n    FillHandle.prototype.processValues = function (values, altKey) {\n        return 10;\n    };\n    FillHandle.prototype.clearValues = function () {\n        this.clearMarkedPath();\n        this.clearCellValues();\n        this.lastCellMarked = undefined;\n        _super.prototype.clearValues.call(this);\n    };\n    FillHandle.prototype.clearMarkedPath = function () {\n        this.markedCellComps.forEach(function (cellComp) {\n            var eGui = cellComp.getGui();\n            ag_grid_community_1._.removeCssClass(eGui, 'ag-selection-fill-top');\n            ag_grid_community_1._.removeCssClass(eGui, 'ag-selection-fill-right');\n            ag_grid_community_1._.removeCssClass(eGui, 'ag-selection-fill-bottom');\n            ag_grid_community_1._.removeCssClass(eGui, 'ag-selection-fill-left');\n        });\n        this.markedCellComps.length = 0;\n        this.isUp = false;\n        this.isLeft = false;\n        this.isReduce = false;\n    };\n    FillHandle.prototype.clearCellValues = function () {\n        this.cellValues.length = 0;\n    };\n    FillHandle.prototype.markPathFrom = function (initialPosition, currentPosition) {\n        this.clearMarkedPath();\n        this.clearCellValues();\n        if (this.dragAxis === 'y') {\n            if (this.rowPositionUtils.sameRow(currentPosition, initialPosition)) {\n                return;\n            }\n            var isBefore = this.rowPositionUtils.before(currentPosition, initialPosition);\n            var rangeStartRow = this.getRangeStartRow();\n            var rangeEndRow = this.getRangeEndRow();\n            if (isBefore && ((currentPosition.rowPinned == rangeStartRow.rowPinned &&\n                currentPosition.rowIndex >= rangeStartRow.rowIndex) ||\n                (rangeStartRow.rowPinned != rangeEndRow.rowPinned &&\n                    currentPosition.rowPinned == rangeEndRow.rowPinned &&\n                    currentPosition.rowIndex <= rangeEndRow.rowIndex))) {\n                this.reduceVertical(initialPosition, currentPosition);\n                this.isReduce = true;\n            }\n            else {\n                this.extendVertical(initialPosition, currentPosition, isBefore);\n                this.isReduce = false;\n            }\n        }\n        else {\n            var initialColumn = initialPosition.column;\n            var currentColumn = currentPosition.column;\n            if (initialColumn === currentColumn) {\n                return;\n            }\n            var displayedColumns = this.columnController.getAllDisplayedColumns();\n            var initialIndex = displayedColumns.indexOf(initialColumn);\n            var currentIndex = displayedColumns.indexOf(currentColumn);\n            if (currentIndex <= initialIndex && currentIndex >= displayedColumns.indexOf(this.getCellRange().columns[0])) {\n                this.reduceHorizontal(initialPosition, currentPosition);\n                this.isReduce = true;\n            }\n            else {\n                this.extendHorizontal(initialPosition, currentPosition, currentIndex < initialIndex);\n                this.isReduce = false;\n            }\n        }\n    };\n    FillHandle.prototype.extendVertical = function (initialPosition, endPosition, isMovingUp) {\n        var _a = this, rowRenderer = _a.rowRenderer, rangeController = _a.rangeController;\n        var row = initialPosition;\n        do {\n            var cellRange = this.getCellRange();\n            var colLen = cellRange.columns.length;\n            for (var i = 0; i < colLen; i++) {\n                var column = cellRange.columns[i];\n                var rowPos = { rowIndex: row.rowIndex, rowPinned: row.rowPinned };\n                var cellPos = __assign({}, rowPos, { column: column });\n                var cellInRange = rangeController.isCellInSpecificRange(cellPos, cellRange);\n                var isInitialRow = this.rowPositionUtils.sameRow(row, initialPosition);\n                if (isMovingUp) {\n                    this.isUp = true;\n                }\n                if (!isInitialRow) {\n                    var cellComp = rowRenderer.getComponentForCell(cellPos);\n                    if (cellComp) {\n                        this.markedCellComps.push(cellComp);\n                        var eGui = cellComp.getGui();\n                        if (!cellInRange) {\n                            ag_grid_community_1._.addOrRemoveCssClass(eGui, 'ag-selection-fill-left', i === 0);\n                            ag_grid_community_1._.addOrRemoveCssClass(eGui, 'ag-selection-fill-right', i === colLen - 1);\n                        }\n                        ag_grid_community_1._.addOrRemoveCssClass(eGui, isMovingUp ? 'ag-selection-fill-top' : 'ag-selection-fill-bottom', this.rowPositionUtils.sameRow(row, endPosition));\n                    }\n                }\n            }\n            if (this.rowPositionUtils.sameRow(row, endPosition)) {\n                break;\n            }\n        } while (row = isMovingUp ?\n            this.cellNavigationService.getRowAbove(row) :\n            this.cellNavigationService.getRowBelow(row));\n    };\n    FillHandle.prototype.reduceVertical = function (initialPosition, endPosition) {\n        var row = initialPosition;\n        do {\n            var cellRange = this.getCellRange();\n            var colLen = cellRange.columns.length;\n            var isLastRow = this.rowPositionUtils.sameRow(row, endPosition);\n            for (var i = 0; i < colLen; i++) {\n                var rowPos = { rowIndex: row.rowIndex, rowPinned: row.rowPinned };\n                var celPos = __assign({}, rowPos, { column: cellRange.columns[i] });\n                var cellComp = this.rowRenderer.getComponentForCell(celPos);\n                if (cellComp) {\n                    this.markedCellComps.push(cellComp);\n                    var eGui = cellComp.getGui();\n                    ag_grid_community_1._.addOrRemoveCssClass(eGui, 'ag-selection-fill-bottom', this.rowPositionUtils.sameRow(row, endPosition));\n                }\n            }\n            if (isLastRow) {\n                break;\n            }\n        } while (row = this.cellNavigationService.getRowAbove(row));\n    };\n    FillHandle.prototype.extendHorizontal = function (initialPosition, endPosition, isMovingLeft) {\n        var _this = this;\n        var allCols = this.columnController.getAllDisplayedColumns();\n        var startCol = allCols.indexOf(isMovingLeft ? endPosition.column : initialPosition.column);\n        var endCol = allCols.indexOf(isMovingLeft ? this.getCellRange().columns[0] : endPosition.column);\n        var offset = isMovingLeft ? 0 : 1;\n        var colsToMark = allCols.slice(startCol + offset, endCol + offset);\n        var rangeStartRow = this.getRangeStartRow();\n        var rangeEndRow = this.getRangeEndRow();\n        colsToMark.forEach(function (column) {\n            var row = rangeStartRow;\n            var isLastRow = false;\n            do {\n                isLastRow = _this.rowPositionUtils.sameRow(row, rangeEndRow);\n                var cellComp = _this.rowRenderer.getComponentForCell({\n                    rowIndex: row.rowIndex,\n                    rowPinned: row.rowPinned,\n                    column: column\n                });\n                if (cellComp) {\n                    _this.markedCellComps.push(cellComp);\n                    var eGui = cellComp.getGui();\n                    ag_grid_community_1._.addOrRemoveCssClass(eGui, 'ag-selection-fill-top', _this.rowPositionUtils.sameRow(row, rangeStartRow));\n                    ag_grid_community_1._.addOrRemoveCssClass(eGui, 'ag-selection-fill-bottom', _this.rowPositionUtils.sameRow(row, rangeEndRow));\n                    if (isMovingLeft) {\n                        _this.isLeft = true;\n                        ag_grid_community_1._.addOrRemoveCssClass(eGui, 'ag-selection-fill-left', column === colsToMark[0]);\n                    }\n                    else {\n                        ag_grid_community_1._.addOrRemoveCssClass(eGui, 'ag-selection-fill-right', column === ag_grid_community_1._.last(colsToMark));\n                    }\n                }\n                row = _this.cellNavigationService.getRowBelow(row);\n            } while (!isLastRow);\n        });\n    };\n    FillHandle.prototype.reduceHorizontal = function (initialPosition, endPosition) {\n        var _this = this;\n        var allCols = this.columnController.getAllDisplayedColumns();\n        var startCol = allCols.indexOf(endPosition.column);\n        var endCol = allCols.indexOf(initialPosition.column);\n        var colsToMark = allCols.slice(startCol, endCol);\n        var rangeStartRow = this.getRangeStartRow();\n        var rangeEndRow = this.getRangeEndRow();\n        colsToMark.forEach(function (column) {\n            var row = rangeStartRow;\n            var isLastRow = false;\n            do {\n                isLastRow = _this.rowPositionUtils.sameRow(row, rangeEndRow);\n                var cellComp = _this.rowRenderer.getComponentForCell({\n                    rowIndex: row.rowIndex,\n                    rowPinned: row.rowPinned,\n                    column: column\n                });\n                if (cellComp) {\n                    _this.markedCellComps.push(cellComp);\n                    var eGui = cellComp.getGui();\n                    ag_grid_community_1._.addOrRemoveCssClass(eGui, 'ag-selection-fill-right', column === colsToMark[0]);\n                }\n                row = _this.cellNavigationService.getRowBelow(row);\n            } while (!isLastRow);\n        });\n    };\n    FillHandle.prototype.refresh = function (cellComp) {\n        var cellRange = this.rangeController.getCellRanges()[0];\n        var isColumnRange = !cellRange.startRow || !cellRange.endRow;\n        if (isColumnRange) {\n            this.destroy();\n            return;\n        }\n        _super.prototype.refresh.call(this, cellComp);\n    };\n    FillHandle.TEMPLATE = '<div class=\"ag-fill-handle\"></div>';\n    __decorate([\n        ag_grid_community_1.Autowired('valueService'),\n        __metadata(\"design:type\", ag_grid_community_1.ValueService)\n    ], FillHandle.prototype, \"valueService\", void 0);\n    return FillHandle;\n}(abstractSelectionHandle_1.AbstractSelectionHandle));\nexports.FillHandle = FillHandle;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/fillHandle.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/rangeHandle.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/rangeHandle.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar abstractSelectionHandle_1 = __webpack_require__(/*! ./abstractSelectionHandle */ \"../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/abstractSelectionHandle.js\");\nvar RangeHandle = /** @class */ (function (_super) {\n    __extends(RangeHandle, _super);\n    function RangeHandle() {\n        var _this = _super.call(this, RangeHandle.TEMPLATE) || this;\n        _this.type = 'range';\n        _this.rangeFixed = false;\n        return _this;\n    }\n    RangeHandle.prototype.onDrag = function (e) {\n        var lastCellHovered = this.getLastCellHovered();\n        if (!lastCellHovered) {\n            return;\n        }\n        var cellRanges = this.rangeController.getCellRanges();\n        var lastRange = ag_grid_community_1._.last(cellRanges);\n        if (!this.rangeFixed) {\n            this.fixRangeStartEnd(lastRange);\n            this.rangeFixed = true;\n        }\n        var newEndRow = {\n            rowIndex: lastCellHovered.rowIndex,\n            rowPinned: lastCellHovered.rowPinned,\n        };\n        var rowChanged = !this.rowPositionUtils.sameRow(newEndRow, this.rangeController.getRangeEndRow(lastRange));\n        if (cellRanges.length === 2 && rowChanged) {\n            this.rangeController.updateRangeEnd({\n                cellRange: cellRanges[0],\n                cellPosition: __assign({}, newEndRow, { column: cellRanges[0].columns[0] })\n            });\n        }\n        this.endPosition = __assign({}, newEndRow, { column: lastCellHovered.column });\n        this.rangeController.extendLatestRangeToCell(this.endPosition);\n    };\n    RangeHandle.prototype.onDragEnd = function (e) {\n        var cellRange = ag_grid_community_1._.last(this.rangeController.getCellRanges());\n        this.fixRangeStartEnd(cellRange);\n        this.rangeFixed = false;\n    };\n    RangeHandle.prototype.fixRangeStartEnd = function (cellRange) {\n        var startRow = this.rangeController.getRangeStartRow(cellRange);\n        var endRow = this.rangeController.getRangeEndRow(cellRange);\n        var column = cellRange.columns[0];\n        cellRange.startRow = startRow;\n        cellRange.endRow = endRow;\n        cellRange.startColumn = column;\n    };\n    RangeHandle.TEMPLATE = '<div class=\"ag-range-handle\"></div>';\n    return RangeHandle;\n}(abstractSelectionHandle_1.AbstractSelectionHandle));\nexports.RangeHandle = RangeHandle;\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/rangeHandle.js?");

/***/ }),

/***/ "../../node_modules/ag-grid-enterprise/main.js":
/*!*****************************************************!*\
  !*** ../../node_modules/ag-grid-enterprise/main.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// ag-grid-enterprise v21.2.2\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ag_grid_community_1 = __webpack_require__(/*! ag-grid-community */ \"../../node_modules/ag-grid-community/main.js\");\nvar enterpriseMenu_1 = __webpack_require__(/*! ./dist/lib/menu/enterpriseMenu */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/enterpriseMenu.js\");\nvar rangeController_1 = __webpack_require__(/*! ./dist/lib/rangeController */ \"../../node_modules/ag-grid-enterprise/dist/lib/rangeController.js\");\nvar clipboardService_1 = __webpack_require__(/*! ./dist/lib/clipboardService */ \"../../node_modules/ag-grid-enterprise/dist/lib/clipboardService.js\");\nvar groupStage_1 = __webpack_require__(/*! ./dist/lib/rowStages/groupStage */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowStages/groupStage.js\");\nvar aggregationStage_1 = __webpack_require__(/*! ./dist/lib/rowStages/aggregationStage */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowStages/aggregationStage.js\");\nvar enterpriseBoot_1 = __webpack_require__(/*! ./dist/lib/enterpriseBoot */ \"../../node_modules/ag-grid-enterprise/dist/lib/enterpriseBoot.js\");\nvar contextMenu_1 = __webpack_require__(/*! ./dist/lib/menu/contextMenu */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/contextMenu.js\");\nvar viewportRowModel_1 = __webpack_require__(/*! ./dist/lib/rowModels/viewport/viewportRowModel */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowModels/viewport/viewportRowModel.js\");\nvar sideBarComp_1 = __webpack_require__(/*! ./dist/lib/sideBar/sideBarComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/sideBarComp.js\");\nvar licenseManager_1 = __webpack_require__(/*! ./dist/lib/licenseManager */ \"../../node_modules/ag-grid-enterprise/dist/lib/licenseManager.js\");\nvar md5_1 = __webpack_require__(/*! ./dist/lib/license/md5 */ \"../../node_modules/ag-grid-enterprise/dist/lib/license/md5.js\");\nvar pivotStage_1 = __webpack_require__(/*! ./dist/lib/rowStages/pivotStage */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowStages/pivotStage.js\");\nvar pivotColDefService_1 = __webpack_require__(/*! ./dist/lib/rowStages/pivotColDefService */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowStages/pivotColDefService.js\");\nvar aggFuncService_1 = __webpack_require__(/*! ./dist/lib/aggregation/aggFuncService */ \"../../node_modules/ag-grid-enterprise/dist/lib/aggregation/aggFuncService.js\");\nvar menuItemMapper_1 = __webpack_require__(/*! ./dist/lib/menu/menuItemMapper */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/menuItemMapper.js\");\nvar excelCreator_1 = __webpack_require__(/*! ./dist/lib/exporter/excelCreator */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelCreator.js\");\nvar excelXmlFactory_1 = __webpack_require__(/*! ./dist/lib/exporter/excelXmlFactory */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXmlFactory.js\");\nvar excelXlsxFactory_1 = __webpack_require__(/*! ./dist/lib/exporter/excelXlsxFactory */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXlsxFactory.js\");\nvar serverSideRowModel_1 = __webpack_require__(/*! ./dist/lib/rowModels/serverSide/serverSideRowModel */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowModels/serverSide/serverSideRowModel.js\");\nvar horizontalResizeComp_1 = __webpack_require__(/*! ./dist/lib/sideBar/horizontalResizeComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/horizontalResizeComp.js\");\nvar sideBarButtonsComp_1 = __webpack_require__(/*! ./dist/lib/sideBar/sideBarButtonsComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/sideBarButtonsComp.js\");\nvar statusBarService_1 = __webpack_require__(/*! ./dist/lib/statusBar/statusBarService */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/statusBarService.js\");\nvar statusBar_1 = __webpack_require__(/*! ./dist/lib/statusBar/statusBar */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/statusBar.js\");\nvar nameValueComp_1 = __webpack_require__(/*! ./dist/lib/statusBar/providedPanels/nameValueComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/providedPanels/nameValueComp.js\");\nvar primaryColsHeaderPanel_1 = __webpack_require__(/*! ./dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsHeaderPanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsHeaderPanel.js\");\nvar primaryColsListPanel_1 = __webpack_require__(/*! ./dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsListPanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/primaryColsPanel/primaryColsListPanel.js\");\nvar gridHeaderDropZones_1 = __webpack_require__(/*! ./dist/lib/sideBar/providedPanels/columns/gridHeaderDropZones */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/gridHeaderDropZones.js\");\nvar watermark_1 = __webpack_require__(/*! ./dist/lib/license/watermark */ \"../../node_modules/ag-grid-enterprise/dist/lib/license/watermark.js\");\nvar fillHandle_1 = __webpack_require__(/*! ./dist/lib/widgets/selection/fillHandle */ \"../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/fillHandle.js\");\nvar rangeHandle_1 = __webpack_require__(/*! ./dist/lib/widgets/selection/rangeHandle */ \"../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/rangeHandle.js\");\nvar aggregationStage_2 = __webpack_require__(/*! ./dist/lib/rowStages/aggregationStage */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowStages/aggregationStage.js\");\nexports.AggregationStage = aggregationStage_2.AggregationStage;\nvar groupStage_2 = __webpack_require__(/*! ./dist/lib/rowStages/groupStage */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowStages/groupStage.js\");\nexports.GroupStage = groupStage_2.GroupStage;\nvar setFilter_1 = __webpack_require__(/*! ./dist/lib/setFilter/setFilter */ \"../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFilter.js\");\nexports.SetFilter = setFilter_1.SetFilter;\nvar setValueModel_1 = __webpack_require__(/*! ./dist/lib/setFilter/setValueModel */ \"../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setValueModel.js\");\nexports.SetValueModel = setValueModel_1.SetValueModel;\nvar statusBar_2 = __webpack_require__(/*! ./dist/lib/statusBar/statusBar */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/statusBar.js\");\nexports.StatusBar = statusBar_2.StatusBar;\nvar statusBarService_2 = __webpack_require__(/*! ./dist/lib/statusBar/statusBarService */ \"../../node_modules/ag-grid-enterprise/dist/lib/statusBar/statusBarService.js\");\nexports.StatusBarService = statusBarService_2.StatusBarService;\nvar clipboardService_2 = __webpack_require__(/*! ./dist/lib/clipboardService */ \"../../node_modules/ag-grid-enterprise/dist/lib/clipboardService.js\");\nexports.ClipboardService = clipboardService_2.ClipboardService;\nvar enterpriseBoot_2 = __webpack_require__(/*! ./dist/lib/enterpriseBoot */ \"../../node_modules/ag-grid-enterprise/dist/lib/enterpriseBoot.js\");\nexports.EnterpriseBoot = enterpriseBoot_2.EnterpriseBoot;\nvar enterpriseMenu_2 = __webpack_require__(/*! ./dist/lib/menu/enterpriseMenu */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/enterpriseMenu.js\");\nexports.EnterpriseMenu = enterpriseMenu_2.EnterpriseMenu;\nvar menuItemComponent_1 = __webpack_require__(/*! ./dist/lib/menu/menuItemComponent */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/menuItemComponent.js\");\nexports.MenuItemComponent = menuItemComponent_1.MenuItemComponent;\nvar menuList_1 = __webpack_require__(/*! ./dist/lib/menu/menuList */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/menuList.js\");\nexports.MenuList = menuList_1.MenuList;\nvar rangeController_2 = __webpack_require__(/*! ./dist/lib/rangeController */ \"../../node_modules/ag-grid-enterprise/dist/lib/rangeController.js\");\nexports.RangeController = rangeController_2.RangeController;\nvar rowGroupDropZonePanel_1 = __webpack_require__(/*! ./dist/lib/sideBar/providedPanels/columns/panels/rowGroupDropZonePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/rowGroupDropZonePanel.js\");\nexports.RowGroupDropZonePanel = rowGroupDropZonePanel_1.RowGroupDropZonePanel;\nvar contextMenu_2 = __webpack_require__(/*! ./dist/lib/menu/contextMenu */ \"../../node_modules/ag-grid-enterprise/dist/lib/menu/contextMenu.js\");\nexports.ContextMenuFactory = contextMenu_2.ContextMenuFactory;\nvar viewportRowModel_2 = __webpack_require__(/*! ./dist/lib/rowModels/viewport/viewportRowModel */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowModels/viewport/viewportRowModel.js\");\nexports.ViewportRowModel = viewportRowModel_2.ViewportRowModel;\nvar richSelectCellEditor_1 = __webpack_require__(/*! ./dist/lib/rendering/richSelect/richSelectCellEditor */ \"../../node_modules/ag-grid-enterprise/dist/lib/rendering/richSelect/richSelectCellEditor.js\");\nexports.RichSelectCellEditor = richSelectCellEditor_1.RichSelectCellEditor;\nvar richSelectRow_1 = __webpack_require__(/*! ./dist/lib/rendering/richSelect/richSelectRow */ \"../../node_modules/ag-grid-enterprise/dist/lib/rendering/richSelect/richSelectRow.js\");\nexports.RichSelectRow = richSelectRow_1.RichSelectRow;\nvar virtualList_1 = __webpack_require__(/*! ./dist/lib/rendering/virtualList */ \"../../node_modules/ag-grid-enterprise/dist/lib/rendering/virtualList.js\");\nexports.VirtualList = virtualList_1.VirtualList;\nvar baseDropZonePanel_1 = __webpack_require__(/*! ./dist/lib/sideBar/providedPanels/columns/dropZone/baseDropZonePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/dropZone/baseDropZonePanel.js\");\nexports.BaseDropZonePanel = baseDropZonePanel_1.BaseDropZonePanel;\nvar pivotDropZonePanel_1 = __webpack_require__(/*! ./dist/lib/sideBar/providedPanels/columns/panels/pivotDropZonePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/pivotDropZonePanel.js\");\nexports.PivotDropZonePanel = pivotDropZonePanel_1.PivotDropZonePanel;\nvar sideBarComp_2 = __webpack_require__(/*! ./dist/lib/sideBar/sideBarComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/sideBarComp.js\");\nexports.SideBarComp = sideBarComp_2.SideBarComp;\nvar licenseManager_2 = __webpack_require__(/*! ./dist/lib/licenseManager */ \"../../node_modules/ag-grid-enterprise/dist/lib/licenseManager.js\");\nexports.LicenseManager = licenseManager_2.LicenseManager;\nvar pivotStage_2 = __webpack_require__(/*! ./dist/lib/rowStages/pivotStage */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowStages/pivotStage.js\");\nexports.PivotStage = pivotStage_2.PivotStage;\nvar pivotColDefService_2 = __webpack_require__(/*! ./dist/lib/rowStages/pivotColDefService */ \"../../node_modules/ag-grid-enterprise/dist/lib/rowStages/pivotColDefService.js\");\nexports.PivotColDefService = pivotColDefService_2.PivotColDefService;\nvar pivotModePanel_1 = __webpack_require__(/*! ./dist/lib/sideBar/providedPanels/columns/panels/pivotModePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/pivotModePanel.js\");\nexports.PivotModePanel = pivotModePanel_1.PivotModePanel;\nvar aggFuncService_2 = __webpack_require__(/*! ./dist/lib/aggregation/aggFuncService */ \"../../node_modules/ag-grid-enterprise/dist/lib/aggregation/aggFuncService.js\");\nexports.AggFuncService = aggFuncService_2.AggFuncService;\nvar md5_2 = __webpack_require__(/*! ./dist/lib/license/md5 */ \"../../node_modules/ag-grid-enterprise/dist/lib/license/md5.js\");\nexports.MD5 = md5_2.MD5;\nvar setFilterListItem_1 = __webpack_require__(/*! ./dist/lib/setFilter/setFilterListItem */ \"../../node_modules/ag-grid-enterprise/dist/lib/setFilter/setFilterListItem.js\");\nexports.SetFilterListItem = setFilterListItem_1.SetFilterListItem;\nvar dropZoneColumnComp_1 = __webpack_require__(/*! ./dist/lib/sideBar/providedPanels/columns/dropZone/dropZoneColumnComp */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/dropZone/dropZoneColumnComp.js\");\nexports.DropZoneColumnComp = dropZoneColumnComp_1.DropZoneColumnComp;\nvar valueDropZonePanel_1 = __webpack_require__(/*! ./dist/lib/sideBar/providedPanels/columns/panels/valueDropZonePanel */ \"../../node_modules/ag-grid-enterprise/dist/lib/sideBar/providedPanels/columns/panels/valueDropZonePanel.js\");\nexports.ValuesDropZonePanel = valueDropZonePanel_1.ValuesDropZonePanel;\nvar excelCreator_2 = __webpack_require__(/*! ./dist/lib/exporter/excelCreator */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelCreator.js\");\nexports.ExcelCreator = excelCreator_2.ExcelCreator;\nvar excelXmlFactory_2 = __webpack_require__(/*! ./dist/lib/exporter/excelXmlFactory */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXmlFactory.js\");\nexports.ExcelXmlFactory = excelXmlFactory_2.ExcelXmlFactory;\nvar excelXlsxFactory_2 = __webpack_require__(/*! ./dist/lib/exporter/excelXlsxFactory */ \"../../node_modules/ag-grid-enterprise/dist/lib/exporter/excelXlsxFactory.js\");\nexports.ExcelXlsxFactory = excelXlsxFactory_2.ExcelXlsxFactory;\nvar watermark_2 = __webpack_require__(/*! ./dist/lib/license/watermark */ \"../../node_modules/ag-grid-enterprise/dist/lib/license/watermark.js\");\nexports.WatermarkComp = watermark_2.WatermarkComp;\nvar fillHandle_2 = __webpack_require__(/*! ./dist/lib/widgets/selection/fillHandle */ \"../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/fillHandle.js\");\nexports.FillHandle = fillHandle_2.FillHandle;\nvar rangeHandle_2 = __webpack_require__(/*! ./dist/lib/widgets/selection/rangeHandle */ \"../../node_modules/ag-grid-enterprise/dist/lib/widgets/selection/rangeHandle.js\");\nexports.RangeHandle = rangeHandle_2.RangeHandle;\nvar rowModelTypes = { viewport: viewportRowModel_1.ViewportRowModel, serverSide: serverSideRowModel_1.ServerSideRowModel };\nag_grid_community_1.Grid.setEnterpriseBeans([enterpriseMenu_1.EnterpriseMenuFactory, excelCreator_1.ExcelCreator, excelXmlFactory_1.ExcelXmlFactory, excelXlsxFactory_1.ExcelXlsxFactory,\n    rangeController_1.RangeController, clipboardService_1.ClipboardService, pivotStage_1.PivotStage, pivotColDefService_1.PivotColDefService,\n    contextMenu_1.ContextMenuFactory, groupStage_1.GroupStage, aggregationStage_1.AggregationStage, enterpriseBoot_1.EnterpriseBoot, aggFuncService_1.AggFuncService, licenseManager_1.LicenseManager, md5_1.MD5,\n    menuItemMapper_1.MenuItemMapper, statusBarService_1.StatusBarService], rowModelTypes);\nag_grid_community_1.Grid.setEnterpriseComponents([\n    { componentName: 'AgPrimaryColsHeader', theClass: primaryColsHeaderPanel_1.PrimaryColsHeaderPanel },\n    { componentName: 'AgPrimaryColsList', theClass: primaryColsListPanel_1.PrimaryColsListPanel },\n    { componentName: 'AgHorizontalResize', theClass: horizontalResizeComp_1.HorizontalResizeComp },\n    { componentName: 'AgSideBar', theClass: sideBarComp_1.SideBarComp },\n    { componentName: 'AgStatusBar', theClass: statusBar_1.StatusBar },\n    { componentName: 'AgNameValue', theClass: nameValueComp_1.NameValueComp },\n    { componentName: 'AgGridHeaderDropZones', theClass: gridHeaderDropZones_1.GridHeaderDropZones },\n    { componentName: 'AgSideBarButtons', theClass: sideBarButtonsComp_1.SideBarButtonsComp },\n    { componentName: 'AgWatermark', theClass: watermark_1.WatermarkComp },\n    { componentName: 'AgFillHandle', theClass: fillHandle_1.FillHandle },\n    { componentName: 'AgRangeHandle', theClass: rangeHandle_1.RangeHandle }\n]);\n\n\n//# sourceURL=webpack://bos-platform/../../node_modules/ag-grid-enterprise/main.js?");

/***/ })

}]);