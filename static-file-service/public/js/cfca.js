"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackJsonp_bos-platform"] = self["webpackJsonp_bos-platform"] || []).push([[2061],{

/***/ "./src/plugin/cert/CFCA/plugin.js":
/*!****************************************!*\
  !*** ./src/plugin/cert/CFCA/plugin.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = main;\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.index-of.js */ \"../../node_modules/core-js/modules/es.array.index-of.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.object.assign.js */ \"../../node_modules/core-js/modules/es.object.assign.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/es.string.match.js */ \"../../node_modules/core-js/modules/es.string.match.js\");\n__webpack_require__(/*! core-js/modules/es.string.replace.js */ \"../../node_modules/core-js/modules/es.string.replace.js\");\n__webpack_require__(/*! core-js/modules/es.string.trim.js */ \"../../node_modules/core-js/modules/es.string.trim.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _global = _interopRequireWildcard(__webpack_require__(/*! @/global */ \"./src/global/index.js\"));\nvar _certConst = __webpack_require__(/*! @/constant/certConst */ \"./src/constant/certConst.js\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction throwError(errorDesc) {\n  throw new Error(errorDesc);\n}\nfunction loadCFCAPlugin() {\n  try {\n    var containter = document.createElement('div');\n    containter.style.height = '0px';\n    containter.style.width = '0px';\n    var pluginObject = null;\n    if (navigator.appName.indexOf('Internet') >= 0 || navigator.appVersion.indexOf('Trident') >= 0) {\n      pluginObject = document.createElement('object');\n      if (window.navigator.cpuClass === 'x86') {\n        pluginObject.setAttribute('codebase', 'CryptoKit.Kingdee.x86.cab');\n        pluginObject.setAttribute('classid', 'clsid:061A390F-23BF-401C-BBD3-E4D4B83A7037');\n        // eDiv.innerHTML = \"<object id=\\\"CryptoAgent\\\" codebase=\\\"CryptoKit.Ultimate.x86.cab\\\" classid=\\\"clsid:4C588282-7792-4E16-93CB-9744402E4E98\\\" ></object>\";\n      } else {\n        pluginObject.setAttribute('codebase', 'CryptoKit.Kingdee.x64.cab');\n        pluginObject.setAttribute('classid', 'clsid:5538CB4A-4BB6-4525-89A2-FC59BD4F7990');\n        // eDiv.innerHTML = \"<object id=\\\"CryptoAgent\\\" codebase=\\\"CryptoKit.Ultimate.x64.cab\\\" classid=\\\"clsid:B2F2D4D4-D808-43B3-B355-B671C0DE15D4\\\" ></object>\";\n      }\n      containter.appendChild(pluginObject);\n    } else {\n      pluginObject = document.createElement('embed');\n      pluginObject.setAttribute('type', 'application/npCryptoKit.Kingdee.x86');\n      pluginObject.style.height = '0px';\n      pluginObject.style.width = '0px';\n      containter.appendChild(pluginObject);\n      // eDiv.innerHTML = \"<embed id=\\\"CryptoAgent\\\" type=\\\"application/npCryptoKit.Ultimate.x86\\\" style=\\\"height: 0px; width: 0px\\\">\"\n    }\n    document.body.appendChild(containter);\n    return pluginObject;\n  } catch (error) {\n    console.log('CFCA ActiveX 加载失败！');\n    console.log(error);\n    return null;\n  }\n}\nfunction getCertDetail(CryptoAgent) {\n  var getCertName = function getCertName(certName) {\n    var t = certName.match(/(S(?!N)|L|O(?!U)|OU|SN|CN|E)=([^=]+)(?=, |$)/g);\n    for (var i = 0; i < t.length; i++) {\n      if (t[i].indexOf('CN=') === 0) {\n        return t[i].substr(3, t[i].length);\n      }\n    }\n    return 'defaultName';\n  };\n  var subjectDN = CryptoAgent.GetSignCertInfo('SubjectDN');\n  var certTimeFrom = CryptoAgent.GetSignCertInfo('CertTimeFrom');\n  var certTimeOut = CryptoAgent.GetSignCertInfo('CertTimeOut');\n  var certDetail = {\n    serialNumber: CryptoAgent.GetSignCertInfo('SerialNumber'),\n    issuer: CryptoAgent.GetSignCertInfo('IssuerDN'),\n    publicKey: CryptoAgent.GetSignCertInfo('CertContent'),\n    begin: new Date(certTimeFrom.replace(' ', 'T')),\n    end: new Date(certTimeOut.replace(' ', 'T')),\n    certName: getCertName(subjectDN)\n    // SubjectDN | SubjectCN | IssuerDN | SerialNumber\n    // CSPName | CertType | CertTimeFrom | CertTimeOut\n    // OU[2] | CertContent\n  };\n  return certDetail;\n}\nfunction getConfig(configString, name) {\n  var params = configString.split('\\n');\n  var configParam = '';\n  params.forEach(function (param) {\n    if (param.includes(name)) {\n      configParam = param.trim().replace(\"\".concat(name, \"=\"), '').replace('\\r', '');\n    }\n  });\n  return configParam;\n}\nfunction main(caConfig) {\n  var CryptoAgent = loadCFCAPlugin();\n  var config = {\n    certType: getConfig(caConfig, 'signAlg'),\n    subjectDNFilter: getConfig(caConfig, 'subjectDNFilter'),\n    issuerDNFilter: getConfig(caConfig, 'issuerDNFilter'),\n    serialNumFilter: getConfig(caConfig, 'serialNumFilter'),\n    cspList: getConfig(caConfig, 'cspList'),\n    hashType: getConfig(caConfig, 'hashType')\n  };\n  var signCertText = function signCertText(signText, signType, hashType, attachOriginal, certType) {\n    try {\n      if (signType === 'PKCS#1') {\n        return CryptoAgent.SignMsgPKCS1(signText, hashType);\n      }\n      if (signType === 'PKCS#7') {\n        return CryptoAgent.SignMsgPKCS7(signText, hashType, attachOriginal);\n      }\n    } catch (error) {\n      throwError(CryptoAgent.GetLastErrorDesc());\n    }\n  };\n  var selectCert = function selectCert(params) {\n    var _params$subjectDNFilt = params.subjectDNFilter,\n      subjectDNFilter = _params$subjectDNFilt === void 0 ? '' : _params$subjectDNFilt,\n      _params$issuerDNFilte = params.issuerDNFilter,\n      issuerDNFilter = _params$issuerDNFilte === void 0 ? '' : _params$issuerDNFilte,\n      _params$serialNumFilt = params.serialNumFilter,\n      serialNumFilter = _params$serialNumFilt === void 0 ? '' : _params$serialNumFilt,\n      _params$cspList = params.cspList,\n      cspList = _params$cspList === void 0 ? '' : _params$cspList;\n    try {\n      // 选取对应标识的证书\n      var isSuccess = CryptoAgent.SelectCertificate(subjectDNFilter, issuerDNFilter, serialNumFilter, cspList);\n      // Opera浏览器，NPAPI函数执行结果为false时，不能触发异常，需要自己判断返回值。\n      if (!isSuccess) {\n        throwError(CryptoAgent.GetLastErrorDesc());\n      }\n      return isSuccess;\n    } catch (error) {\n      // 0x00000000\n      throwError(CryptoAgent.GetLastErrorDesc());\n    }\n  };\n  var vaildatePluginVersion = function vaildatePluginVersion() {\n    try {\n      var hResult = false;\n      hResult = CryptoAgent.GetVersion();\n      console.log(\"CFCA\\u63D2\\u4EF6\\u7248\\u672C\\u53F7\\uFF1A\".concat(hResult));\n    } catch (e) {\n      console.log('控件未安装！');\n      throwError(_certConst.CERT_STATUS_NOPLGUIN);\n    }\n  };\n  var plugin = {\n    importCert: function importCert(params, callback) {\n      /*\n        CFCA证书无需调用我们的选择证书界面\n        如果只有找到一个证书，则默认选择\n        如果多个证书，则调用浏览器窗口选择\n      */\n      try {\n        vaildatePluginVersion();\n        var result = selectCert(config);\n        if (result) {\n          var certDetail = getCertDetail(CryptoAgent);\n          var data = {\n            success: true,\n            data: certDetail\n          };\n          callback(data);\n        }\n      } catch (error) {\n        var callBackData = {\n          success: false\n        };\n        // 未安装插件\n        if (error.message === _certConst.CERT_STATUS_NOPLGUIN) {\n          callBackData.status = _certConst.CERT_STATUS_NOPLGUIN;\n          callBackData.pluginPath = _certConst.CERT_FILE_URI_CFCA;\n        }\n        // 证书库中没有可用的证书\n        if (error.message.indexOf('0xa0071001') > 0) {\n          callBackData.status = _certConst.CERT_STATUS_NOCERT;\n        }\n        callback(callBackData);\n      }\n    },\n    signCert: function signCert(params, callback) {\n      try {\n        params = Object.assign({}, params, config);\n        var _params = params,\n          serialNumber = _params.serialNumber,\n          signText = _params.signText,\n          _params$signType = _params.signType,\n          signType = _params$signType === void 0 ? 'PKCS#1' : _params$signType,\n          _params$hashType = _params.hashType,\n          hashType = _params$hashType === void 0 ? 'SHA-1' : _params$hashType,\n          _params$attachOrigina = _params.attachOriginal,\n          attachOriginal = _params$attachOrigina === void 0 ? false : _params$attachOrigina;\n        if (!['PKCS#1', 'PKCS#7'].includes(signType)) {\n          console.log('CACF 不支持的签名类型！');\n          return;\n        }\n        // 调用版本号 无版本号则插件未加载或者未安装\n        vaildatePluginVersion();\n        // 选取对应标识的证书\n        var successStatus = selectCert({\n          serialNumFilter: serialNumber,\n          cspList: config.cspList\n        });\n        if (!successStatus) return;\n        // 循环签名多个字段\n        var encryptText = {};\n        Object.keys(signText).forEach(function (key) {\n          encryptText[key] = signCertText(signText[key], signType, hashType, attachOriginal);\n        });\n        var cspName = CryptoAgent.GetSignCertInfo('CSPName');\n        if (cspName === 'Utap CSP v6.0 (Kingdee)') {\n          CryptoAgent.DeleteKeyPin();\n        }\n        var data = {\n          success: true,\n          data: encryptText\n        };\n        callback(data);\n      } catch (error) {\n        var callBackData = {\n          success: false\n        };\n        // 未安装插件\n        if (error.message === _certConst.CERT_STATUS_NOPLGUIN) {\n          callBackData.status = _certConst.CERT_STATUS_NOPLGUIN;\n          callBackData.pluginPath = _certConst.CERT_FILE_URI_CFCA;\n        }\n        if (error.message.indexOf('0xa0071001') > 0) {\n          // 证书库中没有可用的证书\n          callBackData.status = _certConst.CERT_STATUS_NOCERT;\n        } else if (error.message.indexOf('0xA0071002') > 0) {\n          // 用户取消选择证书\n          callBackData.status = _certConst.CERT_STATUS_NOCERT;\n        } else if (error.message.indexOf('0xA0071107') > 0) {\n          callBackData.status = _certConst.CERT_STATUS_FAIL; // 签名失败\n        } else {\n          callBackData.status = _certConst.CERT_STATUS_FAIL; // 签名失败\n        }\n        callback(callBackData);\n      }\n    }\n  };\n  if (!_global[\"default\"][_global.KD_PLUGIN]) {\n    _global[\"default\"][_global.KD_PLUGIN] = {};\n  }\n  _global[\"default\"][_global.KD_PLUGIN] = Object.assign({}, _global[\"default\"][_global.KD_PLUGIN], plugin);\n}\n\n/*\n  0xA0071001 There is no available certificate in store. 证书库中没有可用的证书\n  0xA0071002 User canceled operation. 用户取消选择证书\n  0xA0071003 Query type is not supported. 查询类型不支持\n  0xA0071004 Base64 encoding failed. Base64加密失败\n  0xA0071005 Base64 decoding failed. Base64解密失败\n  0xA0071006 Malicious target path or file name. 恶意的目标路径或文件名\n  0xA0071007 Empty file 文件为空\n  0xA0071008 The number of signer in pkcs#7 signature is too many PKCS#7签名中签名者个数过多\n  0xA0071020 Specified certificate doesn't contain key usage attribute. 指定证书不含有密钥用途属性\n  0xA0071021 Specified certificate doesn't contain subject key ID attribute. 指定证书不含有使用者密钥标识符属性\n  0xA0071022 Get specified extension failed. 获取指定的证书拓展域信息失败\n  0xA0071031 Certificate in certificate chain is time invalid 证书链中某个证书时间无效\n  0xA0071032 Certificate is in offline CRL 证书在离线的CRL列表中\n  0xA0071033 Certificate chain is not integrated 证书链不完整\n  0xA0071034 Signature of certificate in certificate chain is invalid 证书链中某个证书签名无效\n  0xA0071035 Special cert isn't exsit 指定证书不存在\n  0xA0071041 ASN1 decode failed. ASN.1解码失败\n  0xA0071042 PKCS7 singature decode failed. PKCS7 签名解析失败\n  0xA0071101 Data length exceeds limited. 数据长度超出最大限制\n  0xA0071102 Deep recursive count exceeds max value. 递归深度超过最大限制\n  0xA0071103 Decode SM2 cert failed. SM2证书解析错误\n  0xA0071104 Format of P7 singature is error. 无效的P7签名格式\n  0xA0071105 Format of envelope is error. 无效的CMS数字信封格式\n  0xA0071106 SM2 pfx for decrpting envelope is not exsits. 未找到匹配的SM2解密证书\n  0xA0071107 Singature failed. 签名失败\n  0xA0071108 Decrypt SM2 file certificate failed. 解密SM2文件证书失败\n  0xA0072001 Certificate is not ready. 证书没有准备好\n  0xA0072002 Language is not supported. 语言不支持\n  0xA0072003 Certificate is not unique for specified subject DN. 指定主题DN的证书不唯一\n  0xA0072004 Specified certificate is not found. 没有找到指定证书\n  0xA0072020 Invalid hash algorithm. 无效的散列算法\n  0xA0072021 Invalid certificate usage. 无效的证书用法\n  0xA0072022 Invalid sign type. 无效的签名类型\n  0xA0072023 Invalid envelope type. 无效的数字信封类型\n  0xA0072024 Data exceeds limited 数据大小超出限制\n  0xA0072025 Data isn't ready 数据没有准备好\n  0xA0072026 The file size exceeds the limit allowed. 文件大小超出限制\n  0xA0072401 Invalid key algorithm. 无效的密钥算法\n*/\n\n//# sourceURL=webpack://bos-platform/./src/plugin/cert/CFCA/plugin.js?");

/***/ }),

/***/ "./src/plugin/cert/CFCAKit/plugin.js":
/*!*******************************************!*\
  !*** ./src/plugin/cert/CFCAKit/plugin.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = main;\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.index-of.js */ \"../../node_modules/core-js/modules/es.array.index-of.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.assign.js */ \"../../node_modules/core-js/modules/es.object.assign.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.parse-int.js */ \"../../node_modules/core-js/modules/es.parse-int.js\");\n__webpack_require__(/*! core-js/modules/es.promise.js */ \"../../node_modules/core-js/modules/es.promise.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.string.match.js */ \"../../node_modules/core-js/modules/es.string.match.js\");\n__webpack_require__(/*! core-js/modules/es.string.replace.js */ \"../../node_modules/core-js/modules/es.string.replace.js\");\n__webpack_require__(/*! core-js/modules/es.string.trim.js */ \"../../node_modules/core-js/modules/es.string.trim.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nvar _global = _interopRequireWildcard(__webpack_require__(/*! @/global */ \"./src/global/index.js\"));\nvar _certConst = __webpack_require__(/*! @/constant/certConst */ \"./src/constant/certConst.js\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction main(caConfig) {\n  var cryptoKit = null;\n  var isExitExtenSion = true;\n  try {\n    var browser = BrowserInfo();\n    if (browser.name === 'Chrome' && parseInt(browser.version) > 41 || browser.name === 'Firefox' && parseInt(browser.version) > 52) {\n      cryptoKit = new NMCryptokit(browser.name);\n      cryptoKit.init().then(function () {\n        // EnableButton(true)\n        console.log('CFCA证书插件加载成功！');\n      })[\"catch\"](function (response) {\n        console.log(response.result);\n        if (response.result != 'Attempting to use a disconnected port object') {\n          installExtension();\n        }\n        if (response.result === 'Extension does not exist!') {\n          isExitExtenSion = false;\n        }\n      });\n    } else {\n      console.log('当前浏览器不支持CFCA证书插件!');\n      return;\n    }\n  } catch (e) {\n    console.log(e);\n    return;\n  }\n  var config = {\n    certTyppe: getConfig(caConfig, 'signAlg'),\n    subjectDNFilter: getConfig(caConfig, 'subjectDNFilter'),\n    issuerDNFilter: getConfig(caConfig, 'issuerDNFilter'),\n    serialNumFilter: getConfig(caConfig, 'serialNumFilter'),\n    cspList: getConfig(caConfig, 'cspList'),\n    hashType: getConfig(caConfig, 'hashType')\n  };\n  var plugin = {\n    importCert: function importCert(params, callBack) {\n      /*\n        CFCA证书无需调用我们的选择证书界面\n        如果只有找到一个证书，则默认选择\n        如果多个证书，则调用浏览器窗口选择\n      */\n      // 获取版本号确实是否安装插件\n      if (!isExitExtenSion) {\n        callBack({\n          success: false,\n          status: _certConst.CERT_STATUS_NOPLGUIN,\n          pluginPath: _certConst.CERT_FILE_URI_CFCA\n        });\n        return;\n      }\n      cryptoKit.getVersion().then(function (response) {\n        response.result && console.log(response.result);\n        cryptoKit.selectCertificate(config.subjectDNFilter,\n        // config.issuerDNFilter,\n        'cfca', config.serialNumFilter, config.cspList).then(function (response) {\n          // document.getElementById(\"SelectCertResult\").value = response.result;\n          getCertDetail(cryptoKit).then(function (data) {\n            callBack({\n              success: true,\n              data: data\n            });\n          });\n        })[\"catch\"](function (response) {\n          // ShowErrorInfo(response);\n          if (response === null) {\n            console.log('Extension has been remove!');\n          } else if (response.errorcode === 1) {\n            // connection error\n            console.log(response.result);\n          } else {\n            // host error\n            cryptoKit.getLastErrorDesc().then(function (response) {\n              console.log(response.result);\n            });\n          }\n          // 证书库中没有可用的证书\n          callBack({\n            success: false,\n            status: _certConst.CERT_STATUS_NOCERT\n          });\n        });\n      })[\"catch\"](function (response) {\n        // alert(\"控件未安装\")\n        callBack({\n          success: false,\n          status: _certConst.CERT_STATUS_NOPLGUIN,\n          pluginPath: _certConst.CERT_FILE_URI_CFCA\n        });\n      });\n    },\n    signCert: function signCert(params, callBack) {\n      params = Object.assign({}, params, config);\n      var _params = params,\n        serialNumber = _params.serialNumber,\n        signText = _params.signText,\n        _params$signType = _params.signType,\n        signType = _params$signType === void 0 ? 'PKCS#1' : _params$signType,\n        _params$hashType = _params.hashType,\n        hashType = _params$hashType === void 0 ? 'SHA-1' : _params$hashType,\n        _params$attachOrigina = _params.attachOriginal,\n        attachOriginal = _params$attachOrigina === void 0 ? false : _params$attachOrigina;\n      if (!['PKCS#1', 'PKCS#7'].includes(signType)) {\n        console.log('CACF 不支持的签名类型！');\n        return;\n      }\n      // 调用版本号 无版本号则插件未加载或者未安装\n      cryptoKit.getVersion().then(function (response) {\n        response.result && console.log(response.result);\n        cryptoKit.selectCertificate('', '', serialNumber, config.cspList).then(function (response) {\n          // document.getElementById(\"SelectCertResult\").value = response.result;\n          var promises = Object.keys(signText).map(function (key) {\n            return signTextByCrypto(cryptoKit, signText[key], signType, hashType, attachOriginal);\n          });\n          Promise.all(promises).then(function (values) {\n            var encryptText = {};\n            Object.keys(signText).forEach(function (key, index) {\n              encryptText[key] = values[index].result;\n            });\n            cryptoKit.getSignCertInfo('CSPName').then(function (response) {\n              if (response.result === 'Utap CSP v6.0 (Kingdee)') {\n                cryptoKit.deleteKeyPin().then(function (response) {\n                  response.result && console.log('成功');\n                  callBack({\n                    success: true,\n                    data: encryptText\n                  });\n                })[\"catch\"](function (response) {\n                  // ShowErrorInfo(response);\n                });\n              } else {\n                callBack({\n                  success: true,\n                  data: encryptText\n                });\n              }\n            })[\"catch\"](function (response) {\n              // ShowErrorInfo(response)\n            });\n          })[\"catch\"](function (response) {\n            console.error(response);\n            callBack({\n              success: false,\n              status: _certConst.CERT_STATUS_FAIL\n            });\n          });\n        })[\"catch\"](function (response) {\n          // ShowErrorInfo(response);\n          if (response === null) {\n            console.log('Extension has been remove!');\n          } else if (response.errorcode === 1) {\n            // connection error\n            console.log(response.result);\n          } else {\n            // host error\n            cryptoKit.getLastErrorDesc().then(function (response) {\n              console.log(response.result);\n            });\n          }\n          // 证书库中没有可用的证书\n          callBack({\n            success: false,\n            status: _certConst.CERT_STATUS_NOCERT\n          });\n        });\n      })[\"catch\"](function (response) {\n        // alert(\"控件未安装\")\n        callBack({\n          success: false,\n          status: _certConst.CERT_STATUS_NOPLGUIN,\n          pluginPath: _certConst.CERT_FILE_URI_CFCA\n        });\n      });\n    }\n  };\n  if (!_global[\"default\"][_global.KD_PLUGIN]) {\n    _global[\"default\"][_global.KD_PLUGIN] = {};\n  }\n  _global[\"default\"][_global.KD_PLUGIN] = Object.assign({}, _global[\"default\"][_global.KD_PLUGIN], plugin);\n}\nvar chromeExtension = 'kioolcmlfpfennenppbpmihgaebhjmpp';\nvar productID = 'com.cfca.cryptokit.kingdee';\nvar extensionName = productID + '.extension';\nvar reqEventName = productID + '.request';\nvar respEventName = productID + '.response';\nvar Browser = {\n  IE: 'Internet Explorer',\n  Edge: 'Edge',\n  Chrome: 'Chrome',\n  Safari: 'Safari',\n  Firefox: 'Firefox'\n};\n\n// Encapsulate Edge&Firefox event to Promise\nfunction SendMessagebyEvent(request) {\n  var event = new window.CustomEvent(reqEventName, {\n    detail: request\n  });\n  document.dispatchEvent(event);\n  return new Promise(function (resolve, reject) {\n    var responseEventName = respEventName;\n    if (request.funcInfo !== undefined && request.funcInfo.randomId !== undefined) {\n      responseEventName += '.' + request.funcInfo.randomId;\n    }\n    document.addEventListener(responseEventName, function CallBack(e) {\n      document.removeEventListener(e.type, CallBack);\n      var eJson = JSON.parse(e.detail);\n      if (eJson !== null && eJson.errorcode === 0) {\n        resolve(eJson);\n      } else {\n        reject(eJson);\n      }\n    }, false);\n  });\n}\nfunction SendMessage(browser, requestJSON) {\n  return SendMessagebyEvent(requestJSON);\n}\nfunction checkExtension(browser) {\n  return new Promise(function (resolve, reject) {\n    var result = new window.Object();\n    if (Browser.Edge === browser || Browser.Firefox === browser || Browser.Chrome === browser) {\n      if (document.getElementById(extensionName)) {\n        resolve(browser);\n      } else {\n        result.errorcode = 1;\n        result.result = 'Extension does not exist!';\n        reject(result);\n      }\n    } else {\n      result.errorcode = 1;\n      result.result = 'Only support Chrome/Edge/Firefox';\n      reject(result);\n    }\n  });\n}\nfunction NMCryptokit(browser) {\n  this.browser = browser;\n}\nfunction GenerateRandomId() {\n  var charstring = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890';\n  var maxPos = charstring.length;\n  var randomId = '';\n  for (var i = 0; i < 10; i++) {\n    randomId += charstring.charAt(Math.floor(Math.random() * maxPos));\n  }\n  return randomId;\n}\nNMCryptokit.prototype.init = function () {\n  var browser = this.browser;\n  return checkExtension(browser).then(function (browser) {\n    var request = new window.Object();\n    request.action = 'connect';\n    request.host = productID;\n    return SendMessage(browser, request);\n  }).then(function () {\n    var request = new window.Object();\n    var funcInfo = new window.Object();\n    var paramArr = new window.Array();\n    var randomId = GenerateRandomId();\n    funcInfo[\"function\"] = 'checkHost';\n    funcInfo.params = paramArr;\n    funcInfo.randomId = randomId;\n    request.action = 'invoke';\n    request.funcInfo = funcInfo;\n    return SendMessage(browser, request);\n  });\n};\nNMCryptokit.prototype.uninit = function () {\n  var request = new window.Object();\n  request.action = 'disconnect';\n  request.host = productID;\n  return SendMessage(this.browser, request);\n};\nNMCryptokit.prototype.selectCertificate = function (strSubjectDNFilter, strIssuerDNFilter, strSerialNo, strCSPList) {\n  var request = new window.Object();\n  var funcInfo = new window.Object();\n  var paramArr = new window.Array();\n  var randomId = GenerateRandomId();\n  paramArr.push(strSubjectDNFilter);\n  paramArr.push(strIssuerDNFilter);\n  paramArr.push(strSerialNo);\n  paramArr.push(strCSPList);\n  funcInfo[\"function\"] = 'SelectCertificate';\n  funcInfo.params = paramArr;\n  funcInfo.randomId = randomId;\n  request.action = 'invoke';\n  request.funcInfo = funcInfo;\n  return SendMessage(this.browser, request);\n};\nNMCryptokit.prototype.getSignCertInfo = function (strInfoType) {\n  var request = new window.Object();\n  var funcInfo = new window.Object();\n  var paramArr = new window.Array();\n  var randomId = GenerateRandomId();\n  paramArr.push(strInfoType);\n  funcInfo[\"function\"] = 'getSignCertInfo';\n  funcInfo.params = paramArr;\n  funcInfo.randomId = randomId;\n  request.action = 'invoke';\n  request.funcInfo = funcInfo;\n  return SendMessage(this.browser, request);\n};\nNMCryptokit.prototype.signMsgPKCS1 = function (strSource, strSelectedAlg) {\n  var request = new window.Object();\n  var funcInfo = new window.Object();\n  var paramArr = new window.Array();\n  var randomId = GenerateRandomId();\n  paramArr.push(strSource);\n  paramArr.push(strSelectedAlg);\n  funcInfo[\"function\"] = 'SignMsgPKCS1';\n  funcInfo.params = paramArr;\n  funcInfo.randomId = randomId;\n  request.action = 'invoke';\n  request.funcInfo = funcInfo;\n  return SendMessage(this.browser, request);\n};\nNMCryptokit.prototype.signFilePKCS1 = function (strSource, strSelectedAlg) {\n  var request = new window.Object();\n  var funcInfo = new window.Object();\n  var paramArr = new window.Array();\n  var randomId = GenerateRandomId();\n  paramArr.push(strSource);\n  paramArr.push(strSelectedAlg);\n  funcInfo[\"function\"] = 'SignFilePKCS1';\n  funcInfo.params = paramArr;\n  funcInfo.randomId = randomId;\n  request.action = 'invoke';\n  request.funcInfo = funcInfo;\n  return SendMessage(this.browser, request);\n};\nNMCryptokit.prototype.getKeyID = function (strKeyType) {\n  var request = new window.Object();\n  var funcInfo = new window.Object();\n  var paramArr = new window.Array();\n  var randomId = GenerateRandomId();\n  paramArr.push(strKeyType);\n  funcInfo[\"function\"] = 'getKeyID';\n  funcInfo.params = paramArr;\n  funcInfo.randomId = randomId;\n  request.action = 'invoke';\n  request.funcInfo = funcInfo;\n  return SendMessage(this.browser, request);\n};\nNMCryptokit.prototype.deleteKeyPin = function () {\n  var request = new window.Object();\n  var funcInfo = new window.Object();\n  var paramArr = new window.Array();\n  var randomId = GenerateRandomId();\n  funcInfo[\"function\"] = 'DeleteKeyPin';\n  funcInfo.params = paramArr;\n  funcInfo.randomId = randomId;\n  request.action = 'invoke';\n  request.funcInfo = funcInfo;\n  return SendMessage(this.browser, request);\n};\nNMCryptokit.prototype.getVersion = function () {\n  var request = new window.Object();\n  var funcInfo = new window.Object();\n  var paramArr = new window.Array();\n  var randomId = GenerateRandomId();\n  funcInfo[\"function\"] = 'GetVersion';\n  funcInfo.params = paramArr;\n  funcInfo.randomId = randomId;\n  request.action = 'invoke';\n  request.funcInfo = funcInfo;\n  return SendMessage(this.browser, request);\n};\nNMCryptokit.prototype.getLastErrorDesc = function () {\n  var request = new window.Object();\n  var funcInfo = new window.Object();\n  var randomId = GenerateRandomId();\n  funcInfo[\"function\"] = 'GetLastErrorDesc';\n  funcInfo.params = null;\n  funcInfo.randomId = randomId;\n  request.action = 'invoke';\n  request.funcInfo = funcInfo;\n  return SendMessage(this.browser, request);\n};\nfunction installExtension() {\n  var browser = BrowserInfo();\n  if (browser.name === 'Firefox') {\n    var extensionURL = '';\n    var xpi = {\n      'CryptoKit for Firefox': extensionURL\n    };\n    window.InstallTrigger.install(xpi);\n  } else if (browser.name === 'Chrome') {\n    console.log('Please install extension for Chrome!');\n  } else {\n    console.log('Unsupported browser!');\n  }\n}\nfunction BrowserInfo() {\n  var res = {\n    name: '',\n    version: ''\n  };\n  var reg = '';\n  var userAgent = window.navigator.userAgent;\n  if (reg = /edge\\/([\\d\\.]+)/i.exec(userAgent)) {\n    res.name = 'Edge';\n    res.version = reg[1];\n  } else if (/msie/i.test(userAgent)) {\n    res.name = 'Internet Explorer';\n    res.version = /msie ([\\d\\.]+)/i.exec(userAgent)[1];\n  } else if (/Trident/i.test(userAgent)) {\n    res.name = 'Internet Explorer';\n    res.version = /rv:([\\d\\.]+)/i.exec(userAgent)[1];\n  } else if (/chrome/i.test(userAgent)) {\n    res.name = 'Chrome';\n    res.version = /chrome\\/([\\d\\.]+)/i.exec(userAgent)[1];\n  } else if (/safari/i.test(userAgent)) {\n    res.name = 'Safari';\n    res.version = /version\\/([\\d\\.]+)/i.exec(userAgent)[1];\n  } else if (/firefox/i.test(userAgent)) {\n    res.name = 'Firefox';\n    res.version = /firefox\\/([\\d\\.]+)/i.exec(userAgent)[1];\n  }\n  return res;\n}\nfunction getConfig(configString, name) {\n  var params = configString.split('\\n');\n  var configParam = '';\n  params.forEach(function (param) {\n    if (param.includes(name)) {\n      configParam = param.trim().replace(\"\".concat(name, \"=\"), '').replace('\\r', '');\n    }\n  });\n  return configParam;\n}\nfunction getCertDetail(cryptoKit) {\n  return new Promise(function (resolve, reject) {\n    Promise.all([cryptoKit.getSignCertInfo('SubjectDN'), cryptoKit.getSignCertInfo('CertTimeFrom'), cryptoKit.getSignCertInfo('CertTimeOut'), cryptoKit.getSignCertInfo('SerialNumber'), cryptoKit.getSignCertInfo('IssuerDN'), cryptoKit.getSignCertInfo('CertContent')]).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 6),\n        subjectDN = _ref2[0],\n        certTimeFrom = _ref2[1],\n        certTimeOut = _ref2[2],\n        serialNumber = _ref2[3],\n        issuer = _ref2[4],\n        publicKey = _ref2[5];\n      var getCertName = function getCertName(certName) {\n        var t = certName.match(/(S(?!N)|L|O(?!U)|OU|SN|CN|E)=([^=]+)(?=, |$)/g);\n        for (var i = 0; i < t.length; i++) {\n          if (t[i].indexOf('CN=') === 0) {\n            return t[i].substr(3, t[i].length);\n          }\n        }\n        return 'defaultName';\n      };\n      var certDetail = {\n        serialNumber: serialNumber.result,\n        issuer: issuer.result,\n        publicKey: publicKey.result,\n        begin: new Date(certTimeFrom.result.replace(' ', 'T')),\n        end: new Date(certTimeOut.result.replace(' ', 'T')),\n        certName: getCertName(subjectDN.result)\n        // SubjectDN | SubjectCN | IssuerDN | SerialNumber\n        // CSPName | CertType | CertTimeFrom | CertTimeOut\n        // OU[2] | CertContent\n      };\n      resolve(certDetail);\n    })[\"catch\"](function () {\n      // reject()\n    });\n  });\n}\nfunction signTextByCrypto(cryptoKit, signText, signType, hashType, attachOriginal, certType) {\n  if (signType === 'PKCS#1') {\n    return cryptoKit.signMsgPKCS1(signText, hashType);\n  }\n  if (signType === 'PKCS#7') {\n    return cryptoKit.signMsgPKCS7(signText, hashType, attachOriginal);\n  }\n}\n\n//# sourceURL=webpack://bos-platform/./src/plugin/cert/CFCAKit/plugin.js?");

/***/ })

}]);