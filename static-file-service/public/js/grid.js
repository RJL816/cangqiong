/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackJsonp_bos-platform"] = self["webpackJsonp_bos-platform"] || []).push([[816],{

/***/ "./src/component/web/DataGrid/AgDataGrid/AgGrid.js":
/*!*********************************************************!*\
  !*** ./src/component/web/DataGrid/AgDataGrid/AgGrid.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.function.bind.js */ \"../../node_modules/core-js/modules/es.function.bind.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.create.js */ \"../../node_modules/core-js/modules/es.object.create.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-prototype-of.js */ \"../../node_modules/core-js/modules/es.object.get-prototype-of.js\");\n__webpack_require__(/*! core-js/modules/es.object.set-prototype-of.js */ \"../../node_modules/core-js/modules/es.object.set-prototype-of.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.reflect.construct.js */ \"../../node_modules/core-js/modules/es.reflect.construct.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.object.assign.js */ \"../../node_modules/core-js/modules/es.object.assign.js\");\n__webpack_require__(/*! core-js/modules/es.parse-int.js */ \"../../node_modules/core-js/modules/es.parse-int.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\n__webpack_require__(/*! @/style/ag-grid.less */ \"./src/style/ag-grid.less\");\n__webpack_require__(/*! @/style/theme-material-kd.less */ \"./src/style/theme-material-kd.less\");\nvar _lodash = _interopRequireDefault(__webpack_require__(/*! lodash */ \"../../node_modules/lodash/lodash.js\"));\nvar _classnames2 = _interopRequireDefault(__webpack_require__(/*! classnames */ \"../../node_modules/classnames/index.js\"));\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nvar _customProperties = _interopRequireDefault(__webpack_require__(/*! @/constant/customProperties */ \"./src/constant/customProperties.js\"));\nvar gridActions = _interopRequireWildcard(__webpack_require__(/*! ../../../../action/gridaction */ \"./src/action/gridaction.js\"));\nvar btnActions = _interopRequireWildcard(__webpack_require__(/*! ../../../../action/buttonaction */ \"./src/action/buttonaction.js\"));\nvar tooltipactions = _interopRequireWildcard(__webpack_require__(/*! ../../../../action/tooltipaction */ \"./src/action/tooltipaction.js\"));\nvar fieldaction = _interopRequireWildcard(__webpack_require__(/*! ../../../../action/fieldaction */ \"./src/action/fieldaction.js\"));\nvar _customctrlaction = __webpack_require__(/*! @/action/customctrlaction */ \"./src/action/customctrlaction.js\");\nvar _action = __webpack_require__(/*! ../../../../action/action */ \"./src/action/action.js\");\nvar _AgGridCore = _interopRequireDefault(__webpack_require__(/*! ./AgGridCore */ \"./src/component/web/DataGrid/AgDataGrid/AgGridCore.js\"));\nvar _appModelFunction = __webpack_require__(/*! ../../../../model/appModelFunction */ \"./src/model/appModelFunction.js\");\nvar _componentutil = __webpack_require__(/*! ../../../../util/componentutil */ \"./src/util/componentutil.js\");\nvar _GridStyles = _interopRequireDefault(__webpack_require__(/*! ./GridStyles.less */ \"./src/component/web/DataGrid/AgDataGrid/GridStyles.less\"));\nvar _VisibleLockWrap = _interopRequireDefault(__webpack_require__(/*! ../../../common/VisibleLockWrap */ \"./src/component/common/VisibleLockWrap.js\"));\nvar _commonUtils = _interopRequireDefault(__webpack_require__(/*! ../../../common/commonUtils */ \"./src/component/common/commonUtils.js\"));\nvar _getGridShell = _interopRequireDefault(__webpack_require__(/*! ./gridAppendant/getGridShell */ \"./src/component/web/DataGrid/AgDataGrid/gridAppendant/getGridShell.js\"));\nvar _GridUtils = __webpack_require__(/*! ./GridUtils */ \"./src/component/web/DataGrid/AgDataGrid/GridUtils.js\");\nvar _propsMap = __webpack_require__(/*! @/constant/propsMap */ \"./src/constant/propsMap.js\");\nvar _console = _interopRequireDefault(__webpack_require__(/*! @/api/console */ \"./src/api/console.js\"));\nvar _dec, _class; // 加载第三方样式\n// 加载第三方样式\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar AgGrid = (_dec = (0, _VisibleLockWrap[\"default\"])(true, true), _dec(_class = /*#__PURE__*/function (_Component) {\n  _inherits(AgGrid, _Component);\n  function AgGrid(props) {\n    var _this;\n    _classCallCheck(this, AgGrid);\n    _this = _callSuper(this, AgGrid, [props]);\n    // static actions = { ...gridActions, ...btnActions, updateContrlStatesByKey, ...tooltipactions };  // 引入gridaction中接口到this.props中\n    _this.refresh = function () {\n      // console.log('throttle refresh');\n      _this.setState({\n        refreshStatus: !_this.state.refreshStatus\n      });\n    };\n    _this.setGridReady = function () {\n      _this.setState({\n        gridReady: true,\n        refreshStatus: !_this.state.refreshStatus\n      });\n    };\n    _this.setGridInitialized = function (gridContainer) {\n      _this.initialized = true;\n      _this.gridContainer = gridContainer; // 用来监控显示隐藏\n    };\n    _this.getGridViewSize = function (size) {\n      _this.gridViewSize = size;\n      _this.viewRefresh();\n    };\n    _this.viewRefresh = function () {\n      if (!_this.clientVisible && _this.gridContainer && _this.gridViewSize && _this.gridViewSize.height > 0) {\n        _console[\"default\"].log('AgGrid: grid visible again and refresh');\n        _this.setState({\n          refreshStatus: !_this.state.refreshStatus\n        });\n      }\n    };\n    _this.setNotActivedSelectRowsRecord = function (nextProps, nextModel) {\n      if (nextProps && nextModel) {\n        if (_this.props.isActived === false && nextProps.isActived === true) {\n          // 从非表格视图切换到表格视图，记录下之前视图的选中行指令数据\n          _this.notActivedSelectRowsRecord = nextModel.getDataProperty(['slctState']);\n        } else if (_this.props.isActived === true && nextProps.isActived === false) {\n          // 从表格视图切换到非表格视图，清空数据\n          _this.notActivedSelectRowsRecord = null;\n        }\n      }\n    };\n    // 获取初始壳,只有列表会走这个\n    _this.getGridShell = function (gridStyle) {\n      var _this$props = _this.props,\n        model = _this$props.model,\n        dispatch = _this$props.dispatch;\n      var hH = model.getMetaProperty('hh');\n      hH = isNaN(parseInt(hH)) ? 32 : parseInt(hH);\n      var newStyle = {\n        minHeight: '190px'\n      };\n      newStyle = Object.assign(newStyle, gridStyle, (0, _componentutil.getVisibleStyle)(newStyle, _this.props.isVisible));\n      var _getCommonClass = (0, _componentutil.getCommonClass)(model),\n        Grow = _getCommonClass.Grow,\n        Shrink = _getCommonClass.Shrink;\n      var className = (0, _classnames2[\"default\"])(_defineProperty({\n        'ag-theme-material-kd': true\n      }, _GridStyles[\"default\"].gridContainer, true), (0, _commonUtils[\"default\"])({\n        Grow: Grow,\n        Shrink: Shrink\n      }));\n      return (0, _getGridShell[\"default\"])({\n        style: newStyle,\n        className: className,\n        headerHeight: hH,\n        hasToolbar: true,\n        model: model,\n        toolBarBtnClick: function toolBarBtnClick() {\n          return dispatch(gridActions.toolBarBtnClick.apply(gridActions, arguments));\n        },\n        advGridId: _this.props.parentModel && _this.props.parentModel.key\n      });\n    };\n    _this.getToolbarLocation = function (gridType) {\n      return (0, _GridUtils.getGridMetaAndUIDefaultProps)(_this.props.model, gridType, {\n        metaPropertyPath: [_propsMap.gridPropNameMap[_customProperties[\"default\"].TOOLBAR_LOCATION][0]],\n        uiPropertyPath: [_customProperties[\"default\"].TOOLBAR_LOCATION]\n      }) || '0';\n    };\n    _this.getHasBorder = function (gridType) {\n      return (0, _GridUtils.getGridMetaAndUIDefaultProps)(_this.props.model, gridType, {\n        metaPropertyPath: [_propsMap.gridPropNameMap[_customProperties[\"default\"].BORDERED][0]],\n        uiPropertyPath: [_customProperties[\"default\"].BORDERED]\n      });\n    };\n    _this.state = {\n      refreshStatus: false,\n      gridReady: false\n    };\n    _this.clientVisible = true;\n    _this.renderTimer = null;\n    _this.initialized = false;\n    _this.calculagraph = _lodash[\"default\"].throttle(_this.refresh, 200); // 当表格渲染时间较少时，这个延时太长反而会卡顿\n    _this.forAutoTestActions = {\n      cellChange: gridActions.cellChange,\n      toolBarBtnClick: gridActions.toolBarBtnClick,\n      entryRowDoubleClick: gridActions.entryRowDoubleClick,\n      EntityRowClick: gridActions.EntityRowClick,\n      setAmountOperation: gridActions.setAmountOperation,\n      hyperLinkClick: gridActions.hyperLinkClick,\n      click: btnActions.click\n    };\n    return _this;\n  }\n  _createClass(AgGrid, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      // console.log('componentWillReceiveProps')\n      var nextModel = nextProps.parentModel || nextProps.model;\n      var thisModel = this.props.parentModel || this.props.model;\n      var billStateChanged = this.props.formStatus !== nextProps.formStatus;\n      var visiableChanged = this.props.isVisible !== nextProps.isVisible; // 可见性变化\n      if (!(0, _immutable.is)(this.props.model.meta, nextProps.model.meta) || !(0, _immutable.is)(thisModel.componentData, nextModel.componentData) || billStateChanged || visiableChanged) {\n        this.calculagraph();\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      if (!this.gridRendered) return true; // 从未渲染表格，则更新\n      var re = false;\n      if (this.state.refreshStatus != nextState.refreshStatus) re = true; // 只有refreshStatus能刷新组件\n      if (this.initialized === false || nextState.gridReady === false) re = false; // 表格未初始化或未准备好都不刷\n      // 由于ag grid 是虚模式渲染的，如果在不可见时触发render,会导致再次可见时视窗内的列不渲染\n      var nextModel = nextProps.parentModel || nextProps.model;\n      var thisModel = this.props.parentModel || this.props.model;\n      this.setNotActivedSelectRowsRecord(nextProps, nextModel);\n      if (re === true) {\n        // 本身可见性\n        if (!this.props.isVisible && nextProps.isVisible) {\n          this.clientVisible = true;\n          return true; // 可见性变化要渲染\n        }\n        // 现实可见性：如页签切换导致的不可见等\n        // 注意：在外层与内层都有此定时器，但功能不同：AgGrid的定时是为了在内层隐藏时拦截掉!!props更新!!。而AgGridCore的定时是为了处理其自身的折叠或页签导致的隐藏,不一定有props更新。\n        if (this.gridViewSize.height <= 0) {\n          this.clientVisible = false;\n          _console[\"default\"].log('AgGrid: grid not visible and return');\n          re = false;\n        } else if (!this.clientVisible) {\n          this.clientVisible = true;\n          re = true; // 此处一定要渲染。。\n        }\n      }\n      // tipForms数据改变 需要刷新\n      var pageId = thisModel.pageId;\n      var oldTipForms = (0, _appModelFunction.getTipForms)(pageId)(thisModel.state);\n      var newTipForms = (0, _appModelFunction.getTipForms)(pageId)(nextModel.state);\n      if (!(0, _immutable.is)(oldTipForms, newTipForms)) {\n        re = true;\n      }\n      if (this.props.isLocked !== nextProps.isLocked) {\n        re = true;\n      }\n      return re;\n    }\n  }, {\n    key: \"styleTransfer\",\n    value: function styleTransfer(gridStyle, style) {\n      var properties = {\n        borderBottom: true,\n        borderLeft: true,\n        borderRight: true,\n        borderTop: true,\n        height: true\n      };\n      for (var p in properties) {\n        gridStyle[p] = style[p];\n        if (properties[p]) delete style[p];\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n        model = _this$props2.model,\n        dispatch = _this$props2.dispatch;\n      // let dataModel = parentModel || model;\n      var title = model.getMetaLocaleProperty('text');\n      var collapsible = model.getMetaProperty('collapsible'); // 可折叠\n      var defaultCollapse = model.getMetaProperty('defaultcollapse'); // 默认折叠\n      var style = Object.assign({}, (0, _componentutil.getCommonStyle)(model), (0, _componentutil.getVisibleStyle)({}, this.props.isVisible));\n      var gridType = model.getMetaProperty('gridtype');\n      var toolbarLocation = this.getToolbarLocation(gridType);\n      var bordered = this.getHasBorder(gridType);\n\n      // 获取 单据体 - 关键字\n      var keyFieldId = model.getMetaProperty('keyFieldId');\n      var gridStyle = {};\n      if (collapsible) {\n        this.styleTransfer(gridStyle, style);\n      } else {\n        gridStyle = style;\n      }\n      // 在表格的列元数据未过来时，都不渲染表格。主要是在列表的情形。这个是因为有些类型的表格（如mater/detail）必须在初始时定义，第二次再定义是不生效的。\n      var cols = model.getMetaProperty('columns');\n      if (cols == null || !_immutable.List.isList(cols) || cols.size <= 0) {\n        return this.getGridShell(gridStyle);\n      } else {\n        this.gridRendered = true;\n        var actions = Object.assign({}, gridActions, btnActions, _action.updateContrlStatesByKey, tooltipactions, fieldaction, {\n          invokeCustomMethod: _customctrlaction.invokeCustomMethod\n        });\n        return /*#__PURE__*/_react[\"default\"].createElement(_AgGridCore[\"default\"], _extends({}, this.props, (0, _componentutil.createActions)(actions, dispatch), {\n          pageId: model.pageId,\n          alreadyReady: this.state.gridReady,\n          setGridInitialized: this.setGridInitialized,\n          setGridReady: this.setGridReady,\n          getGridViewSize: this.getGridViewSize,\n          Collapsible: collapsible,\n          defaultCollapse: defaultCollapse,\n          Name: title,\n          style: style,\n          gridStyle: gridStyle,\n          toolbarLocation: toolbarLocation,\n          showFormByTips: function showFormByTips() {\n            return dispatch(tooltipactions.showFormByTips.apply(tooltipactions, arguments));\n          },\n          showFormByTipsInAction: function showFormByTipsInAction() {\n            return dispatch(tooltipactions.showFormByTips.apply(tooltipactions, arguments));\n          },\n          notActivedSelectRowsRecord: this.notActivedSelectRowsRecord,\n          bordered: bordered,\n          keyFieldId: keyFieldId\n        }));\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.renderTimer);\n    }\n  }]);\n  return AgGrid;\n}(_react.Component)) || _class);\nvar _default = exports[\"default\"] = AgGrid;\n/**\n * 表格初始渲染4次\n * 第一次：渲染空壳占位置，此时拿到元数据\n * 第二次：开始渲染表格，走列定义,执行gridready回调\n * 第三次：通知这个部分，表格渲染完成，已经准备好\n * 第四次：loaddata,显然行数据\n *\n * AgGrid表格状态变量\n * gridRendered ---  表格的元数据传过来，开始渲染AgGridCore\n * initialized  ---  AgGridCore第一次render完成，成功占住位置\n * gridReady   ----  Ag-grid组件准备好\n */\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/AgDataGrid/AgGrid.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/AgDataGrid/AgGridCore.js":
/*!*************************************************************!*\
  !*** ./src/component/web/DataGrid/AgDataGrid/AgGridCore.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.create.js */ \"../../node_modules/core-js/modules/es.object.create.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-prototype-of.js */ \"../../node_modules/core-js/modules/es.object.get-prototype-of.js\");\n__webpack_require__(/*! core-js/modules/es.object.set-prototype-of.js */ \"../../node_modules/core-js/modules/es.object.set-prototype-of.js\");\n__webpack_require__(/*! core-js/modules/es.reflect.construct.js */ \"../../node_modules/core-js/modules/es.reflect.construct.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.find.js */ \"../../node_modules/core-js/modules/es.array.find.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.index-of.js */ \"../../node_modules/core-js/modules/es.array.index-of.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.array.some.js */ \"../../node_modules/core-js/modules/es.array.some.js\");\n__webpack_require__(/*! core-js/modules/es.function.bind.js */ \"../../node_modules/core-js/modules/es.function.bind.js\");\n__webpack_require__(/*! core-js/modules/es.object.assign.js */ \"../../node_modules/core-js/modules/es.object.assign.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.parse-int.js */ \"../../node_modules/core-js/modules/es.parse-int.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.set.js */ \"../../node_modules/core-js/modules/es.set.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.string.replace.js */ \"../../node_modules/core-js/modules/es.string.replace.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _lodash = _interopRequireDefault(__webpack_require__(/*! lodash */ \"../../node_modules/lodash/lodash.js\"));\nvar _agGridReact = __webpack_require__(/*! ag-grid-react */ \"../../node_modules/ag-grid-react/main.js\");\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nvar _big = _interopRequireDefault(__webpack_require__(/*! big.js */ \"../../node_modules/big.js/big.js\"));\nvar _global = _interopRequireWildcard(__webpack_require__(/*! @/global */ \"./src/global/index.js\"));\nvar _gridModel = __webpack_require__(/*! ./gridModel */ \"./src/component/web/DataGrid/AgDataGrid/gridModel/index.js\");\nvar _gridPureFun = __webpack_require__(/*! ../AgDataGrid/gridCoreUseFucntion/gridPureFun */ \"./src/component/web/DataGrid/AgDataGrid/gridCoreUseFucntion/gridPureFun.js\");\nvar _colDefinition = __webpack_require__(/*! ./colDefinition */ \"./src/component/web/DataGrid/AgDataGrid/colDefinition/index.js\");\nvar _GridUtils = __webpack_require__(/*! ./GridUtils */ \"./src/component/web/DataGrid/AgDataGrid/GridUtils.js\");\nvar _ToolBar = _interopRequireDefault(__webpack_require__(/*! @/component/web/DataGrid/TableHelper/component/toolBar/ToolBar */ \"./src/component/web/DataGrid/TableHelper/component/toolBar/ToolBar.js\"));\nvar _componentutil = __webpack_require__(/*! ../../../../util/componentutil */ \"./src/util/componentutil.js\");\nvar _commonUtils = _interopRequireDefault(__webpack_require__(/*! ../../../common/commonUtils */ \"./src/component/common/commonUtils.js\"));\nvar _classnames4 = _interopRequireDefault(__webpack_require__(/*! classnames */ \"../../node_modules/classnames/index.js\"));\nvar _GridStyles = _interopRequireDefault(__webpack_require__(/*! ./GridStyles.less */ \"./src/component/web/DataGrid/AgDataGrid/GridStyles.less\"));\nvar _CellClass = _interopRequireDefault(__webpack_require__(/*! ./CellClass.less */ \"./src/component/web/DataGrid/AgDataGrid/CellClass.less\"));\nvar _CollapseWrap = _interopRequireDefault(__webpack_require__(/*! ../../../common/CollapseWrap */ \"./src/component/common/CollapseWrap.js\"));\nvar _VisibleLockWrap = _interopRequireDefault(__webpack_require__(/*! ../../../common/VisibleLockWrap */ \"./src/component/common/VisibleLockWrap.js\"));\nvar _appModelFunction = __webpack_require__(/*! ../../../../model/appModelFunction */ \"./src/model/appModelFunction.js\");\nvar ter = _interopRequireWildcard(__webpack_require__(/*! ag-grid-enterprise */ \"../../node_modules/ag-grid-enterprise/main.js\"));\nvar _gridStickyTool = _interopRequireDefault(__webpack_require__(/*! ../../../../util/gridStickyTool */ \"./src/util/gridStickyTool.js\"));\nvar _HeaderTips = _interopRequireDefault(__webpack_require__(/*! ./HeaderTips */ \"./src/component/web/DataGrid/AgDataGrid/HeaderTips.js\"));\nvar _resizeObserve = _interopRequireDefault(__webpack_require__(/*! ../../../../util/resizeObserve */ \"./src/util/resizeObserve.js\"));\nvar _console = _interopRequireDefault(__webpack_require__(/*! ../../../../api/console */ \"./src/api/console.js\"));\nvar _treeTable = __webpack_require__(/*! ./treeTable */ \"./src/component/web/DataGrid/AgDataGrid/treeTable/index.js\");\nvar _rowModel = __webpack_require__(/*! ./rowModel */ \"./src/component/web/DataGrid/AgDataGrid/rowModel/index.js\");\nvar _gridConfiguration = __webpack_require__(/*! ./gridConfiguration */ \"./src/component/web/DataGrid/AgDataGrid/gridConfiguration/index.js\");\nvar _visibleLock = __webpack_require__(/*! ./visibleLock */ \"./src/component/web/DataGrid/AgDataGrid/visibleLock/index.js\");\nvar _rowKeyMiddleware = __webpack_require__(/*! ../../../../util/rowKeyMiddleware */ \"./src/util/rowKeyMiddleware.js\");\nvar _memoryCacher = __webpack_require__(/*! ../../../../model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _delayInvoke = _interopRequireDefault(__webpack_require__(/*! ../../../../util/delayInvoke */ \"./src/util/delayInvoke.js\"));\nvar _getGridShell = _interopRequireDefault(__webpack_require__(/*! ./gridAppendant/getGridShell */ \"./src/component/web/DataGrid/AgDataGrid/gridAppendant/getGridShell.js\"));\nvar _viewModel = __webpack_require__(/*! ./viewModel */ \"./src/component/web/DataGrid/AgDataGrid/viewModel/index.js\");\nvar _gridCoreUseFucntion = __webpack_require__(/*! ./gridCoreUseFucntion */ \"./src/component/web/DataGrid/AgDataGrid/gridCoreUseFucntion/index.js\");\nvar _constant = __webpack_require__(/*! ./constant */ \"./src/component/web/DataGrid/AgDataGrid/constant.js\");\nvar _settingBtn = _interopRequireDefault(__webpack_require__(/*! ./settingBtn */ \"./src/component/web/DataGrid/AgDataGrid/settingBtn.js\"));\nvar _VirtualViewToolBar = _interopRequireDefault(__webpack_require__(/*! @/component/web/DataGrid/TableHelper/component/toolBar/toolbarModule/VirtualViewToolBar */ \"./src/component/web/DataGrid/TableHelper/component/toolBar/toolbarModule/VirtualViewToolBar.js\"));\nvar _CellRangesSumComponent = _interopRequireDefault(__webpack_require__(/*! @/component/web/DataGrid/TableHelper/component/CellRangesSumComponent */ \"./src/component/web/DataGrid/TableHelper/component/CellRangesSumComponent.js\"));\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nvar _gridConst = __webpack_require__(/*! ../../../../constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _columnProperty = __webpack_require__(/*! ./columnModel/columnProperty */ \"./src/component/web/DataGrid/AgDataGrid/columnModel/columnProperty/index.js\");\nvar _GridQuickSearch = _interopRequireDefault(__webpack_require__(/*! ./quickSearchModal/GridQuickSearch */ \"./src/component/web/DataGrid/AgDataGrid/quickSearchModal/GridQuickSearch.js\"));\nvar _singleSpa = __webpack_require__(/*! @/api/singleSpa */ \"./src/api/singleSpa.js\");\nvar _storage = _interopRequireDefault(__webpack_require__(/*! @/util/storage */ \"./src/util/storage.js\"));\nvar _treeDefinition = __webpack_require__(/*! ./treeTable/treeDefinition */ \"./src/component/web/DataGrid/AgDataGrid/treeTable/treeDefinition.js\");\nvar _treeUtils = __webpack_require__(/*! ./treeTable/treeUtils */ \"./src/component/web/DataGrid/AgDataGrid/treeTable/treeUtils.js\");\nvar _gridEventService = _interopRequireDefault(__webpack_require__(/*! ./gridEvent/gridEventService */ \"./src/component/web/DataGrid/AgDataGrid/gridEvent/gridEventService.js\"));\nvar _gridEventName = _interopRequireDefault(__webpack_require__(/*! ./gridEvent/gridEventName */ \"./src/component/web/DataGrid/AgDataGrid/gridEvent/gridEventName.js\"));\nvar _keyCode = __webpack_require__(/*! @/constant/keyCode */ \"./src/constant/keyCode.js\");\nvar _ctrlMethodConst = __webpack_require__(/*! @/constant/ctrlMethodConst */ \"./src/constant/ctrlMethodConst.js\");\nvar _initListenShortCutEvent = __webpack_require__(/*! @/service/web/initListenShortCutEvent */ \"./src/service/web/initListenShortCutEvent.js\");\nvar _mergeUtil = __webpack_require__(/*! ./util/mergeUtil */ \"./src/component/web/DataGrid/AgDataGrid/util/mergeUtil.js\");\nvar _dataService = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/dataService.js */ \"./src/component/web/DataGrid/TableHelper/util/dataService.js\");\nvar _action = __webpack_require__(/*! @/action/action */ \"./src/action/action.js\");\nvar _symbolConst = __webpack_require__(/*! @/constant/symbolConst */ \"./src/constant/symbolConst.js\");\nvar _GlobalDataCacher = __webpack_require__(/*! @/model/GlobalDataCacher */ \"./src/model/GlobalDataCacher.js\");\nvar _const = __webpack_require__(/*! @/constant/const */ \"./src/constant/const.js\");\nvar _GridValidateTip = _interopRequireDefault(__webpack_require__(/*! ./GridValidateTip */ \"./src/component/web/DataGrid/AgDataGrid/GridValidateTip.js\"));\nvar _GridValidateControl = _interopRequireDefault(__webpack_require__(/*! ./GridValidateControl */ \"./src/component/web/DataGrid/AgDataGrid/GridValidateControl.js\"));\nvar _PageVisibleStatus = __webpack_require__(/*! @/component/common/PageVisibleStatus */ \"./src/component/common/PageVisibleStatus.js\");\nvar _array = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/array.js */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar proxy = _interopRequireWildcard(__webpack_require__(/*! @/proxy/formproxy */ \"./src/proxy/formproxy.js\"));\nvar _grid = __webpack_require__(/*! @/util/component/grid */ \"./src/util/component/grid.js\");\nvar _dec, _class; // import TipsPropsWrap from '../../../common/TipsPropsWrap'\n// import ReactTooltip from 'react-tooltip'\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar visiblePages = []; // 可见页面集合\n// @TipsPropsWrap\nvar AgGridCore = (_dec = (0, _VisibleLockWrap[\"default\"])(true, true), (0, _CollapseWrap[\"default\"])(_class = _dec(_class = /*#__PURE__*/function (_Component) {\n  _inherits(AgGridCore, _Component);\n  function AgGridCore(_props) {\n    var _this;\n    _classCallCheck(this, AgGridCore);\n    _this = _callSuper(this, AgGridCore, [_props]);\n    _this.updateSubGrid = function (thisProps, nextProps) {\n      var model = thisProps.model;\n      var nextModel = nextProps.model;\n      if (!(0, _immutable.is)(model.getDataProperty('subMeta'), nextModel.getDataProperty('subMeta'))) {\n        (0, _rowModel.updateSubGridMeta)(nextProps, _this.gridContrlParams.rowDetailParams, _this.api);\n      }\n    };\n    _this.handleContextMenu = function (e) {\n      var editingCell = _this.api.getEditingCells();\n      // 编辑态阻止冒泡，使用浏览器默认的右键菜单\n      if (editingCell.length > 0) {\n        e.stopPropagation();\n      }\n    };\n    _this.saveCacher = function () {\n      var model = _this.props.model;\n      // const setting = getFormConfig(model.pageId)(model.state).setting || {}\n      var uiState = (0, _memoryCacher.getPageUIState)(model.pageId);\n      var setting = uiState && uiState.toJS && uiState.toJS() || {};\n      var configCw = {};\n      var configMaxCw = {};\n      var configAutoSizeCw = {};\n      var settings = setting[model.key];\n      if (settings) {\n        configCw = settings[_gridConst.SETTING_COLUMN_WIDTH] || {};\n        configAutoSizeCw = settings[_gridConst.SETTING_AUTOSIZE_COLUMN_WIDTH] || {};\n        configMaxCw = settings[_gridConst.SETTING_COLUMN_MAX_WIDTH] || {};\n      }\n      (0, _memoryCacher.setPageUIState)(_this.props.model, [_gridConst.SETTING_COLUMN_WIDTH], Object.assign(configCw, _this.columnWidthSetting[_gridConst.SETTING_COLUMN_WIDTH]));\n      (0, _memoryCacher.setPageUIState)(_this.props.model, [_gridConst.SETTING_AUTOSIZE_COLUMN_WIDTH], Object.assign(configAutoSizeCw, _this.columnWidthSetting[_gridConst.SETTING_AUTOSIZE_COLUMN_WIDTH]));\n      (0, _memoryCacher.setPageUIState)(_this.props.model, [_gridConst.SETTING_COLUMN_MAX_WIDTH], Object.assign(configMaxCw, _this.columnWidthSetting[_gridConst.SETTING_COLUMN_MAX_WIDTH]));\n      // 单据体拖动列后需要传列顺序\n      // if (this.gridContrlParams.isEntryEntity && this.columnSequence) {\n      //   setPageUIState(this.props.model, ['cs'], this.columnSequence)\n      // }\n    };\n    _this._getSumData = function () {\n      (0, _gridCoreUseFucntion.getSumData)(_assertThisInitialized(_this));\n    };\n    /**\n     * 单头调到单体进行编辑\n     * @param {*} shiftKey // 是否跳转到上一字段/模块\n     * @param {*} isModule // 是否模块跳转\n     */\n    _this.handleGridStartEdit = function (_ref) {\n      var shiftKey = _ref.shiftKey,\n        isModule = _ref.isModule;\n      var firstEditableCell = _this.getFirstEditableCell(!isModule && shiftKey);\n      if (firstEditableCell) {\n        var r = firstEditableCell.rk,\n          k = firstEditableCell.colId;\n        _this.setFocusedCell([r, k]);\n        setTimeout(function () {\n          _this.setActiveCell({\n            r: r,\n            k: k\n          });\n        });\n        return;\n      }\n      if (isModule) {\n        (0, _initListenShortCutEvent.handleToNextModule)(shiftKey, _this.gridContainer);\n      } else {\n        (0, _initListenShortCutEvent.handleToNextField)(shiftKey, _this.gridContainer);\n      }\n    };\n    _this.setCellFocusAndActive = function (cell, _ref2) {\n      var _ref2$toNext = _ref2.toNext,\n        toNext = _ref2$toNext === void 0 ? false : _ref2$toNext;\n      if (!cell) return;\n      var rowIndex = cell.rowIndex,\n        colId = cell.colId;\n      if (toNext) {\n        _gridModel.modelFuncs.focusToNextCell(cell, {\n          api: _this.api,\n          columnApi: _this.columnApi,\n          colLockFunc: _this.isCellLocked,\n          toNextField: function toNextField() {\n            return (0, _initListenShortCutEvent.handleToNextField)(false, _this.gridContainer);\n          }\n        });\n      } else {\n        _gridModel.modelFuncs.jumpToEditorCell(_this.api, rowIndex, colId, undefined);\n      }\n    };\n    _this.sortDataChangeHandle = function () {\n      if (_this.gridContrlParams.isVirtualView || _this.gridContrlParams.isEntryEntity) {\n        var sortColumns = (0, _memoryCacher.getPageData)(_this.props.model.pageId, [_this.gridState.gridId, _gridConst.GRID_SORTED_DATA]);\n        sortColumns && _this.postGridSorted(sortColumns); // 一开始存在排序列才处理\n        _this.removeSortDataChangeListener = (0, _memoryCacher.addDataChangeListener)(_this.props.model.pageId, [_this.gridState.gridId, _gridConst.GRID_SORTED_DATA], _this.postGridSorted);\n      }\n    };\n    _this.serverfilterDataChangeHandle = function () {\n      var filterData = (0, _memoryCacher.getPageData)(_this.props.model.pageId, [_this.gridState.gridId, _gridConst.RESET_FILTER_DATA]);\n      filterData && _this.delayFuncs.push(function () {\n        return _this.postGridServerFilter(filterData);\n      });\n      _this.removeServerFilterDataChangeListener = (0, _memoryCacher.addDataChangeListener)(_this.props.model.pageId, [_this.gridState.gridId, _gridConst.RESET_FILTER_DATA], _this.postGridServerFilter);\n    };\n    _this.handlePermission = function (data) {\n      if (!data) return;\n      (0, _gridConfiguration.buildColDefs)(_this.props, _assertThisInitialized(_this));\n      _this.resetCols();\n    };\n    _this.forceUpdateOnThemeChanged = function () {\n      (0, _gridCoreUseFucntion.handleThemeChangedBeforeRefresh)(_assertThisInitialized(_this));\n      (0, _gridConfiguration.buildProps)(_this.props, _assertThisInitialized(_this), {\n        isBuildColDefs: true\n      });\n      (0, _columnProperty.setOperationColPinnedStatus)({\n        gridState: _this.gridState,\n        columnApi: _this.columnApi,\n        gridContainerI: _this.gridContainerI,\n        setGridThisProp: _this.setGridThisProp,\n        getGridThisProp: _this.getGridThisProp\n      });\n      _this.refresh(function () {\n        _this.delayAutoSizeColumns();\n      });\n    };\n    _this.setEncodeData = function (data) {\n      if (!data) return;\n      _this.encodeKeys = data;\n      (0, _gridConfiguration.buildColDefs)(_this.props, _assertThisInitialized(_this));\n    };\n    _this.refresh = function (afterRefreshCallBack) {\n      // console.log('grid visible ---------refresh', this.gridState && this.gridState.id);\n      _this.setState({\n        refreshStatus: !_this.state.refreshStatus\n      }, function () {\n        afterRefreshCallBack && afterRefreshCallBack();\n      });\n    };\n    /**\n     * 初始化后进行真正的grid渲染\n     */\n    _this.forceUpdate = function () {\n      // this.updateGridContainerSize()\n      _this.setState({\n        refreshStatus: !_this.state.refreshStatus,\n        isForceUpdate: true\n      }, function () {\n        _this.props.setGridInitialized(_this.gridContainer);\n      });\n    };\n    /**\n     * 只刷新可见行 提高性能\n     */\n    _this.updateDisplayRows = function () {\n      var startRowIndex = _this.api.getFirstDisplayedRow();\n      var endRowIndex = _this.api.getLastDisplayedRow();\n      var rows = _this.gridRows.slice(startRowIndex, endRowIndex + 1);\n      _console[\"default\"].log('updateDisplayRows', rows);\n      _this.api.updateRowData({\n        update: rows\n      }); // 直接强刷显示部分\n    };\n    /**\n     * 单据体前后数据一样，进行差量更新，保证显示值正确\n     * 此处处理当改变单元格值后，又将表格整体值修改成改变单元格以前值的问题\n     */\n    _this.resetEntryEntityForDirtyData = function () {\n      if (!_this.isEntryEntity()) return; // 仅在单据体中处理\n      var _this$gridState = _this.gridState,\n        pageId = _this$gridState.pageId,\n        gridId = _this$gridState.gridId;\n      var dirtyCell = (0, _memoryCacher.getPageData)(pageId, [gridId, 'dirtyCells']);\n      if (dirtyCell && _this.api && _this.dataRows && _this.oldDataRows && _this.dataRows.size > 0 && _this.dataRows.size === _this.oldDataRows.size && (0, _immutable.is)(_this.dataRows, _this.oldDataRows)) {\n        _console[\"default\"].log('has dirty cell, fresh entry entity');\n        _this.updateDisplayRows();\n        (0, _memoryCacher.setPageData)(pageId, [gridId, 'dirtyCells']); // 将脏数据重置\n      }\n    };\n    /**\n     * 单行刷新不会更新ag的props行数据\n     * 单行刷新后，且前后数据一样，进行差量更新，保证显示值正确\n     * TODO: 可以考虑跟上面的单据体合起来一起做\n     */\n    _this.resetBillListForDirtyData = function () {\n      if (_this.gridContrlParams && _this.gridContrlParams.isListView) {\n        var _this$gridState2 = _this.gridState,\n          pageId = _this$gridState2.pageId,\n          gridId = _this$gridState2.gridId;\n        var dirtyRowIndexs = (0, _memoryCacher.getPageData)(pageId, [gridId, 'dirtyRowIndexs']);\n        if (dirtyRowIndexs && dirtyRowIndexs.size > 0 && _this.api && _this.dataRows && _this.oldDataRows && _this.dataRows.size > 0 && _this.dataRows.size === _this.oldDataRows.size && (0, _immutable.is)(_this.dataRows, _this.oldDataRows)) {\n          _console[\"default\"].log('has dirty rows, fresh bill list');\n          _this.updateDisplayRows();\n        }\n        dirtyRowIndexs && (0, _memoryCacher.setPageData)(pageId, [gridId, 'dirtyRowIndexs']); // 将脏数据重置\n      }\n    };\n    _this.clearCustomColInfos = function () {\n      _this[_gridConst.GRID_CUSTOM_COL_SCHEMA_INFOS] = {};\n    };\n    /** ************************************************* React生命周期（render在最后） end ***************************************************/\n    /** ************************************************* 工具类方法 start ***************************************************/\n    // 是否有导航条\n    _this.hasNavigation = function () {\n      var _this$gridContrlParam = _this.gridContrlParams,\n        isVirtualView = _this$gridContrlParam.isVirtualView,\n        isListView = _this$gridContrlParam.isListView,\n        showSelectionItem = _this$gridContrlParam.showSelectionItem,\n        hasSelectAllRow = _this$gridContrlParam.hasSelectAllRow,\n        isShowVirtualViewRowCount = _this$gridContrlParam.isShowVirtualViewRowCount;\n      var hideNavigation = _this.dataDesc.phide;\n      var isShowNav = hideNavigation != null ? !hideNavigation : !_this.gridContrlParams.hideNavigation; // 业务数据取不到，取元数据\n      // 报表不显示选择列也是单选\n      var isSingleSelection = _this.gridOptions.rowSelection === 'single' || isVirtualView && !showSelectionItem;\n      var isRealDataCount = !_this.isLargeData || _this.isShowLargeDataCount;\n      var showRowCount = isShowVirtualViewRowCount && isRealDataCount && _this.dataDesc.datacount > 0;\n      var showSelectedCount = isRealDataCount && !isSingleSelection;\n      var isShowVirtualViewNav = isVirtualView && (hasSelectAllRow || showRowCount || showSelectedCount);\n      return (isListView || isShowVirtualViewNav || _this.dataDesc.isSplitPage === true) && isShowNav;\n    };\n    // 获得工具栏初始化的高度\n    _this.getNavigationDefaultHeight = function () {\n      // 列表、下方、非f7\n      if (_this.gridContrlParams.isListView && _this.props.toolbarLocation === '1' && !(_this.gridState.config && _this.gridState.config.isf7)) {\n        return _GridUtils.TOOLBARHEIGHT.max;\n      }\n      // 默认\n      return _GridUtils.TOOLBARHEIGHT.min;\n    };\n    _this.onToolbarSizeChanged = function (rect) {\n      var height = rect.height;\n      if (height > 0) {\n        _this.navigationRenderHeight = height;\n        _this.gridContainerI.style.height = _this.gridViewSize.height - height + 'px';\n      }\n    };\n    _this.getNavigationHeight = function () {\n      return _this.navigationRenderHeight || _this.getNavigationDefaultHeight();\n    };\n    _this.getNodeByRowKey = function (rowKey) {\n      var node = null;\n      if (!_this.api) return node;\n      // getRowNode api传的是字符串\n      node = _this.api.getRowNode(rowKey + '');\n      if (node) {\n        return node;\n      } else {\n        // 进入此处逻辑应该是异常数据，匹配最终会失败且耗性能，考虑直接返回null\n        _console[\"default\"].warn('getNodeByRowKey mismatched!', rowKey);\n        var rkN = _this.gridState.rk;\n        _this.api.forEachNode(function (nd) {\n          if (node) return;\n          if (rowKey === (nd.data && nd.data[rkN])) {\n            node = nd;\n          }\n        });\n        return node;\n      }\n    };\n    _this.getNodeByRowIndex = function (rowIndex) {\n      var node = null;\n      if (!_this.api) return node;\n      node = _this.api.getDisplayedRowAtIndex(rowIndex);\n      if (node) {\n        return node;\n      } else {\n        return null;\n      }\n    };\n    _this.resetCols = function () {\n      _this.api.setColumnDefs(_this.gridState.columnDefs);\n    };\n    _this.resetColsWithColumnsState = function () {\n      var curGridState = _this.columnApi.getColumnState();\n      curGridState.forEach(function (colState) {\n        var curColDef = (0, _GridUtils.childrenLookUp)(_this.gridState.columnDefs, function (col) {\n          return col.field === colState.colId;\n        }); // 更新本地状态，保持一致\n        if (curColDef) {\n          curColDef.width = colState.width;\n        }\n      });\n      _this.api.setColumnDefs(_this.gridState.columnDefs);\n    };\n    // 通知表头tips更新\n    _this.postHeaderTipsAction = function () {\n      // const visiable = this.getGridVisiable()\n      // if (visiable && this.props.alreadyReady && this.gridContrlParams && this.gridContrlParams.headerTipsConfig.length > 0) {\n      //   const { pageId, gridId } = this.gridState\n      //   setPageData(pageId, [gridId, '__headerTips'], true)\n      // } else {\n\n      // }\n    };\n    _this.getRowClass = function (params) {\n      return 'my-class';\n    };\n    /**\n     * 注意避免在表格不可见时执行这个方法，因为在不可见时做任何表格渲染（如api.dolayouy）会导致虚模式列计算不对。---类似问题可用element breakpoint跟踪调试\n     */\n    _this.reSizeHeight = function (arg) {\n      if (!_this.gridContainer || _this.gridContainer.offsetHeight <= 0) {\n        _this.delayFuncs.push(function () {\n          return _gridModel.expandHeight.call(_assertThisInitialized(_this), arg);\n        });\n      } else {\n        _gridModel.expandHeight.call(_assertThisInitialized(_this), arg);\n      }\n    };\n    _this.reSizeHeightByLimit = function (arg) {\n      if (!_this.gridContrlParams.autoHeight) {\n        // 行高自适应下，需要延迟到重设行高再去计算，这边不处理\n        _this.reSizeHeight(arg);\n      }\n    };\n    /**\n     * 行高自适应\n     * @param {*} rowIndex?: number // 只针对某一行做行高自适应\n     */\n    _this.resetRowHeightsAndGridHeight = function (rowIndex) {\n      // editingCell 要在redrawRows前取，调用redrawRows后editingCell会被清空\n      var editingCell = _this.api.getEditingCells()[0];\n      var focusCell = _this.api.getFocusedCell();\n      if (rowIndex || rowIndex === 0) {\n        // 只做一行的行高自适应\n        var rowNode = _this.api.getRowNode(rowIndex);\n        rowNode.setRowHeight();\n        _this.api.onRowHeightChanged();\n        /**\n         * fix: BT-00533212 ie下行高自适应后高度没有自动充满,需要重绘行来充满\n         * 重绘后需要重设焦点或编辑中的单元格\n        */\n        // 单据体值更新会重算行高，计算行高时会将单元格单独渲染，计算完成后销毁掉\n        // 由于AlphaFactory的监听事件是绑定在eGridCell上的，eGridCell不会销毁，导致最后走完unmount时监听事件会失效\n        // 这里重绘行进行处理，保证AlphyFactory事件监听正常\n        if (_this.gridContrlParams.isEntryEntity && _this.gridContrlParams.autoHeight) {\n          _this.api.redrawRows({\n            rowNodes: [rowNode]\n          });\n          _this.resetEditingOrFocusedCell(editingCell, focusCell);\n        }\n      } else {\n        _this.api.resetRowHeights();\n        if (_this.gridContrlParams.isEntryEntity) {\n          _this.api.redrawRows();\n          _this.resetEditingOrFocusedCell(editingCell, focusCell);\n        }\n      }\n      setTimeout(function () {\n        _this.reSizeHeight({}); // 重新计算表格高度\n      }, 0);\n    };\n    _this.resetEditingOrFocusedCell = function (editingCell, focusCell) {\n      if (editingCell || focusCell) {\n        var _ref3 = editingCell || focusCell,\n          rowIndex = _ref3.rowIndex,\n          colId = _ref3.column.colId;\n        editingCell ? _this.api.startEditingCell({\n          rowIndex: rowIndex,\n          colKey: colId\n        }) : _this.api.setFocusedCell(rowIndex, colId);\n      }\n    };\n    _this.setColVisible = function (props) {\n      _this.gridState.columnDefs = (0, _colDefinition.modifyColDefs)(_this.gridState.columnDefs, {\n        action: 'colVisb',\n        gridOptions: _this.gridOptions,\n        gridContrlParams: _this.gridContrlParams,\n        localeId: _this.gridState.localeId || _this.gridState.defaultLocalId,\n        defaultLocalId: _this.gridState.defaultLocalId,\n        meta: props.model.meta.toJS(),\n        funcs: {\n          getColProperty: _this.getColProperty,\n          getVisibleByNum: _this.getVisibleByNum\n        }\n      });\n      if (_this.gridContrlParams.mergeModel) {\n        _this.gridContrlParams.mergeModel.findBorderCols(_this.gridState.columnDefs);\n      }\n      if (_this.gridContrlParams.mergeColumns.length > 0) {\n        _this.rightBorderMergeCols = (0, _mergeUtil.getRightBorderMergeCols)(_this.gridState.columnDefs, _this.gridContrlParams.mergeColumns);\n      }\n    };\n    _this.shouldUpdate = function (nextProps, nextState) {\n      // this.delayFuncs = [];//不能重置\n      // let updateFuncList = [];\n      var interceptParams = {\n        delayFuncs: _this.delayFuncs,\n        updateFuncList: _this.updateFuncList,\n        getVisible: _componentutil.getVisible,\n        dataMatched: true\n      };\n      var result = _gridModel.updateIntercept.call(_assertThisInitialized(_this), nextProps, nextState, interceptParams);\n      if (result.updateFlag !== undefined) {\n        return result.updateFlag;\n      }\n\n      /**\n       * TODO 由于两层组件都包裹了可见性高阶，可能导致isVisible更新时机错乱,setVisible未同步最新的style\n       * 所以表格由可见到不可以需要重刷\n       */\n      if (_this.gridState.styles.display === 'none' && nextProps.isVisible) {\n        _this.setVisible(nextProps);\n        return true;\n      }\n\n      // 不可见时不渲染\n      // 通过gridviewSize判断并不可靠，初始化会给最小高度赋值给gridviewSize，但是此时表格并不可见\n      if (_this.gridViewSize.height <= 0 || _this.gridContainer.offsetHeight <= 0) {\n        _this.clientVisible = false;\n        // console.log('AgGridCore: grid not visible and return');\n        return false;\n      } else if (!_this.clientVisible) {\n        _this.clientVisible = true;\n        return true;\n      }\n      if (_this.state.refreshStatus != nextState.refreshStatus) {\n        return true;\n      }\n      if (_this.gridContrlParams.isVirtualView) {\n        if (!interceptParams.dataMatched) {\n          return true; // 虚模式下会用queryId来标识重新取数\n        }\n      }\n\n      // tips出现需要刷新\n      // const { pageId } = this.props.model\n      // const oldState = this.props.model.state\n      // const newState = nextProps.model.state\n      // const oldTipForms = getTipForms(pageId)(oldState)\n      // const newTipForms = getTipForms(pageId)(newState)\n      // if (!is(oldTipForms, newTipForms)) {\n      //   return true\n      // }\n\n      // 整表锁定改变，需要重刷表格\n      if (_this.props.isLocked !== nextProps.isLocked) {\n        return true;\n      }\n      result = _gridModel.simpleDataDiffer.call(_assertThisInitialized(_this), nextProps, nextState, interceptParams);\n      if (result.updateFlag !== undefined) {\n        if (result.updateFlag === true) {\n          if (_this.isEntryEntity()) {\n            // 单据体改为差量更新之后需要重绘已显示的行\n            _this.delayFuncs.push(function () {\n              _this.api.redrawRows({\n                rowNodes: _this.api.getRenderedNodes()\n              });\n            });\n          }\n        }\n        return result.updateFlag;\n      }\n\n      // 不渲染时，执行更新函数与延迟函数\n      _this.updateFuncList.forEach(function (f) {\n        return f();\n      });\n      _this.updateFuncList = [];\n      _this.delayFuncs.forEach(function (f) {\n        return f({\n          execSource: 'onShouldComponentUpdate'\n        });\n      });\n      _this.delayFuncs = [];\n      return false;\n    };\n    _this.forceRefreshEntryEntity = function () {\n      if (_this.gridContrlParams.isEntryEntity) {\n        // 单据体改为差量更新之后需要重绘已显示的行\n        if (!_this._alreadyAddForceRefresh) {\n          _this.delayFuncs.unshift(function () {\n            _this.api && _this.api.redrawRows({\n              rowNodes: _this.api.getRenderedNodes()\n            });\n            _this._resetLayout();\n            _this._alreadyAddForceRefresh = false;\n          });\n          _this._alreadyAddForceRefresh = true;\n        }\n      }\n    };\n    _this.postColumnFilter = function (data) {\n      if (!data) return;\n      data = data.toJS ? data.toJS() : data;\n      _this.publishRowSortFilter(data, 'filter', true);\n    };\n    /**\n     * 后端设置表格排序值，前端只负责展示过滤图标\n     */\n    _this.postGridSorted = function (data) {\n      if (!data) {\n        data = {};\n      }\n      _this.sortFilterColumn.sortColumn = data;\n      _this.remindSortedChange(data);\n    };\n    /**\n     * 后端设置表格过滤值，前端只负责展示过滤图标\n     */\n    _this.postGridServerFilter = function () {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      // 目前仅支持重置\n      if (data.length === 0) {\n        var oldFilterColIds = Object.keys(_this.sortFilterColumn.filterColumn || {});\n        oldFilterColIds.forEach(function (colId) {\n          var _this$api;\n          return (_this$api = _this.api) === null || _this$api === void 0 ? void 0 : _this$api.destroyFilter(colId);\n        }); // 为了清除旧过滤控件中输入框的内容，如使用右键相同的操作会发送请求到后端\n\n        var filters = {};\n        _this.sortFilterColumn.filterColumn = filters;\n        // 过滤列发生变化，通知其他列\n        (0, _memoryCacher.setPageData)(_this.gridState.pageId, [_this.gridState.gridId, 'filter'], filters);\n      } else {\n        var _data = _slicedToArray(data, 1),\n          _filters = _data[0];\n        _this.sortFilterColumn.filterColumn = {}; // 先清空原先的数据\n        _filters.forEach(function (_ref4) {\n          var _this$columnApi;\n          var cp = _ref4.cp,\n            k = _ref4.k,\n            v = _ref4.v;\n          var val = Array.isArray(v) ? v : ['']; // 下拉过滤可存在多个值\n          var filterItem = {\n            colId: k,\n            value: {\n              type: cp,\n              filter: (0, _GridUtils.isEnumColumn)((_this$columnApi = _this.columnApi) === null || _this$columnApi === void 0 || (_this$columnApi = _this$columnApi.getColumn(k)) === null || _this$columnApi === void 0 ? void 0 : _this$columnApi.colDef) ? val : val[0]\n            }\n          };\n          _this.sortFilterColumn.filterColumn[k] = filterItem.value;\n          (0, _memoryCacher.setPageData)(_this.gridState.pageId, [_this.gridState.gridId, k, 'filter', 'data'], filterItem);\n        });\n        (0, _memoryCacher.setPageData)(_this.gridState.pageId, [_this.gridState.gridId, 'filter'], _this.sortFilterColumn.filterColumn);\n      }\n    };\n    _this.setGridThisProp = function (prop, value) {\n      _this[prop] = value;\n    };\n    _this.getGridThisProp = function (prop) {\n      if (!prop) return;\n      return _this[prop];\n    };\n    _this.getApi = function () {\n      return _this.api;\n    };\n    _this.getColumnApi = function () {\n      return _this.columnApi;\n    };\n    _this.startEditingCellAndRecord = function (rowIndex, colId, rowKey) {\n      var _this$api2, _this$columnApi2;\n      (_this$api2 = _this.api) === null || _this$api2 === void 0 || _this$api2.startEditingCell({\n        rowIndex: rowIndex,\n        colKey: colId\n      });\n      // 无法进入编辑态的单元格，也需要记录被编辑过\n      if ((0, _GridUtils.isColumnOfNoEditor)((_this$columnApi2 = _this.columnApi) === null || _this$columnApi2 === void 0 || (_this$columnApi2 = _this$columnApi2.getColumn(colId)) === null || _this$columnApi2 === void 0 ? void 0 : _this$columnApi2.colDef.colType)) {\n        _this.setGridThisProp(_gridConst.LAST_EDIT_CELL, {\n          rowIndex: rowIndex,\n          rowKey: rowKey,\n          colId: colId\n        });\n      }\n    };\n    /**\n     * @param {Array} columns [{colId,maxWidth}]\n     */\n    _this.calculatePreferredColumnsWidthWrap = function (columns, source) {\n      var _ref5 = _this.gridContrlParams || {},\n        columnResizeMode = _ref5.columnResizeMode;\n      return _this.columnApi && _this.gridContainerI && (0, _gridModel.calculatePreferredColumnsWidth)(columns, _this.columnApi, {\n        eGridContainer: _this.gridContainerI,\n        ignoreMaxWidth: columnResizeMode === _gridConst.GRID_COLUMN_RESIZE_MODE.preset || source === 'contextMenu'\n      });\n    };\n    _this.setColumnsWidthAndCacheByAutoSize = function (columnsWidthSet, params) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n        api = _assertThisInitialize.api,\n        columnApi = _assertThisInitialize.columnApi,\n        gridContrlParams = _assertThisInitialize.gridContrlParams,\n        gridState = _assertThisInitialize.gridState;\n      if (!api || !gridContrlParams) {\n        return;\n      }\n      var _ref6 = params || {},\n        _ref6$isSetWidth = _ref6.isSetWidth,\n        isSetWidth = _ref6$isSetWidth === void 0 ? true : _ref6$isSetWidth;\n      // const { columnResizeMode, isListView, isVirtualView } = gridContrlParams\n      var handleLoopItem = function handleLoopItem(item) {\n        isSetWidth && columnApi.setColumnWidth(item.colId, item.width, false);\n        if (item.colId !== gridState.seq) {\n          // 1.列表 2.报表 3. 单据体锁定列 缓存个性化列宽\n          _this.columnWidthSetting[_gridConst.SETTING_AUTOSIZE_COLUMN_WIDTH][item.colId] = item.width;\n        }\n      };\n      columnsWidthSet.forEach(handleLoopItem);\n    };\n    _this.autoSizeColumns = function (params) {\n      var _ref7 = params || {},\n        columnByRightKey = _ref7.columnByRightKey,\n        columns = _ref7.columns,\n        _ref7$isAllCol = _ref7.isAllCol,\n        isAllCol = _ref7$isAllCol === void 0 ? true : _ref7$isAllCol,\n        ignoreEditStatus = _ref7.ignoreEditStatus,\n        source = _ref7.source;\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n        api = _assertThisInitialize2.api,\n        columnApi = _assertThisInitialize2.columnApi,\n        gridContrlParams = _assertThisInitialize2.gridContrlParams;\n      if (!api || !gridContrlParams) {\n        // 显示数据为空\n        return;\n      }\n      var gridEditable = gridContrlParams.gridEditable,\n        autoHeight = gridContrlParams.autoHeight,\n        columnResizeMode = gridContrlParams.columnResizeMode;\n      if (!autoHeight) {\n        // 与行高自适应互斥\n        var getColumnsWidthSet = function getColumnsWidthSet() {\n          var targetColumns = (0, _GridUtils.getTargetColumnsForAutoSize)({\n            api: api,\n            columnApi: columnApi,\n            columnByRightKey: columnByRightKey,\n            columns: columns\n          }, isAllCol, {\n            gridEditable: gridEditable,\n            ignoreEditStatus: ignoreEditStatus,\n            seq: _this.gridState.seq,\n            getColWidthFromSettings: _this.getColWidthFromSettings\n          });\n          var columnsWidthSet = _this.calculatePreferredColumnsWidthWrap(targetColumns, source);\n\n          // 空数据自适应时每列多加60px宽度\n          if (api.getDisplayedRowCount() === 0) {\n            return columnsWidthSet.map(function (item) {\n              var width = item.width,\n                colId = item.colId;\n              if (colId !== _this.gridState.seq) {\n                item.width = width + _gridConst.EMPTY_DATA_COL_PADDING;\n              }\n              return item;\n            });\n          }\n          return columnsWidthSet;\n        };\n        if (columnResizeMode === _gridConst.GRID_COLUMN_RESIZE_MODE.adaptive || source === 'contextMenu') {\n          // 仅列宽自适应\n          // 居左自适应仅在存在行数据时执行\n          _this.setColumnsWidthAndCacheByAutoSize(_this.getGreedyAutoSizeColWidths({\n            columnsWidthSet: getColumnsWidthSet()\n          }));\n        } else if (columnResizeMode === _gridConst.GRID_COLUMN_RESIZE_MODE.fit) {\n          // 列宽自适应且进行等比例充满表格容器\n          var columnsWidthSet = getColumnsWidthSet();\n          if (_this.colWidthAutoFull({\n            columnsWidthSet: columnsWidthSet\n          })) {\n            _this.setColumnsWidthAndCacheByAutoSize(columnsWidthSet, {\n              isSetWidth: false\n            });\n          } else {\n            _this.setColumnsWidthAndCacheByAutoSize(columnsWidthSet);\n          }\n        } else if (columnResizeMode === _gridConst.GRID_COLUMN_RESIZE_MODE.preset) {\n          // 用户设置列宽模式，不自适应，仅充满\n          _this.colWidthAutoFull();\n        }\n\n        // 如果开启了标题高度自适应，列宽自适应后还要重新计算高度\n        if (_this.gridContrlParams.isTitleAutoHeight && source === 'contextMenu') {\n          setTimeout(function () {\n            _this.reSizeHeightByLimit({});\n          }, 0);\n        }\n      }\n    };\n    _this.delayAutoSizeColumns = function () {\n      window.requestAnimationFrame(function () {\n        _this.autoSizeColumns();\n      });\n    };\n    _this.addEventForDelayAutoSizeColumns = function () {\n      _this.gridEventService.addEventListener(_gridEventName[\"default\"].animationQueueEmpty, _this.delayAutoSizeColumns, {\n        once: true\n      });\n    };\n    _this.animationQueueEmpty = function () {\n      if (_this.lastFocusCell) {\n        var _this$lastFocusCell = _this.lastFocusCell,\n          colId = _this$lastFocusCell.colId,\n          rowKey = _this$lastFocusCell.rowKey,\n          editing = _this$lastFocusCell.editing;\n        var newNode = _this.api.getRowNode(rowKey + '');\n        if (newNode) {\n          var newRowIndex = newNode.rowIndex;\n          _this.api.ensureIndexVisible(newRowIndex);\n          _this.api.ensureColumnVisible(colId);\n          _console[\"default\"].log('reset focus', colId, editing);\n          editing ? _this.api.startEditingCell({\n            rowIndex: newRowIndex,\n            colKey: colId\n          }) : _this.api.setFocusedCell(newRowIndex, colId);\n        }\n        _this.lastFocusCell = undefined;\n      }\n    };\n    _this.addAnimationQueueEmptyListener = function () {\n      _this.gridEventService.addEventListener(_gridEventName[\"default\"].animationQueueEmpty, _this.animationQueueEmpty, {\n        once: true\n      });\n    };\n    // 更新合计行的值\n    _this.updatePinnedRowDatas = function () {\n      // 单据体合计要拿到最新的过滤后的值\n      if (_this.gridContrlParams.isEntryEntity) {\n        var _this$props$parentMod;\n        var dataValue = _this.props.model.getDataValue() || ((_this$props$parentMod = _this.props.parentModel) === null || _this$props$parentMod === void 0 ? void 0 : _this$props$parentMod.getDataValue());\n        if (dataValue) {\n          _this.pinnedBottomRowData = _this.buildPinnedRowDatas(dataValue);\n        }\n      }\n      _this.pinnedBottomRowData && (0, _rowModel.setPinnedRowDatas)(_this.api, _this.pinnedBottomRowData); // 二次直接塞值到合计行无效，这里直接调用接口重刷\n    };\n    _this.buildPinnedRowDatas = function (dataValue) {\n      var _dataValue$get;\n      var _this$gridState3 = _this.gridState,\n        seq = _this$gridState3.seq,\n        rk = _this$gridState3.rk;\n      return (0, _rowModel.buildPinnedRowDatas)({\n        dataindex: (_dataValue$get = dataValue.get('dataindex')) === null || _dataValue$get === void 0 ? void 0 : _dataValue$get.toJS(),\n        rowdatas: dataValue.get('rows'),\n        gridContrlParams: _this.gridContrlParams,\n        getDataProperty: _this.getDataProperty,\n        datacount: dataValue.get('datacount'),\n        pagecount: dataValue.get('pagecount'),\n        api: _this.api,\n        sortFilterColumn: _this.sortFilterColumn,\n        postFilterData: _this.postFilterData,\n        seq: seq,\n        rk: rk\n      });\n    };\n    /**\n     * 单据体过滤后的rk发送给后台\n     * 重置过滤后也需要发给后台\n     */\n    _this.postFilterData = function (rowKeys) {\n      var reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (_this._lastFilterData && (0, _GridUtils.compareObj)(_this._lastFilterData, {\n        rowKeys: rowKeys,\n        reset: reset\n      })) return;\n      var _this$gridState4 = _this.gridState,\n        pageId = _this$gridState4.pageId,\n        key = _this$gridState4.id;\n      var model = {\n        pageId: pageId,\n        key: key\n      };\n      var args = [[{\n        rk: rowKeys,\n        reset: reset\n      }]];\n      _this.props.postFilterData(model, args);\n      _this._lastFilterData = {\n        rowKeys: rowKeys,\n        reset: reset\n      };\n    };\n    _this.getDataDescProp = function (key) {\n      return _this.dataDesc[key];\n    };\n    _this.onGridViewSizeChanged = function (e) {\n      var _ref8 = _this.gridContrlParams || {},\n        columnResizeMode = _ref8.columnResizeMode;\n      var params = e.params;\n      var _ref9 = params || {},\n        width = _ref9.width,\n        nextWidth = _ref9.nextWidth;\n      // 第一个条件是兼容表格在页签中被隐藏导致列宽自适应宽度计算不对的场景\n      // 表格从隐藏到显示需要做一次自适应\n      if (width === 0 && nextWidth !== 0 || width !== nextWidth && nextWidth !== 0 && (columnResizeMode === _gridConst.GRID_COLUMN_RESIZE_MODE.preset || columnResizeMode === _gridConst.GRID_COLUMN_RESIZE_MODE.fit)) {\n        window.requestAnimationFrame(_this.debounceAutoSizeColumns);\n      }\n    };\n    _this.getViewportSize = function () {\n      return _this[_gridConst.VIEWPORT_SIZE];\n    };\n    _this.setVieportSize = function () {\n      var height = _this.gridViewSize && _this.gridViewSize.height;\n      if (_this.hasNavigation()) height -= _this.getNavigationHeight(); // 减去工具栏高度\n      height = height - _this.gridOptions.headerHeight * _this.gridContrlParams.maxLevel; // 减去表头高度\n      _this[_gridConst.VIEWPORT_SIZE] = {\n        height: height\n      };\n    };\n    _this.colWidthAutoFull = function (params) {\n      return (0, _gridModel.colWidthAutoFull)(_assertThisInitialized(_this), params);\n    };\n    _this.getMergeModel = function () {\n      return _this.gridContrlParams.mergeModel;\n    };\n    _this.getRigntBorderCols = function () {\n      return _this.gridContrlParams.rightBorderCols;\n    };\n    _this.onCombinedItemClick = function (colId) {\n      _this.lastFocusCombinedItem = colId;\n    };\n    _this.getFormDetailRenderDaemon = function () {\n      return _this.gridContrlParams.formDetailRenderDaemon;\n    };\n    _this.getMergeCurGpHeadRowkey = function (rk, colEntity) {\n      return (0, _rowModel.getCurrentGroupHeadRowkey)(_this.gridContrlParams.mergeModel, colEntity, rk);\n    };\n    _this.getColWidthFromSettings = function (field) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _gridConst.SETTING_COLUMN_WIDTH;\n      if (_this.columnWidthSetting[type][field]) {\n        // 优先取本地列宽\n        return _this.columnWidthSetting[type][field];\n      }\n      var settigs = _this.props.model.getPageSettingByKey();\n      if (settigs) {\n        return settigs.getIn([type, field]); // 取设置中的列宽\n      }\n      return null;\n    };\n    _this.getParentGridWidth = function () {\n      if (!_this.gridContainerI) {\n        return 0;\n      }\n      return parseInt(_this.gridContainerI.style.width) || _this.gridContainerI.offsetWidth || 0;\n    };\n    _this.constructMinorFilter = function (columnData) {\n      var colId = columnData.colId,\n        minorFilter = columnData.minorFilter,\n        isReset = columnData.isReset;\n      var targetData = _this.minorFilterColumn || {};\n      if (isReset) {\n        delete targetData[colId];\n      } else {\n        targetData = Object.assign({}, targetData, _defineProperty({}, colId, [minorFilter]));\n      }\n      _console[\"default\"].log('constructMinorFilter', targetData);\n      _this.minorFilterColumn = targetData;\n    };\n    /**\n     * @param sortColumns {colId:0,colId1:1}\n     */\n    _this.remindSortedChange = function (sortColumns) {\n      (0, _memoryCacher.setPageData)(_this.gridState.pageId, [_this.gridState.gridId, _gridConst.GRID_SORTED_CHANGE], sortColumns);\n    };\n    /**\n     *@param colunm {colId,value}\n     *@param type 'sort' or 'filter'\n     */\n    _this.publishRowSortFilter = function (column, type) {\n      var isPostFilter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var targetKey = type + 'Column';\n      var targetData = Object.assign({}, _this.sortFilterColumn && _this.sortFilterColumn[targetKey] || {});\n      var targetDataKeys = Object.keys(targetData);\n      var colId = column.colId,\n        value = column.value;\n      if (type === 'sort') {\n        _this.sortFilterColumn[targetKey] = _defineProperty({}, colId, value);\n        if (targetDataKeys.length > 1 || targetDataKeys.indexOf(colId) === -1) {\n          _this.remindSortedChange(_this.sortFilterColumn[targetKey]); // 非当前排序列变化或者之前有多列，通知其他列\n        }\n        // if (isServerFilterModeTablePage(this.gridState.pageId) && this.gridContrlParams.isEntryEntity) {\n        //   setTableSortStatus(this.gridState.pageId, this.gridState.gridId, [1, 2].includes(value)) // 1升序 2降序\n        // }\n      } else if (type === 'filter') {\n        var colFilterData = targetData[colId] || {};\n        colFilterData = Object.assign(colFilterData, value);\n        _this.constructMinorFilter(column);\n        isPostFilter && (0, _memoryCacher.setPageData)(_this.gridState.pageId, [_this.gridState.gridId, colId, type, 'data'], column); // 后端设置过滤条件\n        if (column.isReset) {\n          delete targetData[colId];\n        } else {\n          targetData = Object.assign({}, targetData, _defineProperty({}, colId, colFilterData));\n        }\n        // 过滤列发生变化，通知其他列\n        (0, _memoryCacher.setPageData)(_this.gridState.pageId, [_this.gridState.gridId, type], targetData);\n        _this.sortFilterColumn[targetKey] = targetData;\n        // if (isServerFilterModeTablePage(this.gridState.pageId) && this.gridContrlParams.isEntryEntity) {\n        //   setTableFilterStatus(this.gridState.pageId, this.gridState.gridId, Object.keys(this.sortFilterColumn[targetKey]).length > 0)\n        // }\n      }\n    };\n    /**\n     * 记录单据体表头过滤状态\n     */\n    _this.recordEntryEntityFilterStatus = function (_ref10) {\n      var isActive = _ref10.isActive,\n        colId = _ref10.colId;\n      var oldFilterColumn = _this.sortFilterColumn && _this.sortFilterColumn.filterColumn || {};\n      _this.sortFilterColumn.preActiveFilterColumns = Object.keys(oldFilterColumn).filter(function (columnKey) {\n        return oldFilterColumn[columnKey];\n      });\n      _this.sortFilterColumn.filterColumn = _objectSpread(_objectSpread({}, oldFilterColumn), {}, _defineProperty({}, colId, isActive));\n      _this.sortFilterColumn.activeFilterColumns = Object.keys(_this.sortFilterColumn.filterColumn).filter(function (columnKey) {\n        return _this.sortFilterColumn.filterColumn[columnKey];\n      });\n    };\n    _this.getRowSortFilter = function () {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n        sortFilterColumn = _assertThisInitialize3.sortFilterColumn,\n        minorFilterColumn = _assertThisInitialize3.minorFilterColumn;\n      return Object.assign({}, sortFilterColumn, {\n        minorFilterColumn: minorFilterColumn\n      });\n      // return this.gridContrlParams.sortFilterColumn\n    };\n    _this.setRowFormatValue = function (val, colId, rowIndex) {\n      var isPinned = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (isPinned) {\n        var valObj = _this.formatRowsValue.$_pinnedFormat || {};\n        valObj[colId] = val;\n        _this.formatRowsValue.$_pinnedFormat = valObj;\n      } else {\n        var valArray = _this.formatRowsValue[colId] || [];\n        valArray[rowIndex] = val;\n        _this.formatRowsValue[colId] = valArray;\n      }\n    };\n    _this.getLastestGridModel = function () {\n      if (_this.latestProps) {\n        return _this.latestProps.parentModel || _this.latestProps.model;\n      }\n    };\n    _this.getActiveRowKey = function () {\n      return _this.activeRowKey;\n    };\n    _this.hasOtherView = function () {\n      return _this.gridContrlParams.viewParams.length > 0;\n    };\n    _this.setActiveView = function (viewType) {\n      var _this$gridState5 = _this.gridState,\n        pageId = _this$gridState5.pageId,\n        gridId = _this$gridState5.gridId;\n      _this.activeView = viewType;\n      (0, _memoryCacher.setPageData)(pageId, [gridId, 'viewType'], viewType);\n      _this.resetGridContainerHeight(viewType);\n    };\n    // 切换到平铺视图，需要自动撑高且存在最大高度(567px)\n    _this.resetGridContainerHeight = function (activeView) {\n      if (activeView === 'tiledView') {\n        var settingHeight = _this.gridState.styles.height;\n        _this.gridContainer.setAttribute('grid-height', _this.gridContainer.offsetHeight);\n        _this.gridContainer.style['max-height'] = settingHeight || 567 + 'px';\n        _this.gridContainer.style.minHeight = '';\n        _this.gridContainer.style.height = settingHeight || 'auto';\n      } else if (activeView === 'grid') {\n        var height = _this.gridContainer.getAttribute('grid-height');\n        _this.gridContainer.style['max-height'] = '';\n        _this.gridContainer.style.minHeight = _this.gridViewSize.height;\n        _this.gridContainer.style.height = height + 'px';\n        if (_this.expandHeightFlagBySwithView) {\n          _this.reSizeHeight({});\n          _this.expandHeightFlagBySwithView = false;\n        }\n      }\n    };\n    _this.getGridEditable = function () {\n      return _this.gridContrlParams.gridEditable;\n    };\n    _this.getColMetaByField = function (field) {\n      var cols = _this.props.model.meta.get('columns');\n      var colMeta = (0, _GridUtils.childrenLookUp)(cols.toJS && cols.toJS(), function (item) {\n        return item.dataIndex === field;\n      }, true);\n      if (!colMeta) {\n        _console[\"default\"].warn(\"\".concat(field, \" column meta not found!\"));\n      }\n      return colMeta;\n    };\n    _this.getMulLangListInRootPage = function () {\n      var _this$props$model = _this.props.model,\n        model = _this$props$model === void 0 ? {} : _this$props$model;\n      return (0, _appModelFunction.getLangList)()(model.state);\n    };\n    _this.isCellLocked = function (rk, column) {\n      var _colDef$cellRendererP;\n      var colId = column.colId,\n        colDef = column.colDef;\n      if ((colDef === null || colDef === void 0 || (_colDef$cellRendererP = colDef.cellRendererParams) === null || _colDef$cellRendererP === void 0 || (_colDef$cellRendererP = _colDef$cellRendererP.editor) === null || _colDef$cellRendererP === void 0 ? void 0 : _colDef$cellRendererP.editStyle) === 1) {\n        // 基础资料按钮编辑模式，快捷键要跳过\n        return true;\n      }\n      var _colDefEditable = colDef && colDef.editable; // 定义为不可编辑、锁定，或仅按钮编辑时，editable为false.\n      var _dynamicColLocked = (0, _columnProperty.isCellLocked)(_this.getCellActions(_this.props), _this.dataDesc)(_this.props.model.pageId, _this.props.model.key, rk, colId, colDef === null || colDef === void 0 ? void 0 : colDef.cellRendererParams.isPrivacy, colDef === null || colDef === void 0 ? void 0 : colDef.cellRendererParams.realEditable);\n      var _runtimeEditable = !_dynamicColLocked && _colDefEditable;\n      return !_runtimeEditable;\n    };\n    _this.autoAddRow = function (_ref11) {\n      var rowIndex = _ref11.rowIndex,\n        colKey = _ref11.colKey;\n      var rk = rowIndex;\n      var rowNode = _this.api.getDisplayedRowAtIndex(rowIndex);\n      if (rowNode) {\n        // 过滤后可能node会找不到\n        rk = rowNode.data[_this.gridState.rk];\n      }\n      _this.props.handleGotoNextRow(_this.props.model, [{\n        r: rk,\n        k: colKey\n      }]);\n    };\n    _this.gridKeyDown = function (event) {\n      var keyCode = event.keyCode,\n        shiftKey = event.shiftKey,\n        ctrlKey = event.ctrlKey,\n        altKey = event.altKey;\n      var _this$gridContrlParam2 = _this.gridContrlParams,\n        gridEditable = _this$gridContrlParam2.gridEditable,\n        supportEnterShortcut = _this$gridContrlParam2.supportEnterShortcut,\n        autoAddRow = _this$gridContrlParam2.autoAddRow,\n        isEntryEntity = _this$gridContrlParam2.isEntryEntity;\n      var that = _assertThisInitialized(_this);\n      switch (keyCode) {\n        case _keyCode.KEYS.UP:\n        case _keyCode.KEYS.DOWN:\n          ctrlKey !== true && altKey !== true && _gridModel.modelFuncs.setUpDownFocus(that.api, that.columnApi, keyCode === _keyCode.KEYS.UP, that.isCellLocked, {\n            autoAddRow: autoAddRow,\n            canEdit: isEntryEntity,\n            insert: that.autoAddRow,\n            // click: (node) => that.invokeRowSelection(node),\n            toNextField: function toNextField() {\n              return (0, _initListenShortCutEvent.handleToNextField)(shiftKey, _this.gridContainer);\n            } // 跳出单体，进入单头字段\n          });\n          break;\n        case _keyCode.KEYS.ENTER:\n        case _keyCode.KEYS.TAB:\n          if (keyCode === _keyCode.KEYS.ENTER && !supportEnterShortcut) {\n            break;\n          }\n          // 回车 左右按键 tab\n          _gridModel.modelFuncs.setLeftRightFocus(that.api, that.columnApi, shiftKey, that.isCellLocked, {\n            autoAddRow: autoAddRow,\n            canEdit: isEntryEntity,\n            insert: that.autoAddRow,\n            // click: (node) => that.invokeRowSelection(node),\n            toNextField: function toNextField() {\n              return (0, _initListenShortCutEvent.handleToNextField)(shiftKey, _this.gridContainer);\n            } // 跳出单体，进入单头字段\n          });\n          break;\n        case _keyCode.KEYS.DELETE: // 这里需要再验证一下\n        case _keyCode.KEYS.BACKSPACE:\n          {\n            var selRanges = that.selectCellRanges;\n            var model = that.props.model;\n            if (!(selRanges && selRanges[0] && (selRanges[0].columns.length > 1 || Math.abs(selRanges[0].endRow.rowIndex - selRanges[0].startRow.rowIndex) >= 1))) {\n              return;\n            }\n            var value = (0, _gridPureFun.getSelectCellRangesInfo)(selRanges, that.api, that.getCellIsLock);\n            event.stopPropagation();\n            // invokeControlMethodSingle && invokeControlMethodSingle(model, 'setBillSelectRangesData', value)\n            that.props.deleteCellRanges(model, value);\n            break;\n          }\n        default:\n          break;\n      }\n    };\n    /**\n     * @param {*} nodeItem  {k,r,v}\n     */\n    _this.refreshCells = function (nodeItem, rows, dataindex, gridData) {\n      if (!_this.api) return;\n      var r = nodeItem.r,\n        k = nodeItem.k;\n      var rowIndex = (0, _grid.isServerFilterModeTablePage)(_this.gridState.pageId) && (0, _GridUtils.isEntryWithoutTreeByGridContrlParams)(_this.gridContrlParams) ? (0, _rowKeyMiddleware.getRowIndexInGridDataByRowKey)(r)(gridData, _this.gridState.rk) : (0, _rowKeyMiddleware.transformAbsolute2Relative)(r)(gridData); // 分页单据体需要转换rowIndex\n      var node = _this.api.getRowNode(r);\n      if (!node) return;\n      if (!rows[rowIndex]) {\n        return;\n      }\n      var valueIndex = dataindex[k];\n      var storeVal = rows[rowIndex][valueIndex];\n      var nodeData = node.data;\n      if (!nodeData || _lodash[\"default\"].isEqual(nodeData[k], storeVal)) return; // 如果当前节点的值与store一致 (去掉前后nodedata相等的判断)\n      node.setDataValue(k, storeVal);\n      var refreshCells = {\n        rowNodes: [node],\n        columns: [k],\n        force: false // 使用了valueGetter,可以不用强制刷新了\n      };\n      _this.api.refreshCells(refreshCells);\n\n      /**\n       * fix: BT-00343056 切换页签后，值更新问题 （临时处理）\n       * 处理切换页签时,直接清空校验信息\n       */\n      if (!_this.gridContrlParams.visible) {\n        setTimeout(function () {\n          (0, _memoryCacher.setPageData)(_this.props.model.pageId, [(_this.props.parentModel || _this.props.model).key, 'visible'], _this.gridContrlParams.visible);\n        });\n      }\n    };\n    _this.refreshTieldView = function () {\n      var _this$gridState6 = _this.gridState,\n        pageId = _this$gridState6.pageId,\n        id = _this$gridState6.id;\n      (0, _memoryCacher.setPageData)(pageId, [id, 'refreshTiledView']);\n    };\n    /**\n     * 此处处理当一个单元格多次指令更新时，可能将值设为另外一个值\n     */\n    _this.addRefreshCells = function () {\n      var cells = (0, _immutable.Map)();\n      var refreshCells = (0, _immutable.Map)();\n      var t;\n      return function (nodeItem) {\n        if (!nodeItem) return;\n        var r = nodeItem.r,\n          k = nodeItem.k;\n        if (!cells.get(r + k)) {\n          // 同一批指令之前改过了以此该单元格，可能存在脏数据\n          refreshCells = refreshCells.set([r + k], nodeItem);\n        }\n        cells = cells.set([r + k], nodeItem);\n        clearTimeout(t);\n        t = setTimeout(function () {\n          var dataindex = _this.dataDesc.dataindex;\n          var advModel = _this.latestProps.parentModel ? _this.latestProps.parentModel : _this.latestProps.model; // TODO 编辑时直接切换页签会导致取到的不是最新的store的值（因为不可见时,父组件AgGrid拦截了更新）\n          var gridData = advModel.getDataValue();\n          var rows = gridData.get('rows', (0, _immutable.List)()).toJS();\n          _this.refreshTieldViewDebounce(); // 同时刷新卡片视图\n          refreshCells.mapKeys(function (k, v) {\n            _this.refreshCells && _this.refreshCells(v, rows, dataindex, gridData);\n          });\n          cells = (0, _immutable.Map)();\n          refreshCells = (0, _immutable.Map)();\n        }, 100);\n      };\n    };\n    _this.getGridMetaProperty = function (propName) {\n      var _this$props;\n      return (_this$props = _this.props) === null || _this$props === void 0 ? void 0 : _this$props.model.getMetaProperty(propName);\n    };\n    _this.getCellIsLock = function (rk, colDef) {\n      var _this$gridState7 = _this.gridState,\n        pageId = _this$gridState7.pageId,\n        gridId = _this$gridState7.gridId;\n      var colId = colDef.colId,\n        cellRendererParams = colDef.cellRendererParams;\n      var isPrivacy = cellRendererParams.isPrivacy,\n        realEditable = cellRendererParams.realEditable;\n      return (0, _columnProperty.isCellLocked)(_this.getCellActions(_this.props), _this.dataDesc)(pageId, gridId, rk, colId, isPrivacy, realEditable);\n    };\n    /**\n     * 获取单据体第一个可以编辑的单元格\n     * @param {*} reverse // 是否倒序\n     * @returns // { rk, colId } | void\n     */\n    _this.getFirstEditableCell = function (reverse) {\n      return (0, _gridPureFun.getFirstEditableCell)({\n        reverse: reverse,\n        api: _this.api,\n        columnApi: _this.columnApi,\n        rowKey: _this.gridState.rk,\n        getCellIsLock: _this.getCellIsLock,\n        gridEditable: _this.gridContrlParams.gridEditable\n      });\n    };\n    /** ************************************************* 单元格方法 end ***************************************************/\n    /** ************************************************* 建立表格属性参数 star ***************************************************/\n    _this._handleCellChange = function (model, value) {\n      var _ref12 = value || [],\n        _ref13 = _slicedToArray(_ref12, 1),\n        valueObj = _ref13[0];\n      var _ref14 = valueObj || {},\n        r = _ref14.r,\n        k = _ref14.k,\n        v = _ref14.v;\n      var pageId = model.pageId,\n        key = model.key;\n      (0, _grid.setClientCellValueWhenPostValue)(pageId, key, {\n        rowKey: r,\n        colId: k,\n        value: v\n      });\n      _this.props.cellChange(model, value);\n    };\n    /**\n     * 提供给单元格内用的方法\n     */\n    _this.getCellActions = function (props) {\n      var actions = (0, _gridConfiguration.getGridCellActions)(props, _assertThisInitialized(_this));\n      return _objectSpread({\n        btnClick: props.gridBtnClick,\n        detailBtnClick: props.gridDetailBtnClick,\n        hyperLinkClick: _this.hyperLinkClick,\n        getMergeCurGpHeadRowkey: _this.getMergeCurGpHeadRowkey,\n        invokeCellChangeOnly: props.invokeCellChangeOnly,\n        invokeCellChangeImmediately: props.invokeCellChangeImmediately,\n        invokeControlMethodOnly: props.invokeControlMethodOnly,\n        invokeControlMethodSingle: props.invokeControlMethodSingle,\n        onCellChange: _this._handleCellChange,\n        toolBarBtnClick: props.toolBarBtnClick,\n        getVirtualData: props.getVirtualData,\n        getDetailGridData: props.getDetailGridData,\n        invokeRowSelection: _this.invokeRowSelection,\n        postRowSelection: _this.postRowSelection,\n        getColProperty: _this.getColProperty,\n        getRowProperty: _this.getRowProperty,\n        getDataProperty: _this.getDataProperty,\n        getLockedByNum: _this.getLockedByNum,\n        getVisibleByNum: _this.getVisibleByNum,\n        getGridState: function getGridState() {\n          return _this.gridState;\n        },\n        getMergeModel: _this.getMergeModel,\n        getRigntBorderCols: _this.getRigntBorderCols,\n        selectByGroup: _this.selectByGroup,\n        onCombinedItemClick: _this.onCombinedItemClick,\n        getFormDetailRenderDaemon: _this.getFormDetailRenderDaemon,\n        getNodeByRowKey: _this.getNodeByRowKey,\n        getNodeByRowIndex: _this.getNodeByRowIndex,\n        dispatch: _this.props.dispatch,\n        getGridContainer: function getGridContainer() {\n          return _this.gridContainer;\n        },\n        showFormByTips: _this.props.showFormByTipsInAction,\n        getColWidthFromSettings: _this.getColWidthFromSettings,\n        getParentGridWidth: _this.getParentGridWidth,\n        pushDelayInvoke: _this.pushDelayInvoke,\n        publishRowSortFilter: _this.publishRowSortFilter,\n        recordEntryEntityFilterStatus: _this.recordEntryEntityFilterStatus,\n        setRowFormatValue: _this.setRowFormatValue,\n        getRowSortFilter: _this.getRowSortFilter,\n        getGridEditable: _this.getGridEditable,\n        getMulLangListInRootPage: _this.getMulLangListInRootPage,\n        getTelViaList: _this.props.getTelViaList,\n        getGridMetaProperty: _this.getGridMetaProperty,\n        setGridDisplayFun: _this.setGridDisplayFun,\n        invokeCustomMethod: _this.props.invokeCustomMethod,\n        // 自定义控件调用方法\n        setGridThisProp: _this.setGridThisProp,\n        getGridThisProp: _this.getGridThisProp,\n        gridKeyDown: _this.gridKeyDown,\n        addGirdPostData: _this.props.addGirdPostData,\n        invokeUpdateCells: _this.props.invokeUpdateCells\n      }, actions);\n    };\n    /** ************************************************* 建立表格属性参数 end ***************************************************/\n    /** ************************************************* 行数据处理 star ***************************************************/\n    // 将gridData作为属性，可考虑改用setRowData更新值。\n    // TODO: 将此方法提前到shouldupdate来进行，，在数据行未有变化时能减少构建行数据对象\n    // TODO: 需要修改成immutable\n    _this.getGridRowData = function () {\n      _this.gridRows = [];\n      _this.pinnedBottomRowData = null;\n      var dataValue = _this.props.model.getDataValue() || _this.props.parentModel && _this.props.parentModel.getDataValue();\n      if (dataValue) {\n        var _this$pinnedBottomRow;\n        if (!_this.dataLoaded) {\n          _this.api && _this.api.hideOverlay();\n          _this.dataLoaded = true;\n        }\n        _this.oldDataRows = _this.dataRows;\n        _this.dataRows = dataValue.get('rows');\n        // 行数据是一个复杂对象，这边toJS()之后，在单元格渲染器中使用更方便\n        var thisdatas = dataValue.toJS();\n        Object.assign(_this.dataDesc, {\n          dataindex: thisdatas.dataindex,\n          isSplitPage: thisdatas.isSplitPage,\n          datacount: thisdatas.datacount,\n          billdatacount: thisdatas.billdatacount,\n          pageindex: thisdatas.pageindex,\n          pagerows: thisdatas.pagerows,\n          pagecount: thisdatas.pagecount,\n          rowcount: thisdatas.rowcount,\n          realPageCount: thisdatas.realPageCount,\n          isSelectedAll: thisdatas.isSelectedAll,\n          islastpage: thisdatas.islastpage,\n          postcols: thisdatas.postcols || [],\n          isgetrealcount: thisdatas.isgetrealcount || false,\n          isgetsumdata: thisdatas.isgetsumdata || false,\n          isOutMaxDataCount: thisdatas.isOutMaxDataCount || false,\n          limitdatacount: thisdatas.limitdatacount,\n          phide: thisdatas.phide\n        });\n        var rows = thisdatas.rows;\n        _this.gridRows = _this.takeRows(rows, _this.dataDesc);\n        if (!_this.gridContrlParams.isVirtualView && !_this.gridOptions.suppressNoRowsOverlay && _this.gridRows.length <= 0) _this.api && _this.api.showNoRowsOverlay(); // suppressNoRowsOverlay不显示空行\n        // 不出滚动条\n        _this.pinnedBottomRowData = _this.buildPinnedRowDatas(dataValue);\n        // 用户设置修改行高，需要更新合计行的数据，合计行高度才会刷新\n        if (_this.refreshing && (_this$pinnedBottomRow = _this.pinnedBottomRowData) !== null && _this$pinnedBottomRow !== void 0 && _this$pinnedBottomRow[0]) {\n          _this.pinnedBottomRowData = [_objectSpread(_objectSpread({}, _this.pinnedBottomRowData[0]), {}, {\n            _flag_: Math.random()\n          })];\n          _this.refreshing = false;\n        }\n      }\n      if (_this.api && _this.api.isAnyFilterPresent()) {\n        // 单据体增/删行后计算是否需要显示空行提示\n        _this.delayFuncs.push(function () {\n          if (_this.api.getDisplayedRowCount() === 0) {\n            _this.api.showNoRowsOverlay();\n            return;\n          }\n          _this.api.hideOverlay();\n        });\n      }\n      return _this.gridRows;\n    };\n    /**\n     * 获取行数据\n     * @param {*} rows\n     * @param {*} colIdxes\n     */\n    _this.takeRows = function (rows, dataDesc) {\n      var rowdatas = [];\n      var isTree = false;\n      if (_this.gridContrlParams.treeTable && _this.gridContrlParams.treeTable.isTreeTable) {\n        isTree = true;\n      }\n      var startIndex = _this.getStartIndex(dataDesc);\n      rowdatas = _gridModel.modelFuncs.takeRows(rows, startIndex, dataDesc.dataindex, _this.gridState.seq, isTree, !!_this.gridContrlParams.treeVirtualView);\n      var mergeM = _this.gridContrlParams.mergeModel;\n      if (mergeM) {\n        // record merge\n        // window.console.profile(\"recordMerge\")\n        // spanEngine(mergeM, rowdatas, this.gridState, this.gridState.columnDefs)\n        (0, _rowModel.entitySpanEngine)(mergeM, rowdatas, _this.gridState);\n        // window.console.profileEnd(\"recordMerge\");\n      }\n      if (isTree) {\n        _this.gridContrlParams.treeTable.nodeNums = rowdatas.length;\n        rowdatas = (0, _treeUtils.buildTreeData)(rowdatas);\n        rowdatas = (0, _treeDefinition.getTreeEntryData)(_this.gridContrlParams.treeTable, rowdatas, _this.gridState.rk, _this.gridContrlParams.showTreeSeq);\n      }\n      return rowdatas;\n    };\n    /**\n     * 计算每页数据的开始序号\n     */\n    _this.getStartIndex = function (dataDesc) {\n      var pageindex = dataDesc.pageindex,\n        pagerows = dataDesc.pagerows,\n        isSplitPage = dataDesc.isSplitPage,\n        startIndex = dataDesc.startIndex;\n      if (!_this.gridContrlParams.isVirtualView) {\n        startIndex = (pageindex - 1) * pagerows;\n        if (isSplitPage === false) {\n          startIndex = 0;\n        }\n      }\n      return startIndex;\n    };\n    /** ************************************************* 行数据处理 end ***************************************************/\n    /** ************************************************* 表格行选中 star ***************************************************/\n    _this.onNotCellClickHandle = function (e) {\n      if (_this.gridContrlParams.isEntryEntity) {\n        // 判断是点击事件触发在行上，应该清空当前选中的单元格\n        // TODO: 报表和列表因为点击还有反选，不能像单据体一样处理 列表还需考虑融合行、展开行等情况\n        // 如果还有问题可以考虑修改成单元格点击发送焦点单元格,行点击不发焦点单元格，但是这样改动较大\n        if (e.target && e.target.getAttribute && e.target.getAttribute('role') === 'row') {\n          _this.api.clearFocusedCell();\n        }\n      }\n    };\n    _this.supressPostClick = function (_ref15) {\n      var api = _ref15.api,\n        rowIndex = _ref15.rowIndex,\n        isListView = _ref15.isListView;\n      if (isListView) {\n        var focuseCell = api.getFocusedCell();\n        var editingCell = api.getEditingCells()[0];\n        if (focuseCell && editingCell) {\n          var focuseRowIndex = focuseCell.rowIndex,\n            focuseColumn = focuseCell.column;\n          var editingRowIndex = editingCell.rowIndex,\n            editingColumn = editingCell.column;\n          return focuseRowIndex === rowIndex && focuseRowIndex === editingRowIndex && focuseColumn.code === editingColumn.code;\n        }\n      }\n    };\n    /**\n     * 行点击处理\n     */\n    _this.clickOrDoubleClick = function (e) {\n      var node = e.node,\n        data = e.data,\n        event = e.event,\n        api = e.api,\n        rowIndex = e.rowIndex;\n      if (_this.supressPostClick({\n        api: api,\n        rowIndex: rowIndex,\n        isListView: _this.gridContrlParams.isListView\n      })) {\n        return;\n      }\n      _this.onNotCellClickHandle(event);\n      var focuseCell = _this.api.getFocusedCell();\n      var column = focuseCell ? focuseCell.column : null;\n      if (_this.gridContrlParams.isListView && _this.gridOptions.rowSelection === 'multiple' && _this.lastClickedNode && event.shiftKey) {\n        // 按住shift选择\n        // shiftSelect(this, e);\n        (0, _rowModel.doShiftSelect)(node, _this.lastClickedNode, {\n          data: data,\n          column: column,\n          rk: _this.gridState.rk,\n          getNodeByRowKey: _this.getNodeByRowKey,\n          getNodeByRowIndex: _this.getNodeByRowIndex,\n          gridContrlParams: _this.gridContrlParams,\n          postRowSelection: _this.postRowSelection\n        });\n        _this.lastClickedNode = node;\n        return;\n      }\n      if (node && node.rowPinned) return; // 合计行不处理\n      // 组节点点击处理 By Shawn\n      if (node.group) {\n        // return this.doGroupNodeClick(e);\n        _this.doGroupNodeClick(e);\n      }\n      /**\n       * 单击事件模拟双击\n       */\n      var fieldKey = focuseCell ? column.colId == _GridUtils.SELECTIONCOLID ? '0' : column.colId : '0';\n      if (focuseCell && column && column.colDef.cellRendererParams.type === 'combinedField') {\n        fieldKey = _this.lastFocusCombinedItem;\n      }\n      var nowRk = data[_this.gridState.rk];\n      _this.lastClickedNode = node;\n      if (_this.clickTimer) {\n        clearTimeout(_this.clickTimer);\n        _this.clickTimer = null;\n        if (_this.lastClickedRow != nowRk || _this.lastClickField != fieldKey) {\n          _this.lastClickField = fieldKey;\n          _this.lastClickedRow = nowRk;\n          // this.reverseSelect(e)\n          (0, _rowModel.doClickSelect)(e, nowRk, column)(_assertThisInitialized(_this));\n          _this.selectByGroup(e, null, true, _this.postRowSelection);\n        } else {\n          _this.selectByGroup(e, true, false, function () {\n            if (node.detail) return; // 展开行不选中\n            if (!_this.gridContrlParams.suppressEntryRowClickSelect) {\n              node.setSelected(true);\n            }\n          });\n          _this.onRowDoubleClicked(e, 'doubleClick');\n        }\n      } else {\n        _this.lastClickField = fieldKey;\n        _this.lastClickedRow = nowRk;\n        // this.reverseSelect(e)\n        (0, _rowModel.doClickSelect)(e, nowRk, column)(_assertThisInitialized(_this));\n        _this.selectByGroup(e, null, true, _this.postRowSelection);\n        _this.clickTimer = setTimeout(function () {\n          _this.clickTimer = null;\n        }, 300);\n      }\n    };\n    /** 触发行选中，只有走这个方法才会触发向后台的指令\n     * @param node 操作行\n     * @param isSelect 是否选中\n     * @param exclusive 选中是否排它\n     * @param suppressPost 不向后台发送消息\n     */\n    _this.invokeRowSelection = function (node) {\n      var isSelect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var exclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var suppressPost = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (_this.gridOptions.rowSelection == 'single' && isSelect) {\n        // 单选。\n        exclusive = true; // 强制排它\n      }\n      if (!_this.gridContrlParams.suppressEntryRowClickSelect) {\n        // 禁止行点击选中后，行选中会在选择列内部处理\n        node.setSelected(isSelect, exclusive);\n      }\n      if (!suppressPost) {\n        _this.postRowSelection();\n      }\n    };\n    // 发entryRowClick事件\n    _this.postRowSelection = function (e) {\n      var selectedKey = [];\n      var supposeFields = [];\n      var selectedRows = [];\n      var rkN = _this.gridState.rk;\n      selectedRows = _this.api.getSelectedRows();\n      var curRowKey = '';\n      var focused = _this.api.getFocusedCell();\n      var editable = focused && focused.column ? focused.column.colDef.editable : false; // 判断是否进入编辑态，进入编辑态不向后端发行点击事件\n      var rowKey = -1;\n      var _this$gridContrlParam3 = _this.gridContrlParams,\n        mergeModel = _this$gridContrlParam3.mergeModel,\n        suppressMergeSelection = _this$gridContrlParam3.suppressMergeSelection;\n      if (focused) {\n        var _focusNode$data;\n        _this.api.getSelectedNodes().forEach(function (n) {\n          if (n.rowIndex == focused.rowIndex) {\n            rowKey = n.data[rkN];\n          }\n        });\n        var rowIndex = focused.rowIndex;\n        var focusNode = _this.api.getDisplayedRowAtIndex(rowIndex);\n        // 禁止行点击选中，或者禁止行选中之后需要从focus单元格取焦点行\n        // (会导致全部取消并且焦点单元格所在行是不可选择时焦点行取到不可选择的焦点行,目前只影响禁止行选中的场景)\n        // TODO （取消）全选时特殊判断\n        if (_this.gridContrlParams.suppressEntryRowClickSelect || focusNode !== null && focusNode !== void 0 && (_focusNode$data = focusNode.data) !== null && _focusNode$data !== void 0 && (_focusNode$data = _focusNode$data.cprop) !== null && _focusNode$data !== void 0 && _focusNode$data.disabled) {\n          rowKey = focusNode && focusNode.data[rkN];\n          if (_this.gridContrlParams.suppressEntryRowClickSelect && focused.column.colId === 'XXfieldXX' && !focusNode.selected) {\n            // 禁止行点击选中模式下,点击复选框取消选中时,把焦点行设置为-1\n            rowKey = -1;\n          }\n        }\n      }\n      var fieldKey = focused && focused.column ? focused.column.colId == _GridUtils.SELECTIONCOLID ? '0' : focused.column.colId : _this.lastFocusField || '0';\n      if (focused && focused.column && focused.column.colDef.cellRendererParams.type === 'combinedField') {\n        fieldKey = _this.lastFocusCombinedItem;\n      }\n      selectedRows.map(function (item) {\n        selectedKey.push(item[_this.gridState.rk]);\n        if (_this.dataDesc.postcols.length > 0) {\n          var supposeItem = [];\n          _this.dataDesc.postcols.forEach(function (x) {\n            return supposeItem.push(item[x]);\n          });\n          supposeFields.push(supposeItem);\n        }\n      });\n      rowKey = rowKey >= 0 ? rowKey : selectedKey.length > 0 ? selectedKey[0] : -1;\n\n      // 单据体两种特殊选择模式，点击空白区域时应该设置当前行为焦点行\n      if (!focused && (_this.gridContrlParams.suppressEntryRowClickSelect || _this.gridContrlParams.entryRowClickMultiSelect)) {\n        if (e && e.node && e.node.data) {\n          rowKey = e.node.data[rkN];\n        }\n      }\n      // 最后的焦点行 && 焦点列 && 选中行数\n      if (!_this.gridContrlParams.suppressEntryRowClickSelect) {\n        // 禁止行点击选中后，不需要以下判断，否则会拦截行选中请求\n        if (rowKey === _this.lastFocusRowKey && fieldKey === _this.lastFocusField && editable && _this.selectedRows.length === selectedRows.length) return;\n      }\n      // this.selectedRows = selectedKey\n      _this.recordSelectedRows(selectedKey);\n      _this.lastFocusRowKey = rowKey;\n      if (selectedRows.length == 1) {\n        curRowKey = selectedRows[0][rkN];\n        // TODO lastRowKey lastFocusField lastFocusRowKey, isCancelBeforeStart 会发送一次请求，前面这些字段是为了避免行点击时重复发送\n        if (!_this.gridContrlParams.suppressEntryRowClickSelect) {\n          // 禁止行点击选中后，不需要以下判断，否则会拦截行选中请求\n          if (!_this.gridContrlParams.isListView && _this.lastRowKey === curRowKey && _this.lastFocusField === fieldKey && editable) return;\n        }\n        _this.lastRowKey = curRowKey;\n        _this.lastFocusField = fieldKey;\n      } else {\n        _this.lastRowKey = curRowKey = 'O'; // 未选中一行也进入此逻辑\n        _this.lastFocusField = fieldKey;\n      }\n      if (_this.gridContrlParams.hasSelectAllRow) {\n        var node = e && e.node || _this.getNodeByRowIndex(focused && focused.rowIndex);\n        _this.differenceUpdateRowSelection(node);\n        return;\n      }\n      rowKey = (0, _rowModel.getRealRowKey)(rowKey, mergeModel, suppressMergeSelection);\n      var sel = [rowKey];\n      // 列表选中的时候，需要添加参数区分是否是复选框选中\n      if (_this.gridContrlParams.isListView) {\n        var _focused$column, _focused$column2;\n        var selectTrigger = (focused === null || focused === void 0 || (_focused$column = focused.column) === null || _focused$column === void 0 ? void 0 : _focused$column.colId) === 'XXfieldXX' ? '__selectByCheckBox__' : (focused === null || focused === void 0 || (_focused$column2 = focused.column) === null || _focused$column2 === void 0 ? void 0 : _focused$column2.colId) || '';\n        sel.push(selectTrigger);\n      }\n      var selectState = _this.buildSelectedRowJson(selectedKey, rowKey, supposeFields);\n\n      // console.log('EntityRowClick', '行:', this.lastFocusRowKey, '列:', this.lastFocusField)\n      var model = _this.props.parentModel || _this.props.model;\n      (0, _memoryCacher.setPageData)(_this.gridState.pageId, [_this.gridState.gridId, 'postRowClick'], {\n        postSelectRowCount: selectedKey.length\n      });\n      _this.props.dispatch((0, _appModelFunction.convertAppModelFunctionAction)((0, _appModelFunction.setControlPostValue)(model.pageId, model.key, selectState)));\n      _this.props.EntityRowClick(model, sel);\n    };\n    _this.differenceUpdateRowSelection = function (node, isDoubleClick) {\n      if (!node) return;\n      var focused = _this.api.getFocusedCell();\n      var fieldKey = focused && focused.column && focused.column.colId !== _GridUtils.SELECTIONCOLID ? focused.column.colId : '0';\n      var data = node.data;\n      if (!data) return;\n      var nowRk = data[_this.gridState.rk];\n      var selectedRows = _this.api.getSelectedRows();\n      var isSelect = selectedRows.some(function (row) {\n        return row[_this.gridState.rk] === nowRk;\n      });\n      var methodName = isDoubleClick ? 'doubleClickRow' : isSelect ? 'addRowSelection' : 'clearRowSelection';\n      var selectedRowKeys = [nowRk];\n      var rows = [data];\n      var selectedData = rows.map(function (row) {\n        if (_this.dataDesc.postcols.length > 0) {\n          return _this.dataDesc.postcols.map(function (col) {\n            return row[col];\n          });\n        }\n        return [];\n      });\n      _this.postDifferenceUpdateRowSelection({\n        methodName: methodName,\n        selectedRowKeys: selectedRowKeys,\n        selectedData: selectedData,\n        fieldKey: fieldKey,\n        rowKeyValue: nowRk\n      });\n    };\n    // 差量更新选中行\n    // methodName: addRowSelection | clearRowSelection | doubleClickRow\n    _this.postDifferenceUpdateRowSelection = function (_ref16) {\n      var methodName = _ref16.methodName,\n        selectedRowKeys = _ref16.selectedRowKeys,\n        selectedData = _ref16.selectedData,\n        fieldKey = _ref16.fieldKey,\n        rowKeyValue = _ref16.rowKeyValue;\n      var model = _this.props.parentModel || _this.props.model;\n      var pageId = model.pageId,\n        key = model.key;\n      var selectState = {\n        fieldKey: fieldKey,\n        row: rowKeyValue,\n        isClientNewRow: false,\n        clientNewRows: ''\n      };\n      _this.props.dispatch((0, _appModelFunction.convertAppModelFunctionAction)((0, _appModelFunction.setControlPostValue)(pageId, key, selectState)));\n      proxy.disableDisposeRequest({\n        pageId: pageId,\n        key: key,\n        methodName: methodName\n      }, function () {\n        return _this.props.invokeControlMethodOnly({\n          pageId: pageId,\n          key: key\n        }, methodName, [selectedRowKeys, selectedData]);\n      });\n    };\n    // 反选\n    _this.reverseSelect = function (e) {\n      if (e && e.node) {\n        if (e.node.detail) {\n          // 如果点击的是formdetail,不能反选,而要强制选中其父行\n          e.node.parent && e.node.parent.setSelected(true);\n          // this.setLastSelectedNode(e.node.parent)\n        } else if (_this.gridContrlParams.isListView) {\n          e.node.setSelected(!e.node.selected);\n          // e.node.selected && this.setLastSelectedNode(e.node)\n        }\n      }\n    };\n    _this.getAllSelectedInfo = function (rowKey) {\n      var selectedRows = _this.api.getSelectedRows();\n      var selectedKey = [];\n      var supposeFields = [];\n      selectedRows.map(function (item) {\n        selectedKey.push(item[_this.gridState.rk]);\n        if (_this.dataDesc.postcols.length > 0) {\n          var supposeItem = [];\n          _this.dataDesc.postcols.forEach(function (x) {\n            return supposeItem.push(item[x]);\n          });\n          supposeFields.push(supposeItem);\n        }\n      });\n      return _this.buildSelectedRowJson(selectedKey, rowKey, supposeFields);\n    };\n    _this.selectByGroup = function (e, forceSelection, triggerFetch, callback) {\n      var _this$gridContrlParam4 = _this.gridContrlParams,\n        mergeModel = _this$gridContrlParam4.mergeModel,\n        suppressMergeSelection = _this$gridContrlParam4.suppressMergeSelection;\n      if (mergeModel == null || mergeModel.suppress) return callback(e); // 不是合并行情况，直接走原逻辑\n      var rk = _this.gridState.rk;\n      var rkV = e.data[rk];\n      var column = _this.api.getFocusedCell() ? _this.api.getFocusedCell().column : null;\n      var groupRks = (0, _rowModel.getClickColMergeGroup)(rkV, column, mergeModel, suppressMergeSelection);\n      if (groupRks.length <= 1) return callback(); // 不是合并行情况，直接走原逻辑\n      var toSelect = e.node.selected;\n      if (forceSelection != null) toSelect = !!forceSelection;\n      // this.doGroupRowSelected(groupRks,toSelect);\n      (0, _rowModel.doGroupSelect)(groupRks, toSelect)(_assertThisInitialized(_this));\n      if (triggerFetch) _this.postRowSelection(); // 主动触发事件\n    };\n    _this.recordSelectedRows = function (rowKeys) {\n      _this.selectedRows = rowKeys || [];\n      _this.setActiveRowKey(_this.selectedRows);\n    };\n    _this.isEntryEntity = function () {\n      var _this$gridContrlParam5 = _this.gridContrlParams,\n        isListView = _this$gridContrlParam5.isListView,\n        isVirtualView = _this$gridContrlParam5.isVirtualView,\n        treeTable = _this$gridContrlParam5.treeTable;\n      return !(isListView || isVirtualView || treeTable);\n    };\n    _this.setActiveRowKey = function (selectedRows) {\n      if (!_this.isEntryEntity()) return; // 仅在单据体中处理\n      if (selectedRows.length > 0) {\n        _this.activeRowKey = _this.selectedRows[0];\n      } else {\n        // 取当前的第一行rowKey\n        _this.activeRowKey = _this.gridRows.length ? _this.gridRows[0][_this.gridState.rk] : 0;\n      }\n      if (_this.activeView === 'tiledView') {\n        // 激活如果是平铺视图需要立即刷新\n        var _this$gridState8 = _this.gridState,\n          pageId = _this$gridState8.pageId,\n          id = _this$gridState8.id;\n        (0, _memoryCacher.setPageData)(pageId, [id, 'setActiveRowKey'], _this.activeRowKey);\n      }\n    };\n    // 锁定性和可见性变化的时候需要手动刷新一次\n    _this.publishForceRefreshViews = function () {\n      var _this$gridState9 = _this.gridState,\n        pageId = _this$gridState9.pageId,\n        id = _this$gridState9.id;\n      if (_this.hasOtherView()) {\n        (0, _memoryCacher.setPageData)(pageId, [id, 'refreshTiledView']);\n      }\n    };\n    /** ************************************************* 表格行选中 end ***************************************************/\n    /** ************************************************* 后台状态相关指令 star ***************************************************/\n    // 设置可见行\n    _this.ensureRowVisible = function (rowIndex) {\n      var _this$gridContrlParam6;\n      return _this.api && _this.api.ensureIndexVisible(rowIndex, (_this$gridContrlParam6 = _this.gridContrlParams.treeTable) !== null && _this$gridContrlParam6 !== void 0 && _this$gridContrlParam6.isLazyLoadTree ? 'middle' : undefined);\n    };\n    // 树形单据体更新的时候可能需要联动修改行数据造成刷新，刷新后要保持在之前的滚动条位置\n    _this.scrollAfterUpdate = function () {\n      if (_this.lastScrollTop || _this.lastScrollTop === 0) {\n        var bodyViewport = _this.gridContainerI && _this.gridContainerI.querySelector('.ag-body-viewport');\n        if (bodyViewport) {\n          bodyViewport.scrollTop = _this.lastScrollTop;\n        }\n        _this.lastScrollTop = undefined;\n      }\n    };\n    // 设置焦点行\n    _this.setFocusedCell = function (fcs) {\n      if (fcs == null || fcs.length <= 0 || fcs[0] === -1) {\n        _this.api && _this.api.clearFocusedCell();\n        return; // 焦点只有一个\n      }\n      var matched = false;\n      var frThis = _assertThisInitialized(_this);\n      var ck = frThis.lastFocusField;\n      var rowKey = fcs[0];\n      var colKey = fcs[1] !== undefined ? fcs[1] : '';\n      var rkv = frThis.gridState.rk;\n      if (colKey == '0' || colKey == '') {\n        var field = _this.gridOptions.columnApi.getAllDisplayedColumns();\n        if (field.length === 0) {\n          _console[\"default\"].warn('there are no columns !');\n          return;\n        }\n        // 单据体如果未设置指定焦点单元格 焦点设在第一个可以编辑的单元格\n        if (!_this.gridContrlParams.isListView && !_this.gridContrlParams.isVirtualView) {\n          var _field = field.filter(function (item) {\n            return item.colDef && item.colDef.editable === true;\n          });\n          _field.length > 0 && (field = _field);\n        }\n        colKey = field[0].colId == '0' ? field[1] : field[0];\n        colKey = colKey && colKey.colId;\n      }\n      frThis.lastFocusField = rkv;\n      _this.hasSetFocusedCell = true;\n      _this.lastFocusCell = {\n        colId: colKey,\n        rowKey: rowKey,\n        editing: false\n      };\n      setTimeout(function () {\n        var fnode = _this.api.getRowNode(rowKey + ''); // id是string类型，目前后端传的数字\n        if (fnode === undefined) return;\n        _this.api.ensureColumnVisible(colKey); // 确保设置焦点的列可见\n        var nodeRowIndex = fnode && fnode.rowIndex;\n        if (nodeRowIndex == null) {\n          nodeRowIndex = rowKey; // 兼容取不到node，直接将行号设成后端\n        }\n        _this.ensureRowVisible(nodeRowIndex);\n        _this.api.setFocusedCell(nodeRowIndex, colKey, null); // 先确保可见再设置焦点\n      }, 0); // setTimeout\n    };\n    // 设置选中行\n    _this.setSelectRows = function (rowIndexes, colKey) {\n      if (Array.isArray(rowIndexes) && rowIndexes[0] && Array.isArray(rowIndexes[0])) {\n        rowIndexes = rowIndexes[0];\n      }\n      var rkN = _this.gridState.rk;\n      var matched = 0;\n      if (!_this.api) {\n        _this.recordSelectedRows(rowIndexes);\n        return;\n      }\n      _this.api.clearFocusedCell();\n      _this.lastFocusRowKey = -1;\n      _this.api.clearRangeSelection();\n      // let temLastFocus = this.lastFocusField\n      _this.api.deselectAll();\n      var indexsLength = rowIndexes.length;\n      if (indexsLength <= 0) {\n        // 设置选中行为空时，清除状态\n        _this.lastRowKey = 'O';\n        _this.lastFocusField = '';\n        _this.recordSelectedRows([]);\n        return;\n      }\n      var stateAlocate = function stateAlocate() {\n        if (indexsLength === 1) {\n          _this.lastRowKey = rowIndexes[0];\n        } else {\n          _this.lastRowKey = 'O';\n        }\n        // this.lastFocusField = temLastFocus //导致setFocus无效\n\n        // 如果是列表，直接回传最终选中状态与要携带的数据\n        if (_this.gridContrlParams.isListView) {\n          var temp = _this.lastRowKey;\n          _this.lastRowKey = -1; // 抹掉状态记录，强制回传状态\n          _this.postRowSelection(); // 回传状态给服务端\n          _this.lastRowKey = temp; // 恢复状态记录\n          _this.setSelectedRowsCount && _this.setSelectedRowsCount(matched);\n        } else {\n          if (matched != indexsLength) {\n            // console.log('mis matched!!!!!!!',rowIndexes);\n            // this.selectedRows = rowIndexes// 新增行得记录,因为setFocus比store更新快。\n            _this.recordSelectedRows(rowIndexes);\n            // this.rowSelectionChanged({},'header');//回传状态给服务端\n          }\n        }\n      };\n      setTimeout(function () {\n        var usedIndex = new Set();\n        var setIndexs = new Set(rowIndexes);\n        var renderNodes = _this.api.getRenderedNodes();\n        for (var n = 0; n < renderNodes.length; n++) {\n          if (indexsLength <= matched) break;\n          if (renderNodes[n].detail) break; // detailNode和父级node的数据一样，过滤出去\n          if (setIndexs.has(renderNodes[n].data[rkN])) {\n            renderNodes[n].setSelected(true);\n            matched += 1;\n            usedIndex.add(renderNodes[n].data[rkN]);\n          }\n        }\n        var leftIndexs = new Set(_toConsumableArray(setIndexs).filter(function (x) {\n          return !usedIndex.has(x);\n        }));\n        setIndexs = null;\n        if (leftIndexs.size > 0) {\n          // 有未匹配到的\n          setTimeout(function () {\n            leftIndexs.forEach(function (ix) {\n              var node = _this.api.getRowNode(ix);\n              if (node) {\n                if (indexsLength <= matched) return;\n                node.setSelected(true);\n                matched += 1;\n              }\n            });\n            stateAlocate();\n          }, 0);\n        } else {\n          stateAlocate();\n        }\n      }, 0);\n      _this.updateSelectionCol(true);\n    };\n    // 设置编辑单元格\n    _this.setActiveCell = function (cellInfo) {\n      var colKey = cellInfo.k;\n      if (colKey == null || colKey === '') return;\n      var rk = cellInfo.r;\n      if (rk == null || rk < 0) return;\n      var node = _this.getNodeByRowKey(rk);\n      if (node) {\n        _this.api.startEditingCell({\n          rowIndex: node.rowIndex,\n          colKey: colKey\n        });\n      }\n    };\n    // getRowCountOutRangeInfo = () => {\n    //   this.getRealPageCountInfoHandle && clearTimeout(this.getRealPageCountInfoHandle)\n    //   this.realPageCountInfoCount ? this.realPageCountInfoCount++ : 1\n    //   if (this.realPageCountInfoCount && this.realPageCountInfoCount > 30) {\n    //     console.warn('get real row count request is too many!')\n    //     this.realPageCountInfoCount = 1\n    //     return\n    //   }\n    //   let model = { pageId: this.props.model.pageId, key: this.gridState.gridId }\n    //   this.props.invokeControlMethodOnly(model, 'getRowCountOutRangeInfo', [this.dataDesc.datacount])\n    //   this.getRealPageCountInfoHandle = setTimeout(() => {\n    //     this.getRowCountOutRangeInfo()\n    //   }, 3000)\n    // }\n    // setRowCountOutRangeInfoReady = (data) => {\n    //   if (data) {\n    //     this.getRealPageCountInfoHandle && clearTimeout(this.getRealPageCountInfoHandle)\n    //     this.realPageCountInfoCount = 1\n    //   }\n    // }\n    /** ************************************************* 后台状态相关指令 end ***************************************************/\n    /** ************************************************* AgGrid callback star ***************************************************/\n    /**\n     * If the grid receives changes due to bound properties, this event fires after the grid has finished processing the change.\n     */\n    _this.gridFinishedUpdate = function (e) {\n      // 列表要做合计行列宽自适应可以在这做，目前因为性能问题已经取消掉\n      if (_this.gridContrlParams != null) {\n        // 指令隐藏表格的容器或表格时，触发了unmount之后还走了一次gridFinishedUpdate ? 此时gridContrlparams已销毁\n        _this.reSizeHeightByLimit({\n          oper: ''\n        }); // 设置高度\n      } else {}\n    };\n    // 行操作这些，代码先搬过来\n    _this.handleAgCoreKeyDown = function (event) {\n      // const shiftKey = event.shiftKey\n      // const ctrlKey = isCtrlKey(event) || event.ctrlKey\n      // const altKey = event.altKey\n      // const keyCode = event.keyCode\n      // const stopFun = () => {\n      //   event.preventDefault()\n      //   event.stopPropagation()\n      // }\n      // // gridtype 有值就是非编辑列表，不响应表格快捷键\n      // if (this.props.model.meta.get('gridtype')) {\n      //   return\n      // }\n      // if (shiftKey && [KEYS.TAB].indexOf(keyCode) >= 0) {\n      //   // 发给外部\n\n      // } else if (altKey && [KEYS.UP, KEYS.DOWN].indexOf(keyCode) >= 0) {\n      //   // alt+up\t把当前分录内容向上移一行\n      //   // alt+down\t把当前分录内容向下移一行\n      //   this.props.handleKeyEvent(this.props.model, [KEYS.ALT, keyCode])\n      //   stopFun()\n      // } else if ([KEYS.UP, KEYS.DOWN, KEYS.ENTER, KEYS.TAB].indexOf(keyCode) >= 0) {\n      //   stopFun()\n      // } else if (shiftKey && [KEYS.INSERT, KEYS.DELETE].indexOf(keyCode) >= 0) {\n      //   // shift+insert\t下方插入行\n      //   // shift+delete\t删除当前行\n      //   this.props.handleKeyEvent(this.props.model, [KEYS.SHIFT, keyCode])\n      //   stopFun()\n      // } else if ([KEYS.F2, KEYS.F4, KEYS.F6].indexOf(keyCode) >= 0) {\n      //   // F2\t支持录入赠品的单据，单据编辑界面分录中，支持标记和取消赠品\n      //   // F7\t光标定位在可通过选择器选择资料的单元格时 移到basedata中触发\n      //   // F4\t速查\n      //   // F6\t批量填充\n      //   stopFun()\n      //   let postData = []\n      //   const postValue = event.target.value\n      //   if (keyCode === KEYS.F6) { // F6添加postData\n      //     if (postValue === undefined) return // 锁定等情况的不发\n      //     const rowIndex = this.lastFocusRowKey // 兼容多行情况，不能使用getActiveRowKey\n      //     const theColumn = this.props.model.meta.get('columns').find(it => it.get('dataIndex') === this.lastClickField)\n      //     const type = theColumn && theColumn.getIn(['editor', 'type'])\n      //     const canBatchFill = theColumn && theColumn.get('batchfill')\n      //     const isCanEditCustomField = theColumn && theColumn.get('dataIndex').includes('custom_entity_field__') && !theColumn.get('dataIndex').includes('custom_entity_field__6') // 自定义字段规则\n      //     if (canBatchFill || isCanEditCustomField) {\n      //       const list = []\n      //       this.api.forEachNodeAfterFilterAndSort((node) => {\n      //         list.push(node.data.seq - 1)\n      //       })\n      //       const obj = {\n      //         f6_k: this.lastClickField,\n      //         f6_r: rowIndex,\n      //         f6_v: postValue,\n      //         list: list\n      //       }\n      //       postData = [{}, [obj]] // 所有类型一致传参\n      //       window.__onF6Sending__ = true\n      //     } else {\n      //       console.log('未开启批量录入或者自定义字段不符合')\n      //       return\n      //     }\n      //   }\n      //   if (keyCode === KEYS.F2) { // BT-00162643 F2启用赠品，价格未自动清空并灰显处理\n      //     window.__onF2Sending__ = true\n      //   }\n      //   this.props.handleKeyEvent(this.props.model, [keyCode], postData)\n      // } else if (ctrlKey && [KEYS.K].indexOf(keyCode) >= 0) {\n      //   // 更改为Ctrl+k\t复制当前行并向下插入一行\n      //   this.cancelCellEditing()\n      //   this.props.handleKeyEvent(this.props.model, [KEYS.CTRL, keyCode])\n      //   stopFun()\n      // } else if ([KEYS.F1].indexOf(keyCode) >= 0) {\n      //   this.props.handleKeyEvent(this.props.model, [keyCode])\n      //   stopFun()\n      // } else if ([KEYS.F3].indexOf(keyCode) >= 0) {\n      //   // F3 切换抽屉里面的三个页签\n      //   // eventBus.pub_setDrawerFormEvent(keyCode)\n      //   stopFun()\n      // }\n    };\n    _this.handleCellRangesSum = function () {\n      var cellRanges = _this.api.getCellRanges();\n      var _this$gridState10 = _this.gridState,\n        pageId = _this$gridState10.pageId,\n        gridId = _this$gridState10.gridId;\n      var isSingleCellRange = cellRanges.length === 1;\n\n      // 选中范围存在重叠区域，清空范围选中结果\n      if ((0, _gridPureFun.isCellRangesOverlap)(cellRanges, {\n        columnApi: _this.columnApi,\n        api: _this.api\n      })) {\n        // 清空范围选中结果\n        (0, _gridPureFun.cellRangesOverlapTips)(pageId);\n        _this.api.clearRangeSelection();\n        return;\n      }\n\n      // 框选范围存在超过100行的选项，\n      if ((0, _gridPureFun.isCellRangesOutOfSize)(cellRanges, {\n        api: _this.api,\n        seq: _this.gridState.seq\n      })) {\n        (0, _memoryCacher.updatePageData)(pageId, [_gridConst.CELL_RANGES_SUM_RESULT, gridId], function (value) {\n          return _objectSpread(_objectSpread({}, value), {}, {\n            isValid: false\n          });\n        });\n        (0, _gridPureFun.cellRangesOutOfSizeTips)(pageId);\n        return;\n      }\n\n      // 选中范围只有单个，清空已计算过的范围缓存\n      if (isSingleCellRange) {\n        var singleCellRangeId = (0, _gridPureFun.getCellRangeId)(cellRanges[0], {\n          api: _this.api\n        });\n        if (!_this.cellRangeResultCacher[singleCellRangeId]) {\n          _this.cellRangeResultCacher = {};\n        }\n      }\n      var result = _this.getCellRangesResult(cellRanges);\n      (0, _memoryCacher.setPageData)(pageId, [_gridConst.CELL_RANGES_SUM_RESULT, gridId], result);\n    };\n    _this.handleMouseUp = function (e) {\n      // 如果mouseUp监听在表格上，当鼠标拖到表格外面时，mouseUp事件会失效\n      if (_this.isMouseDownInGrid && _this.gridContrlParams.isCellRangesSum) {\n        _this.handleCellRangesSum();\n      }\n    };\n    _this.handleMouseDown = function (e) {\n      _this.isMouseDownInGrid = _this.gridContainerI.contains(e.target);\n    };\n    _this.clearSumResult = function () {\n      var _this$gridState11 = _this.gridState,\n        pageId = _this$gridState11.pageId,\n        gridId = _this$gridState11.gridId;\n      var initSumResult = {\n        plus: new _big[\"default\"](0),\n        average: new _big[\"default\"](0),\n        count: 0,\n        numberCount: 0\n      };\n      (0, _memoryCacher.setPageData)(pageId, [_gridConst.CELL_RANGES_SUM_RESULT, gridId], initSumResult);\n      _this.cellRangeResultCacher = {};\n    };\n    _this.getCellRangesResult = function (cellRanges) {\n      var result = {\n        plus: new _big[\"default\"](0),\n        average: new _big[\"default\"](0),\n        count: 0,\n        numberCount: 0\n      };\n      cellRanges.forEach(function (cellRange) {\n        var cellRangeId = (0, _gridPureFun.getCellRangeId)(cellRange, {\n          api: _this.api\n        });\n        // 已经计算过的不需要重复计算\n        if (!_this.cellRangeResultCacher[cellRangeId]) {\n          var cellRangeSumResult = (0, _gridPureFun.getCellRangeCalculatedResult)(cellRange, {\n            getNodeByRowIndex: _this.getNodeByRowIndex,\n            seq: _this.gridState.seq,\n            api: _this.api\n          });\n          _this.cellRangeResultCacher[cellRangeId] = cellRangeSumResult;\n        }\n        result = (0, _gridPureFun.mergeCellRangesResult)(result, _this.cellRangeResultCacher[cellRangeId]);\n      });\n      return result;\n    };\n    // whetherHasTips=() => { // 判断列元数据里面是否有tips属性\n    //   const cols = this.props.model.meta.get('columns')\n    //   let hasTips = false\n    //   const tipCols = cols.filter((col) => {\n    //     return col.has('tips')\n    //   })\n    //   if (tipCols.size > 0) {\n    //     hasTips = true\n    //   }\n    //   return hasTips\n    // }\n    _this.handleAfterFilterChanged = function (e) {\n      var _this$props$parentMod2;\n      var _this$gridState12 = _this.gridState,\n        pageId = _this$gridState12.pageId,\n        key = _this$gridState12.id;\n      _this.api.clearFocusedCell(); // 过滤后清空焦点,为了避免过滤后焦点单元格影响行选择请求参数\n      _this.api.clearRangeSelection();\n      _this.recalcMerge();\n      _this.deselectAllRow();\n      // 过滤后判断是否显示空数据提示\n      (0, _gridCoreUseFucntion.handleFilterChanged)(_this.gridContrlParams, e, _this.gridState.seq);\n      var dataValue = _this.props.model.getDataValue() || ((_this$props$parentMod2 = _this.props.parentModel) === null || _this$props$parentMod2 === void 0 ? void 0 : _this$props$parentMod2.getDataValue());\n      if (dataValue) {\n        _this.pinnedBottomRowData = _this.buildPinnedRowDatas(dataValue);\n        (0, _rowModel.setPinnedRowDatas)(_this.api, _this.pinnedBottomRowData);\n        setTimeout(function () {\n          // 过滤后无数据显示合计行，需动态调整无数据提示位置\n          var noDataPlaceholder = _this.gridContrlParams.isEntryEntity ? _this.api.gridPanel.eGui.querySelector('.ag-overlay .gird-nodata-placeholder') : null;\n          if (noDataPlaceholder) {\n            noDataPlaceholder.style['padding-bottom'] = _this.pinnedBottomRowData.length ? _this.gridOptions.rowHeight + 'px' : '';\n          }\n        }, 0);\n      }\n      // 非后端模式且为单据体时发送过滤状态\n      if (!(0, _grid.isServerFilterModeTablePage)(_this.gridState.pageId) && _this.gridContrlParams.isEntryEntity) {\n        _this.props.setFilterStatus({\n          pageId: pageId,\n          key: key\n        }, [[{\n          hasFilter: _this.api.isColumnFilterPresent()\n        }]]);\n      }\n      window.requestAnimationFrame(function () {\n        _this.autoSizeColumns();\n        _this.reSizeHeight({});\n        _this.gridContrlParams.isEntryEntity && (0, _gridCoreUseFucntion.checkValidateFailedCountOfHidden)(_this.api, _this.gridState, _this.gridRows);\n      });\n    };\n    _this.onAfterSortChanged = function () {\n      _this.recalcMerge();\n      _this.api.clearRangeSelection();\n      // 单据体排序刷新序号列\n      _this.gridContrlParams.showSeq && _this.api.refreshCells({\n        columns: [_this.gridState.seq]\n      });\n      window.requestAnimationFrame(function () {\n        _this.autoSizeColumns();\n      });\n    };\n    _this.columnResized = function (e) {\n      var recordWidth = function recordWidth(column, _ref17) {\n        var source = _ref17.source;\n        var colId = column.colId,\n          actualWidth = column.actualWidth;\n        var colDef = (0, _GridUtils.childrenLookUp)(_this.gridState.columnDefs, function (f) {\n          return f.field == colId;\n        }); // 更新本地状态，保持一致\n        if (colDef && colId !== _gridConst.SETTING_COL) {\n          colDef.width = actualWidth;\n          // setPageUIState(this.props.model, ['cw', colId], actualWidth)\n          // 列宽暂存本地，页面销毁时去修改memorycacher\n          if (!colDef.cellRendererParams.colLocked || colDef.cellRendererParams.showEditButton || _this.gridContrlParams.autoHeight || _this.gridContrlParams.columnResizeMode === _gridConst.GRID_COLUMN_RESIZE_MODE.preset) {\n            _this.columnWidthSetting[_gridConst.SETTING_COLUMN_WIDTH][colId] = Math.round(actualWidth); // 1.可编辑 2.表格行高自适应 3.预设列宽模式 存宽度\n          } else if (source === 'uiColumnDragged') {\n            // 拖动时才记最大列宽，其他场景触发的columnResized不记录\n            _this.columnWidthSetting[_gridConst.SETTING_COLUMN_MAX_WIDTH][colId] = Math.round(actualWidth); // 不可编辑的存最大宽度\n          }\n        }\n      };\n      var column = e.column,\n        finished = e.finished,\n        columns = e.columns,\n        source = e.source; // 全部列宽自适应的时候需要记录所有的列\n      var isResetRowHeightsAndGridHeight = finished && source !== 'gridOptionsChanged' && _this.gridContrlParams.autoHeight;\n      // 自适应模式下api接口类型触发的columnResized不记住最大列宽\n      var isRecordWidth = finished && source !== 'gridOptionsChanged';\n      var recordWidthColumns = columns || (column ? [column] : []);\n      isRecordWidth && recordWidthColumns.forEach(function (column) {\n        recordWidth(column, {\n          source: source\n        });\n      });\n      isResetRowHeightsAndGridHeight && _this.resetRowHeightsAndGridHeight();\n      var _this$gridState13 = _this.gridState,\n        pageId = _this$gridState13.pageId,\n        id = _this$gridState13.id,\n        gridId = _this$gridState13.gridId,\n        type = _this$gridState13.type,\n        gridType = _this$gridState13.gridType;\n      if (finished && source === 'uiColumnDragged') {\n        var _getPageUIState;\n        var _this$props2 = _this.props,\n          invokeControlMethodOnly = _this$props2.invokeControlMethodOnly,\n          parentModel = _this$props2.parentModel,\n          model = _this$props2.model;\n        var userModel = parentModel || model;\n        var controlType = (0, _dataService.getGridTrackingType)({\n          type: type,\n          gridType: gridType\n        });\n        // 埋点\n        (0, _dataService.buriedPointOfColumnResize)({\n          pageId: pageId,\n          controlId: gridId || id,\n          controlType: controlType\n        });\n        // 拖拽完成后，需要实时保存列宽信息到后台\n        _this.saveCacher();\n        var curTableUiState = ((_getPageUIState = (0, _memoryCacher.getPageUIState)(pageId)) === null || _getPageUIState === void 0 || (_getPageUIState = _getPageUIState.get(model.key)) === null || _getPageUIState === void 0 ? void 0 : _getPageUIState.toJS()) || {};\n        setTimeout(function () {\n          _this.reSizeHeight({}); // 重新计算表格高度\n        }, 0);\n        invokeControlMethodOnly && invokeControlMethodOnly(userModel, 'saveGridViewWidth', [_defineProperty({}, model.key, curTableUiState)]);\n      }\n    };\n    _this.columnMoved = function (e) {\n      // if(this.gridContrlParams.maxLevel>1) return;//有分组列，暂不处理。\n      // 此方法得到的是最叶子表头的顺序，有分组列时，处理比较麻烦，以后再考虑。\n      _gridModel.onColumnMoved.call(_assertThisInitialized(_this), e);\n      // 拖拽后更新完列定义再调用\n      (0, _columnProperty.setOperationColPinnedStatus)({\n        gridState: _this.gridState,\n        columnApi: _this.columnApi,\n        gridContainerI: _this.gridContainerI,\n        setGridThisProp: _this.setGridThisProp,\n        getGridThisProp: _this.getGridThisProp\n      });\n      // console.log('columnMoved:...',this.gridState);\n      _this.gridQuickFilterModelRef.setQuickFilterCols && _this.gridQuickFilterModelRef.setQuickFilterCols();\n    };\n    _this.onDragStarted = function (e) {\n      // 记录开始的列定义，拖拽结束后只要对比\n      _this.colDefBeforeDrag = _this.gridState.columnDefs;\n    };\n    _this.handleDragStopped = function (e) {\n      // 列表上拖拽列时，向后台传递列的宽度\n      var gridState = _this.gridState;\n      var colDef = gridState.columnDefs;\n      var model = _this.props.parentModel || _this.props.model;\n      if (colDef && _this.colDefBeforeDrag !== colDef && colDef && (_this.gridContrlParams.isListView || _this.gridContrlParams.isEntryEntity && _this.gridContrlParams.hasSettingBtn)) {\n        var postColAgs = [];\n        var rk = gridState.rk;\n        var seq = gridState.seq;\n        colDef.forEach(function (col) {\n          if ([_gridConst.SETTING_COL, 'XXfieldXX', rk, seq].indexOf(col.field) === -1) {\n            postColAgs.push({\n              k: col.field,\n              w: col.width\n            });\n          }\n        });\n        _this.props.invokeControlMethodOnly(model, 'postColsInfo', [postColAgs]);\n      }\n      delete _this.colDefBeforeDrag;\n    };\n    _this.onVirtualColumnsChanged = function (e) {\n      _this.postHeaderTipsAction();\n    };\n    /** ************************************************* AgGrid callback end ***************************************************/\n    // 用这种方式避免重新绑定ref对象\n    _this.bindGridContainer = function (ctar) {\n      _this.gridContainer = ctar;\n    };\n    _this.bindGridContainerI = function (ctarI) {\n      _this.gridContainerI = ctarI;\n    };\n    /** * 快速搜索方法Begin *****/\n    _this.setGridDisplayFun = function (colId, cb) {\n      colId != null && !_this.gridDisplayFun[colId] && (_this.gridDisplayFun[colId] = cb);\n    };\n    _this.getGridDisplayFun = function (colId) {\n      return _this.gridDisplayFun[colId];\n    };\n    _this.setGridQuickFilterModelRefFun = function (cbMap) {\n      _this.gridQuickFilterModelRef = cbMap;\n    };\n    _this.setQuickSearchCls = function () {\n      var isRemove = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (_this.gridContainerI) {\n        isRemove ? _this.gridContainerI.classList.remove('quick-search-model') : _this.gridContainerI.classList.add('quick-search-model');\n      }\n    };\n    _this.setGridSizeModeCls = function (headerHeight) {\n      if (_this.gridContainerI) {\n        headerHeight <= 24 ? _this.gridContainerI.classList.add('small-size-grid') : _this.gridContainerI.classList.remove('small-size-grid');\n      }\n    };\n    _this.getGridInnerWrapClassName = function () {\n      var headerHeight = _this.gridOptions.headerHeight;\n      return (0, _classnames4[\"default\"])('kd-cq-table-content', _defineProperty(_defineProperty(_defineProperty({}, _GridStyles[\"default\"].gridContainerI, true), 'grid-pinning-right', (0, _gridCoreUseFucntion.isPinningRight)({\n        gridContainerI: _this.gridContainerI,\n        columnApi: _this.columnApi\n      })), 'small-size-grid', headerHeight <= 24));\n    };\n    _this.handleHorizontalScrollVisibilityChanged = function (_ref19) {\n      var target = _ref19.target;\n      if ((0, _gridCoreUseFucntion.isPinningRight)({\n        gridContainerI: _this.gridContainerI,\n        columnApi: _this.columnApi\n      })) {\n        _this.gridContainerI.classList.add('grid-pinning-right');\n      } else {\n        _this.gridContainerI.classList.remove('grid-pinning-right');\n      }\n      if (parseInt(target === null || target === void 0 ? void 0 : target.style.height) > 0) {\n        _this.gridContainerI.classList.add('grid-horizontal-scroll-display');\n      } else {\n        _this.gridContainerI.classList.remove('grid-horizontal-scroll-display');\n      }\n    };\n    _this.handleGridValidateTipVisibleChange = function (show) {\n      var _this$gridState$style;\n      var marginTop = parseInt(((_this$gridState$style = _this.gridState.styles) === null || _this$gridState$style === void 0 ? void 0 : _this$gridState$style.marginTop) || 0);\n      if (show) {\n        _this.gridContainer.style['margin-top'] = marginTop + 43 + 'px';\n      } else {\n        _this.gridContainer.style['margin-top'] = marginTop ? marginTop + 'px' : '';\n      }\n    };\n    _this.handleVirtualViewSelectAll = function (selected) {\n      if (selected) {\n        _this.api.forEachNode(function (node) {\n          return node.setSelected(false);\n        });\n        _this.toolBarBtnClick([], 'clearSelection');\n      } else {\n        _this.api.forEachNode(function (node) {\n          return node.setSelected(true);\n        });\n        _this.toolBarBtnClick([], 'selectAllRows');\n      }\n    };\n    // 手机号提前获取国家列表，在 alphafactory 中对telephone单元格提前设置国家用于校验\n    _this.getTelCountry = function (model) {\n      var columns = model.getMetaProperty('columns');\n      var pageId = model.pageId;\n      var telephonColumns = [];\n      (0, _array.iterateColumns)(columns.toJS(), function (item) {\n        var _item$editor;\n        if (((_item$editor = item.editor) === null || _item$editor === void 0 ? void 0 : _item$editor.type) === 'telephone') {\n          telephonColumns.push(item.dataIndex);\n        }\n      });\n      var countryList = (0, _GlobalDataCacher.getData)(_symbolConst.KEY_COUNTRU_VIA_DATA);\n      if (!countryList && telephonColumns.length > 0) {\n        _this.props.getTelViaList({\n          pageId: pageId,\n          key: telephonColumns[0]\n        });\n      }\n    };\n    _this.latestProps = null; // 保证getColProperty取到的是最新的对象！因为shouldupdate会阻断一些更新，this.props.componentData保留的是旧的那份\n    _this.delayFuncs = [];\n    _this.state = {\n      refreshStatus: true\n    };\n    _this.rowStyleRules = []; // 行级样式规则\n    _this.gridState = {\n      pageId: '',\n      id: '',\n      // 控件id\n      gridId: '',\n      // 高级表格id,这个是指令交互的ctrl key\n      colDefsGUID: '',\n      columnDefs: [],\n      rk: '',\n      // rowKey的值\n      seq: '',\n      // seq的值\n      styles: {\n        minHeight: '190px' // 两行\n      }\n    };\n    _this.gridRows = []; // 保存表格行数据包，如果表格数据未变，可以少渲染。 注意！动态列锁定等不改变行数据的要重渲染，要关注是否有正确渲染\n    _this.clientVisible = true;\n    _this.gridOptions = (0, _gridConfiguration.buildGridOptions)(_assertThisInitialized(_this));\n    _this.columnWidthSetting = _defineProperty(_defineProperty(_defineProperty({}, _gridConst.SETTING_COLUMN_WIDTH, {}), _gridConst.SETTING_AUTOSIZE_COLUMN_WIDTH, {}), _gridConst.SETTING_COLUMN_MAX_WIDTH, {});\n    _this.columnSequence = null; // 拖动过列后,会缓存列顺序\n    _this.sortFilterColumn = {};\n    _this.minorFilterColumn = {};\n    _this.gridDisplayFun = {}; // colId：f\n    // 表格控制参数\n    _this.gridContrlParams = {};\n    _this.gridContainer = null;\n    // 最后一次的虚模式请求的QueryId,用来辨别前后两次取数的差异，有差异则更新，没差异则不用更新\n    _this.lastQueryId = null;\n    // 用来记录行是否变化，或用来重置行状态。在工具栏、多选中时为字母\"O\"，在有具体某行时为该行rk\n    _this.lastRowKey = 'O';\n    // 用来记录上次发出post的焦点行。值为真实焦点且是被选中的行、或选中集的第一行。\n    _this.lastFocusRowKey = -1;\n    // 记录上次post的焦点列\n    _this.lastFocusField = '';\n    // 单击模拟双击\n    _this.clickTimer = null;\n    _this.lastClickedRow = -1;\n    _this.lastClickedNode = null; // 上一个点击的node，shift选中要用\n    // this.lastSelectedNode = null\n    // this.selectedNodes = [];\n    // 合并列字段的点击记录\n    _this.lastFocusCombinedItem = '';\n    // 选中行状态\n    _this.selectedRows = [];\n    // 服务端告知的需要向后发送的信息\n    _this.supposeFields = [];\n    _this.delayFuncs = []; // 延迟执行的方法\n    _this.updateFuncList = []; // 更新方法\n    // 百分比列宽计算完成标识\n    // this.hadReCalculated = false\n    // this.hadResetRowHeights = false\n    // 平铺视图对应的行\n    _this.activeRowKey = 0;\n    _this.activeView = 'grid';\n    _this.gridQuickFilterModelRef = {};\n    _this.cellRangeResultCacher = {};\n    // 数据描述\n    _this.dataDesc = {\n      dataindex: {},\n      // 行数据与列索引对应关系\n      isSplitPage: false,\n      // 是否分页\n      datacount: 0,\n      // 总数据行数\n      pageindex: 0,\n      // 当前页索引\n      pagerows: 0,\n      // 每页显示行数\n      pagecount: 0,\n      // 总页数\n      rowcount: 0,\n      // 当前页数据行数\n      realPageCount: 0,\n      // 实际总页数，后台异步计算出来后向前端更新总页数\n      islastpage: false,\n      // 是否是最后一页,只在F7里面使用\n      postcols: [],\n      // 行选中时需要发往后台的行数据\n      isgetrealcount: '',\n      // 是否重新获取总数与页数\n      isgetsumdata: false,\n      // 是否计算合计\n      isOutMaxDataCount: false,\n      limitdatacount: 0,\n      // 最大显示数据行数\n      phide: undefined // 业务数据内的是否隐藏导航栏\n    };\n    // 格式化值，用以单元格复制使用\n    _this.formatRowsValue = {};\n    // 表格api准备完毕。注意：是异步事件\n    _this.onGridReady = _this.onGridReady.bind(_assertThisInitialized(_this));\n    _this.onSelectionChanged = _lodash[\"default\"].debounce(_this.onSelectionChanged.bind(_assertThisInitialized(_this)), 0); // 增加防抖，防止遍历设置选中行时该方法触发多次\n    _this.onRowDoubleClicked = _this.onRowDoubleClicked.bind(_assertThisInitialized(_this));\n    _this.onRowGroupOpened = _this.onRowGroupOpened.bind(_assertThisInitialized(_this));\n    _this.hyperLinkClick = _this.hyperLinkClick.bind(_assertThisInitialized(_this));\n    // this.getGridLocked = this.getGridLocked.bind(this)\n    _this.getColProperty = _this.getColProperty.bind(_assertThisInitialized(_this));\n    _this.getRowProperty = _this.getRowProperty.bind(_assertThisInitialized(_this));\n    _this.getLockedByNum = _this.getLockedByNum.bind(_assertThisInitialized(_this));\n    _this.getVisibleByNum = _this.getVisibleByNum.bind(_assertThisInitialized(_this));\n    _this.getDataProperty = _this.getDataProperty.bind(_assertThisInitialized(_this));\n    _this.childrenLoop = _GridUtils.childrenLoop;\n    _this.childrenLookUp = _GridUtils.childrenLookUp;\n    // this.icons = icons;\n\n    // this.getTreeNodesLength = this.getTreeNodesLength.bind(this)\n    _this.getGridVisiable = _this.getGridVisiable.bind(_assertThisInitialized(_this));\n    // this.setLastSelectedNode = this.setLastSelectedNode.bind(this)\n    _this.getPageDisplayRowCount = _this.getPageDisplayRowCount.bind(_assertThisInitialized(_this));\n    _this.getGridInfo = _this.getGridInfo.bind(_assertThisInitialized(_this));\n    // TODO:需要提供一个修改this对象属性的方法\n    // this.setGridContextAttr = thissetGridContextAttr.bind(this);\n    _this.postHeaderTipsAction = _lodash[\"default\"].debounce(_this.postHeaderTipsAction, 300, {\n      trailing: true\n    });\n    // 行展开表格的行数据请求需要独立ajax\n    _this.pushDelayInvoke = (0, _delayInvoke[\"default\"])(50);\n    _this.dirtyCellCb = _this.addRefreshCells();\n    _this.refreshTieldViewDebounce = _lodash[\"default\"].debounce(_this.refreshTieldView);\n    _this.callbackProps = _gridCoreUseFucntion.getCallBackProps.apply(_assertThisInitialized(_this));\n    _this._onKeyDown = (0, _gridCoreUseFucntion.onKeyDown)(_assertThisInitialized(_this));\n    _this._resetLayout = _gridModel.resetLayout.bind(_assertThisInitialized(_this));\n    _this.debounceAutoSizeColumns = _lodash[\"default\"].debounce(_this.autoSizeColumns, 300);\n    _this.gridEventService = new _gridEventService[\"default\"]();\n    _this.gridKeyDown = _lodash[\"default\"].debounce(_this.gridKeyDown.bind(_assertThisInitialized(_this)), 50, {\n      trailing: true\n    });\n    _this.getGreedyAutoSizeColWidths = _gridModel.getGreedyAutoSizeColWidths.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  /** ************************************************* React生命周期（render在最后） star ***************************************************/\n  _createClass(AgGridCore, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.latestProps = this.props;\n      var meta = this.props.model.meta;\n      // 订阅事件---所有的控件操作都被actionConvert.js处理了\n      var advMeta = this.props.parentModel ? this.props.parentModel.meta : this.props.model.meta;\n      // 订阅自动表体高度\n      // this.reSizeHeightHandler = eventBus.sub(this.props.model.pageId, advMeta.get('id') + '.' + 'reSizeHeight', this.reSizeHeightByLimit)\n      this.postColumnFilter((0, _memoryCacher.getPageData)(this.props.model.pageId, [advMeta.get('id'), 'setGridFilter'])); // 这里初始化一下过滤的值\n      (0, _gridConfiguration.buildProps)(this.props, this, {\n        isBuildColDefs: false\n      });\n      // if (advMeta.get('gridtype') == 'VIRTUALVIEWGRID') {\n      //   this.buildVirtualProps(this.props)\n      // }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      this.latestProps = nextProps;\n      var viModified = false;\n      var edModified = false;\n      var colViModified = false;\n      var refreshView = false;\n      // 如果动态更新列，则在此设置state.columnDefs,走render\n      if ((0, _GridUtils.getValue)(nextProps.model.meta, 'colDefsGUID', '') != this.gridState.colDefsGUID) {\n        var _this$api3;\n        // this.hadReCalculated = false\n        this.recordSelectedRows([]);\n        this.lastRowKey = 'O';\n        this.setSelectedRowsCount && this.setSelectedRowsCount(0);\n        (_this$api3 = this.api) === null || _this$api3 === void 0 || _this$api3.clearRangeSelection();\n        if (this.gridContrlParams.showSelectionItem) {\n          (0, _memoryCacher.setPageData)(this.gridState.pageId, [this.gridState.gridId, 'reselected'], {\n            selectRowsCount: 0\n          });\n        }\n        this.clearCustomColInfos();\n        (0, _gridConfiguration.buildProps)(nextProps, this);\n        this.gridDisplayFun = {}; // 列改变 重置\n        refreshView = viModified = edModified = colViModified = true;\n        this.getTelCountry(nextProps.model);\n      } else if (this.props.isVisible !== nextProps.isVisible) {\n        this.setVisible(nextProps);\n        viModified = true;\n        // } else if (this.getGridLocked(this.props.model) != this.getGridLocked(nextProps.model)) {\n        // 本身锁定性及父容器锁定性是否发生了变化\n      } else if (this.props.isLocked !== nextProps.isLocked) {\n        this.setEditable(nextProps);\n        edModified = true;\n        refreshView = true;\n      }\n      // 列的动态显示与隐藏\n      var thisAdvModel = this.props.parentModel || this.props.model;\n      var nextAdvModel = nextProps.parentModel || nextProps.model;\n      if (!(0, _immutable.is)(thisAdvModel.getDataProperty(['colVisb']), nextAdvModel.getDataProperty(['colVisb']))) {\n        // !colViModified && this.setColVisible(nextProps)\n        // 分组列的隐藏和显示会改变表头样式，需要重新构造列定义 --没有想到更好的办法\n        // this.hadReCalculated = false // buildProps时需要触发列宽重计算一次*****\n        // this.buildProps(nextProps);\n        this.clearCustomColInfos();\n        (0, _gridConfiguration.buildProps)(nextProps, this); // TODO:考虑用buildColDefs\n        colViModified = true;\n        refreshView = true;\n      }\n      if (!(0, _immutable.is)(thisAdvModel.getDataProperty(['colLock']), nextAdvModel.getDataProperty(['colLock']))) {\n        // 如果列锁定也要影响列头样式，则要进buildState\n        // this.buildProps(nextProps);\n        refreshView = true;\n      }\n      var billStateChanged = this.props.formStatus !== nextProps.formStatus;\n      if (billStateChanged) {\n        !viModified && this.setVisible(nextProps);\n        !edModified && this.setEditable(nextProps);\n        !colViModified && this.setColVisible(nextProps);\n        refreshView = true;\n      }\n      if (nextAdvModel.meta.get('gridtype') == 'VIRTUALVIEWGRID') {\n        var _this$api4;\n        this.recordSelectedRows([]);\n        this.lastRowKey = 'O';\n        this.setSelectedRowsCount && this.setSelectedRowsCount(0);\n        (_this$api4 = this.api) === null || _this$api4 === void 0 || _this$api4.clearRangeSelection();\n        if (this.gridContrlParams.showSelectionItem) {\n          (0, _memoryCacher.setPageData)(this.gridState.pageId, [this.gridState.gridId, 'reselected'], {\n            selectRowsCount: 0\n          });\n        }\n        // this.buildVirtualProps(nextProps, this.props)\n        (0, _gridConfiguration.buildVirtualDataSource)(this, this.props, nextProps);\n        if (this.props.model.getDataProperty(['value', 'queryId']) !== nextProps.model.getDataProperty(['value', 'queryId'])) {\n          this._getSumData(this);\n        }\n      }\n      if ((0, _GridUtils.getValue)(thisAdvModel.meta, 'mergerow') != (0, _GridUtils.getValue)(nextAdvModel.meta, 'mergerow')) {\n        this.refreshSelectCol = true;\n      }\n      this.updateSubGrid(this.props, nextProps);\n      refreshView && this.publishForceRefreshViews();\n\n      // 列定义改变，列宽自适应\n      if (viModified || edModified || colViModified || billStateChanged) {\n        this.addEventForDelayAutoSizeColumns();\n        (0, _columnProperty.setOperationColPinnedStatus)({\n          gridState: this.gridState,\n          columnApi: this.columnApi,\n          gridContainerI: this.gridContainerI,\n          setGridThisProp: this.setGridThisProp,\n          getGridThisProp: this.getGridThisProp\n        });\n      }\n\n      // 单据体重新渲染重新设置焦点\n      if (this.gridContrlParams.isEntryEntity) {\n        this.addAnimationQueueEmptyListener();\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value:\n    /**\n     * 避免过多的进行重渲染\n     * 注：上层控件控制，只有在视窗可见时，或本身从不可见到可见时，才渲染本组件\n     */\n    function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      var _this2 = this;\n      this.latestProps = nextProps;\n      var needRender = this.shouldUpdate(nextProps, nextState, nextContext);\n      if (needRender === true) {\n        this.gridContrlParams.isEntryEntity && (0, _gridPureFun.recordLastFocusCell)(this.api, this.gridState.rk, function (prop, value) {\n          _this2[prop] = value;\n        }, this.getGridThisProp); // 刷新后保留之前的焦点\n        this.cancelCellEditing();\n        this[_gridConst.MERGE_CACHE] = {}; // 每次刷新整个表格 都清除融合信息缓存\n        if (this.gridContrlParams.treeTable && this.gridContrlParams.treeTable.isTreeTable) {\n          var bodyViewport = this.gridContainerI && this.gridContainerI.querySelector('.ag-body-viewport');\n          this.lastScrollTop = bodyViewport === null || bodyViewport === void 0 ? void 0 : bodyViewport.scrollTop;\n          // 树形单据体默认展开上次的展开行\n          this.delayFuncs.unshift(function () {\n            (0, _treeUtils.expandLastExpanded)(_this2.api, _this2.gridContrlParams, _this2.gridRows, _this2.gridState.rk);\n          });\n        }\n      }\n      return !!needRender;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n      var eTop = this.gridContainer;\n      if (!eTop) return;\n      this.setInitialViewSize(eTop);\n      this.watchGridViewSize();\n      // 有些场景在这个时候就已经有数据、表格选中状态等信息了，要把选中信息放到delayFunc中。\n      var interceptParams = {\n        delayFuncs: this.delayFuncs\n      };\n      _gridModel.delayFuncsWhenMount.call(this, interceptParams);\n      setTimeout(function () {\n        (0, _gridConfiguration.buildColDefs)(_this3.props, _this3); // 列定义componentWillMount中未处理，此处处理，保证表格容器已经加载完毕\n        _this3.forceUpdate();\n        _this3.setVieportSize();\n      }, 0);\n      // 树形单据体点击加载子节点增加繁忙提醒\n      this.setLoadding(this.props.model);\n      // 调试用的代码，以后要删除,开发环境才有\n      if (true) {\n        _global[\"default\"][_global.GET_GRID_INFO] = this.getGridInfo;\n      }\n      if (this.props.model && this.props.model.pageId) {\n        this.removeListener = (0, _memoryCacher.addPageReleaseListener)(this.props.model.pageId, this.saveCacher);\n        this.removeDirtyCellListener = (0, _memoryCacher.addDataChangeListener)(this.props.model.pageId, [this.gridState.gridId, 'dirtyCells'], this.dirtyCellCb);\n        this.postColumnFilterHandle = (0, _memoryCacher.addDataChangeListener)(this.props.model.pageId, [this.gridState.gridId, 'setGridFilter'], this.postColumnFilter);\n        // 后端要求：合计请求需在条数请求之后发送，此处监听条数请求的返回指令\n        this.getSumDataHandle = (0, _memoryCacher.addDataChangeListener)(this.props.model.pageId, [this.gridState.gridId, _constant.SERVERCBLISTENER, 'getRealCount'], this._getSumData);\n        this.getSumDataWithoutRealCountHandle = (0, _memoryCacher.addDataChangeListener)(this.props.model.pageId, [this.gridState.gridId, 'getSumData'], this._getSumData);\n        this.gridStartListener = (0, _memoryCacher.addDataChangeListener)(this.props.model.pageId, [this.gridState.gridId, _ctrlMethodConst.M_GRID_START_EDIT], this.handleGridStartEdit);\n        var hasGetRealCount = (0, _memoryCacher.getPageData)(this.props.model.pageId, [this.gridState.gridId, _constant.SERVERCBLISTENER, 'getRealCount']);\n        var isGetSumData = (0, _memoryCacher.getPageData)(this.props.model.pageId, [this.gridState.gridId, 'getSumData']);\n        if (hasGetRealCount || isGetSumData) {\n          this._getSumData();\n        }\n        this.getGridInfoHandle = (0, _memoryCacher.addDataChangeListener)(this.props.model.pageId, [this.gridState.gridId, _gridConst.GET_GRID_INFO_EVENT_NAME], (0, _gridCoreUseFucntion.sendGridInfo)(this.props.model.pageId, this.props.model.key, this, this.props.invokeControlMethodOnly));\n        this.setGridSizeModeHandle = (0, _memoryCacher.addDataChangeListener)(this.props.model.pageId, [this.gridState.gridId, _gridConst.CONFIGURED_HEADER_HEIGHT_CHANGED], this.setGridSizeModeCls);\n        this.removePermissionListener = (0, _memoryCacher.addDataChangeListener)(this.props.model.pageId, _const.PERMISSION_PARAMS, this.handlePermission);\n        this.removeBase64Listener = (0, _memoryCacher.addDataChangeListener)(this.props.model.pageId, [this.gridState.gridId, _const.KDBASE64], this.setEncodeData);\n        var encodeKeys = (0, _memoryCacher.getPageData)(this.props.model.pageId, [this.gridState.gridId, _const.KDBASE64]);\n        encodeKeys && this.setEncodeData(encodeKeys);\n      }\n      this.gridContrlParams.isEntryEntity && this.gridContainer.addEventListener('keydown', this._onKeyDown, true);\n      this.gridContainer.addEventListener('contextmenu', this.handleContextMenu, true);\n      window.addEventListener('mousedown', this.handleMouseDown, true);\n      window.addEventListener('mouseup', this.handleMouseUp, true);\n      this.sortDataChangeHandle();\n      this.serverfilterDataChangeHandle();\n      if (this.gridContainer) {\n        this.intersectionObserver = new window.IntersectionObserver(function (entries) {\n          // setData(KEY_LISTENER_GRID_VALIDATE, entries[0].isIntersecting)\n          _this3.gridContrlParams.visible = entries[0].isIntersecting;\n          (0, _memoryCacher.setPageData)(_this3.props.model.pageId, [(_this3.props.parentModel || _this3.props.model).key, 'visible'], _this3.gridContrlParams.visible);\n        });\n        this.intersectionObserver.observe(this.gridContainer);\n      }\n      this.themeChangeRemover = (0, _GlobalDataCacher.addDataChangeListener)(_symbolConst.KEY_MODIFY_THEME_ACTION, function (data) {});\n      this.themeChangeRemover = (0, _GlobalDataCacher.addDataChangeListener)(_symbolConst.KEY_MODIFY_THEME_ACTION, function (data) {\n        if (visiblePages.includes(_this3.props.model.pageId)) {\n          _this3.forceUpdateOnThemeChanged();\n        } else {\n          _this3.delayForceUpdateOnRevisble = true;\n        }\n      });\n      this.removePageVisibleChangeListener = (0, _GlobalDataCacher.addDataChangeListener)(_symbolConst.KEY_PAGE_VISIBLE_STATUS, function (visibleStatus) {\n        visiblePages = (0, _PageVisibleStatus.getVisiblePages)(visibleStatus);\n        if (_this3.delayForceUpdateOnRevisble && visiblePages.includes(_this3.props.model.pageId)) {\n          _this3.delayForceUpdateOnRevisble = false;\n          _this3.forceUpdateOnThemeChanged();\n        }\n      });\n      this.getTelCountry(this.props.model);\n    }\n  }, {\n    key: \"setLoadding\",\n    value: function setLoadding(model) {\n      var text = (0, _intlApi.getLangMsg)('BusyLayer.loading');\n      var userLocale = model.getUserLocale();\n      var busyTipObj = _defineProperty(_defineProperty(_defineProperty({}, userLocale, text), \"timeout\", {\n        time: 600,\n        methods: ['entryRowClick']\n      }), \"supportMethod\", ['loadChildrenData', 'next', 'previous', 'setPageIndex', 'setPageRows', 'getVirtualData', 'entryRowClick', 'selectAllRows', 'setColAllChecked', 'setRowDataByNumber', 'setRowSort', 'getGridDataByFilter']);\n      (0, _memoryCacher.setControlBusyTip)(model.pageId, model.key, busyTipObj);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // 自动撑开，最多到十行。\n      var eTop = this.gridContainer;\n      if (!eTop) return;\n      // 有可能设置的父容器的可见性\n      if (this.gridViewSize.height <= 0) {\n        this.clientVisible = false;\n      }\n      if (this.api === undefined || this.api === null) return;\n      if (this.shouldForceUpdateEntryEntity) {\n        this.forceRefreshEntryEntity();\n        this.shouldForceUpdateEntryEntity = false;\n      }\n      this.delayFuncs.push(this.scrollAfterUpdate);\n      // 手动call一下固定行更新方法,先注释掉，有问题再改\n      // this.api && this.api.setPinnedBottomRowData(this.floatingBottomRowData);\n      this.delayFuncs.forEach(function (f) {\n        return f({\n          execSource: 'onComponentDidUpdate'\n        });\n      }); // do delay funcs\n      this.delayFuncs = [];\n      this.syncSelection(); // 后端setSelect指令调用的选中参数\n      this.postHeaderTipsAction();\n      this.updatePinnedRowDatas(); // 更新合计值\n      this.resetEntryEntityForDirtyData();\n      this.resetBillListForDirtyData();\n      this.gridQuickFilterModelRef.setQuickFilterCols && this.gridQuickFilterModelRef.setQuickFilterCols();\n      this.gridQuickFilterModelRef.resetSearchCache && this.gridQuickFilterModelRef.resetSearchCache();\n    }\n  }, {\n    key: \"getGridInfo\",\n    value: function getGridInfo() {\n      return {\n        gt: this,\n        meta: this.props.model.meta\n      };\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$removeSortDataC, _this$removeServerFil;\n      this.removeListener && this.removeListener();\n      this.removeDirtyCellListener && this.removeDirtyCellListener();\n      if (this.getRowTempDiv) {\n        _rowModel.calculateRowHeight.destroyDiv(this.getRowTempDiv);\n        this.getRowTempDiv = null;\n      }\n      var mergeM = this.gridContrlParams.mergeModel;\n      if (mergeM) {\n        // 销毁\n        mergeM.destroy();\n      }\n      if (this.gridContrlParams.isVirtualView) {\n        this.virtualDataCtrler && this.virtualDataCtrler.clear();\n      }\n      this.resizeObserve.removeResizeObserve();\n      this.resizeObserve = null;\n      if (this.gridContrlParams.heightLimit === false) {\n        this.stickTool && this.stickTool.destory(); // 注销监听\n      }\n      // this.gridContrlParams = null\n      // eventBus.unsub(this.setFocusHandler);\n      // eventBus.unsub(this.reSizeHeightHandler)\n      // eventBus.unsub(this.setSelectRowsHandler);\n      _storage[\"default\"].remove(this.gridState.id + this.gridState.pageId);\n      // this.gridState = null\n      this.postColumnFilterHandle && this.postColumnFilterHandle();\n      this.getSumDataHandle && this.getSumDataHandle();\n      this.getSumDataWithoutRealCountHandle && this.getSumDataWithoutRealCountHandle();\n      this.gridContainer.removeEventListener('keydown', this._onKeyDown, true);\n      this.gridContainer.removeEventListener('contextmenu', this.handleContextMenu, true);\n      window.removeEventListener('mousedown', this.handleMouseDown, true);\n      window.removeEventListener('mouseup', this.handleMouseUp, true);\n      this.delayFuncs = [];\n      this.api = null;\n      this.columnApi = null;\n      this.gridDisplayFun = {};\n      this.gridEventService.cancel();\n      (0, _gridCoreUseFucntion.willUnmountDo)(this);\n      this.intersectionObserver && this.intersectionObserver.disconnect();\n      this.intersectionObserver = null;\n      this.getGridInfoHandle && this.getGridInfoHandle();\n      this.setGridSizeModeHandle && this.setGridSizeModeHandle();\n      this.horizantalScrollObserver && this.horizantalScrollObserver.disconnect();\n      this.themeChangeRemover && this.themeChangeRemover();\n      this.removePageVisibleChangeListener && this.removePageVisibleChangeListener();\n      this.removePermissionListener && this.removePermissionListener();\n      this.removeBase64Listener && this.removeBase64Listener();\n      (_this$removeSortDataC = this.removeSortDataChangeListener) === null || _this$removeSortDataC === void 0 || _this$removeSortDataC.call(this);\n      (_this$removeServerFil = this.removeServerFilterDataChangeListener) === null || _this$removeServerFil === void 0 || _this$removeServerFil.call(this);\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(props) {\n      var style = Object.assign({}, this.gridState.styles);\n      style = Object.assign({}, props.gridStyle, (0, _componentutil.getVisibleStyle)(style, props.isVisible));\n      this.gridState.styles = style;\n    }\n  }, {\n    key: \"setEditable\",\n    value: function setEditable(props) {\n      var editable = (0, _visibleLock.isEditable)(props);\n      this.gridContrlParams.gridEditable = editable;\n      this.gridState.columnDefs = (0, _colDefinition.modifyColDefs)(this.gridState.columnDefs, {\n        action: 'gridLock',\n        gridOptions: this.gridOptions,\n        meta: props.model.meta.toJS(),\n        gridContrlParams: this.gridContrlParams,\n        funcs: {\n          getLockedByNum: this.getLockedByNum\n        },\n        localeId: this.gridState.localeId || this.gridState.defaultLocalId,\n        defaultLocalId: this.gridState.defaultLocalId,\n        cellActions: this.getCellActions(this.props),\n        seq: this.gridState.seq\n      });\n    }\n  }, {\n    key: \"cancelCellEditing\",\n    value: function cancelCellEditing() {\n      this.api && this.api.stopEditing(false);\n    }\n  }, {\n    key: \"watchGridViewSize\",\n    value: /** ************************************************* 表格工具方法 end ***************************************************/\n\n    /** ************************************************* 表格大小自适应相关 star ***************************************************/\n    /**\n     * 监听表格面板尺寸\n     */\n    function watchGridViewSize() {\n      var _this4 = this;\n      // 注意：由于此组件的gridContainer前后是同一dom元素，故可直接将监听放在此处。否则会引起监听丢失。\n      this.resizeListener = function (rect) {\n        if (!_this4.gridContainer) return; // 平铺视图会改变高度\n        // let {padding,border} = this.getElementOuterSize();\n        var contentWidth = rect.width;\n        var contentHeight = rect.height;\n        _this4.gridEventService.dispatchEvent({\n          eventType: _gridEventName[\"default\"].gridViewSizeChanged,\n          params: {\n            width: _this4.gridViewSize.width,\n            nextWidth: contentWidth\n          }\n        });\n        _this4.gridContainerI.style.height = (_this4.hasNavigation() ? contentHeight - _this4.getNavigationHeight() : contentHeight) + 'px';\n        if (contentWidth !== 0) {\n          // 设为0，竖直滚动条会自动回到顶部，未知原因导致了ag内部的滚动事件触发\n          _this4.gridContainerI.style.width = contentWidth + 'px';\n        }\n        _this4.gridViewSize = {\n          width: contentWidth,\n          height: contentHeight\n        };\n        _this4[_gridConst.MERGE_CACHE] = {}; // 宽高改变 清除融合信息缓存\n        _this4.setVieportSize();\n        _this4.props.getGridViewSize(_this4.gridViewSize);\n        // 从不可见到可见需要刷新表格\n        if (!_this4.clientVisible && contentHeight > 0) {\n          // 高级面板按需加载时初始化宽度为0,导致列宽计算错误,加载完需要重新计算列宽\n          // 列宽计算错误重新自适应一下就好\n          _this4.columnApi && _this4.autoSizeColumns();\n          // 修复标签容器下，初始化后切换标签，自适应表格高度不会改变问题，clientVisible 在这种场景下无法正确判断\n          if (_this4.gridContrlParams.isEntryEntity && _this4.gridContrlParams.autoHeight) {\n            _this4.refresh(function () {\n              _this4._resetLayout();\n            });\n          } else {\n            _this4.refresh();\n          }\n        }\n        if (_this4.gridContrlParams.isEntryEntity && contentHeight === 0) {\n          _this4.clientVisible = false;\n        }\n        _this4.postHeaderTipsAction();\n      };\n      this.resizeObserve = (0, _resizeObserve[\"default\"])(this.gridContainer, this.resizeListener);\n    }\n  }, {\n    key: \"setInitialViewSize\",\n    value: function setInitialViewSize(eTop) {\n      var actH = eTop.clientHeight;\n      this.gridViewSize = {\n        width: eTop.clientWidth\n      };\n      // 有可能设置的父容器的可见性\n      if (eTop.offsetHeight <= 0) {\n        this.clientVisible = false;\n      }\n      if (_lodash[\"default\"].includes(eTop.style.height, '%') || eTop.style.height === '') {\n        var minHeight = eTop.style['min-height'];\n        if (_lodash[\"default\"].includes(minHeight, '%') || parseInt(minHeight.replace('px', '')) <= actH) {\n          eTop.style.height = actH + 'px'; // 受扩展压缩影响。。\n        } else {\n          actH = minHeight;\n          eTop.style.height = actH; // 强制最小高度\n        }\n      }\n      this.gridViewSize.height = parseInt(actH);\n      this.props.getGridViewSize(this.gridViewSize);\n      this.gridInitialSize = Object.assign({}, this.gridViewSize);\n      this.setVieportSize();\n    }\n  }, {\n    key: \"hyperLinkClick\",\n    value: /** ************************************************* 表格大小自适应相关 end ***************************************************/\n\n    /** ************************************************* 单元格方法 star ***************************************************/\n    function hyperLinkClick(colId, rowIndex, args) {\n      rowIndex = parseInt(rowIndex);\n      var model = {\n        pageId: this.props.model.pageId,\n        key: this.gridState.gridId\n      };\n      args == undefined ? this.props.hyperLinkClick(model, colId, rowIndex) : this.props.mulHyperLinkClick(model, colId, rowIndex, args);\n    }\n\n    // 用来获取表格指定属性数据。//如下拉列的动态下拉项、列的动态锁定性、列的动态可见性等。\n  }, {\n    key: \"getColProperty\",\n    value: function getColProperty(colId, propName) {\n      var advModel = this.latestProps.parentModel ? this.latestProps.parentModel : this.latestProps.model;\n      var path = '';\n      switch (propName) {\n        case 'colCtrl':\n        case 'colVisb':\n        case 'colLock':\n          path = colId ? [propName, colId] : [propName];\n          break;\n        default:\n          break;\n      }\n      var dataOpts = advModel.getDataProperty(path);\n      if (dataOpts) {\n        dataOpts = dataOpts.toJS();\n      } else {\n        dataOpts = {};\n      }\n      return dataOpts;\n    }\n  }, {\n    key: \"getRowProperty\",\n    value: function getRowProperty(rowIndex, propIndex, colId) {\n      var advModel = this.latestProps.parentModel ? this.latestProps.parentModel : this.latestProps.model;\n      var gridData = advModel.getDataValue();\n      rowIndex = (0, _grid.isServerFilterModeTablePage)(this.gridState.pageId) && (0, _GridUtils.isEntryWithoutTreeByGridContrlParams)(this.gridContrlParams) ? (0, _rowKeyMiddleware.getRowIndexInGridDataByRowKey)(rowIndex)(gridData, this.gridState.rk) : (0, _rowKeyMiddleware.transformAbsolute2Relative)(rowIndex)(gridData);\n      if (rowIndex === -1) {\n        return {};\n      }\n      var dataOpts = colId === undefined ? gridData.getIn(['rows', rowIndex, propIndex]) : gridData.getIn(['rows', rowIndex, propIndex, colId]);\n      if (dataOpts) {\n        dataOpts = dataOpts.toJS ? dataOpts.toJS() : dataOpts;\n      } else {\n        dataOpts = {};\n      }\n      return dataOpts;\n    }\n  }, {\n    key: \"getDataProperty\",\n    value: function getDataProperty(path) {\n      var advModel = this.latestProps.parentModel ? this.latestProps.parentModel : this.latestProps.model;\n      return advModel.getDataProperty(path);\n    }\n\n    // 判断column锁定性，不需要理会父容器是否锁定\n  }, {\n    key: \"getLockedByNum\",\n    value: function getLockedByNum(l) {\n      var advModel = this.latestProps.parentModel ? this.latestProps.parentModel : this.latestProps.model;\n      return (0, _componentutil.getLocked)(advModel, undefined, l);\n    }\n  }, {\n    key: \"getVisibleByNum\",\n    value: function getVisibleByNum(colkey, v) {\n      var advModel = this.latestProps.parentModel ? this.latestProps.parentModel : this.latestProps.model;\n      return (0, _componentutil.getVisible)(advModel, colkey, v);\n    }\n  }, {\n    key: \"getAfterFilterTreeTableRowsCount\",\n    value: function getAfterFilterTreeTableRowsCount() {\n      var rowsCount = 0;\n      this.api.forEachNodeAfterFilterAndSort(function (node) {\n        var _node$data;\n        var isEmptyRow = node === null || node === void 0 || (_node$data = node.data) === null || _node$data === void 0 ? void 0 : _node$data.isEmptyChildRow;\n        if (!isEmptyRow) {\n          rowsCount++;\n        }\n      });\n      return rowsCount;\n    }\n\n    // 这个里面只负责相关界面显示状态更新 注意该方法设置了防抖\n  }, {\n    key: \"onSelectionChanged\",\n    value: function onSelectionChanged(e) {\n      this.updateSelectionCol();\n      var selectedRows = this.api.getSelectedRows();\n      this.setSelectedRowsCount && this.setSelectedRowsCount(selectedRows.length); // 通知工具栏状态改变。\n      if (this.gridContrlParams && this.gridContrlParams.showSelectionItem) {\n        var gridRowsCount = this.gridRows.length;\n        var _this$gridContrlParam7 = this.gridContrlParams,\n          treeTable = _this$gridContrlParam7.treeTable,\n          isEntryEntity = _this$gridContrlParam7.isEntryEntity;\n        if (treeTable && treeTable.isTreeTable) {\n          gridRowsCount = this.getAfterFilterTreeTableRowsCount();\n        } else if (this.api && this.api.isAnyFilterPresent() && isEntryEntity) {\n          var displayRowCount = this.api.getDisplayedRowCount();\n          gridRowsCount = selectedRows.length > displayRowCount ? gridRowsCount : displayRowCount; // 后端可能发送过来大于过滤的选中，先兼容\n        }\n        (0, _memoryCacher.setPageData)(this.gridState.pageId, [this.gridState.gridId, 'reselected'], {\n          selectRowsCount: selectedRows.length,\n          gridRowsCount: gridRowsCount\n        });\n      }\n    }\n  }, {\n    key: \"doGroupNodeClick\",\n    value: function doGroupNodeClick(e) {\n      var isSelect = true;\n      var exclusive = true;\n      // 树形报表并且多选情况下 组节点特殊处理\n      if (this.gridContrlParams && this.gridContrlParams.isVirtualView && this.gridContrlParams.showSelectionItem) {\n        isSelect = !e.node.selected;\n        exclusive = false;\n      }\n      this.invokeRowSelection(e.node, isSelect, exclusive);\n      // e.node.setSelected(true, true);\n    }\n\n    // 发送entryRowDoubleClick事件\n  }, {\n    key: \"onRowDoubleClicked\",\n    value: function onRowDoubleClicked(e) {\n      // console.log('onRowDoubleClicked');\n\n      if (this.gridContrlParams.hasSelectAllRow) {\n        this.differenceUpdateRowSelection(e && e.node, true);\n        return;\n      }\n      var rk = this.gridState.rk;\n      var selectedKey = [];\n      var rowKey = e.data[rk];\n      var _this$gridContrlParam8 = this.gridContrlParams,\n        mergeModel = _this$gridContrlParam8.mergeModel,\n        suppressMergeSelection = _this$gridContrlParam8.suppressMergeSelection;\n      if (typeof rowKey === 'undefined') rowKey = -1;\n      // 融合行传第一行rowKey\n      rowKey = (0, _rowModel.getRealRowKey)(rowKey, mergeModel, suppressMergeSelection);\n      selectedKey.push(rowKey);\n      var supposeFields = [];\n      if (this.dataDesc.postcols.length > 0) {\n        var supposeItem = [];\n        this.dataDesc.postcols.forEach(function (x) {\n          return supposeItem.push(e.data[x]);\n        });\n        supposeFields.push(supposeItem);\n      }\n      // let selectState=this.buildSelectedRowJson(selectedKey,rowKey,supposeFields);\n      var selectState = this.getAllSelectedInfo(rowKey);\n      var model = this.props.parentModel || this.props.model;\n      this.props.dispatch((0, _appModelFunction.convertAppModelFunctionAction)((0, _appModelFunction.setControlPostValue)(model.pageId, model.key, selectState)));\n      this.props.entryRowDoubleClick(model, selectedKey);\n    }\n  }, {\n    key: \"buildSelectedRowJson\",\n    value: function buildSelectedRowJson(selectedKey, rowKey, supposeFields) {\n      var focused = this.api.getFocusedCell();\n      var fieldKey = focused && focused.column ? focused.column.colId == _GridUtils.SELECTIONCOLID ? '0' : focused.column.colId : '0';\n      if (focused && focused.column && focused.column.colDef.cellRendererParams.type === 'combinedField') {\n        fieldKey = this.lastFocusCombinedItem;\n      }\n      var value = {\n        fieldKey: fieldKey,\n        row: rowKey,\n        selRows: selectedKey,\n        isClientNewRow: false,\n        clientNewRows: ''\n      };\n      if (supposeFields) {\n        value.selDatas = supposeFields;\n      }\n      if (this.gridContrlParams.postRangeSelection) {\n        var oldPostData = (0, _gridCoreUseFucntion.getGridPostData)(this.getLastestGridModel());\n        if (oldPostData && oldPostData.selectionRange) {\n          // 如果存在范围选中的postData，浅合并\n          value = Object.assign(oldPostData, value);\n        }\n      }\n      return value;\n    }\n  }, {\n    key: \"syncSelection\",\n    value:\n    // render之后，选中状态会丢失，要重新同步状态\n    function syncSelection() {\n      var _this5 = this;\n      var selectedRows = this.selectedRows || [];\n      var selectedCount = 0;\n      var node = null;\n      var len = selectedRows.length;\n      selectedRows.forEach(function (sRk, index) {\n        node = _this5.getNodeByRowKey(sRk);\n        if (node) {\n          selectedCount++;\n          node.setSelected(true);\n          if (index === len - 1) {\n            // 存在后端设置焦点行，则前端设置焦点行功能不生效 否则设置多次焦点会导致页面滚动、固定列区无法正常显示 用防抖则有些时候设置焦点太慢...\n            // 报表不能设置滚动，否则会不断滚动加载数据\n            !_this5.hasSetFocusedCell && !_this5.gridContrlParams.isVirtualView && _this5.ensureRowVisible(node.rowIndex);\n          }\n        }\n      });\n      if (selectedRows.length != selectedCount) {\n        // 选中行更新。否则保持上次？\n        if (selectedCount == 0) this.api.clearFocusedCell(); // aggrid未更新焦点信息\n        this.postRowSelection(); // 未完全匹配，强制post状态\n      }\n      this.updateSelectionCol();\n    }\n\n    // 更新选择列的选中状态样式\n  }, {\n    key: \"updateSelectionCol\",\n    value: function updateSelectionCol(force) {\n      if (this.gridContrlParams && this.gridContrlParams.showSelectionItem) {\n        var refreshCells = {\n          rowNodes: this.api.getRenderedNodes(),\n          columns: [_GridUtils.SELECTIONCOLID],\n          force: !!force,\n          // 使用了valueGetter,可以不用强制刷新了\n          \"volatile\": false\n        };\n        this.api.refreshCells(refreshCells); // refreshCells异步执行时不会触发单元格的refresh方法，需要设置force为true才会触发\n      }\n    }\n  }, {\n    key: \"onGridReady\",\n    value:\n    // 表格初始化，把所有表格接口绑定到组件上\n    function onGridReady(params) {\n      this.api = params.api;\n      this.columnApi = params.columnApi;\n      if (this.gridOptions.rowModelType != 'infinite' && !this.dataLoaded) {\n        this.api.showLoadingOverlay();\n      }\n      // grid evnent绑定是异步的\n      this.props.setGridReady(); // 通知组件代理层grid已准备好。\n      if (this.gridContrlParams.heightLimit === false) {\n        // 表头定位\n        // console.log(\"////////\",modelFuncs.getGridHeader(this.gridContainerI))\n        var header = _gridModel.modelFuncs.getGridHeader(this.gridContainerI);\n        if (header) {\n          header.style.position = 'relative'; // 相对定位\n          header.style.zIndex = 111; // 相对定位\n          header.style.marginTop = '-1px'; // 解决和toolbar之间的小缝隙\n          this.stickTool = new _gridStickyTool[\"default\"](header);\n          this.stickTool.start();\n        }\n      }\n      // 非表单类型的tips需要重新绑定一下事件\n      // if (this.whetherHasTips()) {\n      //   ReactTooltip.rebuild()\n      // }\n      // 存在行数据时，执行列宽自适应\n      if (!this.gridContrlParams.isVirtualView) {\n        this._resetLayout();\n      }\n      this.gridOptions.masterDetail && this.gridRows.length > 0 && this.columnApi.autoSizeColumn(_gridConst.DETAIL_EXPAND_COL_ID);\n      var colsViewport = this.gridContainerI && this.gridContainerI.querySelector('.ag-center-cols-viewport');\n      var bodyViewport = this.gridContainerI && this.gridContainerI.querySelector('.ag-body-viewport');\n      colsViewport && colsViewport.setAttribute('tabindex', '-1');\n      bodyViewport && bodyViewport.setAttribute('tabindex', '-1');\n      this.horizantalScrollObserver = (0, _columnProperty.addHorizantalScrollObserver)({\n        gridState: this.gridState,\n        columnApi: this.columnApi,\n        gridContainerI: this.gridContainerI,\n        setGridThisProp: this.setGridThisProp,\n        getGridThisProp: this.getGridThisProp\n      });\n      (0, _columnProperty.setOperationColPinnedStatus)({\n        gridState: this.gridState,\n        columnApi: this.columnApi,\n        gridContainerI: this.gridContainerI,\n        setGridThisProp: this.setGridThisProp,\n        getGridThisProp: this.getGridThisProp\n      });\n      (0, _gridCoreUseFucntion.onGridReadyDo)(this);\n    }\n  }, {\n    key: \"deselectAllRow\",\n    value:\n    // 取消所有行选中\n    function deselectAllRow() {\n      this.api.deselectAll();\n      this.postRowSelection();\n      this.updateSelectionCol();\n    }\n  }, {\n    key: \"recalcMerge\",\n    value: function recalcMerge() {\n      var mergeM = this.gridContrlParams.mergeModel;\n      if (mergeM) {\n        var rowdatas = [];\n        this.api.forEachNodeAfterFilterAndSort(function (node) {\n          rowdatas.push(node.data);\n        });\n        (0, _rowModel.entitySpanEngine)(mergeM, rowdatas, this.gridState);\n        this.api.redrawRows();\n      }\n    }\n\n    // 记录树表的展开节点，并且展开图标列在每次展开收缩时样自适应列宽\n  }, {\n    key: \"onRowGroupOpened\",\n    value: function onRowGroupOpened(e) {\n      if (this.gridContrlParams.treeTable) {\n        var treeTable = this.gridContrlParams.treeTable;\n        var _this$props3 = this.props,\n          model = _this$props3.model,\n          invokeControlMethodOnly = _this$props3.invokeControlMethodOnly;\n        (0, _treeTable.handleGroupRowOpended)(e, treeTable, model, invokeControlMethodOnly, this.columnApi, this.api, this.gridState.rk);\n        // 更新序号列\n        var refreshCells = {\n          rowNodes: e.api.getRenderedNodes(),\n          columns: [this.gridState.seq]\n        };\n        e.api.refreshCells(refreshCells);\n        this.reSizeHeight({}); // 树形单据体展开/折叠后要重算高度\n      }\n      // 树形单据体或者树形报表手动展开后需要做一次自适应\n      if (this.gridContrlParams.treeTable || this.gridContrlParams.treeVirtualView) {\n        this.addEventForDelayAutoSizeColumns();\n      }\n      this.gridOptions.masterDetail && this.columnApi.autoSizeColumn(_gridConst.DETAIL_EXPAND_COL_ID);\n    }\n  }, {\n    key: \"selectClick\",\n    value: /** *************************************************导航条相关方法 star ***************************************************/\n    function selectClick(e, selected) {\n      var suppressPost = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (this.gridOptions.rowSelection == 'single') return; // 单先行\n      if (selected) {\n        (0, _GridUtils.hasFilterModel)(this.api) ? this.api.deselectAllFiltered() : this.api.deselectAll();\n      } else {\n        (0, _GridUtils.hasFilterModel)(this.api) ? this.api.selectAllFiltered() : this.api.selectAll();\n      }\n      if (!suppressPost) {\n        // 非所有行操作\n        this.postRowSelection();\n      }\n      this.updateSelectionCol();\n    }\n  }, {\n    key: \"setAmountOperation\",\n    value: function setAmountOperation(amount, operationKey) {\n      amount = parseInt(amount);\n      var model = {\n        pageId: this.props.model.pageId,\n        key: this.gridState.gridId\n      };\n      this.props.setAmountOperation(model, amount, operationKey);\n    }\n  }, {\n    key: \"getRealPageCount\",\n    value: function getRealPageCount() {\n      var model = {\n        pageId: this.props.model.pageId,\n        key: this.gridState.gridId\n      };\n      this.props.invokeControlMethodOnly(model, 'getRealPageCount', []);\n    }\n  }, {\n    key: \"toolBarBtnClick\",\n    value: function toolBarBtnClick(args, operationKey) {\n      var model = {\n        pageId: this.props.model.pageId,\n        key: this.gridState.gridId\n      };\n      this.props.toolBarBtnClick(model, args, operationKey);\n    }\n  }, {\n    key: \"handleFuncs\",\n    value: function handleFuncs() {\n      var funcs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      for (var f in funcs) {\n        switch (f) {\n          case 'setSelectedRowsCount':\n            this.setSelectedRowsCount = funcs[f];\n            break;\n          case 'setRealPageCount':\n            this.setRealPageCount = funcs[f];\n            break;\n          case 'cancelSelectAll':\n            // this.cancelSelectAll = funcs[f]\n            break;\n        }\n      }\n    }\n\n    // 获取表格的可见性\n  }, {\n    key: \"getGridVisiable\",\n    value: function getGridVisiable() {\n      var height = this.gridContainer != null ? this.gridContainer.offsetHeight : 0;\n      if (height > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    // 获取当前页选中行的单据数\n  }, {\n    key: \"getSelectRowBillCount\",\n    value: function getSelectRowBillCount() {\n      if (this.api) {\n        var mergeM = this.gridContrlParams.mergeModel;\n        return (0, _rowModel.getMainEntityNum)(mergeM, this.selectedRows);\n      }\n    }\n  }, {\n    key: \"getColHeaderName\",\n    value: function getColHeaderName(colId) {\n      if (this.api) {\n        var colDefs = this.gridState.columnDefs;\n        var targetCol = colDefs.find(function (c) {\n          return c.field === colId;\n        });\n        return targetCol && (targetCol.cellRendererParams.originHeaderName || targetCol.headerName);\n      } else {\n        return false;\n      }\n    }\n\n    /** *************************************************导航条相关方法 end ***************************************************/\n\n    /**\n     * 导航条\n     */\n  }, {\n    key: \"getNavigationBar\",\n    value: function getNavigationBar(navigationDefaultHeight) {\n      var _this6 = this;\n      var _this$props4 = this.props,\n        parentModel = _this$props4.parentModel,\n        model = _this$props4.model,\n        showFormByTipsInAction = _this$props4.showFormByTipsInAction,\n        invokeControlMethodOnly = _this$props4.invokeControlMethodOnly,\n        invokeControlMethodSingle = _this$props4.invokeControlMethodSingle;\n      var dataModel = parentModel || model;\n      var _ref20 = this.gridContrlParams || {},\n        isListView = _ref20.isListView,\n        isVirtualView = _ref20.isVirtualView,\n        heightLimit = _ref20.heightLimit,\n        isSqlQuery = _ref20.isSqlQuery,\n        isIndexMode = _ref20.isIndexMode,\n        enabledChangePageInFakeCount = _ref20.enabledChangePageInFakeCount,\n        suppressSelectAllRows = _ref20.suppressSelectAllRows,\n        hasSummaryFields = _ref20.hasSummaryFields,\n        isEntryEntity = _ref20.isEntryEntity,\n        showSelectionItem = _ref20.showSelectionItem,\n        isShowVirtualViewRowCount = _ref20.isShowVirtualViewRowCount;\n      var maxPageSize = dataModel && dataModel.getMetaProperty('maxPageSize') || (isListView ? _gridConst.DEFAULT_MAX_PAGE_SIZE : _gridConst.ENTRY_MAX_PAGE_SIZE);\n      var pageRowOptions = dataModel && dataModel.getMetaProperty('pageRowOptions') || (0, _immutable.List)();\n      var timeStamp = dataModel === null || dataModel === void 0 ? void 0 : dataModel.getDataProperty([_const.TIME_STAMP_FRESH]);\n      // 报表不显示选择列也是单选\n      var isSingleSelection = this.gridOptions.rowSelection === 'single' || isVirtualView && !showSelectionItem;\n      var isRealDataCount = !this.isLargeData || this.isShowLargeDataCount;\n      var showRowCount = isShowVirtualViewRowCount && isRealDataCount;\n      return isVirtualView ? /*#__PURE__*/_react[\"default\"].createElement(_VirtualViewToolBar[\"default\"], {\n        model: dataModel,\n        dataCount: this.dataDesc.datacount,\n        hasSelectAllRow: this.gridContrlParams.hasSelectAllRow,\n        handleVirtualViewSelectAll: this.handleVirtualViewSelectAll,\n        resetSelectAllFlag: timeStamp,\n        isSingleSelection: isSingleSelection,\n        showRowCount: showRowCount,\n        isRealDataCount: isRealDataCount\n      }) : /*#__PURE__*/_react[\"default\"].createElement(_ToolBar[\"default\"]\n      // style={}\n      // className={}\n      , {\n        pageId: dataModel.pageId,\n        model: dataModel,\n        isGrid: true,\n        isListView: isListView,\n        isVirtualView: isVirtualView,\n        isEntryEntity: isEntryEntity,\n        isF7Form: this.gridState.config.isf7 || false,\n        pageType: this.gridContrlParams.pageType,\n        localeId: this.gridState.localeId,\n        defaultLocalId: this.gridState.defaultLocalId,\n        showFormByTips: showFormByTipsInAction,\n        isSplitPage: this.dataDesc.isSplitPage || true,\n        pageindex: this.dataDesc.pageindex || 1,\n        rowcount: this.getRealRowCount() || 0,\n        islastpage: this.dataDesc.islastpage || false,\n        datacount: this.dataDesc.datacount || 0,\n        billdatacount: this.dataDesc.billdatacount || 0,\n        pagerows: this.dataDesc.pagerows || 0,\n        pagecount: this.dataDesc.pagecount || 1,\n        isgetrealcount: this.dataDesc.isgetrealcount,\n        isOutMaxDataCount: this.dataDesc.isOutMaxDataCount,\n        limitdatacount: this.dataDesc.limitdatacount || 0,\n        realPageCount: this.dataDesc.realPageCount == null ? 0 : this.dataDesc.realPageCount,\n        rowSelection: this.gridOptions.rowSelection,\n        selectClick: function selectClick(e, selected, suppressPost) {\n          return _this6.selectClick(e, selected, suppressPost);\n        },\n        gridKey: this.gridState.gridId,\n        getSelectRowBillCount: this.getSelectRowBillCount.bind(this),\n        toolBarBtnClick: this.toolBarBtnClick.bind(this),\n        setAmountOperation: this.setAmountOperation.bind(this),\n        getRealPageCount: this.getRealPageCount.bind(this),\n        handleFuncs: this.handleFuncs.bind(this),\n        heightLimit: heightLimit,\n        getGridVisiable: this.getGridVisiable,\n        getPageDisplayRowCount: this.getPageDisplayRowCount,\n        invokeControlMethodOnly: invokeControlMethodOnly,\n        getColHeaderName: this.getColHeaderName.bind(this),\n        isSqlQuery: isSqlQuery,\n        isIndexMode: isIndexMode,\n        maxPageSize: maxPageSize,\n        invokeControlMethodSingle: invokeControlMethodSingle,\n        enabledChangePageInFakeCount: enabledChangePageInFakeCount,\n        suppressSelectAllRows: suppressSelectAllRows,\n        navigationDefaultHeight: navigationDefaultHeight,\n        onToolbarSizeChanged: this.onToolbarSizeChanged,\n        hasSummaryFields: hasSummaryFields,\n        pageMode: this.gridState.config.pageMode,\n        pageRowOptions: pageRowOptions.toJS()\n      });\n    }\n\n    // 获取真实的行数，单据体新增行\n  }, {\n    key: \"getRealRowCount\",\n    value: function getRealRowCount() {\n      return this.gridRows.length || this.dataDesc.rowcount;\n    }\n  }, {\n    key: \"getPageDisplayRowCount\",\n    value: function getPageDisplayRowCount() {\n      if (!this.api) return this.getRealRowCount();\n      if ((0, _GridUtils.hasFilterModel)(this.api)) {\n        return this.api.getDisplayedRowCount();\n      } else {\n        return this.getRealRowCount();\n      }\n    }\n  }, {\n    key: \"getGridClassName\",\n    value: /** * 快速搜索方法End *****/\n\n    function getGridClassName() {\n      var _classnames2;\n      var gridTheme = 'ag-theme-material-kd';\n      var _getCommonClass = (0, _componentutil.getCommonClass)(this.props.model),\n        Grow = _getCommonClass.Grow,\n        Shrink = _getCommonClass.Shrink;\n      var _this$gridContrlParam9 = this.gridContrlParams,\n        isListView = _this$gridContrlParam9.isListView,\n        isVirtualView = _this$gridContrlParam9.isVirtualView,\n        heightLimit = _this$gridContrlParam9.heightLimit,\n        suppressCopy = _this$gridContrlParam9.suppressCopy,\n        postRangeSelection = _this$gridContrlParam9.postRangeSelection,\n        maxLevel = _this$gridContrlParam9.maxLevel,\n        suppressMergeSelection = _this$gridContrlParam9.suppressMergeSelection,\n        columnResizeMode = _this$gridContrlParam9.columnResizeMode,\n        verticalBordered = _this$gridContrlParam9.verticalBordered;\n      if (!heightLimit) {\n        // 如果不限制高度，不压\n        Shrink = 0;\n      }\n      var isListOrVirtual = isListView || isVirtualView;\n      var className = (0, _classnames4[\"default\"])('kd-cq-table kd-cq-control', (_classnames2 = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_classnames2, _GridStyles[\"default\"].gridContainer, true), gridTheme, true), _GridStyles[\"default\"].billEdit, !isListOrVirtual), _GridStyles[\"default\"].billView, isListView), _GridStyles[\"default\"].billVirtual, isVirtualView), _GridStyles[\"default\"]['grid-suppress-copy'], suppressCopy), 'billF7-theme', this.gridState.config && this.gridState.config.isf7), 'billView-theme', isListOrVirtual), 'billEdit-theme', !isListOrVirtual), 'report-view-theme', isVirtualView), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_classnames2, 'kd-grid-no-bordered', this.props.bordered === false), 'kd-grid-vertical-bordered', verticalBordered), 'kd-grid-post-range-selection', postRangeSelection), 'kd-grid-with-column-groups', maxLevel > 1), 'kd-grid-partial-merge', suppressMergeSelection), 'auto-column-resize-mode', columnResizeMode === _gridConst.GRID_COLUMN_RESIZE_MODE.adaptive || columnResizeMode === _gridConst.GRID_COLUMN_RESIZE_MODE.fit), _GridStyles[\"default\"].ieSizeClass, _global[\"default\"][_global.IS_IE])), (0, _commonUtils[\"default\"])({\n        Grow: Grow,\n        Shrink: Shrink\n      }));\n      return className;\n    }\n  }, {\n    key: \"initialShell\",\n    value:\n    /**\n     * 初始壳,这是gridReady之前的壳，此时元数据已经传过来了\n     */\n    function initialShell(className) {\n      var params = {\n        style: this.gridState.styles,\n        className: className,\n        headerHeight: this.gridOptions.headerHeight,\n        bindGridContainer: this.bindGridContainer,\n        bindGridContainerI: this.bindGridContainerI,\n        hasToolbar: this.hasNavigation()\n      };\n      return (0, _getGridShell[\"default\"])(params);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n      this.latestProps = this.props;\n      var gridItemStyle = {};\n      var className = this.getGridClassName();\n      if (!this.gridContainer) {\n        // 初始只渲染一个空壳当容器，以让出资源去渲染其它界面，之后表格在此容器内渲染\n        return this.initialShell(className);\n      } else {\n        // gridViewSize是外层的尺寸\n        gridItemStyle = Object.assign({}, {\n          height: this.gridViewSize.height,\n          width: this.gridViewSize.width\n        });\n      }\n      //* ******TODO:rowData/floatingBottomRowData/columnDefs在grid内部是用!==来进行两个对象的比较，故相同值不要在此处赋值，应该用自身属性到receive中取值计算。\n      var rowdata = this.getGridRowData();\n      var toolbarLocation = this.props.toolbarLocation;\n      var toolPanel = null;\n      if (this.hasNavigation()) {\n        // 要用this.gridRows里的值\n        className = toolbarLocation !== '1' ? className + ' ' + [_CellClass[\"default\"].billViewWithToolbar] : className + ' ' + [_CellClass[\"default\"].billViewWithBottomToolbar];\n        // className = className + ' ' + [cellStyles['billViewWithToolbar']]\n        var navigationDefaultHeight = this.getNavigationDefaultHeight();\n        gridItemStyle.height -= navigationDefaultHeight;\n        toolPanel = this.getNavigationBar(navigationDefaultHeight);\n      }\n      var containerStyle = {\n        minHeight: this.gridState.styles.minHeight\n      };\n      var _this$gridContrlParam10 = this.gridContrlParams,\n        isAlternatelyRowsStyle = _this$gridContrlParam10.isAlternatelyRowsStyle,\n        mergeModel = _this$gridContrlParam10.mergeModel;\n      // 1. 有行融合的交替行 2.普通交替行\n      var stripeClass = mergeModel && !mergeModel.suppress ? 'grid-merge-zebra-stripe' : 'grid-zebra-stripe';\n      className = (0, _classnames4[\"default\"])(_defineProperty(_defineProperty({}, stripeClass, isAlternatelyRowsStyle), 'grid-row-merged', mergeModel && !mergeModel.suppress), className);\n      var dynamicProps = {};\n      if (this.gridOptions.rowModelType === 'serverSide' || this.gridOptions.rowModelType === 'infinite') {\n        dynamicProps = {\n          rowModelType: this.gridOptions.rowModelType\n        };\n      } else if (this.gridOptions.masterDetail) {\n        dynamicProps = {\n          masterDetail: !!this.gridOptions.masterDetail,\n          detailCellRendererParams: this.gridOptions.detailCellRendererParams,\n          detailCellRenderer: this.gridOptions.detailCellRenderer,\n          // detailCellRendererFramework\n          rowData: this.gridRows\n        };\n      } else {\n        dynamicProps = {\n          rowData: this.gridRows\n        };\n      }\n      gridItemStyle.position = 'relative';\n      var gridInnerWrapClassName = this.getGridInnerWrapClassName();\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        id: this.gridState.id,\n        \"data-comtype\": this.props.model.meta.get('type'),\n        \"data-shortcut\": this.props.model.pageId,\n        \"data-gridtype\": this.props.model.meta.get('gridtype'),\n        ref: this.bindGridContainer,\n        style: this.gridState.styles,\n        className: className,\n        onKeyDown: this.handleAgCoreKeyDown\n      }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: _GridStyles[\"default\"].absoluteContainer\n      }, toolbarLocation !== '1' ? toolPanel : null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: gridInnerWrapClassName,\n        style: gridItemStyle,\n        ref: this.bindGridContainerI\n      }, /*#__PURE__*/_react[\"default\"].createElement(_settingBtn[\"default\"], {\n        gridContrlParams: this.gridContrlParams,\n        toolBarBtnClick: this.props.toolBarBtnClick,\n        getGridState: function getGridState() {\n          return _this7.gridState;\n        },\n        postRowSelection: this.postRowSelection,\n        gridOptions: this.gridOptions,\n        gridState: this.gridState\n      }), /*#__PURE__*/_react[\"default\"].createElement(_agGridReact.AgGridReact, _extends({}, dynamicProps, {\n        ref: function ref(ttt) {\n          return _this7.aggridcont = ttt;\n        },\n        gridOptions: this.gridOptions,\n        columnDefs: this.gridState.columnDefs\n        // listening for events\n        ,\n        onGridReady: this.onGridReady\n        // onRowSelected={this.onRowSelected}\n        ,\n        onFilterModified: function onFilterModified(e) {\n          _console[\"default\"].log('filtermodify');\n          // console.log('onFilterModified',e)\n        },\n        onFilterChanged: this.handleAfterFilterChanged // 过滤执行后调用\n        ,\n        onSortChanged: this.onAfterSortChanged,\n        onRowGroupOpened: this.onRowGroupOpened // 树表展开状态记录 By Shawn\n        ,\n        onComponentStateChanged: this.gridFinishedUpdate,\n        onRowClicked: this.clickOrDoubleClick // 这个事件在刚进入编辑时不能触发。。\n        ,\n        onSelectionChanged: this.onSelectionChanged,\n        onColumnResized: this.columnResized,\n        onColumnMoved: this.columnMoved,\n        onDragStopped: this.handleDragStopped,\n        onDragStarted: this.onDragStarted,\n        onVirtualColumnsChanged: this.onVirtualColumnsChanged,\n        pinnedBottomRowData: this.pinnedBottomRowData,\n        suppressScrollLag: \"true\",\n        scrollbarWidth: _GridUtils.SCROLLBARWIDTH // To tell grid how wide the scrollbar is which gets used in calculations on grid width calculations\n        ,\n        groupHeaders: \"true\",\n        deltaRowDataMode: this.gridContrlParams.isEntryEntity && !this.gridContrlParams.treeTable // 树表使用了getNodeChildDetails，不支持；这种模式仅会修改值改变的单元格\n      }, this.callbackProps, {\n        popupParent: (0, _singleSpa.getRootContainter)()\n      }))), toolbarLocation === '1' ? toolPanel : null, /*#__PURE__*/_react[\"default\"].createElement(_rowModel.RowDetailsContainer, {\n        parentGridState: this.gridState,\n        rowDetailParams: this.gridContrlParams.rowDetailParams,\n        rowDetailType: this.gridContrlParams.rowDetailType,\n        superProps: this.props,\n        getCellActions: this.getCellActions,\n        pushDelayInvoke: this.pushDelayInvoke,\n        getGridThisProp: this.getGridThisProp\n      }), this.gridContrlParams.headerTipsConfig.length > 0 ? /*#__PURE__*/_react[\"default\"].createElement(_HeaderTips[\"default\"], {\n        tipsConfig: this.gridContrlParams.headerTipsConfig,\n        pageId: this.gridState.pageId,\n        gridId: this.gridState.gridId,\n        localeId: this.gridState.localeId,\n        showFormByTips: this.props.showFormByTipsInAction,\n        model: this.props.model\n      }) : null, this.gridContrlParams.isEntryEntity ? /*#__PURE__*/_react[\"default\"].createElement(_GridValidateControl[\"default\"], {\n        pageId: this.gridState.pageId,\n        gridId: this.gridState.gridId,\n        api: this.api,\n        columnApi: this.columnApi,\n        gridEventService: this.gridEventService,\n        pageIndex: this.dataDesc.pageindex,\n        pageRows: this.dataDesc.pagerows,\n        type: this.gridState.type,\n        gridType: this.gridState.gridType\n      }) : null), this.gridContrlParams.viewParams.length > 0 ? /*#__PURE__*/_react[\"default\"].createElement(_viewModel.ViewManager, {\n        viewParams: this.gridContrlParams.viewParams,\n        getLastestGridModel: this.getLastestGridModel,\n        pageId: this.gridState.pageId,\n        id: this.gridState.id,\n        getActiveRowKey: this.getActiveRowKey,\n        setActiveView: this.setActiveView,\n        getColMetaByField: this.getColMetaByField,\n        mergeState: _action.mergeState,\n        comfirmDelete: this.props.comfirmDelete,\n        dispatch: this.props.dispatch,\n        getGridDisplayFun: this.getGridDisplayFun,\n        columnDefs: this.gridState.columnDefs,\n        getColProperty: this.getColProperty,\n        getDataProperty: this.getDataProperty\n      }) : null, this.gridContrlParams.isListView || this.gridContrlParams.isVirtualView ? /*#__PURE__*/_react[\"default\"].createElement(_GridQuickSearch[\"default\"], {\n        rowKey: this.gridState.rk,\n        getApi: this.getApi,\n        getColumnApi: this.getColumnApi,\n        setFocusedCell: this.setFocusedCell,\n        gridContainer: this.gridContainer,\n        getGridDisplayFun: this.getGridDisplayFun,\n        setQuickSearchCls: this.setQuickSearchCls,\n        setGridQuickFilterModelRefFun: this.setGridQuickFilterModelRefFun,\n        gridContrlParams: this.gridContrlParams,\n        columnDefs: this.gridState.columnDefs,\n        type: this.gridState.type\n      }) : null, this.gridContrlParams.isCellRangesSum ? /*#__PURE__*/_react[\"default\"].createElement(_CellRangesSumComponent[\"default\"], {\n        pageId: this.gridState.pageId,\n        gridId: this.gridState.gridId\n      }) : null, /*#__PURE__*/_react[\"default\"].createElement(_rowModel.PinnedRowSuspendSpace, {\n        pageId: this.gridState.pageId,\n        gridId: this.gridState.gridId,\n        id: this.gridState.id,\n        gridContrlParams: this.gridContrlParams,\n        dataDesc: this.dataDesc,\n        api: this.api,\n        invokeControlMethodSingle: this.props.invokeControlMethodSingle,\n        getGridThisProp: this.getGridThisProp,\n        setGridThisProp: this.setGridThisProp\n      }), /*#__PURE__*/_react[\"default\"].createElement(_GridValidateTip[\"default\"], {\n        pageId: this.gridState.pageId,\n        gridId: this.gridState.gridId,\n        api: this.api,\n        gridContrlParams: this.gridContrlParams,\n        onVisibleChange: this.handleGridValidateTipVisibleChange,\n        className: _GridStyles[\"default\"]['grid-validate-tip'],\n        type: this.gridState.type,\n        gridType: this.gridState.gridType\n      }));\n    }\n  }]);\n  return AgGridCore;\n}(_react.Component)) || _class) || _class);\nvar _default = exports[\"default\"] = AgGridCore;\nsetTimeout((0, _GridUtils.foy)(ter), 3);\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/AgDataGrid/AgGridCore.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/AgDataGrid/GridValidateControl.js":
/*!**********************************************************************!*\
  !*** ./src/component/web/DataGrid/AgDataGrid/GridValidateControl.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = GridValidateControl;\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.number.max-safe-integer.js */ \"../../node_modules/core-js/modules/es.number.max-safe-integer.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.parse-int.js */ \"../../node_modules/core-js/modules/es.parse-int.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nvar _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ \"webpack/sharing/consume/default/react-dom/react-dom?418d\"));\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _lodash = __webpack_require__(/*! lodash */ \"../../node_modules/lodash/lodash.js\");\nvar _appModelFunction = __webpack_require__(/*! @/model/appModelFunction */ \"./src/model/appModelFunction.js\");\nvar _gridEventName = _interopRequireDefault(__webpack_require__(/*! ./gridEvent/gridEventName */ \"./src/component/web/DataGrid/AgDataGrid/gridEvent/gridEventName.js\"));\nvar _const = __webpack_require__(/*! @/constant/const */ \"./src/constant/const.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _dataService = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/dataService */ \"./src/component/web/DataGrid/TableHelper/util/dataService.js\");\nvar _gridPureFun = __webpack_require__(/*! ./gridCoreUseFucntion/gridPureFun */ \"./src/component/web/DataGrid/AgDataGrid/gridCoreUseFucntion/gridPureFun.js\");\nvar _BaseValidateControlArrow = _interopRequireDefault(__webpack_require__(/*! ../TableHelper/component/BaseValidateControlArrow */ \"./src/component/web/DataGrid/TableHelper/component/BaseValidateControlArrow.js\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar BORDER_DIFF = 2;\nvar DEFAULT_ICON_PADDING = 2;\n\n/*\n * @Author: wqhui\n * @Date: 2022-08-01 15:56:26\n * @Description:\n */\n\nfunction GridValidateControl(_ref) {\n  var pageId = _ref.pageId,\n    gridId = _ref.gridId,\n    api = _ref.api,\n    columnApi = _ref.columnApi,\n    gridEventService = _ref.gridEventService,\n    _ref$pageIndex = _ref.pageIndex,\n    pageIndex = _ref$pageIndex === void 0 ? 1 : _ref$pageIndex,\n    _ref$pageRows = _ref.pageRows,\n    pageRows = _ref$pageRows === void 0 ? 20 : _ref$pageRows,\n    type = _ref.type,\n    gridType = _ref.gridType;\n  var _useState = (0, _react.useState)(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    show = _useState2[0],\n    setShow = _useState2[1];\n  var _useState3 = (0, _react.useState)({\n      top: false,\n      bottom: false\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    arrow = _useState4[0],\n    setArrow = _useState4[1];\n  var neastRowKeysRef = (0, _react.useRef)({\n    top: -1,\n    bottom: Number.MAX_SAFE_INTEGER\n  });\n  var rowKeyRange = (0, _react.useRef)(getRowKeyRange(pageIndex, pageRows));\n  var intersectionObserver = (0, _react.useRef)(null);\n  var resetNeastRowKeys = function resetNeastRowKeys() {\n    neastRowKeysRef.current.top = -1;\n    neastRowKeysRef.current.bottom = Number.MAX_SAFE_INTEGER;\n  };\n  var isShowControl = (0, _react.useCallback)(function () {\n    return !api.isColumnFilterPresent() && api.getSortModel().length === 0;\n  }, [api]);\n  var registerInersrctionOb = (0, _react.useCallback)(function () {\n    if (!intersectionObserver.current) {\n      var tableBody = api.gridPanel.eBodyViewport;\n      // 提交时，单据体不在视图内，校验行的错误水滴无法正常找到第一行和最后一行，从而无法确定需要如何展示水滴位置\n      intersectionObserver.current = new window.IntersectionObserver(function (entries) {\n        // 监测过程中单据体通过页签方式切换走了，需要注意这种情况\n        entries[0].isIntersecting && handleShowValidateControl();\n        if (entries[0].intersectionRatio === 1) {\n          intersectionObserver.current.disconnect();\n          intersectionObserver.current = null;\n        }\n      }, {\n        threshold: [0.000001, 0.999999]\n      });\n      tableBody && intersectionObserver.current.observe(tableBody);\n    }\n  }, [api]);\n  var handleShowValidateControl = (0, _react.useCallback)((0, _lodash.debounce)(function () {\n    var gridValidateData = (0, _appModelFunction.getGridValidateData)(pageId, [gridId]);\n    if (gridValidateData) {\n      var tableBody = api.gridPanel.eBodyViewport;\n      var _arrow = {\n        top: false,\n        bottom: false\n      };\n      var _tableBody$getBoundin = tableBody.getBoundingClientRect(),\n        x = _tableBody$getBoundin.x,\n        y = _tableBody$getBoundin.y;\n      var _api$getVerticalPixel = api.getVerticalPixelRange(),\n        _top = _api$getVerticalPixel.top,\n        _bottom = _api$getVerticalPixel.bottom;\n      var firstEleInViewport = document.elementFromPoint(x + BORDER_DIFF, y + BORDER_DIFF);\n      var lastEleInViewport = document.elementFromPoint(x + BORDER_DIFF, y + _bottom - _top - BORDER_DIFF);\n      // 单据体未完全展示在视图内需要监听\n      if (!firstEleInViewport || !lastEleInViewport) {\n        registerInersrctionOb();\n      }\n      var firstRowIndex = getRowIndex(firstEleInViewport);\n      var lastRowIndex = getRowIndex(lastEleInViewport);\n      resetNeastRowKeys();\n      var keys = gridValidateData.keys();\n      var result = keys.next();\n      while (!result.done) {\n        var _result = result,\n          rowKey = _result.value;\n        if (rowKey < rowKeyRange.current[0] || rowKeyRange >= rowKeyRange.current[1]) {\n          result = keys.next();\n          continue;\n        }\n        var _ref2 = api.getRowNode(rowKey) || {},\n          rowIndex = _ref2.rowIndex;\n        if (firstRowIndex != null && rowIndex < firstRowIndex) {\n          neastRowKeysRef.current.top = Math.max(neastRowKeysRef.current.top, rowKey);\n          _arrow.top = true;\n        } else if (lastRowIndex != null && rowIndex > lastRowIndex) {\n          neastRowKeysRef.current.bottom = Math.min(neastRowKeysRef.current.bottom, rowKey);\n          _arrow.bottom = true;\n        }\n        result = keys.next();\n      }\n      // 点击增行出现滚动条时可能导致异常，这里top=0，向上跳转不会存在\n      if (_top === 0) {\n        _arrow.top = false;\n      }\n      setArrow(_arrow);\n    } else {\n      setArrow({\n        top: false,\n        bottom: false\n      });\n    }\n  }, 300), [api, pageId, gridId]);\n  (0, _react.useEffect)(function () {\n    var handleScroll = (0, _lodash.debounce)(function (_ref3) {\n      var params = _ref3.params;\n      if (params.direction === 'vertical' && isShowControl()) {\n        handleShowValidateControl();\n      }\n    }, 300);\n    gridEventService.addEventListener(_gridEventName[\"default\"].bodyScroll, handleScroll);\n\n    // 表格校验改变\n    var handleGridValidateChange = function handleGridValidateChange(data) {\n      // 表示表格全部校验（如提交时）、存在竖直滚动条时，需要对不可见行的校验失败单元格进行判断\n      var isValidateCurrentTable = data.tableId === gridId || data.tableId === undefined;\n      if (isValidateCurrentTable && typeof data.rowKey === 'undefined' && api !== null && api !== void 0 && api.gridPanel.isVerticalScrollShowing() && isShowControl()) {\n        handleShowValidateControl();\n      }\n    };\n    var removeGridValidateChange = (0, _memoryCacher.addDataChangeListener)(pageId, [gridId, _const.GRID_VALIDATE_CHANGE], handleGridValidateChange);\n    var removeValidateChangeListener = (0, _memoryCacher.addDataChangeListener)(pageId, [_const.VALIDATE_FINISH], function (_ref4) {\n      var tableId = _ref4.tableId,\n        rowKey = _ref4.rowKey;\n      if (tableId && tableId !== gridId) {\n        return;\n      }\n      handleGridValidateChange({\n        rowKey: rowKey\n      });\n    });\n    var handleControlHidden = function handleControlHidden() {\n      setShow(isShowControl());\n    };\n    if (api) {\n      api.addEventListener('filterChanged', handleControlHidden);\n      api.addEventListener('sortChanged', handleControlHidden);\n    }\n    return function () {\n      gridEventService && gridEventService.removeEventListener(_gridEventName[\"default\"].bodyScroll, handleScroll);\n      removeGridValidateChange && removeGridValidateChange();\n      removeValidateChangeListener && removeValidateChangeListener();\n      if (api) {\n        api.removeEventListener('filterChanged', handleControlHidden);\n        api.removeEventListener('sortChanged', handleControlHidden);\n      }\n      if (intersectionObserver.current) {\n        intersectionObserver.current.disconnect();\n        intersectionObserver.current = null;\n      }\n    };\n  }, [api]);\n  (0, _react.useEffect)(function () {\n    var lastRowKeyRange = rowKeyRange.current;\n    rowKeyRange.current = getRowKeyRange(pageIndex, pageRows);\n    if (lastRowKeyRange[0] !== rowKeyRange.current[0] || lastRowKeyRange[1] !== rowKeyRange.current[1]) {\n      handleShowValidateControl();\n    }\n  }, [pageIndex, pageRows]);\n  var handleClick = (0, _lodash.throttle)(function (e) {\n    var rowKey = '';\n    if (e.target.dataset.arrow === 'top') {\n      rowKey = neastRowKeysRef.current.top;\n    } else if (e.target.dataset.arrow === 'bottom') {\n      rowKey = neastRowKeysRef.current.bottom;\n    }\n    var _ref5 = api.getRowNode(rowKey) || {},\n      rowIndex = _ref5.rowIndex;\n    api.ensureIndexVisible(rowIndex, 'middle');\n    var gridRowValidateData = (0, _appModelFunction.getGridValidateData)(pageId, [gridId, rowKey]);\n    if (gridRowValidateData && columnApi) {\n      var _columnApi$getAllDisp;\n      var nextCol = (0, _gridPureFun.getNextValidateFailedCol)(columnApi, (_columnApi$getAllDisp = columnApi.getAllDisplayedColumns()[0]) === null || _columnApi$getAllDisp === void 0 ? void 0 : _columnApi$getAllDisp.colId, gridRowValidateData);\n      if (nextCol) {\n        api.ensureColumnVisible(nextCol.colId);\n        api.setFocusedCell(rowIndex, nextCol.colId);\n        api.startEditingCell({\n          rowIndex: rowIndex,\n          colKey: nextCol.colId\n        });\n      }\n    }\n    var controlType = (0, _dataService.getGridTrackingType)({\n      type: type,\n      gridType: gridType\n    });\n    (0, _dataService.trackingOfValidateClick)({\n      pageId: pageId,\n      controlId: gridId,\n      controlType: controlType,\n      actionKey: e.target.dataset.arrow // 此处值为top/bottom\n    });\n  }, 100);\n  var top = 0;\n  var bottom = 0;\n  if (api) {\n    top = parseInt(api.headerRootComp.eGui.style.height) + DEFAULT_ICON_PADDING;\n    bottom = parseInt(api.gridPanel.eHorizontalScrollBody.style.height) + parseInt(api.gridPanel.eBottom.style.height) + DEFAULT_ICON_PADDING;\n  }\n  return api && show ? /*#__PURE__*/_reactDom[\"default\"].createPortal( /*#__PURE__*/_react[\"default\"].createElement(_BaseValidateControlArrow[\"default\"], {\n    arrow: arrow,\n    topStyle: {\n      top: top\n    },\n    bottomStyle: {\n      bottom: bottom\n    },\n    handleClick: handleClick\n  }), api.gridPanel.eGui) : null;\n}\nfunction getRowIndex(ele) {\n  var point = ele;\n  var result;\n  while (point && !result) {\n    var _point;\n    result = (_point = point) === null || _point === void 0 ? void 0 : _point.getAttribute('row-index');\n    point = point.parentNode;\n  }\n  return result;\n}\nfunction getRowKeyRange(pageIndex, pageRows) {\n  return [(pageIndex - 1) * pageRows, pageIndex * pageRows];\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/AgDataGrid/GridValidateControl.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/AgDataGrid/GridValidateTip.js":
/*!******************************************************************!*\
  !*** ./src/component/web/DataGrid/AgDataGrid/GridValidateTip.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = GridValidateTip;\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _dataService = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/dataService */ \"./src/component/web/DataGrid/TableHelper/util/dataService.js\");\nvar _BaseValidateTip = _interopRequireDefault(__webpack_require__(/*! ../TableHelper/component/BaseValidateTip */ \"./src/component/web/DataGrid/TableHelper/component/BaseValidateTip.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/*\n * @Author: wqhui\n * @Date: 2022-07-28 17:35:00\n * @Description:\n */\nfunction GridValidateTip(_ref) {\n  var pageId = _ref.pageId,\n    gridId = _ref.gridId,\n    api = _ref.api,\n    gridContrlParams = _ref.gridContrlParams,\n    onVisibleChange = _ref.onVisibleChange,\n    className = _ref.className,\n    type = _ref.type,\n    gridType = _ref.gridType;\n  var _useState = (0, _react.useState)(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    failedCount = _useState2[0],\n    setFailedCount = _useState2[1];\n  var _useState3 = (0, _react.useState)(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    show = _useState4[0],\n    setShow = _useState4[1];\n  (0, _react.useEffect)(function () {\n    if (!gridContrlParams.isEntryEntity) {\n      return;\n    }\n    var removeErrorCountListener = (0, _memoryCacher.addDataChangeListener)(pageId, [gridId, _gridConst.VALIDATE_FAILED_COUNT], function (errorCount) {\n      setFailedCount(errorCount);\n      api && setShow(errorCount !== 0 && api.isColumnFilterPresent());\n    });\n    return function () {\n      removeErrorCountListener();\n    };\n  }, [api]);\n  var clearFilter = function clearFilter() {\n    // 目前只有单据体的清空\n    var filterModel = api.getFilterModel();\n    Object.keys(filterModel).forEach(function (col) {\n      var filterInstance = api.getFilterInstance(col);\n      var component = filterInstance.getFrameworkComponentInstance();\n      component === null || component === void 0 || component.clearInput();\n    });\n    var controlType = (0, _dataService.getGridTrackingType)({\n      type: type,\n      gridType: gridType\n    });\n    (0, _dataService.trackingOfValidateClick)({\n      pageId: pageId,\n      controlId: gridId,\n      controlType: controlType,\n      actionKey: 'clearFilter'\n    });\n  };\n  (0, _react.useEffect)(function () {\n    onVisibleChange === null || onVisibleChange === void 0 || onVisibleChange(show);\n  }, [show]);\n  return show ? /*#__PURE__*/_react[\"default\"].createElement(_BaseValidateTip[\"default\"], {\n    errorCount: failedCount,\n    clearFilter: clearFilter,\n    className: className\n  }) : null;\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/AgDataGrid/GridValidateTip.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/AgDataGrid/HeaderTips.js":
/*!*************************************************************!*\
  !*** ./src/component/web/DataGrid/AgDataGrid/HeaderTips.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.create.js */ \"../../node_modules/core-js/modules/es.object.create.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-prototype-of.js */ \"../../node_modules/core-js/modules/es.object.get-prototype-of.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.reflect.construct.js */ \"../../node_modules/core-js/modules/es.reflect.construct.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.function.bind.js */ \"../../node_modules/core-js/modules/es.function.bind.js\");\n__webpack_require__(/*! core-js/modules/es.object.set-prototype-of.js */ \"../../node_modules/core-js/modules/es.object.set-prototype-of.js\");\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ \"webpack/sharing/consume/default/react-dom/react-dom?418d\"));\nvar _Tooltip = _interopRequireDefault(__webpack_require__(/*! ../../../common/Tooltip */ \"./src/component/common/Tooltip.jsx\"));\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _client = __webpack_require__(/*! @/action/actionname/global/custom/client */ \"./src/action/actionname/global/custom/client/index.js\");\nvar _global = _interopRequireWildcard(__webpack_require__(/*! @/global */ \"./src/global/index.js\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar HeaderTips = exports[\"default\"] = /*#__PURE__*/function (_React$Component) {\n  _inherits(HeaderTips, _React$Component);\n  function HeaderTips(props) {\n    var _this;\n    _classCallCheck(this, HeaderTips);\n    _this = _callSuper(this, HeaderTips, [props]);\n    _this.state = {\n      ready: false\n    };\n    _this.getTipsConfig = _this.getTipsConfig.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(HeaderTips, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n        pageId = _this$props.pageId,\n        gridId = _this$props.gridId;\n      this.setHeaderTipsHander = (0, _memoryCacher.addDataChangeListener)(pageId, [gridId, '__headerTips'], this.getTipsConfig);\n    }\n  }, {\n    key: \"getTipsConfig\",\n    value: function getTipsConfig(ready) {\n      this.setState({\n        ready: ready\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setHeaderTipsHander && this.setHeaderTipsHander();\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem() {\n      var _this2 = this;\n      var _this$props2 = this.props,\n        tipsConfig = _this$props2.tipsConfig,\n        pageId = _this$props2.pageId,\n        gridId = _this$props2.gridId,\n        showFormByTips = _this$props2.showFormByTips,\n        localeId = _this$props2.localeId;\n      var items = [];\n      if (this.state.ready) {\n        items = tipsConfig.map(function (item, index) {\n          var dom = document.getElementById(item.id);\n          if (dom !== null) {\n            return /*#__PURE__*/_react[\"default\"].createElement(TipItem, {\n              model: _this2.props.model,\n              key: index,\n              pageId: pageId,\n              gridId: gridId,\n              localeId: localeId,\n              showFormByTips: showFormByTips,\n              dom: dom,\n              tips: item.tips\n            });\n          } else {\n            return null;\n          }\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tipItems = this.renderItem();\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, tipItems);\n    }\n  }]);\n  return HeaderTips;\n}(_react[\"default\"].Component);\nvar TipItem = /*#__PURE__*/function (_React$Component2) {\n  _inherits(TipItem, _React$Component2);\n  function TipItem() {\n    _classCallCheck(this, TipItem);\n    return _callSuper(this, TipItem, arguments);\n  }\n  _createClass(TipItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        tips = _this$props3.tips,\n        pageId = _this$props3.pageId,\n        gridId = _this$props3.gridId,\n        _showFormByTips = _this$props3.showFormByTips,\n        localeId = _this$props3.localeId;\n      var triggerType = getTriggerType(tips);\n      return /*#__PURE__*/_reactDom[\"default\"].createPortal( /*#__PURE__*/_react[\"default\"].createElement(_Tooltip[\"default\"], {\n        style: {\n          fontSize: '12px'\n        },\n        model: this.props.model,\n        tips: tips,\n        userLocal: localeId,\n        showFormByTips: function showFormByTips(formId, targetCtrlKey) {\n          return _showFormByTips(pageId, gridId, formId, targetCtrlKey, triggerType);\n        },\n        clickTipsLink: function clickTipsLink(code) {\n          return _global[\"default\"][_global.INVOKE_CUSTOM_EVENT](pageId, '', [_client.CUSTOM_EVENT_CLICK_TIPS_LINK, '', code]);\n        }\n      }), this.props.dom);\n    }\n  }]);\n  return TipItem;\n}(_react[\"default\"].Component);\n/**\n * 获取触发类型\n * @param {Map} tips 非可变map对象\n */\nvar getTriggerType = function getTriggerType(tips) {\n  var type = tips.get('type');\n  var triggerType = tips.get('triggerType');\n  return type === 'text' ? triggerType || 'hover' : triggerType || 'click';\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/AgDataGrid/HeaderTips.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/AgDataGrid/gridAppendant/getGridShell.js":
/*!*****************************************************************************!*\
  !*** ./src/component/web/DataGrid/AgDataGrid/gridAppendant/getGridShell.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = getGridShell;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _GridStyles = _interopRequireDefault(__webpack_require__(/*! ../GridStyles.less */ \"./src/component/web/DataGrid/AgDataGrid/GridStyles.less\"));\nvar _ToolBar = _interopRequireDefault(__webpack_require__(/*! @/component/web/DataGrid/TableHelper/component/toolBar/ToolBar.less */ \"./src/component/web/DataGrid/TableHelper/component/toolBar/ToolBar.less\"));\nvar _settingBtn = _interopRequireDefault(__webpack_require__(/*! ../settingBtn */ \"./src/component/web/DataGrid/AgDataGrid/settingBtn.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/**\n * 表格的初始壳\n * 1.列表情况下，列的元数据是动态过来的 需要先渲染一个空壳，防止抖动\n * 2.在gridReady之前，需要先渲染一个简单的壳  让出资源去渲染其他的组件，在forceUpdate中再一次渲染\n */\n\nfunction getGridShell(params) {\n  var style = params.style,\n    headerHeight = params.headerHeight,\n    className = params.className,\n    bindGridContainer = params.bindGridContainer,\n    bindGridContainerI = params.bindGridContainerI,\n    hasToolbar = params.hasToolbar,\n    model = params.model,\n    toolBarBtnClick = params.toolBarBtnClick,\n    advGridId = params.advGridId;\n  var btnDom = model ? getGridSellSettingBtn(model, headerHeight, toolBarBtnClick, advGridId) : null;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: style,\n    className: className,\n    ref: bindGridContainer\n  }, hasToolbar ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _ToolBar[\"default\"].toolBar\n  }) : null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _GridStyles[\"default\"].gridContainerI,\n    style: {\n      position: 'relative'\n    },\n    ref: bindGridContainerI\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"ag-header\",\n    style: {\n      top: '0px',\n      height: headerHeight + 'px',\n      width: '100%'\n    }\n  }, btnDom), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: {\n      backgroundColor: 'rgba(255,255,255,0.5)',\n      position: 'absolute',\n      top: 0,\n      height: '100%',\n      width: '100%'\n    }\n  })));\n}\nfunction getGridSellSettingBtn(model, headerHeight, toolBarBtnClick, advGridId) {\n  var meta = model.meta;\n  if (meta) {\n    var gridContrlParams = {\n      isListView: meta.get('gridtype') === 'VIEWGRID',\n      isVirtualView: meta.get('gridtype') === 'VIRTUALVIEWGRID',\n      hasSettingBtn: meta.get('showGridConfig', false),\n      maxLevel: 1\n    };\n    var gridState = {\n      rowKey: meta.get('gridtype'),\n      seq: meta.get('seq'),\n      id: meta.get('id'),\n      pageId: model.pageId,\n      gridId: advGridId || meta.get('id')\n    };\n    var gridOptions = {\n      headerHeight: headerHeight\n    };\n    return /*#__PURE__*/_react[\"default\"].createElement(_settingBtn[\"default\"], {\n      gridContrlParams: gridContrlParams,\n      gridState: gridState,\n      gridOptions: gridOptions,\n      toolBarBtnClick: toolBarBtnClick\n    });\n  }\n  return null;\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/AgDataGrid/gridAppendant/getGridShell.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/AgDataGrid/gridEvent/gridEventService.js":
/*!*****************************************************************************!*\
  !*** ./src/component/web/DataGrid/AgDataGrid/gridEvent/gridEventService.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.find-index.js */ \"../../node_modules/core-js/modules/es.array.find-index.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.array.splice.js */ \"../../node_modules/core-js/modules/es.array.splice.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar GridEventService = /*#__PURE__*/_createClass(function GridEventService() {\n  var _this = this;\n  _classCallCheck(this, GridEventService);\n  this.getListenerListIndex = function () {\n    var listenerList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var listener = arguments.length > 1 ? arguments[1] : undefined;\n    return listenerList.findIndex(function (listenerObj) {\n      return listenerObj.listener === listener;\n    });\n  };\n  this.addEventListener = function (eventType, listener) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var _options$async = options.async,\n      async = _options$async === void 0 ? false : _options$async,\n      _options$once = options.once,\n      once = _options$once === void 0 ? false : _options$once;\n    var listenerList = _this._getListenerList(eventType, async);\n    var index = _this.getListenerListIndex(listenerList, listener);\n    if (index < 0) {\n      var event = {\n        listener: listener,\n        once: once\n      };\n      listenerList.push(event);\n    }\n  };\n  this.removeEventListener = function (eventType, listener) {\n    var async = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var listenerList = _this._getListenerList(eventType, async);\n    var index = _this.getListenerListIndex(listenerList, listener);\n    if (index >= 0) {\n      listenerList.splice(index, 1);\n    }\n  };\n  this.dispatchEvent = function (event) {\n    _this.dispatchToListeners(event, true);\n    _this.dispatchToListeners(event, false);\n  };\n  this.dispatchToListeners = function (event, async) {\n    var eventType = event.eventType;\n    var listenerList = _this._getListenerList(eventType, async);\n    listenerList.forEach(function (listenerObj) {\n      var listener = listenerObj.listener;\n      if (async) {\n        _this._dispatchAsync(function () {\n          listener(event);\n        });\n      } else {\n        try {\n          listener(event);\n        } catch (e) {\n          console.warn(e);\n        }\n      }\n    });\n    var listenerMap = async ? _this.allAsyncListeners : _this.allSyncListeners;\n    listenerMap[eventType] = listenerList.filter(function (listenerObj) {\n      return !listenerObj.once;\n    });\n  };\n  this.cancel = function () {\n    _this.allSyncListeners = {};\n    _this.allAsyncListeners = {};\n    _this.scheduled = false;\n    // this.firedEvents = null\n    _this.asyncFunctionsQueue = [];\n  };\n  this._getListenerList = function (eventType, async) {\n    var listenerMap = async ? _this.allAsyncListeners : _this.allSyncListeners;\n    var listenerList = listenerMap[eventType];\n    if (!listenerList) {\n      listenerList = [];\n      listenerMap[eventType] = listenerList;\n    }\n    return listenerList;\n  };\n  this._dispatchAsync = function (func) {\n    _this.asyncFunctionsQueue.push(func);\n    if (!_this.scheduled) {\n      // if not scheduled, schedule one\n      window.setTimeout(_this._flushAsyncQueue, 0);\n      // mark that it is scheduled\n      _this.scheduled = true;\n    }\n  };\n  this._flushAsyncQueue = function () {\n    _this.scheduled = false;\n    var queueCopy = _this.asyncFunctionsQueue.slice();\n    _this.asyncFunctionsQueue = [];\n    // execute the queue\n    queueCopy.forEach(function (func) {\n      return func();\n    });\n  };\n  this.allSyncListeners = {}; // 同步事件\n  this.allAsyncListeners = {}; // 异步事件\n  this.scheduled = false;\n  // this.firedEvents = {}\n  this.asyncFunctionsQueue = [];\n});\nvar _default = exports[\"default\"] = GridEventService;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/AgDataGrid/gridEvent/gridEventService.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/AgDataGrid/quickSearchModal/GridQuickSearch.js":
/*!***********************************************************************************!*\
  !*** ./src/component/web/DataGrid/AgDataGrid/quickSearchModal/GridQuickSearch.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.find-index.js */ \"../../node_modules/core-js/modules/es.array.find-index.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.index-of.js */ \"../../node_modules/core-js/modules/es.array.index-of.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.object.assign.js */ \"../../node_modules/core-js/modules/es.object.assign.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"../../node_modules/classnames/index.js\"));\nvar _lodash = _interopRequireDefault(__webpack_require__(/*! lodash */ \"../../node_modules/lodash/lodash.js\"));\nvar _GridQuickSearch = _interopRequireDefault(__webpack_require__(/*! ./GridQuickSearch.less */ \"./src/component/web/DataGrid/AgDataGrid/quickSearchModal/GridQuickSearch.less\"));\nvar _console = _interopRequireDefault(__webpack_require__(/*! @/api/console */ \"./src/api/console.js\"));\nvar _gridCoreUseFucntion = __webpack_require__(/*! ../gridCoreUseFucntion */ \"./src/component/web/DataGrid/AgDataGrid/gridCoreUseFucntion/index.js\");\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar text = {};\nfunction getText(key) {\n  if (text[key]) {\n    return text[key];\n  }\n  text[key] = (0, _intlApi.getLangMsg)(key);\n  return text[key];\n}\nfunction GridQuickSearch(_ref) {\n  var rowKey = _ref.rowKey,\n    getApi = _ref.getApi,\n    getColumnApi = _ref.getColumnApi,\n    setFocusedCell = _ref.setFocusedCell,\n    gridContainer = _ref.gridContainer,\n    getGridDisplayFun = _ref.getGridDisplayFun,\n    setQuickSearchCls = _ref.setQuickSearchCls,\n    gridContrlParams = _ref.gridContrlParams,\n    columnDefs = _ref.columnDefs,\n    setGridQuickFilterModelRefFun = _ref.setGridQuickFilterModelRefFun;\n  var _useState = (0, _react.useState)(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    val = _useState2[0],\n    setVal = _useState2[1];\n  var _useState3 = (0, _react.useState)(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    hide = _useState4[0],\n    setHide = _useState4[1];\n  var _useState5 = (0, _react.useState)(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showNotFoundTips = _useState6[0],\n    setShowNotFoundTips = _useState6[1];\n  // {\n  // val:'',rowIndex,colId,\n  // }\n  var isSearched = (0, _react.useRef)(false);\n  var searchCellsCache = (0, _react.useRef)({});\n  var setSearchCellsCache = function setSearchCellsCache(val, cell) {\n    if (val === '') {\n      // clear\n      searchCellsCache.current = {};\n      return;\n    }\n    if (searchCellsCache.current.val === val) {\n      // add\n      searchCellsCache.current.cells ? searchCellsCache.current.cells.push(cell) : searchCellsCache.current.cells = [cell];\n    } else {\n      // new\n      searchCellsCache.current = {\n        val: val,\n        cells: [cell]\n      };\n    }\n  };\n  var lastSearchCache = (0, _react.useRef)({});\n  var setLastSearchCache = function setLastSearchCache(key, val) {\n    if (key === '') {\n      // clear\n      lastSearchCache.current = {};\n    }\n    if (_typeof(key) === 'object') {\n      // update\n      lastSearchCache.current = Object.assign({}, lastSearchCache.current, key);\n    } else if (typeof key === 'string') {\n      // new\n      lastSearchCache.current = Object.assign({}, lastSearchCache.current, _defineProperty({}, key, val));\n    }\n  };\n  var searchType = (0, _react.useRef)(1); // 1.从前往后 2.从后往前\n  var setSearchType = function setSearchType(v) {\n    searchType.current = v;\n  };\n  var columns = (0, _react.useRef)([]);\n  var columnIndex = (0, _react.useRef)({});\n  var getColumnIndex = function getColumnIndex(colId) {\n    if (columnIndex.current[colId]) {\n      return columnIndex.current[colId];\n    }\n    var index = columns.current.findIndex(function (item) {\n      return item === colId;\n    });\n    columnIndex.current[colId] = index;\n    return index;\n  };\n  var startSearchIndex = (0, _react.useRef)(0); // 某个值第一次搜索的位置\n\n  var loadingHandle = (0, _react.useRef)();\n  var isRowSpan = (0, _react.useRef)(false); // 存在行融合\n\n  var gridApi = (0, _react.useRef)(null);\n  var colDefMap = (0, _react.useRef)({});\n  var inputRef = (0, _react.useRef)(null);\n  var modalRef = (0, _react.useRef)(null);\n  var onChangeHandle = function onChangeHandle(e) {\n    setVal(e.target.value);\n  };\n  var onKeyDownHandle = function onKeyDownHandle(e) {\n    if (e.keyCode === 13) {\n      onSearchHandle();\n    }\n  };\n  var _onSearchHandle = function _onSearchHandle() {\n    var api = getApi();\n    if (!api || val === '') {\n      return;\n    }\n    !gridApi.current && (gridApi.current = api);\n    isRowSpan.current = getIsRowSpan(gridContrlParams);\n    if (lastSearchCache.current.val !== val) {\n      var focusCellPosition = getFocusCellPosition(api);\n      focusCellPosition && (startSearchIndex.current = focusCellPosition.rowIndex);\n      setSearchCellsCache('');\n      partAfterRowsDoSearch(api);\n    } else {\n      partAfterRowsDoSearch(api);\n      // partBeforeRowsDoSearch(api)\n    }\n  };\n  var onSearchHandle = _lodash[\"default\"].debounce(_onSearchHandle, 100, {\n    leading: true,\n    trailing: false\n  });\n  var getFocusCellPosition = function getFocusCellPosition(api) {\n    api = api || getApi();\n    var cell = api.getFocusedCell();\n    return cell ? {\n      rowIndex: cell.rowIndex,\n      colId: cell.column.colId\n    } : null;\n  };\n\n  // const allRowsDoSearch = (api) => {\n  //   setSearchType(1)\n  //   const endIndex = api.getDisplayedRowCount() - 1\n  //   doRowSearch(api, 0, endIndex)\n  // }\n\n  var partAfterRowsDoSearch = function partAfterRowsDoSearch(api) {\n    setSearchType(1);\n    var focusCellPosition = getFocusCellPosition(api);\n    var startIndex = focusCellPosition ? focusCellPosition['rowIndex'] : 0; // lastSearchCache.current['rowIndex'] || 0\n    var endIndex = api.getDisplayedRowCount() - 1;\n    doRowSearch(api, startIndex, endIndex);\n  };\n\n  // const partBeforeRowsDoSearch = (api) => {\n  //   setSearchType(2)\n  //   const startIndex = lastSearchCache.current['rowIndex'] || 0\n  //   const endIndex = 0\n  //   doRowSearch(api, startIndex, endIndex)\n  // }\n\n  /**\n   * 行遍历去查找\n   * @param {*} api\n   * @param {*} startIndex\n   * @param {*} endIndex\n   * @param {*} isAfter 是否向后查找\n   * @param {*} isForceMatch 是否是强制匹配，true: 找到即强制设置焦点\n   */\n  var doRowSearch = function doRowSearch(api, startIndex, endIndex) {\n    var isAfter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    var isForceMatch = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    // loadingHandle.current && clearTimeout(loadingHandle.current)\n    // loadingHandle.current = setTimeout(() => {\n    //   api.showLoadingOverlay()\n    // }, 300)\n    var beforeLastSearchCache = Object.assign({}, lastSearchCache.current);\n    isSearched.current = false;\n    for (var i = startIndex; i <= endIndex; isAfter ? i++ : i--) {\n      if (isSearched.current) {\n        isSearched.current = false;\n        break;\n      }\n      doSearch(api.getDisplayedRowAtIndex(i), i, isForceMatch, api);\n    }\n    if (isNoSearched(beforeLastSearchCache)) {\n      _console[\"default\"].log('not search');\n      // loadingHandle.current && clearTimeout(loadingHandle.current)\n      // api.hideOverlay()// 隐藏loadding\n      if (startSearchIndex.current !== 0) {\n        // 不是从开始查找的，要再从头找一遍\n        _console[\"default\"].log('restart search 0 to', startSearchIndex.current);\n        var _endIndex = startSearchIndex.current;\n        startSearchIndex.current = 0; // 重设为0\n        setSearchType(1);\n        doRowSearch(api, 0, _endIndex, true, true);\n        return;\n      }\n      if (searchCellsCache.current.val) {\n        _console[\"default\"].log('searched all,looper');\n        setSearchCellsCache('');\n        setLastSearchCache('');\n        doRowSearch(api, 0, api.getDisplayedRowCount() - 1);\n      } else {\n        setLastSearchCache({\n          val: val\n        });\n        setShowNotFoundTips(true);\n        _console[\"default\"].log('not match cell, tips');\n      }\n    } else {\n      setShowNotFoundTips(false);\n    }\n  };\n  var setLooperSearch = function setLooperSearch() {\n    var firstCell = searchCellsCache.current.cells && searchCellsCache.current.cells[0];\n    firstCell && setSearchedCell(firstCell['rowIndex'], firstCell['colId']);\n    firstCell && setLastSearchCache(firstCell);\n  };\n  var isNoSearched = function isNoSearched(beforeLastSearchCache) {\n    return !isSearched.current && _lodash[\"default\"].isEqual(beforeLastSearchCache, lastSearchCache.current);\n  };\n  var isStringEmpty = function isStringEmpty(val) {\n    return val == null || val === '';\n  };\n  var isAfterCell = function isAfterCell(key, index, rowIndex) {\n    var focusCellPosition = getFocusCellPosition();\n    //! isStringEmpty(lastSearchCache.current['colId']) && !isStringEmpty(lastSearchCache.current['colIndex']) && (index > lastSearchCache.current['colIndex'] || rowIndex > lastSearchCache.current['rowIndex'])\n    return !focusCellPosition || index > getColumnIndex(focusCellPosition.colId) || rowIndex > focusCellPosition['rowIndex'];\n  };\n  var isNotEverMatch = function isNotEverMatch(val) {\n    return !lastSearchCache.current || isStringEmpty(lastSearchCache.current.val) || lastSearchCache.current.val !== val;\n  };\n  var isAllowFocus = function isAllowFocus(isForceMatch, val, key, index, rowIndex) {\n    // 允许聚焦\n    return isForceMatch || isNotEverMatch(val) || isAfterCell(key, index, rowIndex);\n  };\n  var isNotAllowFocus = function isNotAllowFocus(thisRowKeyVal, rowIndex, colId) {\n    // 不允许聚焦\n    if (!isRowSpan.current) {\n      return false;\n    }\n    var api = gridApi.current || getApi();\n    var displayLastRowIndex = api && api.getDisplayedRowCount() - 1;\n    return !isLastRowSpanCell(thisRowKeyVal, displayLastRowIndex, rowIndex, gridContrlParams, getColEntity(colId)); // 融合且改单元格是被融合的\n  };\n\n  /**\n   * 具体查找方法\n   * @param {*} node\n   * @param {*} rowIndex 行索引\n   * @param {*} isForceMatch 强制匹配，找到即强制设置焦点\n   */\n  var doSearch = function doSearch(node, rowIndex, isForceMatch, api) {\n    if (node) {\n      var data = node.data;\n      if (data == null) {\n        return;\n      }\n      var cols = columns.current && _toConsumableArray(columns.current);\n      _console[\"default\"].log('cols', cols);\n      cols && cols.forEach(function (key, index) {\n        if (data[key] == null || isSearched.current) {\n          return false;\n        }\n        var formmatFun = getGridDisplayFun(key);\n        var v = formmatFun ? formmatFun(data[key], data) : getCellDisplayValue(key, data[key], data);\n        v = v + '';\n        var rk = data[rowKey] || rowIndex;\n        // 是否匹配\n        // 从找到的位置之后去查找\n        // 可能数组类型也会找到= =\n        if (v.indexOf(val) >= 0 && isAllowFocus(isForceMatch, val, key, index, rowIndex) && !isNotAllowFocus(rk, rowIndex, key)) {\n          // loadingHandle.current && clearTimeout(loadingHandle.current)\n          isSearched.current = true;\n          setLastSearchCache({\n            val: val,\n            rowIndex: rowIndex,\n            colId: key,\n            colIndex: index\n          });\n          setSearchCellsCache(val, {\n            val: val,\n            rowIndex: rowIndex,\n            colId: key,\n            colIndex: index\n          });\n          setSearchedCell(rk, key);\n          cols.length = 0; // 提前结束forEach\n          // api.hideOverlay()// 隐藏loadding\n        }\n      });\n    }\n  };\n  var setSearchedCell = function setSearchedCell(rowIndex, key) {\n    var api = getApi();\n    api.clearRangeSelection();\n    _console[\"default\"].log(rowIndex, key);\n    setFocusedCell([rowIndex, key]);\n    setTimeout(function () {\n      setInputFocus();\n    }, 0); // 将焦点设置回输入框\n  };\n  var setInputFocus = function setInputFocus() {\n    inputRef.current && inputRef.current.focus && inputRef.current.focus();\n  };\n  var setInputSelect = function setInputSelect() {\n    inputRef.current && inputRef.current.select && inputRef.current.select();\n  };\n  var getColDefAndCache = function getColDefAndCache(colId) {\n    var colDef;\n    if (colDefMap.current && colDefMap.current[colId]) {\n      colDef = colDefMap.current[colId];\n    } else {\n      colDef = (0, _gridCoreUseFucntion.getColDef)(colId, columnDefs);\n      colDefMap.current ? colDefMap.current[colId] = colDef : colDefMap.current = _defineProperty({}, colId, colDef);\n    }\n    return colDef;\n  };\n  var getCellDisplayValue = function getCellDisplayValue(colId, value, rowData) {\n    // 这里针对找不到格式化值的方法，会存一个val=>val的函数，防止再次去找\n    return (0, _gridCoreUseFucntion.getCellDisplayValueWrap)(getColDefAndCache(colId), value, rowData);\n  };\n  var getColEntity = function getColEntity(colId) {\n    var colDef = getColDefAndCache(colId);\n    return colDef && colDef.cellRendererParams.entity;\n  };\n  var isFeedbackDom = function isFeedbackDom(targetDom) {\n    return gridContainer && gridContainer.contains(targetDom) || modalRef.current && modalRef.current.contains(targetDom);\n  };\n  var hideModal = function hideModal() {\n    setHide(true);\n  };\n  var keyFDowmHandle = function keyFDowmHandle(e) {\n    if ((e.metaKey || e.ctrlKey) && e.key === 'f') {\n      setHide(false);\n      e.preventDefault();\n      return false;\n    }\n  };\n  var keyEscDowmHandle = function keyEscDowmHandle(e) {\n    if (e.keyCode === 27) {\n      setHide(true);\n    }\n  };\n  var modalKeyDown = function modalKeyDown(e) {\n    if ((e.metaKey || e.ctrlKey) && e.key === 'f') {\n      setInputSelect();\n      e.preventDefault();\n      return false;\n    }\n  };\n  (0, _react.useEffect)(function () {\n    gridContainer && gridContainer.addEventListener('keydown', keyFDowmHandle);\n    document.addEventListener('keydown', keyEscDowmHandle);\n    modalRef.current && modalRef.current.addEventListener('keydown', modalKeyDown);\n    return function () {\n      gridContainer && gridContainer.removeEventListener('keydown', keyFDowmHandle);\n      document.removeEventListener('keydown', keyEscDowmHandle);\n      modalRef.current && modalRef.current.removeEventListener('keydown', modalKeyDown);\n    };\n  }, []);\n  var setColumns = function setColumns() {\n    var columnApi = getColumnApi();\n    columns.current = columnApi && (0, _gridCoreUseFucntion.getColumnSequence)(columnApi);\n  };\n  (0, _react.useEffect)(function () {\n    !hide && setInputSelect(); // 显示时设置焦点\n    !hide && setColumns(); // 1.初始展现获得\n    setQuickSearchCls(hide);\n  }, [hide]);\n  var resetSearchCache = function resetSearchCache() {\n    // 重新渲染就清空缓存\n    setSearchCellsCache('');\n    setLastSearchCache('');\n  };\n  var onGridColumnsChanged = function onGridColumnsChanged() {\n    colDefMap.current = {};\n  };\n\n  // useEffect(() => {\n  //   reset()\n  // })\n\n  (0, _react.useEffect)(function () {\n    setGridQuickFilterModelRefFun({\n      setQuickFilterCols: setColumns,\n      // 2.*列改变获得\n      resetSearchCache: resetSearchCache,\n      // 数据改变清空历史\n      onGridColumnsChanged: onGridColumnsChanged // 列定义改变情况列缓存\n    });\n  }, []);\n  var iconCls = (0, _classnames[\"default\"])(['kdfont', 'kdfont-guanbi8', 'kd-hover-color', _GridQuickSearch[\"default\"]['icon']]);\n  // const preIconCls = classnames(['kdfont', 'kdfont-xiangshang', styles['icon']])\n  // const nextIconCls = classnames(['kdfont', 'kdfont-xiangxia', styles['icon']])\n  var btnCls = (0, _classnames[\"default\"])([_GridQuickSearch[\"default\"]['search-btn'], 'kd-hover-color']);\n  return hide ? null : /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    tabIndex: 0,\n    ref: modalRef,\n    className: _GridQuickSearch[\"default\"]['grid-filter-modal']\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _GridQuickSearch[\"default\"]['search-headr']\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"span\", null, getText('gridSearch.key001')), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: iconCls,\n    onClick: hideModal\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _GridQuickSearch[\"default\"]['search-box']\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n    className: _GridQuickSearch[\"default\"]['search-input'],\n    ref: inputRef,\n    value: val,\n    onKeyDown: onKeyDownHandle,\n    onChange: onChangeHandle\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: _GridQuickSearch[\"default\"]['splite']\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"button\", {\n    className: btnCls,\n    onClick: onSearchHandle\n  }, getText('gridSearch.key001'))), showNotFoundTips ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _GridQuickSearch[\"default\"]['no-found-box']\n  }, getText('gridSearch.key002')) : null);\n}\nvar _default = exports[\"default\"] = GridQuickSearch;\nfunction getIsRowSpan(_ref2) {\n  var mergeModel = _ref2.mergeModel;\n  return mergeModel && !mergeModel.suppress;\n}\nfunction isLastRowSpanCell(thisRowKeyVal, displayLastRowIndex, rowIndex, _ref3, colEntity) {\n  var mergeModel = _ref3.mergeModel;\n  if (rowIndex === displayLastRowIndex) {\n    // 已经显示的最后一行\n    return true;\n  }\n  return mergeModel && mergeModel.isEntityGroupBottom(thisRowKeyVal, colEntity);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/AgDataGrid/quickSearchModal/GridQuickSearch.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/AgDataGrid/settingBtn.js":
/*!*************************************************************!*\
  !*** ./src/component/web/DataGrid/AgDataGrid/settingBtn.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.index-of.js */ \"../../node_modules/core-js/modules/es.array.index-of.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.function.bind.js */ \"../../node_modules/core-js/modules/es.function.bind.js\");\n__webpack_require__(/*! core-js/modules/es.object.assign.js */ \"../../node_modules/core-js/modules/es.object.assign.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _SelectColumnHeader = __webpack_require__(/*! ./HeaderComponent/SelectColumnHeader */ \"./src/component/web/DataGrid/AgDataGrid/HeaderComponent/SelectColumnHeader.js\");\nvar _CellClass = _interopRequireDefault(__webpack_require__(/*! ./CellClass.less */ \"./src/component/web/DataGrid/AgDataGrid/CellClass.less\"));\nvar _GridUtils = __webpack_require__(/*! ./GridUtils */ \"./src/component/web/DataGrid/AgDataGrid/GridUtils.js\");\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _excluded = [\"gridContrlParams\", \"gridState\", \"gridOptions\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nvar SettingBtn = function SettingBtn(props) {\n  var ele = (0, _react.useRef)(null);\n  var _props$gridContrlPara = props.gridContrlParams,\n    gridContrlParams = _props$gridContrlPara === void 0 ? {} : _props$gridContrlPara,\n    gridState = props.gridState,\n    gridOptions = props.gridOptions,\n    others = _objectWithoutProperties(props, _excluded);\n  var rk = gridState.rk,\n    seq = gridState.seq,\n    pageId = gridState.pageId,\n    gridId = gridState.gridId;\n  var params = {\n    gridContrlParams: gridContrlParams,\n    gridOptions: gridOptions,\n    rowKey: rk,\n    seq: seq,\n    pid: pageId,\n    gridId: gridId\n  };\n  var isListView = gridContrlParams.isListView,\n    isSubGrid = gridContrlParams.isSubGrid,\n    isVirtualView = gridContrlParams.isVirtualView,\n    hasSettingBtn = gridContrlParams.hasSettingBtn,\n    maxLevel = gridContrlParams.maxLevel;\n  var headerHeight = gridOptions.headerHeight;\n  var totalH = headerHeight * maxLevel - 1;\n  (0, _react.useEffect)(function () {\n    var onHeaderHeightChanged = function onHeaderHeightChanged(newHeaderHeight) {\n      if (ele.current) {\n        ele.current.style.height = newHeaderHeight * maxLevel - 1 + 'px';\n      }\n    };\n    var remover = (0, _memoryCacher.addDataChangeListener)(pageId, [gridId, _gridConst.CONFIGURED_HEADER_HEIGHT_CHANGED], onHeaderHeightChanged);\n    return function () {\n      remover();\n    };\n  }, [maxLevel]);\n  return (0, _GridUtils.hasGridSettingButton)(isListView, isSubGrid, isVirtualView, hasSettingBtn) ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    ref: ele,\n    className: _CellClass[\"default\"]['grid-setting-btn'],\n    style: {\n      position: 'absolute',\n      right: 0,\n      zIndex: 2,\n      width: '30px',\n      height: totalH + 'px'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_SelectColumnHeader.SetOptionColHeader, _extends({}, params, others))) : null;\n};\nvar _default = exports[\"default\"] = SettingBtn;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/AgDataGrid/settingBtn.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDGrid.js":
/*!**********************************************!*\
  !*** ./src/component/web/DataGrid/KDGrid.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _AgGrid = _interopRequireDefault(__webpack_require__(/*! ./AgDataGrid/AgGrid */ \"./src/component/web/DataGrid/AgDataGrid/AgGrid.js\"));\nvar _KDTableWrapper = _interopRequireDefault(__webpack_require__(/*! ./KDTable/KDTableWrapper */ \"./src/component/web/DataGrid/KDTable/KDTableWrapper.js\"));\nvar _tableFactory = __webpack_require__(/*! @/component/common/table/tableFactory.js */ \"./src/component/common/table/tableFactory.js\");\nvar _KDTableAdapter = _interopRequireDefault(__webpack_require__(/*! @/component/web/tableAdapter/kd/KDTableAdapter.js */ \"./src/component/web/tableAdapter/kd/KDTableAdapter.js\"));\nvar _GlobalDataCacher = __webpack_require__(/*! @/model/GlobalDataCacher */ \"./src/model/GlobalDataCacher.js\");\nvar _symbolConst = __webpack_require__(/*! @/constant/symbolConst */ \"./src/constant/symbolConst.js\");\nvar _ControlInfoCollect = __webpack_require__(/*! @/component/common/ControlInfoCollect */ \"./src/component/common/ControlInfoCollect.js\");\nvar _switch = __webpack_require__(/*! ./TableHelper/util/switch */ \"./src/component/web/DataGrid/TableHelper/util/switch.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; } /*\n * @Author: wqhui\n * @Date: 2021-05-19 13:52:43\n * @Description: 表格桥接层，切换新旧表格\n */\n(0, _tableFactory.registTableAdapter)('kd', _KDTableAdapter[\"default\"]);\n\n// window._ENABLE_SWITCH_GRID 设置为true可以在右键菜单切换新旧表格\n// window._ENABLE_SWITCH_GRID = false\n\nfunction KDGrid(props) {\n  // localStorage 取出来的是字符串，这里true和false统一使用字符串处理了\n  var model = props.model;\n  var gridType = model.getMetaProperty('gridtype');\n  var _useState = (0, _react.useState)((0, _switch.shouldUseNewTable)(gridType)),\n    _useState2 = _slicedToArray(_useState, 2),\n    isUseNewTable = _useState2[0],\n    setIsUseNewTable = _useState2[1];\n  (0, _react.useEffect)(function () {\n    var removeDataChangeListener = (0, _GlobalDataCacher.addDataChangeListener)(_symbolConst.KEY_USE_TABLE_CHANGED, function (_ref) {\n      var targetGridType = _ref.gridType;\n      gridType === targetGridType && setIsUseNewTable((0, _switch.shouldUseNewTable)(targetGridType));\n    });\n    return function () {\n      return removeDataChangeListener();\n    };\n  }, [gridType]);\n\n  // 列表使用旧表格信息采集\n  (0, _ControlInfoCollect.useControlInfoCollect)(model, !isUseNewTable && gridType === 'VIEWGRID');\n  if (isUseNewTable) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_KDTableWrapper[\"default\"], props);\n  } else {\n    return /*#__PURE__*/_react[\"default\"].createElement(_AgGrid[\"default\"], props);\n  }\n}\nvar _default = exports[\"default\"] = KDGrid;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDGrid.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/GridQuickSearch.js":
/*!***************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/GridQuickSearch.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = GridQuickSearch;\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _BaseGridQuickSearch = _interopRequireDefault(__webpack_require__(/*! ../TableHelper/component/BaseGridQuickSearch */ \"./src/component/web/DataGrid/TableHelper/component/BaseGridQuickSearch.js\"));\nvar _cell = __webpack_require__(/*! ./utils/cell */ \"./src/component/web/DataGrid/KDTable/utils/cell.js\");\nvar _copy = __webpack_require__(/*! ./utils/copy */ \"./src/component/web/DataGrid/KDTable/utils/copy.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction GridQuickSearch(_ref) {\n  var containerEleRef = _ref.containerEleRef,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getInstance = _ref.getInstance,\n    getTableApi = _ref.getTableApi,\n    dataValueTimestamp = _ref.dataValueTimestamp;\n  var _useState = (0, _react.useState)(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    resetNoMatchListFlag = _useState2[0],\n    setResetNoMatchListFlag = _useState2[1];\n  (0, _react.useEffect)(function () {\n    var tableConfig = getTableConfigImmediately();\n    var pageId = tableConfig.pageId,\n      id = tableConfig.id,\n      gridType = tableConfig.gridType;\n    // 报表或者列表滚动加载数据更新时，清除没匹配的搜索数据列表\n    var updateFlag = function updateFlag() {\n      setResetNoMatchListFlag(function (x) {\n        return x + 1;\n      });\n    };\n    var methodName = gridType === _const.GRID_TYPE.listViewGrid ? 'setRowData' : 'setVirtualData';\n    var removeListener = (0, _memoryCacher.addDataChangeListener)(pageId, [id, methodName], updateFlag);\n    return function () {\n      removeListener();\n    };\n  }, []);\n  (0, _react.useEffect)(function () {\n    setResetNoMatchListFlag(function (x) {\n      return x + 1;\n    });\n  }, [dataValueTimestamp]);\n  var getAllDisplayColumns = function getAllDisplayColumns() {\n    var tableConfig = getTableConfigImmediately();\n    var allDisplayCols = tableConfig.getDisplayFlatColumns();\n    return _toConsumableArray(allDisplayCols);\n  };\n  var getRowCount = function getRowCount() {\n    var instance = getInstance();\n    var rowDatas = instance.controller.getRowDatas() || [];\n    return rowDatas.length;\n  };\n  var getRowByIndex = function getRowByIndex(rowIndex) {\n    var instance = getInstance();\n    return instance.controller.getRowByIndex(rowIndex);\n  };\n  var getCellDispalyValue = function getCellDispalyValue(record, col) {\n    var type = col.type;\n    var _getTableConfigImmedi = getTableConfigImmediately(),\n      rowKey = _getTableConfigImmedi.rowKey,\n      localeId = _getTableConfigImmedi.localeId,\n      defaultLocalId = _getTableConfigImmedi.defaultLocalId;\n    // const value = col.getValue ? col.getValue(record, record[rowKey]) : getCellValue(record, col)\n    var displayValue = (0, _copy.getCopyCellValue)(col, record, {\n      rowKey: rowKey,\n      localeId: localeId,\n      defaultLocalId: defaultLocalId\n    });\n    return displayValue === null || displayValue === void 0 ? void 0 : displayValue.toString();\n  };\n  var getFocusedCell = function getFocusedCell() {\n    var instance = getInstance();\n    return instance.controller.getFocusedCell();\n  };\n  var getNoMatchTips = function getNoMatchTips() {\n    var _getTableConfigImmedi2 = getTableConfigImmediately(),\n      gridType = _getTableConfigImmedi2.gridType;\n    return gridType === _const.GRID_TYPE.virtualViewGrid ? (0, _intlApi.getLangMsg)('gridSearch.key003') : (0, _intlApi.getLangMsg)('gridSearch.key002');\n  };\n  var handleMatchCell = function handleMatchCell(cell) {\n    var code = cell.code,\n      rowIndex = cell.rowIndex,\n      record = cell.record;\n    var tableApi = getTableApi();\n    var _getTableConfigImmedi3 = getTableConfigImmediately(),\n      rowKey = _getTableConfigImmedi3.rowKey;\n    var rowKeyValue = record[rowKey];\n    tableApi.setFocusedCell({\n      rowKey: rowKeyValue,\n      rowIndex: rowIndex,\n      code: code\n    });\n  };\n  return /*#__PURE__*/_react[\"default\"].createElement(_BaseGridQuickSearch[\"default\"], {\n    resetNoMatchListFlag: resetNoMatchListFlag,\n    gridContainerEle: containerEleRef.current,\n    getAllDisplayColumns: getAllDisplayColumns,\n    getRowCount: getRowCount,\n    getRowByIndex: getRowByIndex,\n    getCellDispalyValue: getCellDispalyValue,\n    getFocusedCell: getFocusedCell,\n    getNoMatchTips: getNoMatchTips,\n    handleMatchCell: handleMatchCell\n  });\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/GridQuickSearch.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/KDTable.js":
/*!*******************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/KDTable.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.bind.js */ \"../../node_modules/core-js/modules/es.function.bind.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.assign.js */ \"../../node_modules/core-js/modules/es.object.assign.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.parse-int.js */ \"../../node_modules/core-js/modules/es.parse-int.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"../../node_modules/classnames/index.js\"));\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nvar _global = _interopRequireWildcard(__webpack_require__(/*! @/global */ \"./src/global/index.js\"));\nvar _componentutil = __webpack_require__(/*! @/util/componentutil */ \"./src/util/componentutil.js\");\nvar gridActions = _interopRequireWildcard(__webpack_require__(/*! @/action/gridaction */ \"./src/action/gridaction.js\"));\nvar _customctrlaction = __webpack_require__(/*! @/action/customctrlaction */ \"./src/action/customctrlaction.js\");\nvar _BaseTable = _interopRequireDefault(__webpack_require__(/*! @/component/web/base/BaseTable.js */ \"./src/component/web/base/BaseTable.js\"));\nvar _TableConfig = _interopRequireDefault(__webpack_require__(/*! @/component/common/table/TableConfig.js */ \"./src/component/common/table/TableConfig.js\"));\nvar _TableController = _interopRequireDefault(__webpack_require__(/*! @/component/common/table/TableController.js */ \"./src/component/common/table/TableController.js\"));\nvar _tableDispatch = _interopRequireDefault(__webpack_require__(/*! @/component/common/table/tableDispatch.js */ \"./src/component/common/table/tableDispatch.js\"));\nvar _TableShell = _interopRequireDefault(__webpack_require__(/*! @/component/common/table/TableShell.js */ \"./src/component/common/table/TableShell.js\"));\nvar _TablePoster = _interopRequireDefault(__webpack_require__(/*! @/component/common/table/TablePoster */ \"./src/component/common/table/TablePoster.js\"));\nvar _TableEventService = _interopRequireDefault(__webpack_require__(/*! @/component/common/table/eventService/TableEventService */ \"./src/component/common/table/eventService/TableEventService.js\"));\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nvar _tableConfig = _interopRequireWildcard(__webpack_require__(/*! ./tableConfig */ \"./src/component/web/DataGrid/KDTable/tableConfig.js\"));\nvar _tableController = _interopRequireDefault(__webpack_require__(/*! ./tableController */ \"./src/component/web/DataGrid/KDTable/tableController.js\"));\nvar _index = __webpack_require__(/*! ./data/index */ \"./src/component/web/DataGrid/KDTable/data/index.js\");\nvar _index2 = _interopRequireDefault(__webpack_require__(/*! ./event/index.js */ \"./src/component/web/DataGrid/KDTable/event/index.js\"));\n__webpack_require__(/*! ./event/eventHandleDLC/index.js */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/index.js\");\nvar _TableOptions = _interopRequireDefault(__webpack_require__(/*! ./TableOptions */ \"./src/component/web/DataGrid/KDTable/TableOptions.js\"));\nvar _TableApi = _interopRequireDefault(__webpack_require__(/*! ./TableApi */ \"./src/component/web/DataGrid/KDTable/TableApi.js\"));\nvar _index4 = _interopRequireDefault(__webpack_require__(/*! ./directive/index */ \"./src/component/web/DataGrid/KDTable/directive/index.js\"));\nvar _index5 = __webpack_require__(/*! ./post/index */ \"./src/component/web/DataGrid/KDTable/post/index.js\");\nvar _index6 = __webpack_require__(/*! ./aggregate/index */ \"./src/component/web/DataGrid/KDTable/aggregate/index.js\");\nvar _index7 = __webpack_require__(/*! ./hooks/index */ \"./src/component/web/DataGrid/KDTable/hooks/index.js\");\nvar _ToolBar = __webpack_require__(/*! ./ToolBar */ \"./src/component/web/DataGrid/KDTable/ToolBar.js\");\nvar _Aggregate = _interopRequireWildcard(__webpack_require__(/*! ./aggregate/Aggregate */ \"./src/component/web/DataGrid/KDTable/aggregate/Aggregate.js\"));\nvar _table = _interopRequireDefault(__webpack_require__(/*! ./style/table.less */ \"./src/component/web/DataGrid/KDTable/style/table.less\"));\nvar _mergeModel = _interopRequireDefault(__webpack_require__(/*! ./mergeCell/mergeModel */ \"./src/component/web/DataGrid/KDTable/mergeCell/mergeModel.js\"));\nvar _index8 = __webpack_require__(/*! ./context/index */ \"./src/component/web/DataGrid/KDTable/context/index.js\");\nvar _useVisible = _interopRequireDefault(__webpack_require__(/*! @/use/useVisible */ \"./src/use/useVisible.js\"));\nvar _params = __webpack_require__(/*! ../TableHelper/util/params */ \"./src/component/web/DataGrid/TableHelper/util/params.js\");\nvar _index9 = __webpack_require__(/*! ./utils/index */ \"./src/component/web/DataGrid/KDTable/utils/index.js\");\nvar _columns = __webpack_require__(/*! ./utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _editContext = __webpack_require__(/*! ./edit/editContext */ \"./src/component/web/DataGrid/KDTable/edit/editContext.js\");\nvar _keyboardEvent = __webpack_require__(/*! ./utils/keyboardEvent */ \"./src/component/web/DataGrid/KDTable/utils/keyboardEvent.js\");\nvar _ViewManager = _interopRequireDefault(__webpack_require__(/*! ./ViewManager */ \"./src/component/web/DataGrid/KDTable/ViewManager.js\"));\nvar _ValidateFilterTip = _interopRequireDefault(__webpack_require__(/*! ./ValidateFilterTip */ \"./src/component/web/DataGrid/KDTable/ValidateFilterTip.js\"));\nvar _ValidateRowPositioner = _interopRequireDefault(__webpack_require__(/*! ./ValidateRowPositioner */ \"./src/component/web/DataGrid/KDTable/ValidateRowPositioner.js\"));\nvar _GridQuickSearch = _interopRequireDefault(__webpack_require__(/*! ./GridQuickSearch */ \"./src/component/web/DataGrid/KDTable/GridQuickSearch.js\"));\nvar _CellRangesSumComponent = _interopRequireDefault(__webpack_require__(/*! @/component/web/DataGrid/TableHelper/component/CellRangesSumComponent */ \"./src/component/web/DataGrid/TableHelper/component/CellRangesSumComponent.js\"));\nvar _instance = __webpack_require__(/*! @/control/instance */ \"./src/control/instance.js\");\nvar _attachDataFnApi = __webpack_require__(/*! @/util/attachDataFnApi */ \"./src/util/attachDataFnApi.js\");\nvar _cell = __webpack_require__(/*! ./utils/cell */ \"./src/component/web/DataGrid/KDTable/utils/cell.js\");\nvar _row = __webpack_require__(/*! ./utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nvar _element = __webpack_require__(/*! ./utils/element */ \"./src/component/web/DataGrid/KDTable/utils/element.js\");\nvar _filter = __webpack_require__(/*! ./utils/filter */ \"./src/component/web/DataGrid/KDTable/utils/filter.js\");\nvar _gridLock = __webpack_require__(/*! ./utils/gridLock */ \"./src/component/web/DataGrid/KDTable/utils/gridLock.js\");\nvar _gridSelect = __webpack_require__(/*! ./utils/gridSelect */ \"./src/component/web/DataGrid/KDTable/utils/gridSelect.js\");\nvar _uiDegrade = _interopRequireWildcard(__webpack_require__(/*! @/util/uiDegrade */ \"./src/util/uiDegrade.js\"));\nvar _resizeObserve = _interopRequireDefault(__webpack_require__(/*! @/util/resizeObserve */ \"./src/util/resizeObserve.js\"));\nvar _PageScope = __webpack_require__(/*! @/pagescope/PageScope */ \"./src/pagescope/PageScope.js\");\nvar _controlBizEventConst = __webpack_require__(/*! @/pagescope/controlBizEvent/controlBizEventConst */ \"./src/pagescope/controlBizEvent/controlBizEventConst.js\");\nvar _bizEventMapData = _interopRequireDefault(__webpack_require__(/*! @/pagescope/controlBizEvent/bizEventMapData */ \"./src/pagescope/controlBizEvent/bizEventMapData.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; } /*\n * @Author: wqhui\n * @Date: 2021-05-19 14:37:43\n * @Description: 负责将元数据及数据转化成标准表格config和controller\n */\nvar getDatasource = _index.dataHelper.getDatasource,\n  getOpenRowKeys = _index.dataHelper.getOpenRowKeys,\n  getSubGridConfig = _index.dataHelper.getSubGridConfig,\n  getFocusedCellData = _index.dataHelper.getFocusedCellData,\n  getPageIndex = _index.dataHelper.getPageIndex,\n  getPageRows = _index.dataHelper.getPageRows,\n  getStateFromCache = _index.dataHelper.getStateFromCache;\nfunction KDTable(props) {\n  var _parentModel$getDataP, _model$getDataPropert, _model$getDataPropert2;\n  var model = props.model,\n    parentModel = props.parentModel,\n    dispatch = props.dispatch,\n    isLocked = props.isLocked;\n  var instance = (0, _react.useRef)({});\n  var containerEleRef = (0, _react.useRef)();\n  var wrapperEleRef = (0, _react.useRef)();\n  var this$ = (0, _react.useRef)({}); // 用this$统一管理零散的ref数据，避免创建多个ref\n\n  var _useReducer = (0, _react.useReducer)(function (x) {\n      return x + 1;\n    }, 0),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    forceUpdate = _useReducer2[1];\n  var actions = (0, _react.useMemo)(function () {\n    return (0, _componentutil.createActions)(_objectSpread(_objectSpread({}, gridActions), {}, {\n      invokeCustomMethod: _customctrlaction.invokeCustomMethod\n    }), dispatch);\n  }, []);\n  var tableOptions = (0, _react.useMemo)(function () {\n    return new _TableOptions[\"default\"]();\n  }, []);\n  var tablePoster = (0, _react.useMemo)(function () {\n    return new _TablePoster[\"default\"]();\n  }, []);\n  var tableConfig = (0, _react.useMemo)(function () {\n    return new _TableConfig[\"default\"]((0, _tableConfig[\"default\"])(model, parentModel, isLocked));\n  }, []);\n  var internalEventService = (0, _react.useMemo)(function () {\n    return new _TableEventService[\"default\"]();\n  }, []);\n  var tableApi = (0, _react.useMemo)(function () {\n    return new _TableApi[\"default\"]({\n      internalEventService: internalEventService,\n      tableConfig: tableConfig,\n      tableOptions: tableOptions,\n      this$: this$,\n      instance: instance,\n      containerEleRef: containerEleRef,\n      wrapperEleRef: wrapperEleRef\n    });\n  }, []);\n  var getInstance = function getInstance() {\n    return instance.current;\n  };\n  var getActionByKey = function getActionByKey(key) {\n    return actions[key];\n  };\n  var getTableOptions = function getTableOptions() {\n    return tableOptions;\n  };\n  var getTableConfigImmediately = (0, _react.useCallback)(function () {\n    return tableConfig;\n  }, []);\n  var getDispatch = function getDispatch() {\n    return dispatch;\n  };\n  var getInternalEventService = (0, _react.useCallback)(function () {\n    return internalEventService;\n  }, []);\n  var getMergeModel = (0, _react.useCallback)(function () {\n    return instance.current.mergeModel;\n  }, []);\n  var getTableContainterRef = (0, _react.useCallback)(function () {\n    return containerEleRef;\n  }, []);\n  var getTableApi = (0, _react.useCallback)(function () {\n    return tableApi;\n  }, []);\n  var getTablePoster = function getTablePoster() {\n    return tablePoster;\n  };\n  // 仅传递不会改变的全局获取参数函数\n  var context = (0, _react.useMemo)(function () {\n    return new _index8.Context({\n      getTableConfigImmediately: getTableConfigImmediately,\n      getMergeModel: getMergeModel,\n      getTableContainterRef: getTableContainterRef,\n      getInternalEventService: getInternalEventService,\n      getTableApi: getTableApi,\n      getInstance: getInstance,\n      getTableOptions: getTableOptions\n    });\n  }, []);\n  // 表格会延迟加载，先获取界面的宽度，在准备好之前，不做表格渲染具体逻辑，只会渲染表格骨架，但是工具栏会加载\n  var _useState = (0, _react.useState)(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    readyed = _useState2[0],\n    setReadyed = _useState2[1];\n  var _useState3 = (0, _react.useState)('grid'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    activeView = _useState4[0],\n    setActiveView = _useState4[1];\n  var _useState5 = (0, _react.useState)(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isFoldFooterRows = _useState6[0],\n    setIsFoldFooterRows = _useState6[1];\n  var isScrollFooterRowToBottom = (0, _react.useRef)(false);\n  var updateFoldFooterRowsStatus = function updateFoldFooterRowsStatus(_isFoldFooterRows) {\n    var _tableOptions$getMulC;\n    var shouldUpdateFooterRowData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var shouldScrollFooterRowToBottom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // 存在多币别合计列\n    if ((_tableOptions$getMulC = tableOptions.getMulCurrencyFields()) !== null && _tableOptions$getMulC !== void 0 && _tableOptions$getMulC.length) {\n      var _instance$current$tab;\n      (_instance$current$tab = instance.current.tableModel) === null || _instance$current$tab === void 0 || _instance$current$tab.setFoldFooterRowData(_isFoldFooterRows, shouldUpdateFooterRowData);\n      setIsFoldFooterRows(_isFoldFooterRows);\n      isScrollFooterRowToBottom.current = shouldScrollFooterRowToBottom;\n    }\n  };\n  this$.current.dataValueTimestamp = (0, _index7.useDataValueChangedMark)({\n    this$: this$,\n    parentModel: parentModel,\n    model: model\n  });\n  this$.current.isRowsChanged = (0, _react.useMemo)(function () {\n    return (0, _index7.getIsRowsChanged)({\n      this$: this$,\n      parentModel: parentModel,\n      model: model\n    });\n  }, [parentModel, model]);\n  this$.current.model = model;\n  this$.current.parentModel = parentModel;\n  this$.current.isLocked = isLocked;\n  var tableInitialSize = (0, _react.useRef)({});\n  if (!instance.current.controller) {\n    instance.current.controller = new _TableController[\"default\"]((0, _tableController[\"default\"])(model, parentModel, {\n      rowKey: tableConfig.rowKey,\n      mergeModel: new _mergeModel[\"default\"](tableConfig.entities, [], tableConfig.rowKey, tableConfig.suppressMergeSelect, tableConfig.rowDetailOptions.type, false),\n      getTableConfigImmediately: getTableConfigImmediately\n    }));\n    instance.current.tableModel = instance.current.controller.model;\n    instance.current.mergeModel = instance.current.controller.mergeModel;\n    instance.current.controller.setExtendStatus(getStateFromCache(model)(_const.COL_EXPAND_STATUS));\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /* 界面初始化完毕                                                               */\n  /* -------------------------------------------------------------------------- */\n\n  // tablePoster 相关操作\n  (0, _index7.useTablePoster)({\n    tablePoster: tablePoster,\n    getInstance: getInstance,\n    getActionByKey: getActionByKey,\n    getTableOptions: getTableOptions,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getDispatch: getDispatch\n  });\n\n  /* 表格初始大小和大小变化监听 ---------------------------------------------------- */\n  (0, _index7.useTableSize)({\n    getTableOptions: getTableOptions,\n    getInstance: getInstance,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInternalEventService: getInternalEventService,\n    wrapperEleRef: wrapperEleRef,\n    containerEleRef: containerEleRef,\n    setReadyed: setReadyed,\n    model: model,\n    tableInitialSize: tableInitialSize,\n    this$: this$,\n    getTableApi: getTableApi,\n    readyed: readyed,\n    getMergeModel: getMergeModel\n  });\n  (0, _react.useEffect)(function () {\n    if (true) {\n      _global[\"default\"][_global.GET_GRID_INFO] = function () {\n        return {\n          instance: instance,\n          tableConfig: tableConfig,\n          tableOptions: tableOptions\n        };\n      };\n    }\n  }, []);\n\n  /* -------------------------------------------------------------------------- */\n  /* 元数据及数据改变处理                                                           */\n  /* -------------------------------------------------------------------------- */\n\n  /* 元数据改变 ------------------------------------------------------------------ */\n  (0, _react.useEffect)(function () {\n    // 1.列表层元数据改变，也可导致表格配置改变，仅判断列表层的元数据 2.表格层元数据（排除列定义外）改变\n    tableConfig.setCheapConfig((0, _tableConfig.getTableCheapConfig)(model, parentModel, isLocked));\n    tableConfig.setPropertyConfig((0, _tableConfig.getPropertyConfig)(model, parentModel));\n    tableOptions.setMetaOptions(model, parentModel, {\n      getTableConfig: getTableConfigImmediately\n    });\n\n    // 依赖业务属性或者进行进行业务操作的属性,\n    // 通常根据元数据更新一次即可，其属性UI层实时执行（如行渲染、单元格渲染）才去执行的代码\n    tableConfig.setBusinessConfig({\n      getRowProps: (0, _tableConfig.createRowPropsGetter)({\n        getInstance: getInstance,\n        getTableConfigImmediately: getTableConfigImmediately,\n        getTableApi: getTableApi,\n        getTableOptions: getTableOptions\n      }),\n      selectionColumnProps: (0, _tableConfig.getSelectionColumnProps)({\n        getMergeModel: getMergeModel,\n        getTableConfigImmediately: getTableConfigImmediately,\n        handleSelectColCellClick: (0, _cell.createSlectionCellClickHandle)(getInstance, getTableApi, getTableOptions)\n      }),\n      dragColumnProps: (0, _tableConfig.getDragColumnProps)({\n        getInstance: getInstance,\n        getTableConfigImmediately: getTableConfigImmediately,\n        getTableOptions: getTableOptions\n      })\n    });\n\n    // todo: 后续mergeModel更新应该单独抽成一部分，目前更新的地方比较分散(列定义改变、数据改变等等)，而这些更新又是互相关联的\n    // 目前的做法当这些数据都发生改变时，这部分更新会有重复，对性能有损耗\n    var newDatasource = getDatasource(model, parentModel, {\n      getTableConfigImmediately: getTableConfigImmediately\n    });\n    instance.current.mergeModel.setSuppressMergeRows(tableOptions.getSuppressRowSpan());\n    instance.current.mergeModel.setSuppressMergeSelect(tableConfig.suppressMergeSelect);\n    instance.current.mergeModel.updateMergeModel(tableConfig.entities, newDatasource, tableConfig.rowKey, tableConfig.rowDetailOptions.type);\n    instance.current.mergeModel.updateBorderCols(tableConfig.columns, model.getMetaProperty('columns') || (0, _immutable.List)(), tableConfig.seqKey);\n  }, [parentModel === null || parentModel === void 0 ? void 0 : parentModel.meta[\"delete\"]('items').hashCode(), model === null || model === void 0 ? void 0 : model.meta[\"delete\"]('columns')[\"delete\"]('colDefsGUID').hashCode()]);\n  /* 更新dataOptions --------------------------------------------------------- */\n  (0, _index7.useUpdateDataOptions)({\n    model: model,\n    parentModel: parentModel,\n    getTableOptions: getTableOptions,\n    dataValueTimestamp: this$.current.dataValueTimestamp\n  });\n\n  /* 列元数据改变 ---------------------------------------------------------------- */\n  (0, _index7.useColumnsChanged)({\n    readyed: readyed,\n    model: model,\n    parentModel: parentModel,\n    containerEleRef: containerEleRef,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getTableOptions: getTableOptions,\n    getInstance: getInstance,\n    getInternalEventService: getInternalEventService,\n    getTableApi: getTableApi\n  });\n\n  /* 数据改变（注意是value,非data） ------------------------------------------------ */\n\n  (0, _index7.useDataValueChanged)({\n    getTableOptions: getTableOptions,\n    getTableApi: getTableApi,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInstance: getInstance,\n    getInternalEventService: getInternalEventService,\n    model: model,\n    parentModel: parentModel,\n    dataValueTimestamp: this$.current.dataValueTimestamp,\n    containerEleRef: containerEleRef,\n    isRowsChanged: this$.current.isRowsChanged,\n    updateFoldFooterRowsStatus: updateFoldFooterRowsStatus\n  });\n\n  /* 重设表格的高度 ------------------------------------------------ */\n  (0, _index7.useResizeTableHeight)({\n    getTableOptions: getTableOptions,\n    getInstance: getInstance,\n    getTableConfigImmediately: getTableConfigImmediately,\n    containerEleRef: containerEleRef,\n    readyed: readyed,\n    model: model,\n    parentModel: parentModel,\n    tableInitialSize: tableInitialSize,\n    activeView: activeView,\n    getInternalEventService: getInternalEventService\n  });\n\n  /* 前端清空选中行(需在后端设置选中行之前执行) --------------------------------------- */\n  (0, _index7.useRowsChangedAndSelectStateunchanged)({\n    parentModel: parentModel,\n    instance: instance\n  });\n\n  /* -------------------------------------------------------------------------- */\n  /* 后端指令转发 (TODO:后续需求改成直接转指令 、/directive/index.js)                 */\n  /* -------------------------------------------------------------------------- */\n  // 后端设置选中行\n  (0, _index7.useRowSelected)({\n    model: model,\n    parentModel: parentModel,\n    activeView: activeView,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInstance: getInstance,\n    getActionByKey: getActionByKey,\n    getTableOptions: getTableOptions,\n    getTableApi: getTableApi,\n    dispatch: dispatch\n  });\n  (0, _react.useEffect)(function () {\n    // 后端设置展开列\n    instance.current.controller.setOpenRowKeys(function () {\n      return getOpenRowKeys(model, parentModel, instance.current.controller.viewer.api.getOpenRowKeys());\n    });\n  }, [parentModel === null || parentModel === void 0 || (_parentModel$getDataP = parentModel.getDataProperty(['expandDetails'])) === null || _parentModel$getDataP === void 0 ? void 0 : _parentModel$getDataP.hashCode(), (_model$getDataPropert = model.getDataProperty(['expandDetails'])) === null || _model$getDataPropert === void 0 ? void 0 : _model$getDataPropert.hashCode()]);\n  (0, _react.useEffect)(function () {\n    // 设置子表格元数据\n    if (readyed && tableConfig.rowDetailOptions.type) {\n      var subGridConfig = getSubGridConfig(model, parentModel, {\n        getTableOptions: getTableOptions,\n        getTableConfigImmediately: getTableConfigImmediately,\n        mergeModel: instance.current.mergeModel\n      });\n      tableConfig.setSubGridConfig(subGridConfig);\n    }\n  }, [readyed, (_model$getDataPropert2 = model.getDataProperty(['subMeta'])) === null || _model$getDataPropert2 === void 0 ? void 0 : _model$getDataPropert2.hashCode()]);\n\n  // 后端设置树形单据体展开/折叠\n  (0, _index7.useRowExpand)({\n    model: model,\n    getTableOptions: getTableOptions,\n    getInstance: getInstance,\n    getActionByKey: getActionByKey,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInternalEventService: getInternalEventService\n  });\n\n  // 处理扩展脚本功能接口\n  (0, _index7.useExtendScriptApi)({\n    model: model,\n    getInstance: getInstance,\n    getTableApi: getTableApi,\n    tablePoster: tablePoster,\n    tableConfig: tableConfig,\n    getInternalEventService: getInternalEventService\n  });\n  (0, _react.useEffect)(function () {\n    // 设置单元格进入编辑态\n    if (!readyed) {\n      return;\n    }\n    var startEdit = function startEdit() {\n      var cellInfo = model.getDataProperty(['startEditing', 'cellInfo']);\n      if (cellInfo) {\n        var rowKey = cellInfo.get('r');\n        var rowIndex = instance.current.controller.getRowIndex(rowKey);\n        var code = cellInfo.get('k');\n        if (!code) return;\n        tableApi.startEditingCellWithFocus({\n          code: code,\n          rowKey: rowKey,\n          rowIndex: rowIndex\n        });\n      }\n    };\n    // 新增行和设置新增行单元格startEdit指令同时返回时,通过controller.getRowIndex获取的rowIndex为undefined（基础表格的datasource还未更新)，暂时延时处理\n    setTimeout(startEdit);\n  }, [readyed, model.getDataProperty(['startEditing'])]);\n\n  /* -------------------------------------------------------------------------- */\n  /* 表格回调事件处理                                                              */\n  /* -------------------------------------------------------------------------- */\n  (0, _index4[\"default\"])({\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInstance: getInstance,\n    getActionByKey: getActionByKey,\n    tablePoster: tablePoster\n  });\n\n  /**\n   * 事件处理的包装函数，构造公共参数并触发时候函数\n   * @param {*} eventCallback\n   * @param {*} eventParams\n   */\n  var handleTableEventWrap = function handleTableEventWrap(eventCallback, eventParams) {\n    var commonParams = {\n      parentModel: this$.current.parentModel,\n      model: this$.current.model,\n      dispatch: dispatch,\n      getInstance: getInstance,\n      getTableConfigImmediately: getTableConfigImmediately,\n      getActionByKey: getActionByKey,\n      getTableOptions: getTableOptions,\n      getMergeModel: getMergeModel,\n      getInternalEventService: getInternalEventService,\n      getTableApi: getTableApi,\n      getTablePoster: getTablePoster,\n      getTableContainterRef: getTableContainterRef\n    };\n    eventCallback(commonParams)(eventParams).then(function () {\n      handleBizEvent(eventParams);\n    });\n  };\n\n  // 处理暴露给自定义脚本的事件\n  var handleBizEvent = function handleBizEvent(eventParams) {\n    // 目前只处理单据体的\n    if (tableOptions.getGridType() !== _const.GRID_TYPE.entryGrid) return;\n    var type = eventParams.type;\n    var args = eventParams.args;\n    if ([_controlBizEventConst.TABLE_ROW_CLICK, 'rowDoubleClick'].includes(type)) {\n      var rowIndex = eventParams.args.rowKey;\n      var _this$$current$model = this$.current.model,\n        pageId = _this$$current$model.pageId,\n        key = _this$$current$model.key;\n      if (type === 'rowDoubleClick') {\n        type = _controlBizEventConst.TABLE_ROW_DOUBLE_CLICK;\n        rowIndex = eventParams.args.actionRowkey;\n      }\n      if (type === _controlBizEventConst.TABLE_ROW_CLICK && (0, _gridSelect.isClickSameCell)(instance.current)) {\n        return;\n      }\n      (0, _PageScope.fireControlBizEvent)(pageId, key, type, {\n        rowIndex: rowIndex\n      });\n      return;\n    }\n    if (type === _const.EVENT_NAMES.rowSelectionChanged) {\n      var _ref = args || {},\n        action = _ref.action,\n        oldSelectedRows = _ref.selectedRows,\n        actionRowskeys = _ref.actionRowskeys;\n      var _model = this$.current.model;\n      var _pageId = _model.pageId,\n        _key2 = _model.key;\n      var isSingleMode = _model.getMetaProperty('ismul') === false;\n      if (isSingleMode) return;\n      var selectedRowKeys = instance.current.controller.getSelectedRowKeys();\n      var unSelectedKeys = oldSelectedRows.filter(function (rowkey) {\n        return !selectedRowKeys.includes(Number(rowkey));\n      }).map(function (_key) {\n        return Number(_key);\n      });\n      switch (_bizEventMapData[\"default\"][action]) {\n        case _controlBizEventConst.SELECT:\n          {\n            // 不能直接从基础表格冒上来的回调事件拿选中行，需要拿经过rowSelection处理过的state中的selectedRows\n            (0, _PageScope.fireControlBizEvent)(_pageId, _key2, _controlBizEventConst.SELECT, selectedRowKeys);\n            if (unSelectedKeys.length > 0) {\n              (0, _PageScope.fireControlBizEvent)(_pageId, _key2, _controlBizEventConst.UN_SELECT, unSelectedKeys);\n            }\n            break;\n          }\n        case _controlBizEventConst.UN_SELECT:\n          {\n            // 排他取消选中逻辑\n            if (unSelectedKeys.length > 0) {\n              (0, _PageScope.fireControlBizEvent)(_pageId, _key2, _controlBizEventConst.UN_SELECT, unSelectedKeys);\n            } else {\n              // 选择框取消选中逻辑\n              (0, _PageScope.fireControlBizEvent)(_pageId, _key2, _controlBizEventConst.UN_SELECT, actionRowskeys === null || actionRowskeys === void 0 ? void 0 : actionRowskeys.map(function (rowkey) {\n                return Number(rowkey);\n              }));\n            }\n            break;\n          }\n        case _controlBizEventConst.SELECT_ALL:\n          (0, _PageScope.fireControlBizEvent)(_pageId, _key2, _controlBizEventConst.SELECT_ALL);\n          break;\n        case _controlBizEventConst.UN_SELECT_ALL:\n          (0, _PageScope.fireControlBizEvent)(_pageId, _key2, _controlBizEventConst.UN_SELECT_ALL);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  var onTableEvent = function onTableEvent(_ref2) {\n    var type = _ref2.type,\n      args = _ref2.args,\n      event = _ref2.event;\n    if (_index2[\"default\"][type]) {\n      handleTableEventWrap(_index2[\"default\"][type], {\n        type: type,\n        args: args\n      });\n    } else {\n      console.warn(\"[kd-table] \\u56DE\\u8C03\\u65B9\\u6CD5\\u4E0D\\u5B58\\u5728\\uFF1A\".concat(type));\n    }\n  };\n  this$.current.onTableEvent = onTableEvent; // TODO 在this里面添加不太合理\n\n  var handleTableStartEdit = function handleTableStartEdit(_ref3) {\n    var shiftKey = _ref3.shiftKey,\n      isModule = _ref3.isModule;\n    (0, _keyboardEvent.tableStartEdit)({\n      internalEventService: internalEventService,\n      tableConfig: tableConfig,\n      getTableApi: getTableApi,\n      shiftKey: shiftKey,\n      isModule: isModule,\n      containerEleRef: containerEleRef,\n      tableController: instance.current.controller,\n      colLockInfo: tableOptions.getDataOptionsProperty('colLockInfo')\n    });\n  };\n\n  // 单元格编辑\n  var _useEdit = (0, _index7.useEdit)(internalEventService, containerEleRef, tableConfig, handleTableStartEdit, instance.current.controller),\n    _useEdit2 = _slicedToArray(_useEdit, 2),\n    editCell = _useEdit2[0],\n    focusCell = _useEdit2[1];\n\n  /* -------------------------------------------------------------------------- */\n  /* 表格加载完毕后执行的请求和监听                                                  */\n  /* -------------------------------------------------------------------------- */\n\n  /* 请求合计 --------------------------------------------------------------------- */\n  (0, _index6.useFooterAggregate)({\n    this$: this$,\n    model: model,\n    parentModel: parentModel,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getTableOptions: getTableOptions,\n    getActionByKey: getActionByKey,\n    getInstance: getInstance,\n    getInternalEventService: getInternalEventService\n  });\n\n  /* 保存个性化列宽 ---------------------------------------------------------------- */\n  (0, _index7.useSavePersonaliedCache)({\n    model: model,\n    parentModel: parentModel,\n    tablePoster: tablePoster\n  });\n\n  /* 表格加载完成 ------------------------------------------------------------------- */\n  (0, _index7.useTableRendered)({\n    containerEleRef: containerEleRef,\n    getInternalEventService: getInternalEventService\n  });\n\n  /* 列宽自适应 -------------------------------------------------------------------- */\n  (0, _index7.useAutoSizeColumnWidth)({\n    readyed: readyed,\n    getTableConfigImmediately: getTableConfigImmediately,\n    containerEleRef: containerEleRef,\n    getInternalEventService: getInternalEventService,\n    getInstance: getInstance,\n    getTableOptions: getTableOptions,\n    model: model,\n    parentModel: parentModel\n  });\n\n  /* 子表列宽自适应 -------------------------------------------------------------------- */\n  (0, _index7.useSubGridAutoSizeColumnWidth)({\n    readyed: readyed,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInternalEventService: getInternalEventService,\n    getInstance: getInstance,\n    getTableOptions: getTableOptions,\n    model: model\n  });\n\n  /* 右键菜单 --------------------------------------------------------------------- */\n  (0, _index7.useContextMenu)({\n    containerEleRef: containerEleRef,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getTableOptions: getTableOptions,\n    getInternalEventService: getInternalEventService,\n    getInstance: getInstance,\n    getActionByKey: getActionByKey,\n    getTableApi: getTableApi,\n    getNewColumns: function getNewColumns() {\n      return (0, _columns.getNewColumns)({\n        model: this$.current.model,\n        parentModel: this$.current.parentModel,\n        getTableOptions: getTableOptions,\n        getMergeModel: getMergeModel,\n        getTableConfigImmediately: getTableConfigImmediately,\n        getTableApi: getTableApi,\n        getInstance: getInstance\n      });\n    },\n    getFilterRequestParams: function getFilterRequestParams(currentFilter) {\n      var _this$$current$model$;\n      return (0, _filter.getFilterRequestParams)(currentFilter, (_this$$current$model$ = this$.current.model.getMetaProperty('columns')) === null || _this$$current$model$ === void 0 ? void 0 : _this$$current$model$.toJS(), getTableOptions().getEnableBaseDataSelectFilter());\n    }\n  });\n\n  /* 指令设置表格焦点单元格 */\n  (0, _index7.useSetFocuedCell)({\n    readyed: readyed,\n    containerEleRef: containerEleRef,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInstance: getInstance,\n    model: model,\n    parentModel: parentModel,\n    getFocusedCellData: getFocusedCellData,\n    focusCell: focusCell,\n    getTableApi: getTableApi,\n    getInternalEventService: getInternalEventService,\n    getTableOptions: getTableOptions\n  });\n\n  /* 数据整体改变（u指令刷新） ------------------------------------------------ */\n  (0, _index7.useDataTimestampUpdate)({\n    model: model,\n    parentModel: parentModel,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getTableOptions: getTableOptions,\n    getActionByKey: getActionByKey,\n    getInstance: getInstance,\n    getTableApi: getTableApi,\n    updateFoldFooterRowsStatus: updateFoldFooterRowsStatus\n  });\n\n  /* 单据体行操作导致的行数据变化(增/删/插行、置顶/底、上/下移) */\n  (0, _index7.useRowsChangeByRowOpereate)({\n    model: model,\n    getTableApi: getTableApi,\n    getInstance: getInstance\n  });\n\n  /* 表格全局配置监听 ------------------------------------------------ */\n  (0, _index7.useTableGlobalConfig)({\n    tableConfig: tableConfig,\n    model: model,\n    getInternalEventService: getInternalEventService,\n    getNewColumns: function getNewColumns() {\n      return (0, _columns.getNewColumns)({\n        model: this$.current.model,\n        parentModel: this$.current.parentModel,\n        getTableOptions: getTableOptions,\n        getMergeModel: getMergeModel,\n        getTableConfigImmediately: getTableConfigImmediately,\n        getTableApi: getTableApi,\n        getInstance: getInstance\n      });\n    }\n  });\n\n  /* 键盘事件监听 --------------------------------------------------- */\n  (0, _index7.useKeyBoardEvent)({\n    readyed: readyed,\n    containerEleRef: containerEleRef,\n    getTableOptions: getTableOptions,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInstance: getInstance,\n    getTableApi: getTableApi,\n    tablePoster: tablePoster\n  });\n  (0, _index7.useSetOperationColLockStatus)({\n    readyed: readyed,\n    containerEleRef: containerEleRef,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInternalEventService: getInternalEventService\n  });\n  (0, _index7.useDisabledSelectAll)({\n    readyed: readyed,\n    parentModel: parentModel,\n    getTableConfigImmediately: getTableConfigImmediately\n  });\n\n  /* 主题变化刷新 ------------------------------------------------------------------- */\n  (0, _index7.useThemeChange)({\n    getTableConfigImmediately: getTableConfigImmediately,\n    this$: this$,\n    getTableOptions: getTableOptions,\n    getInstance: getInstance,\n    afterRefreshOfThemeChanged: function afterRefreshOfThemeChanged() {\n      _index9.eventServiceController.dispathThemeChanged(internalEventService)(_const.THEME_CHANGED);\n      _index9.eventServiceController.dispatchDoAutoSize(internalEventService)(_const.THEME_CHANGED);\n    },\n    getInternalEventService: getInternalEventService,\n    getTableApi: getTableApi\n  });\n\n  /* 高级快捷键变化刷新 ------------------------------------------------------------------- */\n  (0, _index7.useShortCutSettingChange)({\n    getTableOptions: getTableOptions\n  });\n  (0, _index7.useInsertData)({\n    this$: this$,\n    getInstance: getInstance,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getTableOptions: getTableOptions,\n    getInternalEventService: getInternalEventService,\n    dataValueTimestamp: this$.current.dataValueTimestamp\n  });\n\n  /* 操作列权限改变 ------------------------------------------------------------------- */\n  (0, _index7.useOperationColPermission)({\n    model: model,\n    getTableConfigImmediately: getTableConfigImmediately,\n    this$: this$,\n    getTableOptions: getTableOptions,\n    getInstance: getInstance,\n    getTableApi: getTableApi\n  });\n\n  /* ----------------------------------- 校验 ---------------------------------- */\n  (0, _index7.useValidate)({\n    activeView: activeView,\n    getTableOptions: getTableOptions,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getTableApi: getTableApi,\n    getInstance: getInstance,\n    containerEleRef: containerEleRef,\n    getInternalEventService: getInternalEventService,\n    tablePoster: tablePoster\n  });\n\n  /* 表单状态改变 ------------------------------------------- */\n  (0, _index7.useFormStatusChanged)({\n    model: model,\n    parentModel: parentModel,\n    isLocked: isLocked,\n    getInstance: getInstance,\n    getTableOptions: getTableOptions,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInternalEventService: getInternalEventService,\n    getTableApi: getTableApi,\n    containerEleRef: containerEleRef\n  });\n  (0, _index7.useTableFocus)({\n    readyed: readyed,\n    getTableConfigImmediately: getTableConfigImmediately,\n    containerEleRef: containerEleRef,\n    getInstance: getInstance,\n    tablePoster: tablePoster,\n    getTableApi: getTableApi\n  });\n  (0, _index7.useWindowClick)({\n    readyed: readyed,\n    getInstance: getInstance,\n    containerEleRef: containerEleRef\n  });\n  (0, _index7.useTableTracking)({\n    getTableConfigImmediately: getTableConfigImmediately,\n    getTableOptions: getTableOptions\n  });\n  (0, _index7.useTreeVirtualDataLoaded)({\n    model: model,\n    containerEleRef: containerEleRef,\n    readyed: readyed,\n    getTableOptions: getTableOptions,\n    getActionByKey: getActionByKey,\n    getTableConfigImmediately: getTableConfigImmediately\n  });\n  (0, _index7.useFmtInfoChanged)({\n    model: model,\n    parentModel: parentModel,\n    forceUpdate: forceUpdate,\n    getTableApi: getTableApi\n  });\n  (0, _react.useEffect)(function () {\n    if (isScrollFooterRowToBottom.current && !isFoldFooterRows) {\n      window.requestAnimationFrame(function () {\n        return (0, _element.scrollFooterRowToBottom)((0, _element.getTableFooterElement)(containerEleRef));\n      });\n    }\n    isScrollFooterRowToBottom.current = false; // 重置状态\n  }, [isFoldFooterRows, isScrollFooterRowToBottom.current]);\n\n  // 表格fixed布局handler\n  (0, _react.useEffect)(function () {\n    if (_uiDegrade[\"default\"][_uiDegrade.CONTROL_CONFIG_ENUM.gridPositionFixed]) {\n      var updateFixedChild = function updateFixedChild() {\n        var parentRect = containerEleRef.current.getBoundingClientRect();\n        containerEleRef.current.firstChild.style.width = parentRect.width + 'px';\n        containerEleRef.current.firstChild.style.height = parentRect.height + 'px';\n        containerEleRef.current.firstChild.style.transform = \"translate(\".concat(parentRect.left, \"px, \").concat(parentRect.top, \"px)\");\n      };\n      var updateFixedChildWhenScroll = function updateFixedChildWhenScroll(e) {\n        if (e.target.contains(containerEleRef.current)) {\n          window.requestAnimationFrame(updateFixedChild);\n        }\n      };\n      var remover = (0, _resizeObserve[\"default\"])(containerEleRef.current, updateFixedChild);\n      window.addEventListener('scroll', updateFixedChildWhenScroll, true);\n      return function () {\n        var _remover;\n        window.removeEventListener('scroll', updateFixedChildWhenScroll, true);\n        (_remover = remover) === null || _remover === void 0 || _remover();\n        remover = null;\n      };\n    }\n  }, []);\n  (0, _index7.useDropZoneChange)({\n    model: model,\n    readyed: readyed,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getTableApi: getTableApi,\n    getInternalEventService: getInternalEventService\n  });\n\n  /* 注册组件代理实例 ------------------------------------------- */\n  (0, _instance.useRegisterInstance)(tableConfig.pageId, tableConfig.id, model.getMetaProperty('type'), {\n    tableConfig: tableConfig,\n    tableController: instance.current.controller,\n    actions: actions,\n    getActionByKey: getActionByKey,\n    tablePoster: tablePoster,\n    tableApi: tableApi,\n    model: this$.current.model,\n    parentModel: this$.current.parentModel\n  });\n\n  /* ----------------------------------- 可见性 ---------------------------------- */\n  var visibleAttachProps = (0, _useVisible[\"default\"])(model);\n  var isVisible = visibleAttachProps.isVisible;\n\n  /* -------------------------------------------------------------------------- */\n  /* 表格元素监听事件回调                                                           */\n  /* -------------------------------------------------------------------------- */\n  var handleTableScroll = function handleTableScroll(e) {\n    var target = e.target;\n    var direction;\n    var top;\n    var left;\n    // 冒泡监听，需要排除其他滚动的事件干扰\n    var currentEle = target;\n    while (currentEle) {\n      if (currentEle.classList.contains('kd-sub-table')) return;\n      currentEle = currentEle.parentElement;\n    }\n    if (target.classList.contains('kd-table-body')) {\n      direction = 'vertical';\n      top = target.scrollTop;\n    } else if (target.classList.contains('kd-sticky-scroll')) {\n      direction = 'horizontal';\n      left = target.scrollLeft;\n    } else {\n      return;\n    }\n    internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.scroll,\n      params: {\n        direction: direction,\n        top: top,\n        left: left\n      }\n    });\n  };\n\n  /**\n   * 点击容器内不可编辑的单元格区域时退出编辑态\n   */\n  var handleContainerClick = function handleContainerClick(e) {\n    var _instance$current;\n    var targetCell = (0, _element.getTableCell)(e.target, {\n      containerEleRef: containerEleRef,\n      rowKey: tableConfig.rowKey,\n      getInstance: getInstance\n    });\n    var editCell = ((_instance$current = instance.current) === null || _instance$current === void 0 || (_instance$current = _instance$current.controller) === null || _instance$current === void 0 ? void 0 : _instance$current.getEditCell()) || {};\n    var isSameEditCell = targetCell && !targetCell.isFooterCell && editCell.rowKey === targetCell.rowKeyValue && editCell.code === targetCell.code;\n    if (activeView === 'grid' && editCell.rowKey !== -1 && !isSameEditCell) {\n      tableApi.stopEditing();\n    }\n  };\n  var toolbarLocation = tableConfig.toolbarLocation,\n    id = tableConfig.id;\n  var toolbar = (0, _ToolBar.getGirdToolBar)({\n    readyed: readyed,\n    model: model,\n    parentModel: parentModel,\n    getActionByKey: getActionByKey,\n    getInstance: getInstance,\n    getTableOptions: getTableOptions,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInternalEventService: getInternalEventService,\n    toolbarLocation: toolbarLocation\n  });\n  var style = (0, _params.getModelStyle)(model, isVisible);\n  var modelClass = (0, _params.getModelClassName)(model);\n  var className = (0, _classnames[\"default\"])([_table[\"default\"]['table-container']], 'kd-table-container', 'kd-table-theme-material', 'kd-cq-table', 'kd-cq-control', _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, modelClass, !!modelClass), 'auto-column-resize-mode', tableConfig.columnResizeMode === _const.TABLE_COLUMN_RESIZE_MODE.adaptive || tableConfig.columnResizeMode === _const.TABLE_COLUMN_RESIZE_MODE.fit), 'kd-table-editable', (0, _gridLock.getGridEditable)(model, isLocked)), 'kd-table-list-view', tableOptions.getGridType() === _const.GRID_TYPE.listViewGrid), 'kd-table-editable-theme-1', typeof tableOptions.getGridType() === 'undefined'), 'kd-table-editable-theme-2', tableOptions.getGridType() === _const.GRID_TYPE.listViewGrid), 'kd-table-with-column-groups', tableConfig.getMaxLevel() > 1));\n\n  // #region =====React事件处理=====\n  var handleTableKeyDown = function handleTableKeyDown(e) {\n    // 平铺视图不响应快捷键\n    if (activeView !== 'grid') return;\n    (0, _keyboardEvent.tableKeyDown)({\n      e: e,\n      getTableConfigImmediately: getTableConfigImmediately,\n      getTableOptions: getTableOptions,\n      getInstance: getInstance,\n      getTableApi: getTableApi,\n      getTablePoster: getTablePoster,\n      editCell: editCell,\n      focusCell: focusCell,\n      containerEleRef: containerEleRef,\n      getActionByKey: getActionByKey\n    });\n  };\n  tableApi.registerTableKeyDown(handleTableKeyDown);\n  var handleGridValidateFilterTipVisibleChange = function handleGridValidateFilterTipVisibleChange(show) {\n    var marginTop = parseInt((style === null || style === void 0 ? void 0 : style.marginTop) || 0);\n    if (show) {\n      containerEleRef.current.style['margin-top'] = marginTop + 43 + 'px';\n    } else {\n      containerEleRef.current.style['margin-top'] = marginTop ? marginTop + 'px' : '';\n    }\n  };\n  var handleAggregateRowFoldIconClick = function handleAggregateRowFoldIconClick() {\n    updateFoldFooterRowsStatus(!isFoldFooterRows, true, true);\n  };\n\n  // #endregion =====React事件处理=====\n\n  // 平铺视图, 点击单元格时不要刷新平铺视图\n  var viewManager = (0, _react.useMemo)(function () {\n    return (0, _ViewManager[\"default\"])({\n      readyed: readyed,\n      model: this$.current.model,\n      parentModel: this$.current.parentModel,\n      dispatch: dispatch,\n      tablePoster: tablePoster,\n      getTableOptions: getTableOptions,\n      getTableConfigImmediately: getTableConfigImmediately,\n      getInstance: getInstance,\n      getTableApi: getTableApi,\n      activeView: activeView,\n      setActiveView: setActiveView\n    });\n  }, [model, parentModel, activeView, readyed]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_index8.TableContext.Provider, {\n    value: context\n  }, /*#__PURE__*/_react[\"default\"].createElement(_index5.PosterContext.Provider, {\n    value: tablePoster\n  }, /*#__PURE__*/_react[\"default\"].createElement(_editContext.EditContext.Provider, {\n    value: editCell\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", _extends({\n    onKeyDown: handleTableKeyDown,\n    className: className,\n    style: style,\n    id: id,\n    \"data-pid\": model.pageId,\n    ref: containerEleRef,\n    onClick: handleContainerClick,\n    tabIndex: -1,\n    onScroll: handleTableScroll\n  }, (0, _attachDataFnApi.getTableAttachData)(model)), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: (0, _classnames[\"default\"])(_table[\"default\"]['table-absolute-container'], _defineProperty({}, _table[\"default\"]['table-fixed-container'], _uiDegrade[\"default\"][_uiDegrade.CONTROL_CONFIG_ENUM.gridPositionFixed])),\n    style: {\n      display: activeView === 'grid' ? 'block' : 'none'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _table[\"default\"]['table-wrapper'],\n    ref: wrapperEleRef,\n    tabIndex: -1\n  }, toolbarLocation !== '1' ? toolbar : null, readyed ? /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_BaseTable[\"default\"], {\n    tableType: \"kd\",\n    controller: instance.current.controller,\n    config: tableConfig,\n    dispatch: (0, _tableDispatch[\"default\"])(onTableEvent)\n  }), (0, _row.showAggregateRowFoldIcon)(instance.current.tableModel.getFooterRowData()) ? /*#__PURE__*/_react[\"default\"].createElement(_Aggregate.AggregateRowFoldIcon, {\n    isFoldFooterRows: isFoldFooterRows,\n    onIconClick: handleAggregateRowFoldIconClick,\n    containerEleRef: containerEleRef,\n    getTableConfigImmediately: getTableConfigImmediately\n  }) : null, tableOptions.getShowAggregateRowOverlay() && tableOptions.getTotalType() !== _const.TOTAL_TYPE.sticky ? /*#__PURE__*/_react[\"default\"].createElement(_Aggregate[\"default\"], {\n    parentModel: parentModel,\n    getTableOptions: getTableOptions,\n    getActionByKey: getActionByKey,\n    getInstance: getInstance,\n    getTableConfig: getTableConfigImmediately,\n    getInternalEventService: getInternalEventService,\n    containerEleRef: containerEleRef,\n    readyed: readyed\n  }) : null) : /*#__PURE__*/_react[\"default\"].createElement(_TableShell[\"default\"], {\n    headerStyle: {\n      height: tableConfig.headerHeight\n    }\n  }), toolbarLocation === '1' ? toolbar : null, tableOptions.getTotalType() === _const.TOTAL_TYPE.sticky ? /*#__PURE__*/_react[\"default\"].createElement(_Aggregate.StickyAggregate, {\n    getTableOptions: getTableOptions,\n    getActionByKey: getActionByKey,\n    getTableConfig: getTableConfigImmediately,\n    getInternalEventService: getInternalEventService,\n    model: model,\n    parentModel: parentModel\n  }) : null)), viewManager, tableConfig.isCellRangesSum ? /*#__PURE__*/_react[\"default\"].createElement(_CellRangesSumComponent[\"default\"], {\n    pageId: tableConfig.pageId,\n    gridId: tableConfig.id\n  }) : null, tableOptions.getGridType() === _const.GRID_TYPE.listViewGrid || tableOptions.getGridType() === _const.GRID_TYPE.virtualViewGrid ? /*#__PURE__*/_react[\"default\"].createElement(_GridQuickSearch[\"default\"], {\n    containerEleRef: containerEleRef,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInstance: getInstance,\n    getTableApi: getTableApi,\n    dataValueTimestamp: this$.current.dataValueTimestamp\n  }) : null, tableOptions.getGridType() === undefined ? /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_ValidateFilterTip[\"default\"], {\n    pageId: tableConfig.pageId,\n    id: id,\n    getTableApi: getTableApi,\n    getTableOptions: getTableOptions,\n    getTableConfigImmediately: getTableConfigImmediately,\n    className: _table[\"default\"]['table-validate-tip'],\n    onVisibleChange: handleGridValidateFilterTipVisibleChange\n  }), /*#__PURE__*/_react[\"default\"].createElement(_ValidateRowPositioner[\"default\"], {\n    pageId: tableConfig.pageId,\n    id: id,\n    getTableApi: getTableApi,\n    getInstance: getInstance,\n    getInternalEventService: getInternalEventService,\n    getTableConfigImmediately: getTableConfigImmediately,\n    containerEleRef: containerEleRef,\n    pageIndex: getPageIndex(model, parentModel),\n    pageRows: getPageRows(model, parentModel),\n    getTableOptions: getTableOptions,\n    type: tableConfig.type\n  })) : null))));\n}\nvar _default = exports[\"default\"] = KDTable;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/KDTable.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/KDTableWrapper.js":
/*!**************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/KDTableWrapper.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.object.assign.js */ \"../../node_modules/core-js/modules/es.object.assign.js\");\n__webpack_require__(/*! core-js/modules/es.object.create.js */ \"../../node_modules/core-js/modules/es.object.create.js\");\n__webpack_require__(/*! core-js/modules/es.parse-int.js */ \"../../node_modules/core-js/modules/es.parse-int.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _componentutil = __webpack_require__(/*! @/util/componentutil */ \"./src/util/componentutil.js\");\nvar _CollapseWrap = _interopRequireDefault(__webpack_require__(/*! @/component/common/CollapseWrap */ \"./src/component/common/CollapseWrap.js\"));\nvar _VisibleLockWrap = _interopRequireDefault(__webpack_require__(/*! @/component/common/VisibleLockWrap.js */ \"./src/component/common/VisibleLockWrap.js\"));\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nvar _KDTable = _interopRequireDefault(__webpack_require__(/*! ./KDTable */ \"./src/component/web/DataGrid/KDTable/KDTable.js\"));\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _appModelFunction = __webpack_require__(/*! @/model/appModelFunction */ \"./src/model/appModelFunction.js\");\nvar _global = __webpack_require__(/*! @/global */ \"./src/global/index.js\");\nvar _tooltipsUtil = __webpack_require__(/*! @/util/tooltipsUtil */ \"./src/util/tooltipsUtil.js\");\nvar _Slot = _interopRequireDefault(__webpack_require__(/*! @/component/common/Slot */ \"./src/component/common/Slot.jsx\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar KDTableWrapper = function KDTableWrapper(WrappedComponent) {\n  return function (props) {\n    var model = props.model,\n      isVisible = props.isVisible,\n      keyIndex = props.keyIndex;\n    var title = model.getMetaLocaleProperty('text'); // 面板title文案\n    var collapsible = model.getMetaProperty('collapsible'); // 可折叠\n    var defaultCollapse = model.getMetaProperty('defaultcollapse'); // 默认折叠\n    var style = Object.assign({}, (0, _componentutil.getCommonStyle)(model), (0, _componentutil.getVisibleStyle)({}, isVisible));\n    var _useState = (0, _react.useState)(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      tipsConfig = _useState2[0],\n      setTipsConfig = _useState2[1];\n    var tips = (0, _tooltipsUtil.getTips)(model);\n    var slot;\n    if (tipsConfig) {\n      slot = /*#__PURE__*/_react[\"default\"].createElement(_Slot[\"default\"], {\n        tips: tipsConfig\n      });\n    }\n    var additonProps = {\n      Name: title,\n      Collapsible: collapsible,\n      defaultCollapse: defaultCollapse,\n      style: style,\n      pageId: model.pageId,\n      slot: slot\n    };\n    var newProps = _objectSpread(_objectSpread({}, props), additonProps);\n    var pageId = model.pageId,\n      key = model.key;\n    var gridType = model.getMetaProperty('gridtype');\n    if (isNestedSubEntry({\n      model: model,\n      keyIndex: keyIndex\n    })) {\n      var newModel = buildEmbedSubEntryModel({\n        model: model,\n        keyIndex: keyIndex\n      });\n      newProps.model = newModel;\n      newProps.parentModel = null; // 单据体没有parentModel, 避免取到卡片的model\n      newProps.isSelected = false; // isSelected为卡片选中属性，表格不需要此属性，传下去会被CollapseWrap捕获到从而显示选中样式\n    }\n    (0, _react.useEffect)(function () {\n      if (gridType === undefined) {\n        setEntryLoading(model);\n      } else if (gridType === 'VIRTUALVIEWGRID') {\n        setReportLoading(model);\n      }\n    }, [gridType, pageId, key]);\n    (0, _react.useEffect)(function () {\n      if (!tips) {\n        setTipsConfig(null);\n        return;\n      }\n      var pageId = model.pageId,\n        key = model.key;\n      var config = tipsConfig;\n      if (!tipsConfig) {\n        config = (0, _tooltipsUtil.createTipsConfig)(pageId, key);\n        setTipsConfig(config);\n      }\n      (0, _tooltipsUtil.saveTipsInfo)(config, tips);\n    }, [tips]);\n    return /*#__PURE__*/_react[\"default\"].createElement(WrappedComponent, newProps);\n  };\n};\nfunction isNestedSubEntry(_ref) {\n  var keyIndex = _ref.keyIndex,\n    model = _ref.model;\n  var key = model.key,\n    pageId = model.pageId;\n  var ctlType = (0, _appModelFunction.getDataType)(pageId, key)((0, _global.getGlobalState)());\n  var isEmbedSubGrid = ctlType === 'embedgrid' && parseInt(keyIndex) >= 0;\n  return isEmbedSubGrid;\n}\nfunction buildEmbedSubEntryModel(_ref2) {\n  var model = _ref2.model,\n    keyIndex = _ref2.keyIndex;\n  var key = model.key,\n    pageId = model.pageId;\n  var newModel = Object.create(model);\n  newModel.getMetaProperty = function (params) {\n    if (params === 'id') {\n      return key + \"\".concat(_gridConst.EMBED_SUB_GRID_FLAG, \"_\").concat(keyIndex);\n    }\n    return model.getMetaProperty(params);\n  };\n  newModel.getDataValue = function () {\n    var data = model.getData();\n    var value = data.getIn(['subdata', \"sub_\".concat(keyIndex), 'value']);\n    return value;\n  };\n  newModel.getDataProperty = function (params) {\n    var data = model.getData();\n    var _params = Array.isArray(params) ? params : [params];\n    var value = data.getIn(['subdata', \"sub_\".concat(keyIndex)].concat(_toConsumableArray(_params)));\n    return value;\n  };\n  return newModel;\n}\nfunction setEntryLoading(model) {\n  setLoadding(model, ['entryRowClick', 'setRowSort', 'getGridDataByFilter', 'next', 'previous', 'setPageIndex', 'setPageRows', 'selectAllRows', 'setColAllChecked', 'loadChildrenData', 'setRowDataByNumber', 'dragRows']);\n}\nfunction setReportLoading(model) {\n  setLoadding(model, ['entryRowClick', 'getVirtualData', 'selectAllRows', 'setRowSort', 'getGridDataByFilter', 'setPageIndex', 'setPageSize']);\n}\nfunction setLoadding(model, supportMethod) {\n  var pageId = model.pageId,\n    key = model.key;\n  var text = (0, _intlApi.getLangMsg)('BusyLayer.loading');\n  var userLocale = model.getUserLocale();\n  var busyTipObj = _defineProperty(_defineProperty(_defineProperty({}, userLocale, text), \"timeout\", {\n    time: 600,\n    methods: ['entryRowClick']\n  }), \"supportMethod\", supportMethod);\n  (0, _memoryCacher.setControlBusyTip)(pageId, key, busyTipObj);\n}\nvar _default = exports[\"default\"] = /*#__PURE__*/_react[\"default\"].memo((0, _VisibleLockWrap[\"default\"])(true, true)(KDTableWrapper((0, _CollapseWrap[\"default\"])((0, _VisibleLockWrap[\"default\"])(true)(_KDTable[\"default\"])))));\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/KDTableWrapper.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/TableApi.js":
/*!********************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/TableApi.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.find.js */ \"../../node_modules/core-js/modules/es.array.find.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _columns = __webpack_require__(/*! ./utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _cell = __webpack_require__(/*! ./utils/cell */ \"./src/component/web/DataGrid/KDTable/utils/cell.js\");\nvar _row = __webpack_require__(/*! ./utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _gridLock = __webpack_require__(/*! ./utils/gridLock */ \"./src/component/web/DataGrid/KDTable/utils/gridLock.js\");\nvar _array = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _big = _interopRequireDefault(__webpack_require__(/*! big.js */ \"../../node_modules/big.js/big.js\"));\nvar _global = _interopRequireWildcard(__webpack_require__(/*! @/global */ \"./src/global/index.js\"));\nvar _uiDegrade = _interopRequireDefault(__webpack_require__(/*! @/util/uiDegrade */ \"./src/util/uiDegrade.js\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /*\n * @Author: wqhui\n * @Date: 2022-10-28 16:19:38\n * @Description: 表格api，用以执行表格的某些交互操作\n */\nvar TableApi = exports[\"default\"] = /*#__PURE__*/_createClass(\n// 单元格点击时临时记录点击的是否为常规单元格（非自动充满列）,用来处理点击充满列时清空焦点\nfunction TableApi(_ref) {\n  var _this = this;\n  var internalEventService = _ref.internalEventService,\n    tableConfig = _ref.tableConfig,\n    tableOptions = _ref.tableOptions,\n    this$ = _ref.this$,\n    instance = _ref.instance,\n    containerEleRef = _ref.containerEleRef,\n    wrapperEleRef = _ref.wrapperEleRef;\n  _classCallCheck(this, TableApi);\n  this._isClickNormalCell = false;\n  this.registerTableKeyDown = function (cb) {\n    _this._onTableKeyDown = cb;\n  };\n  this.setIsClickNormalCell = function (isNormal) {\n    _this._isClickNormalCell = isNormal;\n  };\n  this.getIsClickNormalCell = function () {\n    return _this._isClickNormalCell;\n  };\n  this.stopEditing = function () {\n    _this._internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.setEditCell,\n      params: {\n        editCell: {\n          rowKey: -1\n        }\n      }\n    });\n  };\n  this.startEditingCell = function (_ref2) {\n    var code = _ref2.code,\n      rowKey = _ref2.rowKey,\n      trigger = _ref2.trigger;\n    var isCellLock = _this.isCellLock(code, rowKey);\n    // 锁定的单元格不进入编辑态\n    if (isCellLock) return;\n    _this._internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.setEditCell,\n      params: {\n        editCell: {\n          code: code,\n          rowKey: rowKey,\n          trigger: trigger\n        }\n      }\n    });\n  };\n  this.setFocusedCell = function (_ref3) {\n    var rowKey = _ref3.rowKey,\n      rowIndex = _ref3.rowIndex,\n      code = _ref3.code;\n    if (typeof rowIndex === 'undefined') {\n      rowIndex = _this._tableInstance.current.controller.getRowIndex(rowKey);\n    }\n    _this._internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.setFocusCell,\n      params: {\n        focusCell: {\n          code: code,\n          rowKey: rowKey,\n          rowIndex: rowIndex\n        }\n      }\n    });\n\n    // 设置焦点单元格的同时设置选中行\n    var record = _this._tableInstance.current.controller.getRow(rowKey);\n    _this._tableInstance.current.controller.setFocusedRow({\n      rowIndex: rowIndex,\n      record: record\n    });\n  };\n  this.startEditingCellWithFocus = function (_ref4) {\n    var rowKey = _ref4.rowKey,\n      rowIndex = _ref4.rowIndex,\n      code = _ref4.code;\n    if (typeof rowIndex === 'undefined') {\n      rowIndex = _this._tableInstance.current.controller.getRowIndex(rowKey);\n    }\n    _this.startEditingCell({\n      code: code,\n      rowKey: rowKey\n    });\n    _this.setFocusedCell({\n      rowKey: rowKey,\n      rowIndex: rowIndex,\n      code: code\n    });\n  };\n  this.getContainerFiledValue = function (_ref5, _ref6) {\n    var id = _ref5.id,\n      type = _ref5.type,\n      isFormmatedValue = _ref5.isFormmatedValue,\n      editor = _ref5.editor;\n    var row = _ref6.row,\n      rowIndex = _ref6.rowIndex;\n    var _this$_tableConfig = _this._tableConfig,\n      localeId = _this$_tableConfig.localeId,\n      defaultLocalId = _this$_tableConfig.defaultLocalId,\n      pageId = _this$_tableConfig.pageId,\n      rowKey = _this$_tableConfig.rowKey;\n    var _this$_tableThis$$cur = _this._tableThis$.current,\n      model = _this$_tableThis$$cur.model,\n      parentModel = _this$_tableThis$$cur.parentModel;\n    var getColPropertyByData = (0, _columns.getColumnPropertyByData)(model, parentModel);\n    var getFmtInfo = function getFmtInfo() {\n      return _this._tableOptions.getFmtInfo();\n    };\n    var getDataIndex = function getDataIndex() {\n      return _this._tableOptions.getDataIndex();\n    };\n    var cellValueFormattingFn = (0, _cell.getCellValueFormattingFn)({\n      localeId: localeId,\n      defaultLocalId: defaultLocalId,\n      pageId: pageId,\n      rowKeyName: rowKey,\n      getColPropertyByData: getColPropertyByData,\n      getFmtInfo: getFmtInfo,\n      getDataIndex: getDataIndex,\n      columnEditable: false // 容器列均锁定\n    })({\n      colId: id,\n      type: type,\n      isFormmatedValue: isFormmatedValue,\n      editor: editor\n    });\n    return typeof cellValueFormattingFn === 'function' ? cellValueFormattingFn(row, rowIndex) : row[id];\n  };\n  this.onTableKeyDown = function (e) {\n    var _this$_onTableKeyDown;\n    (_this$_onTableKeyDown = _this._onTableKeyDown) === null || _this$_onTableKeyDown === void 0 || _this$_onTableKeyDown.call(_this, e);\n  };\n  this.execFilter = function (filters) {\n    var onTableEvent = _this._tableThis$.current.onTableEvent;\n    var controller = _this._tableInstance.current.controller;\n    var currentFilters = filters !== null && filters !== void 0 ? filters : controller.getFilters();\n    onTableEvent({\n      type: _const.EVENT_NAMES.filterChanged,\n      args: {\n        nextFilters: currentFilters,\n        passiveTrigger: true\n      }\n    });\n  };\n  this.isCellLock = function (_column, _record) {\n    var needEditable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // todo: 如果传的column是字符串，那就去再找列信息，如果传的record是字符串，再去找行数据\n    var column = typeof _column === 'string' ? (0, _array.find)(_this._tableConfig.columns, function (col) {\n      return col.code === _column;\n    }) : _column;\n    var record = typeof _record === 'number' ? _this._tableInstance.current.controller.getRow(_record) : _record;\n    if (!column || !record) return true;\n    var code = column.code,\n      extendParams = column.extendParams;\n    var columnEditable = extendParams.columnEditable,\n      columnMetaEditable = extendParams.columnMetaEditable,\n      columnLock = extendParams.columnLock,\n      isPrivacy = extendParams.isPrivacy,\n      gridEditable = extendParams.gridEditable;\n    var _this$_tableConfig2 = _this._tableConfig,\n      pageId = _this$_tableConfig2.pageId,\n      id = _this$_tableConfig2.id,\n      rowKey = _this$_tableConfig2.rowKey,\n      gridType = _this$_tableConfig2.gridType;\n\n    // 在解锁单元格内则不锁定\n    if (!gridType && gridEditable && (0, _gridLock.isUnlockCell)(record, code)) return false;\n\n    // 锁定是否需要排除编辑态，单据体文本按钮显示需要区分这两种状态\n    var lock = needEditable ? !columnMetaEditable : columnLock;\n    return lock || (0, _gridLock.getCellLockByData)(_this._tableOptions.getColLockInfo(), record, code) ||\n    // 根据数据锁定\n    (0, _gridLock.isCellLockByPrivacy)(pageId, id)(code, isPrivacy, record[rowKey]);\n  };\n  /**\n   * 将目标行滚动到可视位置\n   * @param rowIndex 行索引，取真实dom节点上的行索引，从tableControll取rowIndex时不能排除子表的行\n   * @param position 目标行滚动到的位置，不传则根据目标行相对视口的位置滚动到底部或顶部，可取值为'top' | 'middle' | 'bottom'\n   * @returns\n   */\n  this.ensureRowIndexVisible = function (index, position) {\n    var _controller$viewer;\n    var controller = _this._tableInstance.current.controller;\n    (_controller$viewer = controller.viewer) === null || _controller$viewer === void 0 || _controller$viewer.api.ensureRowIndexVisible(index, position);\n  };\n  /**\n   * 将目标列滚动到可视位置\n   * @param code 列标识\n   * @returns\n   */\n  this.ensureColumnVisible = function (code) {\n    var _controller$viewer2;\n    var controller = _this._tableInstance.current.controller;\n    (_controller$viewer2 = controller.viewer) === null || _controller$viewer2 === void 0 || _controller$viewer2.api.ensureColumnVisible(code);\n  };\n  this.clearRangeSelection = function () {\n    var _controller$viewer3;\n    var controller = _this._tableInstance.current.controller;\n    (_controller$viewer3 = controller.viewer) === null || _controller$viewer3 === void 0 || _controller$viewer3.api.clearRangeSelection();\n    _this._tableOptions.setCellRanges([]);\n    // 由于api调用clearRangeSelection时不会触发范围选中回调，这里需要手动清空一下框选合计的结果\n    _this.clearCellRangesSumResult();\n  };\n  this.clearCellRangesSumResult = function () {\n    var _this$_tableConfig3 = _this._tableConfig,\n      pageId = _this$_tableConfig3.pageId,\n      id = _this$_tableConfig3.id;\n    var result = {\n      plus: new _big[\"default\"](0),\n      average: new _big[\"default\"](0),\n      count: 0,\n      numberCount: 0\n    };\n    (0, _memoryCacher.setPageData)(pageId, [_gridConst.CELL_RANGES_SUM_RESULT, id], result);\n    _this._tableOptions.clearCellRangesSumResult();\n  };\n  this.getHeightCache = function () {\n    var _controller$viewer4;\n    var controller = _this._tableInstance.current.controller;\n    return (_controller$viewer4 = controller.viewer) === null || _controller$viewer4 === void 0 ? void 0 : _controller$viewer4.api.getHeightCache();\n  };\n  this.getFeatureApi = function (featureName) {\n    var _controller$viewer5;\n    var controller = _this._tableInstance.current.controller;\n    return (_controller$viewer5 = controller.viewer) === null || _controller$viewer5 === void 0 ? void 0 : _controller$viewer5.api.getFeatureApi(featureName);\n  };\n  this.hasFilter = function () {\n    var filters = _this._tableInstance.current.controller.getFilters();\n    return filters != null && filters.length > 0;\n  };\n  this.clearFilter = function () {\n    if (_this.hasFilter()) {\n      var onTableEvent = _this._tableThis$.current.onTableEvent;\n      onTableEvent({\n        type: _const.EVENT_NAMES.filterChanged,\n        args: {\n          nextFilters: []\n        }\n      });\n\n      // 更新基础表格状态\n      _this._tableInstance.current.controller.setFilters([]);\n    }\n  };\n  this.hasSort = function () {\n    var _this$_tableInstance$, _this$_tableInstance$2;\n    return (_this$_tableInstance$ = (_this$_tableInstance$2 = _this._tableInstance.current.tableModel).getIsSortActive) === null || _this$_tableInstance$ === void 0 ? void 0 : _this$_tableInstance$.call(_this$_tableInstance$2);\n  };\n  this.focus = function () {\n    // IE下不支持preventScroll属性，在tableVirtualfocus会导致滚动条重置\n    if (_global[\"default\"][_global.IS_IE]) {\n      var _this$_wrapperEleRef$;\n      (_this$_wrapperEleRef$ = _this._wrapperEleRef.current) === null || _this$_wrapperEleRef$ === void 0 || _this$_wrapperEleRef$.focus();\n      return;\n    }\n    var tableVirtualContainer = _this._containerEleRef.current && _this._containerEleRef.current.querySelector('.kd-virtual');\n\n    // 横向滚动的元素是kd-virtual， 聚焦到kd-virtual上，让方向键控制滚动条可以生效\n    var focusContainer = tableVirtualContainer || _this._wrapperEleRef.current;\n    focusContainer === null || focusContainer === void 0 || focusContainer.focus({\n      preventScroll: true\n    });\n  };\n  this.getCellSpan = function (_record) {\n    var column = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var rowSpan = 1;\n    var record = typeof _record === 'number' ? _this._tableInstance.current.controller.getRow(_record) : _record;\n    var mergeModel = _this._tableInstance.current.mergeModel;\n    var mergeColumns = _this._tableOptions.getMetaOptionsProperty('mergeColumns') || [];\n    var hasMergeRow = mergeModel.hasMergeRow || mergeColumns.length > 0;\n\n    // 注意cellProps里面调用时只传了code和isSplit两个属性，要使用column的其他属性时注意在cellProps里面同步添加\n    var code = column.code,\n      isSplit = column.isSplit;\n    var _this$_tableConfig4 = _this._tableConfig,\n      rowKey = _this$_tableConfig4.rowKey,\n      seqKey = _this$_tableConfig4.seqKey;\n    if ((0, _row.isRowPinned)({\n      record: record,\n      rowKey: rowKey\n    }) || !hasMergeRow) {\n      return rowSpan;\n    }\n\n    // 是否拆分显示\n    var isSplitShow = isSplit && mergeModel.suppressMergeSelect;\n    var isSeq = code === seqKey;\n    var rowKeyValue = record[rowKey];\n    // 序号列特殊处理\n    if (!isSeq && !isSplitShow) {\n      rowSpan = mergeModel.getRowSpan(rowKeyValue, code);\n    }\n    if (mergeColumns.includes(code)) {\n      var virtualViewRowSpan = _this._tableOptions.getVirtualViewRowSpan();\n      if (virtualViewRowSpan && virtualViewRowSpan[code]) {\n        rowSpan = virtualViewRowSpan[code][rowKeyValue];\n      }\n    }\n    return rowSpan;\n  };\n  this.forceUpdateTable = function () {\n    var _controller$viewer6;\n    var controller = _this._tableInstance.current.controller;\n    var forceUpdateFlag = ((_controller$viewer6 = controller.viewer) === null || _controller$viewer6 === void 0 ? void 0 : _controller$viewer6.api.getForceUpdateFlag()) || 0;\n    controller.setForceUpdateFlag(forceUpdateFlag + 1);\n  };\n  this._internalEventService = internalEventService;\n  this._tableConfig = tableConfig;\n  this._tableOptions = tableOptions;\n  this._tableThis$ = this$;\n  this._tableInstance = instance;\n  this._containerEleRef = containerEleRef;\n  this._wrapperEleRef = wrapperEleRef;\n  (0, _memoryCacher.setPageData)(tableConfig.pageId, [this._tableConfig.modelKey, '__table_api__'], this); // 共享表格api\n});\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/TableApi.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/TableOptions.js":
/*!************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/TableOptions.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.map.js */ \"../../node_modules/core-js/modules/es.map.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.set.js */ \"../../node_modules/core-js/modules/es.set.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nvar _global = _interopRequireWildcard(__webpack_require__(/*! @/global */ \"./src/global/index.js\"));\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nvar _index = __webpack_require__(/*! ./data/index */ \"./src/component/web/DataGrid/KDTable/data/index.js\");\nvar _index2 = __webpack_require__(/*! ./meta/index */ \"./src/component/web/DataGrid/KDTable/meta/index.js\");\nvar _element = __webpack_require__(/*! ../TableHelper/util/element */ \"./src/component/web/DataGrid/TableHelper/util/element.js\");\nvar _params = __webpack_require__(/*! ../TableHelper/util/params */ \"./src/component/web/DataGrid/TableHelper/util/params.js\");\nvar _GlobalDataCacher = __webpack_require__(/*! @/model/GlobalDataCacher */ \"./src/model/GlobalDataCacher.js\");\nvar _symbolConst = __webpack_require__(/*! @/constant/symbolConst */ \"./src/constant/symbolConst.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _const2 = __webpack_require__(/*! @/constant/const */ \"./src/constant/const.js\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /*\n * @Author: wqhui\n * @Date: 2021-08-05 11:23:26\n * @Description: KD层表格所需参数，一般是业务操作所需要\n */\nvar getPostCols = _index.dataHelper.getPostCols,\n  getDataDesc = _index.dataHelper.getDataDesc,\n  getEnableGetSumdata = _index.dataHelper.getEnableGetSumdata,\n  getFmtInfo = _index.dataHelper.getFmtInfo,\n  getDataIndex = _index.dataHelper.getDataIndex,\n  getColLockInfo = _index.dataHelper.getColLockInfo;\nvar getAutoGetAggData = _index2.metaHelper.getAutoGetAggData,\n  getShowAggregateRowOverlay = _index2.metaHelper.getShowAggregateRowOverlay,\n  isSuppressRowSpan = _index2.metaHelper.isSuppressRowSpan,\n  isEnableBaseDataSelectFilter = _index2.metaHelper.isEnableBaseDataSelectFilter,\n  getMulCurrencyFields = _index2.metaHelper.getMulCurrencyFields,\n  isShowVirtualViewRowCount = _index2.metaHelper.isShowVirtualViewRowCount,\n  getTotalType = _index2.metaHelper.getTotalType;\nvar TableOptions = /*#__PURE__*/function () {\n  function TableOptions() {\n    var _this = this;\n    _classCallCheck(this, TableOptions);\n    // 记录树形单据体rowKey相关数据\n    this.setTreeRowKeyInfo = function (_ref) {\n      var rowKeyMap = _ref.rowKeyMap,\n        groupMap = _ref.groupMap,\n        lazyLoadGroup = _ref.lazyLoadGroup,\n        parentNodeMap = _ref.parentNodeMap;\n      _this.dataOptions = _objectSpread(_objectSpread({}, _this.dataOptions), {}, {\n        rowKeyMap: rowKeyMap,\n        // Map<rowKey, id> 所有行rowkey,id Map\n        groupMap: groupMap,\n        // Map<rowKey | 'all', childrenRowKey[]> 父节点对应所有子父节点组成的集合(all对应所有父节点集合)\n        lazyLoadGroup: lazyLoadGroup,\n        // rowKey[] 懒加载节点\n        parentNodeMap: parentNodeMap // Map<rowKey | 'all, childrenRowKey[]> 父节点下对于其所有子节点的集合（all 对应所有父节点）\n      });\n    };\n    this.setDataDesc = function (dataDesc) {\n      _this.dataOptions.dataDesc = dataDesc;\n    };\n    /* ------------------------ 禁止直接调用这些函数，取内部值请考虑定义函数获取 ------------------------ */\n    // 从此处取，后续可实现惰性加载，取的时候再去设置\n    this.getDataOptionsProperty = function (key) {\n      return _this.dataOptions[key];\n    };\n    this.setMetaOptions = function (model, parentModel, _ref2) {\n      var _model$getMetaPropert, _model$getMetaPropert2, _model$getMetaPropert3;\n      var getTableConfig = _ref2.getTableConfig;\n      var gridType = model.getMetaProperty('gridtype');\n      var config = model.getFormConfigWithoutMeta() || {};\n      var _getTableConfig = getTableConfig(),\n        toolbarLocation = _getTableConfig.toolbarLocation,\n        _getTableConfig$rowSe = _getTableConfig.rowSelection,\n        rowSelection = _getTableConfig$rowSe === void 0 ? {} : _getTableConfig$rowSe;\n      var rowId = gridType === 'VIRTUALVIEWGRID' ? 'rowid' : 'id';\n      var suppressRowSpan = isSuppressRowSpan(model);\n      var enableBaseDataSelectFilter = isEnableBaseDataSelectFilter(model);\n      var mulCurrencyFields = getMulCurrencyFields(parentModel);\n      var totalType = getTotalType(model);\n      _this.metaOptions = {\n        autoGetAggData: getAutoGetAggData(model),\n        showAggregateRowOverlay: getShowAggregateRowOverlay(model),\n        gridType: gridType,\n        suppressCopy: model.getMetaProperty('scp'),\n        navigationDefaultHeight: (0, _params.getNavigationDefaultHeight)({\n          gridType: gridType,\n          config: config,\n          toolbarLocation: toolbarLocation\n        }),\n        config: config,\n        showTreeSeq: model.getMetaProperty('showTreeSeq'),\n        // 树形单据体显示树形序号\n        sumWithFilter: model.getMetaProperty('sumWithFilter'),\n        // 单据体是否开启过滤合计（不分页情况下才有）\n        treeExpandColId: model.getMetaProperty('teci'),\n        // 树形表格指定列展开\n        mergeColumns: ((_model$getMetaPropert = model.getMetaProperty('mergeColumns')) === null || _model$getMetaPropert === void 0 ? void 0 : _model$getMetaPropert.toJS()) || [],\n        selectAllRow: gridType === 'VIRTUALVIEWGRID' && model.getMetaProperty('selallrow') && rowSelection.type === 'checkbox',\n        // 报表是否开启选择全部\n        showVirtualViewRowCount: isShowVirtualViewRowCount(model),\n        rowId: rowId,\n        defaultRowCount: (_model$getMetaPropert2 = model.getMetaProperty('defaultrows')) !== null && _model$getMetaPropert2 !== void 0 ? _model$getMetaPropert2 : _const.DEFAULT_SHOW_ROWS_COUNT,\n        // 默认显示行数\n        // 是否限制高度，默认限制\n        isLimitHeight: (_model$getMetaPropert3 = model.getMetaProperty('heightLimit')) !== null && _model$getMetaPropert3 !== void 0 ? _model$getMetaPropert3 : !(0, _memoryCacher.getPageData)(model.pageId, [_const2.SPLIT_SCREEN_CANCEL_TABLE_LIMIT_HEIGHT, model.getMetaProperty('id')]),\n        suppressRowSpan: suppressRowSpan,\n        enableBaseDataSelectFilter: enableBaseDataSelectFilter,\n        mulCurrencyFields: mulCurrencyFields,\n        totalType: totalType\n      };\n    };\n    this.getMetaOptionsProperty = function (key) {\n      return _this.metaOptions[key];\n    };\n    this.setGlobalOption = function (key, val) {\n      _this.globalOptions[key] = val;\n    };\n    this.getGlobalOptionsProperty = function (key) {\n      return _this.globalOptions[key];\n    };\n    this.setColumnOptions = function (key, val) {\n      _this.columnOptions[key] = val;\n    };\n    this.getColumnOptionsProperty = function (key) {\n      return _this.columnOptions[key];\n    };\n    /* ------------------------ 禁止直接调用这些函数，取内部值请考虑定义函数获取 ------------------------ */\n    this.resetColumnOption = function () {\n      _this.columnOptions = _getInitColumnOptions();\n    };\n    this.setAggregateChecked = function (val) {\n      _this.setGlobalOption(_const.AGGREGATE_CHECKED, val);\n    };\n    this.getAggregateChecked = function () {\n      return _this.getGlobalOptionsProperty(_const.AGGREGATE_CHECKED);\n    };\n    this.setTableSize = function (val) {\n      _this.setGlobalOption(_const.TABLE_SIZE, val);\n    };\n    this.getTableSize = function () {\n      return _this.getGlobalOptionsProperty(_const.TABLE_SIZE);\n    };\n    /**\n     * 设置个性化列宽值\n     * @param {object|boolean} val\n     * @returns\n     */\n    this.setPersonalizedColumnWidth = function (val) {\n      // 传过来为true，表示重置数据\n      if (typeof val === 'boolean' && val === true) {\n        _this.setGlobalOption('personalizedColumnWidth', _defineProperty(_defineProperty(_defineProperty({}, _const.PERSONALIZED_COLUMN_WIDTH, {}), _const.PERSONALIZED_AUTOSIZE_COLUMN_WIDTH, {}), _const.PERSONALIZED_COLUMN_MAX_WIDTH, {}));\n        return;\n      }\n      _this.setGlobalOption('personalizedColumnWidth', val);\n    };\n    this.getPersonalizedColumnWidth = function () {\n      return _this.getGlobalOptionsProperty('personalizedColumnWidth');\n    };\n    this.getScrollBarSize = function () {\n      return _this.getGlobalOptionsProperty('scrollBarSize');\n    };\n    this.setTableScrollOffset = function (val) {\n      _this.setGlobalOption('tableScrollOffset', val);\n    };\n    this.getTableTableScrollOffset = function () {\n      return _this.getGlobalOptionsProperty('tableScrollOffset');\n    };\n    this.setCellRanges = function (cellRanges) {\n      _this.setGlobalOption('cellRanges', cellRanges);\n    };\n    this.getCellRanges = function () {\n      return _this.getGlobalOptionsProperty('cellRanges');\n    };\n    this.setToolBarHeight = function (toolBarHeight) {\n      return _this.setGlobalOption('toolBarHeight', toolBarHeight);\n    };\n    this.getToolBarHeight = function () {\n      return _this.getGlobalOptionsProperty('toolBarHeight');\n    };\n    this.getNavigationDefaultHeight = function () {\n      return _this.getMetaOptionsProperty('navigationDefaultHeight') || _const.TOOLBARHEIGHT.min;\n    };\n    this.getGridType = function () {\n      return _this.getMetaOptionsProperty('gridType');\n    };\n    this.setHadRepeatedColumnCode = function (value) {\n      return _this.setGlobalOption('hadRepeatedColumnCode', value);\n    };\n    this.getHadRepeatedColumnCode = function () {\n      return _this.getGlobalOptionsProperty('hadRepeatedColumnCode') || false;\n    };\n    this.setLoadedPages = function (pages) {\n      return _this.setGlobalOption('loadedPages', pages);\n    };\n    this.getLoadedPages = function () {\n      return _this.getGlobalOptionsProperty('loadedPages') || [];\n    };\n    this.setIsScrollLoadedLastPage = function (value) {\n      return _this.setGlobalOption('isScrollLoadedLastPage', value);\n    };\n    this.getIsScrollLoadedLastPage = function () {\n      return _this.getGlobalOptionsProperty('isScrollLoadedLastPage');\n    };\n    this.setVirtualViewRowSpan = function (rowSpan) {\n      return _this.setGlobalOption('virtualViewRowSpan', rowSpan);\n    };\n    this.getVirtualViewRowSpan = function () {\n      return _this.getGlobalOptionsProperty('virtualViewRowSpan');\n    };\n    this.setRightBorderCols = function (rightBorderCols) {\n      return _this.setGlobalOption('rightBorderCols', rightBorderCols);\n    };\n    this.getRightBorderCols = function () {\n      return _this.getGlobalOptionsProperty('rightBorderCols');\n    };\n    this.getCellRangesSumResult = function (cellRangeId) {\n      var cellRangesSumResult = _this.getGlobalOptionsProperty('cellRangesSumResult') || new Map();\n      return cellRangesSumResult.get(cellRangeId);\n    };\n    this.setCellRangesSumResult = function (cellRangeId, result) {\n      var cellRangesSumResult = _this.getGlobalOptionsProperty('cellRangesSumResult') || new Map();\n      cellRangesSumResult.set(cellRangeId, result);\n      _this.setGlobalOption('cellRangesSumResult', cellRangesSumResult);\n    };\n    this.clearCellRangesSumResult = function () {\n      _this.setGlobalOption('cellRangesSumResult', new Map());\n    };\n    this.getOriginColumnCode = function (code) {\n      var repeatedColumnMap = _this.getRepeatedColumnMap() || {};\n      return repeatedColumnMap[code] || code;\n    };\n    this.addAggregateColumns = function (aggregateColumn) {\n      _this.getColumnOptionsProperty('aggregateColumns').push(aggregateColumn);\n    };\n    this.getAggregateColumns = function () {\n      return _this.getColumnOptionsProperty('aggregateColumns');\n    };\n    this.setCustomSchemaMap = function (schemeId, customSchemaData) {\n      _this.getColumnOptionsProperty('customSchemaMap').set(schemeId, customSchemaData);\n    };\n    this.getCustomSchemaMap = function () {\n      return _this.getColumnOptionsProperty('customSchemaMap');\n    };\n    this.getFormConfig = function () {\n      return _this.getMetaOptionsProperty('config') || {};\n    };\n    this.getColLockInfo = function () {\n      return _this.getDataOptionsProperty('colLockInfo');\n    };\n    this.getFmtInfo = function () {\n      return _this.getDataOptionsProperty('fmtInfo');\n    };\n    this.getDataIndex = function () {\n      return _this.getDataOptionsProperty('dataIndex');\n    };\n    this.getParentNodeMap = function () {\n      return _this.getDataOptionsProperty('parentNodeMap');\n    };\n    this.setFullKeyboardOptions = function () {\n      return _this.setGlobalOption('fullKeyboardOptions', getFullKeyboardOptions());\n    };\n    this.getFullKeyboardOptions = function () {\n      return _this.getGlobalOptionsProperty('fullKeyboardOptions');\n    };\n    this.getShowTreeSeq = function () {\n      return _this.getMetaOptionsProperty('showTreeSeq');\n    };\n    this.getSumWithFilter = function () {\n      return _this.getMetaOptionsProperty('sumWithFilter');\n    };\n    this.getSelectAllRow = function () {\n      return _this.getMetaOptionsProperty('selectAllRow');\n    };\n    this.getDataDesc = function () {\n      return _this.getDataOptionsProperty('dataDesc');\n    };\n    this.getDefaultRowCount = function () {\n      return _this.getMetaOptionsProperty('defaultRowCount');\n    };\n    this.getIsLimitHeight = function () {\n      return _this.getMetaOptionsProperty('isLimitHeight');\n    };\n    this.getShowAggregateRowOverlay = function () {\n      return _this.getMetaOptionsProperty('showAggregateRowOverlay');\n    };\n    this.getSuppressRowSpan = function () {\n      return _this.getMetaOptionsProperty('suppressRowSpan');\n    };\n    this.getEnableBaseDataSelectFilter = function () {\n      return _this.getMetaOptionsProperty('enableBaseDataSelectFilter');\n    };\n    this.getMulCurrencyFields = function () {\n      return _this.getMetaOptionsProperty('mulCurrencyFields');\n    };\n    this.getShowVirtualViewRowCount = function () {\n      return _this.getMetaOptionsProperty('showVirtualViewRowCount');\n    };\n    this.setHasVoucherHeader = function (val) {\n      _this.setGlobalOption('hasVoucherHeader', val);\n    };\n    this.getHasVoucherHeader = function () {\n      return _this.getGlobalOptionsProperty('hasVoucherHeader');\n    };\n    this.getTotalType = function () {\n      return _this.getMetaOptionsProperty('totalType');\n    };\n    this.setStickyAggregateHeight = function (h) {\n      return _this.setGlobalOption('stickyAggregateHeight', h);\n    };\n    this.getStickyAggregateHeight = function () {\n      return _this.getGlobalOptionsProperty('stickyAggregateHeight');\n    };\n    this.getExpandRowIds = function () {\n      return _this.getGlobalOptionsProperty('expandRowIds');\n    };\n    this.setExpandRowIds = function (ids, operation) {\n      var oldExpandIds = _this.getExpandRowIds();\n      var newExpandIds = ids;\n      if (operation === 'collapse') {\n        newExpandIds = oldExpandIds.filter(function (id) {\n          return !ids.includes(id);\n        });\n      }\n      if (operation === 'expand') {\n        newExpandIds = Array.from(new Set([].concat(_toConsumableArray(oldExpandIds), _toConsumableArray(ids))));\n      }\n      _this.setGlobalOption('expandRowIds', newExpandIds);\n    };\n    this.setAbleAutoGetAggData = function (v) {\n      return _this.setGlobalOption('ableAutoGetAggData', v);\n    };\n    this.getAutoGetAggData = function () {\n      if (_this.getGlobalOptionsProperty('ableAutoGetAggData') === false) {\n        return false;\n      }\n      return _this.getMetaOptionsProperty('autoGetAggData');\n    };\n    this.getSeqColDescMap = function () {\n      return _this.getGlobalOptionsProperty('seqColDesc') || new Map();\n    };\n    this.setSeqColDescMap = function (v) {\n      return _this.setGlobalOption('seqColDesc', v);\n    };\n    this.getTreeVirtualViewLoadedDataRow = function () {\n      return _this.getGlobalOptionsProperty('treeVirtualViewLoadedDataRow') || [];\n    };\n    this.setTreeVirtualViewLoadedDataRow = function (rowsInfo) {\n      return _this.setGlobalOption('treeVirtualViewLoadedDataRow', rowsInfo);\n    };\n    this.setLastRowSelectionInfo = function (v) {\n      return _this.setGlobalOption('lastRowSelectionInfo', v);\n    };\n    this.getLastRowSelectionInfo = function () {\n      return _this.getGlobalOptionsProperty('lastRowSelectionInfo');\n    };\n    this.setColumnDraging = function (isColumnDraging) {\n      return _this.setGlobalOption('isColumnDraging', isColumnDraging);\n    };\n    this.getColumnDraging = function () {\n      return _this.getGlobalOptionsProperty('isColumnDraging');\n    };\n    this.setTreeVirtualViewExpandAll = function (v) {\n      return _this.setGlobalOption('treeVirtualViewExpandAll', v);\n    };\n    this.getTreeVirtualViewExpandAll = function () {\n      return _this.getGlobalOptionsProperty('treeVirtualViewExpandAll') || false;\n    };\n    this.setRowDragActived = function (isActived) {\n      return _this.setGlobalOption('rowDragActived', isActived);\n    };\n    this.getRowDragActived = function () {\n      return _this.getGlobalOptionsProperty('rowDragActived') || false;\n    };\n    // 从数据中获得的参数\n    this.dataOptions = {};\n    // 从元数据中获得的参数\n    this.metaOptions = {};\n    // 表格全局通用的参数\n    var _caculateScrollContai = (0, _element.caculateScrollContainerSize)(),\n      width = _caculateScrollContai.width,\n      height = _caculateScrollContai.height;\n    this.globalOptions = _defineProperty(_defineProperty(_defineProperty({\n      personalizedColumnWidth: _defineProperty(_defineProperty(_defineProperty({}, _const.PERSONALIZED_COLUMN_WIDTH, {}), _const.PERSONALIZED_AUTOSIZE_COLUMN_WIDTH, {}), _const.PERSONALIZED_COLUMN_MAX_WIDTH, {}),\n      scrollBarSize: {\n        width: width,\n        height: _global[\"default\"][_global.IS_IE] ? height + 2 : height // IE下滚动容器高度要大于滚动条高度，否则滚动条左右箭头点击失效,这里多加2px\n      },\n      cellRanges: [],\n      toolBarHeight: 0\n    }, _const.TABLE_SIZE, {\n      width: 0,\n      height: 0\n    }), \"fullKeyboardOptions\", getFullKeyboardOptions()), \"expandRowIds\", []);\n    // 列定义中获得的、且列定义改变会重置的参数\n    this.columnOptions = _getInitColumnOptions();\n  }\n  _createClass(TableOptions, [{\n    key: \"setDataOptions\",\n    value: function setDataOptions(model, parentModel) {\n      this.dataOptions = _objectSpread(_objectSpread({}, this.dataOptions), {}, {\n        postCols: getPostCols(model, parentModel),\n        dataDesc: getDataDesc(model, parentModel),\n        enableGetSumdata: getEnableGetSumdata(model, parentModel),\n        fmtInfo: getFmtInfo(model, parentModel),\n        dataIndex: getDataIndex(model, parentModel),\n        colLockInfo: getColLockInfo(model, parentModel) // 通过数据锁定列\n      });\n    }\n  }]);\n  return TableOptions;\n}();\nfunction _getInitColumnOptions() {\n  return {\n    aggregateColumns: [],\n    customSchemaMap: new Map() // {schemeId1:{cols:[], isvId:'', moduleId:''}}\n  };\n}\nfunction getFullKeyboardOptions() {\n  var _getData, _getData2, _getData3;\n  var enterToNextRow = (_getData = (0, _GlobalDataCacher.getData)(_symbolConst.KEY_ADVANCE_SHORTCUT_INFO)) === null || _getData === void 0 ? void 0 : _getData.enterToNextFieldInEntry; // enter切换下一行\n  var enterToNextField = ((_getData2 = (0, _GlobalDataCacher.getData)(_symbolConst.KEY_ADVANCE_SHORTCUT_INFO)) === null || _getData2 === void 0 ? void 0 : _getData2.enterToNextField) && !enterToNextRow; // 回车切换下一个字段\n  var autoAddRow = (_getData3 = (0, _GlobalDataCacher.getData)(_symbolConst.KEY_ADVANCE_SHORTCUT_INFO)) === null || _getData3 === void 0 ? void 0 : _getData3.autoAddRowInEntry; // 自动增行\n  return {\n    autoAddRow: autoAddRow,\n    enterToNextRow: enterToNextRow,\n    enterToNextField: enterToNextField\n  };\n}\nvar _default = exports[\"default\"] = TableOptions;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/TableOptions.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/ToolBar.js":
/*!*******************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/ToolBar.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.NavigationBar = NavigationBar;\nexports.getGirdToolBar = getGirdToolBar;\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.parse-int.js */ \"../../node_modules/core-js/modules/es.parse-int.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _ToolBar = _interopRequireDefault(__webpack_require__(/*! @/component/web/DataGrid/TableHelper/component/toolBar/ToolBar */ \"./src/component/web/DataGrid/TableHelper/component/toolBar/ToolBar.js\"));\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _VirtualViewToolBar = _interopRequireDefault(__webpack_require__(/*! @/component/web/DataGrid/TableHelper/component/toolBar/toolbarModule/VirtualViewToolBar */ \"./src/component/web/DataGrid/TableHelper/component/toolBar/toolbarModule/VirtualViewToolBar.js\"));\nvar _const = __webpack_require__(/*! @/constant/const */ \"./src/constant/const.js\");\nvar _toolbar = _interopRequireDefault(__webpack_require__(/*! ./style/toolbar.less */ \"./src/component/web/DataGrid/KDTable/style/toolbar.less\"));\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction NavigationBar(_ref) {\n  var model = _ref.model,\n    parentModel = _ref.parentModel,\n    getActionByKey = _ref.getActionByKey,\n    getInstance = _ref.getInstance,\n    getTableOptions = _ref.getTableOptions,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getInternalEventService = _ref.getInternalEventService,\n    toolbarLocation = _ref.toolbarLocation;\n  var useModel = parentModel || model;\n  var gridValue = useModel && useModel.getDataValue();\n  var _getTableConfigImmedi = getTableConfigImmediately(),\n    _pageType = _getTableConfigImmedi.pageType,\n    hasNavgation = _getTableConfigImmedi.hasNavgation,\n    rowKey = _getTableConfigImmedi.rowKey;\n  var _useState = (0, _react.useState)(_pageType),\n    _useState2 = _slicedToArray(_useState, 2),\n    pageType = _useState2[0],\n    setPageType = _useState2[1];\n  var _useReducer = (0, _react.useReducer)(function (x) {\n      return x + 1;\n    }, 0),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    forceUpdate = _useReducer2[1];\n  var internalEventService = getInternalEventService();\n  (0, _react.useEffect)(function () {\n    setPageType(_pageType);\n  }, [_pageType]);\n  (0, _react.useEffect)(function () {\n    var hanleForceUpdate = function hanleForceUpdate() {\n      forceUpdate();\n    };\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.reFreshToolBar, hanleForceUpdate);\n    return function () {\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.reFreshToolBar, hanleForceUpdate);\n    };\n  }, []);\n  (0, _react.useEffect)(function () {\n    var handleConfigChanged = function handleConfigChanged() {\n      var _getTableConfigImmedi2 = getTableConfigImmediately(),\n        _pageType = _getTableConfigImmedi2.pageType;\n      setPageType(_pageType);\n    };\n    var internalEventService = getInternalEventService();\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.themeChanged, handleConfigChanged);\n    return function () {\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.themeChanged, handleConfigChanged);\n    };\n  }, []);\n  if (!gridValue || !hasNavgation) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null);\n  }\n  var gridType = model.getMetaProperty('gridtype');\n  var isListView = gridType === 'VIEWGRID';\n  var isVirtualView = gridType === 'VIRTUALVIEWGRID';\n  var onToolbarSizeChanged = function onToolbarSizeChanged(rect) {\n    var height = rect.height;\n    if (height > 0) {\n      var _tableOptions = getTableOptions();\n      _tableOptions.setToolBarHeight(height);\n    }\n  };\n  var tableOptions = getTableOptions();\n  var instance = getInstance();\n  var invokeControlMethodSingle = getActionByKey('invokeControlMethodSingle');\n  var rowSelection = parentModel && parentModel.getMetaProperty('ismul') === false ? 'single' : 'multiple';\n  var isSqlQuery = parentModel && parentModel.getMetaProperty('queryType') === 'SqlQuery';\n  var isIndexMode = parentModel && parentModel.getMetaProperty('isindexmode') === true;\n  var maxPageSize = useModel && useModel.getMetaProperty('maxPageSize') || (isListView ? _gridConst.DEFAULT_MAX_PAGE_SIZE : _gridConst.ENTRY_MAX_PAGE_SIZE);\n  var pageRowOptions = useModel && useModel.getMetaProperty('pageRowOptions') || (0, _immutable.List)();\n  var hasSummaryFields = parentModel && parentModel.getMetaProperty('hsf');\n  var enabledChangePageInFakeCount = parentModel && parentModel.getMetaProperty('enabledChangePage') || false; // 大数据获取真实条数时，是否允许上下翻页\n  var suppressSelectAllRows = parentModel && parentModel.getMetaProperty('suppressSelectAllRows') || false; // 禁止选择全部按钮\n  var formConfig = useModel.getFormConfig();\n  var rowData = instance.tableModel.rowData || [];\n  return /*#__PURE__*/_react[\"default\"].createElement(_ToolBar[\"default\"]\n  // style={}\n  , {\n    className: toolbarLocation === '1' ? _toolbar[\"default\"]['toolbar-bottom'] : '',\n    pageId: useModel.pageId,\n    model: useModel,\n    isGrid: true,\n    isListView: isListView,\n    isVirtualView: isVirtualView,\n    isEntryEntity: !isListView && !isVirtualView,\n    isF7Form: formConfig.isf7,\n    pageType: pageType,\n    isSplitPage: true,\n    pageindex: gridValue.get('pageindex'),\n    rowcount: rowData.length,\n    islastpage: gridValue.get('islastpage') || false,\n    datacount: gridValue.get('datacount'),\n    billdatacount: gridValue.get('billdatacount'),\n    pagerows: gridValue.get('pagerows'),\n    pagecount: gridValue.get('pagecount'),\n    isgetrealcount: gridValue.get('isgetrealcount'),\n    isOutMaxDataCount: gridValue.get('isOutMaxDataCount'),\n    limitdatacount: gridValue.get('limitdatacount'),\n    realPageCount: gridValue.get('realPageCount'),\n    rowSelection: rowSelection,\n    selectClick: function selectClick(e, selected) {\n      var suppressPost = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (selected) {\n        instance.controller.setSelectedRows([]);\n      } else {\n        var allRowKeys = rowData.map(function (row) {\n          return row[rowKey];\n        });\n        instance.controller.setSelectedRows(allRowKeys);\n      }\n    },\n    gridKey: useModel.key,\n    toolBarBtnClick: function toolBarBtnClick(args, operationKey) {\n      var model = {\n        pageId: useModel.pageId,\n        key: useModel.key\n      };\n      var toolBarBtnClick = getActionByKey('toolBarBtnClick');\n      toolBarBtnClick(model, args, operationKey);\n    },\n    setAmountOperation: function setAmountOperation(amount, operationKey) {\n      amount = parseInt(amount);\n      var model = {\n        pageId: useModel.pageId,\n        key: useModel.key\n      };\n      var setAmountOperation = getActionByKey('setAmountOperation');\n      setAmountOperation(model, amount, operationKey);\n    }\n    // getRealPageCount={this.getRealPageCount.bind(this)}\n    // handleFuncs={this.handleFuncs.bind(this)}\n    ,\n    heightLimit: true\n    // getPageDisplayRowCount={this.getPageDisplayRowCount}\n    //  getColHeaderName={this.getColHeaderName.bind(this)}\n    ,\n    isSqlQuery: isSqlQuery,\n    isIndexMode: isIndexMode,\n    maxPageSize: maxPageSize,\n    invokeControlMethodSingle: invokeControlMethodSingle,\n    onToolbarSizeChanged: onToolbarSizeChanged,\n    enabledChangePageInFakeCount: enabledChangePageInFakeCount,\n    suppressSelectAllRows: suppressSelectAllRows,\n    navigationDefaultHeight: tableOptions.getNavigationDefaultHeight(),\n    hasSummaryFields: hasSummaryFields,\n    pageMode: formConfig.pageMode,\n    pageRowOptions: pageRowOptions.toJS()\n  });\n}\nfunction getGirdToolBar(_ref2) {\n  var readyed = _ref2.readyed,\n    model = _ref2.model,\n    parentModel = _ref2.parentModel,\n    getActionByKey = _ref2.getActionByKey,\n    getInstance = _ref2.getInstance,\n    getTableOptions = _ref2.getTableOptions,\n    getTableConfigImmediately = _ref2.getTableConfigImmediately,\n    getInternalEventService = _ref2.getInternalEventService,\n    toolbarLocation = _ref2.toolbarLocation;\n  if (!readyed) return null;\n  var gridType = model.getMetaProperty('gridtype');\n  return gridType === 'VIRTUALVIEWGRID' ? /*#__PURE__*/_react[\"default\"].createElement(VirtualViewGridToolBar, {\n    model: model,\n    parentModel: parentModel,\n    getActionByKey: getActionByKey,\n    getInstance: getInstance,\n    getTableOptions: getTableOptions,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInternalEventService: getInternalEventService\n  }) : /*#__PURE__*/_react[\"default\"].createElement(NavigationBar, {\n    model: model,\n    parentModel: parentModel,\n    getActionByKey: getActionByKey,\n    getInstance: getInstance,\n    getTableOptions: getTableOptions,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getInternalEventService: getInternalEventService,\n    toolbarLocation: toolbarLocation\n  });\n}\nfunction VirtualViewGridToolBar(_ref3) {\n  var model = _ref3.model,\n    parentModel = _ref3.parentModel,\n    getTableOptions = _ref3.getTableOptions,\n    getActionByKey = _ref3.getActionByKey,\n    getInstance = _ref3.getInstance,\n    getTableConfigImmediately = _ref3.getTableConfigImmediately,\n    getInternalEventService = _ref3.getInternalEventService;\n  var dataModel = parentModel || model;\n  var tableOptions = getTableOptions();\n  var tableConfig = getTableConfigImmediately();\n  var instance = getInstance();\n  var hasSelectAllRow = tableOptions.getSelectAllRow();\n  var _showRowCount = tableOptions.getShowVirtualViewRowCount();\n  var dataDesc = tableOptions.getDataDesc();\n  var isLargeData = dataDesc && dataDesc.isLargeData;\n  var isShowLargeDataCount = dataDesc && dataDesc.resetDataCount;\n  var dataCount = dataDesc && dataDesc.datacount || 0;\n  var pageIndex = dataDesc && dataDesc.pageIndex || 1;\n  var pageRows = dataDesc && dataDesc.pageRows || 200;\n  var isSplitPage = dataDesc && dataDesc.isSplitPage;\n  var isLast = dataDesc && dataDesc.isLast;\n  var rowData = instance.tableModel.rowData || [];\n  var _useReducer3 = (0, _react.useReducer)(function (x) {\n      return x + 1;\n    }, 0),\n    _useReducer4 = _slicedToArray(_useReducer3, 2),\n    refresh = _useReducer4[0],\n    forceUpdate = _useReducer4[1]; // 强制刷新\n  (0, _react.useEffect)(function () {\n    var handleVirtualDataChanged = function handleVirtualDataChanged() {\n      // 报表数据更新时刷新工具栏\n      forceUpdate();\n    };\n    var internalEventService = getInternalEventService();\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.virtualDataChanged, handleVirtualDataChanged);\n    return function () {\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.virtualDataChanged, handleVirtualDataChanged);\n    };\n  }, []);\n  var rowSelection = tableConfig.rowSelection,\n    treeTable = tableConfig.treeTable;\n  var isSingleSelection = rowSelection.type === 'radio';\n  var isRealDataCount = !isLargeData || isShowLargeDataCount;\n  var showRowCount = _showRowCount && isRealDataCount && dataCount > 0;\n  var showSelectedCount = isRealDataCount && !isSingleSelection;\n  var showPagination = !!isSplitPage && !treeTable;\n  var isShowVirtualViewNav = hasSelectAllRow || showRowCount || showSelectedCount || showPagination;\n  if (!isShowVirtualViewNav) return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null);\n  var handleVirtualViewSelectAll = function handleVirtualViewSelectAll(selectedAll) {\n    var toolBarBtnClick = getActionByKey('toolBarBtnClick');\n    var instance = getInstance();\n    var _getTableConfigImmedi3 = getTableConfigImmediately(),\n      rowKey = _getTableConfigImmedi3.rowKey;\n    if (selectedAll) {\n      instance.controller.setSelectedRows([]);\n      toolBarBtnClick(model, [], 'clearSelection');\n    } else {\n      var _rowData = instance.controller.getRows();\n      var allRowKeys = _rowData.map(function (row) {\n        return row[rowKey];\n      });\n      instance.controller.setSelectedRows(allRowKeys);\n      toolBarBtnClick(model, [], 'selectAllRows');\n    }\n  };\n  var handleSetPageIndex = function handleSetPageIndex(pageIndex) {\n    var setAmountOperation = getActionByKey('setAmountOperation');\n    setAmountOperation(model, pageIndex, 'setPageIndex');\n  };\n  var handleSetPageSize = function handleSetPageSize(pageRows) {\n    var setAmountOperation = getActionByKey('setAmountOperation');\n    setAmountOperation(model, pageRows, 'setPageSize');\n  };\n  var timeStamp = dataModel === null || dataModel === void 0 ? void 0 : dataModel.getDataProperty([_const.TIME_STAMP_FRESH]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_VirtualViewToolBar[\"default\"], {\n    model: dataModel,\n    dataCount: dataCount,\n    pageIndex: pageIndex,\n    pageRows: pageRows,\n    hasSelectAllRow: hasSelectAllRow,\n    handleVirtualViewSelectAll: handleVirtualViewSelectAll,\n    handleSetPageIndex: handleSetPageIndex,\n    handleSetPageSize: handleSetPageSize,\n    dataValueTimeStamp: timeStamp,\n    isSingleSelection: isSingleSelection,\n    showRowCount: showRowCount,\n    isRealDataCount: isRealDataCount,\n    showPagination: showPagination,\n    rowCount: rowData.length,\n    isLast: isLast\n  });\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/ToolBar.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/ValidateFilterTip.js":
/*!*****************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/ValidateFilterTip.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = ValidateFilterTip;\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _BaseValidateTip = _interopRequireDefault(__webpack_require__(/*! ../TableHelper/component/BaseValidateTip */ \"./src/component/web/DataGrid/TableHelper/component/BaseValidateTip.js\"));\nvar _dataService = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/dataService */ \"./src/component/web/DataGrid/TableHelper/util/dataService.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; } /*\n * @Author: wqhui\n * @Date: 2023-01-05 16:35:27\n * @Description:\n */\nfunction ValidateFilterTip(_ref) {\n  var pageId = _ref.pageId,\n    id = _ref.id,\n    getTableOptions = _ref.getTableOptions,\n    getTableApi = _ref.getTableApi,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    onVisibleChange = _ref.onVisibleChange,\n    className = _ref.className;\n  var _useState = (0, _react.useState)(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    failedCount = _useState2[0],\n    setFailedCount = _useState2[1];\n  var _useState3 = (0, _react.useState)(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    show = _useState4[0],\n    setShow = _useState4[1];\n  (0, _react.useEffect)(function () {\n    if (getTableOptions().getGridType()) {\n      return;\n    }\n    var removeErrorCountListener = (0, _memoryCacher.addDataChangeListener)(pageId, [id, _gridConst.VALIDATE_FAILED_COUNT], function (errorCount) {\n      setFailedCount(errorCount);\n      setShow(errorCount !== 0 && getTableApi().hasFilter());\n    });\n    return function () {\n      removeErrorCountListener();\n    };\n  }, []);\n  var clearFilter = function clearFilter() {\n    getTableApi().clearFilter();\n    var _getTableConfigImmedi = getTableConfigImmediately(),\n      type = _getTableConfigImmedi.type,\n      gridType = _getTableConfigImmedi.gridType;\n    var controlType = (0, _dataService.getGridTrackingType)({\n      type: type,\n      gridType: gridType\n    });\n    (0, _dataService.trackingOfValidateClick)({\n      pageId: pageId,\n      controlId: id,\n      controlType: controlType,\n      actionKey: 'clearFilter'\n    });\n  };\n  (0, _react.useEffect)(function () {\n    onVisibleChange === null || onVisibleChange === void 0 || onVisibleChange(show);\n  }, [show]);\n  return show ? /*#__PURE__*/_react[\"default\"].createElement(_BaseValidateTip[\"default\"], {\n    errorCount: failedCount,\n    clearFilter: clearFilter,\n    className: className\n  }) : null;\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/ValidateFilterTip.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/ValidateRowPositioner.js":
/*!*********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/ValidateRowPositioner.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = ValidateRowPositioner;\nObject.defineProperty(exports, \"getScrollBarHeight\", ({\n  enumerable: true,\n  get: function get() {\n    return _useTableSize.getScrollBarHeight;\n  }\n}));\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.number.max-safe-integer.js */ \"../../node_modules/core-js/modules/es.number.max-safe-integer.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ \"webpack/sharing/consume/default/react-dom/react-dom?418d\"));\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _lodash = __webpack_require__(/*! lodash */ \"../../node_modules/lodash/lodash.js\");\nvar _appModelFunction = __webpack_require__(/*! @/model/appModelFunction */ \"./src/model/appModelFunction.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _const = __webpack_require__(/*! @/constant/const */ \"./src/constant/const.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _dataService = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/dataService */ \"./src/component/web/DataGrid/TableHelper/util/dataService.js\");\nvar _getColumnEditable = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/getColumnEditable */ \"./src/component/web/DataGrid/TableHelper/util/getColumnEditable.js\");\nvar _validate = __webpack_require__(/*! ./utils/validate */ \"./src/component/web/DataGrid/KDTable/utils/validate.js\");\nvar _BaseValidateControlArrow = _interopRequireDefault(__webpack_require__(/*! ../TableHelper/component/BaseValidateControlArrow */ \"./src/component/web/DataGrid/TableHelper/component/BaseValidateControlArrow.js\"));\nvar _array = __webpack_require__(/*! ../TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _useTableSize = __webpack_require__(/*! ./hooks/useTableSize */ \"./src/component/web/DataGrid/KDTable/hooks/useTableSize.js\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; } /*\n * @Author: wqhui\n * @Date: 2023-01-10 09:51:43\n * @Description:\n */\nvar BORDER_DIFF = 2;\nvar DEFAULT_ICON_PADDING = 2;\nfunction ValidateRowPositioner(_ref) {\n  var _containerEleRef$curr;\n  var pageId = _ref.pageId,\n    id = _ref.id,\n    getTableApi = _ref.getTableApi,\n    getInstance = _ref.getInstance,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getInternalEventService = _ref.getInternalEventService,\n    containerEleRef = _ref.containerEleRef,\n    getTableOptions = _ref.getTableOptions,\n    _ref$pageIndex = _ref.pageIndex,\n    pageIndex = _ref$pageIndex === void 0 ? 1 : _ref$pageIndex,\n    _ref$pageRows = _ref.pageRows,\n    pageRows = _ref$pageRows === void 0 ? 20 : _ref$pageRows,\n    type = _ref.type;\n  var _useState = (0, _react.useState)(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    show = _useState2[0],\n    setShow = _useState2[1];\n  var _useState3 = (0, _react.useState)({\n      top: false,\n      bottom: false\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    arrow = _useState4[0],\n    setArrow = _useState4[1];\n  var neastRowKeysRef = (0, _react.useRef)({\n    top: -1,\n    bottom: Number.MAX_SAFE_INTEGER\n  });\n  var rowKeyRange = (0, _react.useRef)(getRowKeyRange(pageIndex, pageRows));\n  var intersectionObserver = (0, _react.useRef)(null);\n  var resetNeastRowKeys = function resetNeastRowKeys() {\n    neastRowKeysRef.current.top = -1;\n    neastRowKeysRef.current.bottom = Number.MAX_SAFE_INTEGER;\n  };\n  var canShowPositioner = function canShowPositioner() {\n    return !getTableApi().hasFilter() && !getTableApi().hasSort();\n  };\n  var isVerticalScrollShowing = function isVerticalScrollShowing() {\n    var tableBody = containerEleRef.current.querySelector('.kd-table > .kd-table-body');\n    if (!tableBody) {\n      return false; // 整表隐藏情况查询不到表体\n    }\n    return tableBody.scrollHeight > tableBody.clientHeight;\n  };\n  var registerInersrctionOb = (0, _react.useCallback)(function () {\n    if (!intersectionObserver.current) {\n      var tableElement = containerEleRef.current.querySelector('.kd-table');\n      // 提交时，单据体不在视图内，校验行的错误水滴无法正常找到第一行和最后一行，从而无法确定需要如何展示水滴位置\n      intersectionObserver.current = new window.IntersectionObserver(function (entries) {\n        // 监测过程中单据体通过页签方式切换走了，需要注意这种情况\n        entries[0].isIntersecting && handleShowValidateRowPositioner();\n        if (entries[0].intersectionRatio === 1) {\n          intersectionObserver.current.disconnect(tableElement);\n          intersectionObserver.current = null;\n        }\n      }, {\n        threshold: [0.000001, 0.999999]\n      });\n      tableElement && intersectionObserver.current.observe(tableElement);\n    }\n  }, []);\n  var handleShowValidateRowPositioner = (0, _react.useCallback)((0, _lodash.debounce)(function () {\n    var _arrow = {\n      top: false,\n      bottom: false\n    };\n    var gridValidateData = (0, _appModelFunction.getGridValidateData)(pageId, [id]);\n    if (gridValidateData) {\n      var _getTableOptions$getS;\n      var tableBody = containerEleRef.current.querySelector('.kd-table > .kd-table-body');\n      var _tableBody$getBoundin = tableBody.getBoundingClientRect(),\n        x = _tableBody$getBoundin.x,\n        y = _tableBody$getBoundin.y,\n        height = _tableBody$getBoundin.height;\n      var _top = tableBody.scrollTop;\n      var firstEleInViewport = document.elementFromPoint(x + BORDER_DIFF, y + BORDER_DIFF);\n      var lastEleInViewport = document.elementFromPoint(x + BORDER_DIFF, y + Math.floor(height) - BORDER_DIFF - ((_getTableOptions$getS = getTableOptions().getScrollBarSize()) === null || _getTableOptions$getS === void 0 ? void 0 : _getTableOptions$getS.height) || 0);\n      // 单据体未完全展示在视图内需要监听\n      if (!firstEleInViewport || !lastEleInViewport) {\n        registerInersrctionOb();\n      }\n      var firstRowIndex = getRowIndex(firstEleInViewport);\n      var lastRowIndex = getRowIndex(lastEleInViewport);\n      resetNeastRowKeys();\n      var keys = gridValidateData.keys();\n      var result = keys.next();\n      while (!result.done) {\n        var _result = result,\n          rowKey = _result.value;\n        if (rowKey < rowKeyRange.current[0] || rowKey >= rowKeyRange.current[1]) {\n          result = keys.next();\n          continue;\n        }\n        var rowIndex = getInstance().controller.getRowIndex(rowKey);\n        if (firstRowIndex != null && rowIndex < firstRowIndex) {\n          neastRowKeysRef.current.top = Math.max(neastRowKeysRef.current.top, rowKey);\n          _arrow.top = true;\n        } else if (lastRowIndex != null && rowIndex > lastRowIndex) {\n          neastRowKeysRef.current.bottom = Math.min(neastRowKeysRef.current.bottom, rowKey);\n          _arrow.bottom = true;\n        }\n        result = keys.next();\n      }\n      // 点击增行出现滚动条时可能导致异常，这里top=0，向上跳转不会存在\n      if (_top === 0) {\n        _arrow.top = false;\n      }\n    }\n    setArrow(_arrow);\n    setShow(_arrow.top || _arrow.bottom);\n  }, 300), [pageId, id]);\n  (0, _react.useEffect)(function () {\n    var _handleShowValidateRowPositioner = (0, _lodash.debounce)(handleShowValidateRowPositioner, 300);\n    var handleScroll = function handleScroll(_ref2) {\n      var params = _ref2.params;\n      if (params.direction === 'vertical' && canShowPositioner()) {\n        _handleShowValidateRowPositioner();\n      }\n    };\n    getInternalEventService().addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.scroll, handleScroll);\n    getInternalEventService().addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterFilter, _handleShowValidateRowPositioner);\n    getInternalEventService().addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterSortChange, _handleShowValidateRowPositioner);\n    getInternalEventService().addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterColumnMove, _handleShowValidateRowPositioner);\n    // 表格校验改变\n    var handleValidateChange = function handleValidateChange(data) {\n      // 表示表格全部校验（如提交时）、存在竖直滚动条时，需要对不可见行的校验失败单元格进行判断\n      var isValidateCurrentTable = data.tableId === id || data.tableId === undefined;\n      if (isValidateCurrentTable && typeof data.rowKey === 'undefined' && isVerticalScrollShowing() && canShowPositioner()) {\n        handleShowValidateRowPositioner();\n      }\n    };\n    var removeGridValidateChange = (0, _memoryCacher.addDataChangeListener)(pageId, [_const.VALIDATE_FINISH], handleValidateChange);\n    var removeGridValidateDataChangeListener = (0, _memoryCacher.addDataChangeListener)(pageId, [id, _const.GRID_VALIDATE_CHANGE], function () {\n      if (isVerticalScrollShowing() && canShowPositioner()) {\n        setTimeout(function () {\n          handleShowValidateRowPositioner();\n        });\n      }\n    });\n    var handleControlHidden = function handleControlHidden() {\n      setShow(canShowPositioner());\n    };\n    // if (api) {\n    //   api.addEventListener('filterChanged', handleControlHidden)\n    //   api.addEventListener('sortChanged', handleControlHidden)\n    // }\n\n    return function () {\n      getInternalEventService().removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.scroll, handleScroll);\n      getInternalEventService().removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterFilter, _handleShowValidateRowPositioner);\n      getInternalEventService().removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterSortChange, _handleShowValidateRowPositioner);\n      removeGridValidateChange && removeGridValidateChange();\n      removeGridValidateDataChangeListener === null || removeGridValidateDataChangeListener === void 0 || removeGridValidateDataChangeListener();\n      // if (api) {\n      //   api.removeEventListener('filterChanged', handleControlHidden)\n      //   api.removeEventListener('sortChanged', handleControlHidden)\n      // }\n    };\n  }, []);\n  (0, _react.useEffect)(function () {\n    var lastRowKeyRange = rowKeyRange.current;\n    rowKeyRange.current = getRowKeyRange(pageIndex, pageRows);\n    if (lastRowKeyRange[0] !== rowKeyRange.current[0] || lastRowKeyRange[1] !== rowKeyRange.current[1]) {\n      handleShowValidateRowPositioner();\n    }\n  }, [pageIndex, pageRows]);\n  var handleClick = (0, _lodash.throttle)(function (e) {\n    var rowKey = '';\n    if (e.target.dataset.arrow === 'top') {\n      rowKey = neastRowKeysRef.current.top;\n    } else if (e.target.dataset.arrow === 'bottom') {\n      rowKey = neastRowKeysRef.current.bottom;\n    }\n\n    // 定位的rowIndex不能排除子表的行\n    var rowIndex = getInstance().controller.getRowIndex(Number(rowKey), false);\n    var tableApi = getTableApi();\n    tableApi.ensureRowIndexVisible(rowIndex, 'middle');\n    var gridRowValidateData = (0, _appModelFunction.getGridValidateData)(pageId, [id, rowKey]);\n    if (gridRowValidateData) {\n      var _flatedColumns$;\n      var flatedColumns = (0, _array.flatColumns)(getTableConfigImmediately().getColumns());\n      var nextCol = (0, _validate.getNextValidateFailedCol)((_flatedColumns$ = flatedColumns[0]) === null || _flatedColumns$ === void 0 ? void 0 : _flatedColumns$.code, flatedColumns, gridRowValidateData);\n      if (nextCol) {\n        setTimeout(function () {\n          tableApi.ensureColumnVisible(nextCol.code);\n          (0, _getColumnEditable.shouldStartEditingCell)(nextCol.type) ? tableApi.startEditingCellWithFocus({\n            rowKey: rowKey,\n            code: nextCol.code\n          }) : tableApi.setFocusedCell({\n            rowKey: rowKey,\n            code: nextCol.code\n          });\n        });\n      }\n    }\n    var _getTableConfigImmedi = getTableConfigImmediately(),\n      gridType = _getTableConfigImmedi.gridType;\n    var controlType = (0, _dataService.getGridTrackingType)({\n      type: type,\n      gridType: gridType\n    });\n    (0, _dataService.trackingOfValidateClick)({\n      pageId: pageId,\n      controlId: id,\n      controlType: controlType,\n      actionKey: e.target.dataset.arrow // 此处值为top/bottom\n    });\n  }, 100);\n  var realShow = show && ((_containerEleRef$curr = containerEleRef.current) === null || _containerEleRef$curr === void 0 ? void 0 : _containerEleRef$curr.querySelector('.kd-table'));\n  var _getPositionerOffset = getPositionerOffset(realShow, containerEleRef),\n    top = _getPositionerOffset.top,\n    bottom = _getPositionerOffset.bottom;\n  return realShow ? /*#__PURE__*/_reactDom[\"default\"].createPortal( /*#__PURE__*/_react[\"default\"].createElement(_BaseValidateControlArrow[\"default\"], {\n    arrow: arrow,\n    topStyle: {\n      top: top\n    },\n    bottomStyle: {\n      bottom: bottom\n    },\n    handleClick: handleClick\n  }), containerEleRef.current.querySelector('.kd-table')) : null;\n}\nfunction getRowIndex(ele) {\n  var point = ele;\n  var result;\n  while (point && !result) {\n    var _point, _point$getAttribute, _point2;\n    result = (_point = point) === null || _point === void 0 || (_point$getAttribute = (_point2 = _point).getAttribute) === null || _point$getAttribute === void 0 ? void 0 : _point$getAttribute.call(_point2, 'data-rowindex');\n    point = point.parentNode;\n  }\n  return result;\n}\nfunction getRowKeyRange(pageIndex, pageRows) {\n  return [(pageIndex - 1) * pageRows, pageIndex * pageRows];\n}\nfunction getPositionerOffset(show, containerEleRef) {\n  if (show) {\n    var _containerEleRef$curr2, _containerEleRef$curr3, _containerEleRef$curr4;\n    return {\n      top: ((_containerEleRef$curr2 = containerEleRef.current.querySelector('.kd-table .kd-table-header')) === null || _containerEleRef$curr2 === void 0 ? void 0 : _containerEleRef$curr2.offsetHeight) + DEFAULT_ICON_PADDING,\n      bottom: (((_containerEleRef$curr3 = containerEleRef.current.querySelector('.kd-table .kd-table-footer')) === null || _containerEleRef$curr3 === void 0 ? void 0 : _containerEleRef$curr3.offsetHeight) || 0) + (((_containerEleRef$curr4 = containerEleRef.current.querySelector('.kd-sticky-scroll')) === null || _containerEleRef$curr4 === void 0 ? void 0 : _containerEleRef$curr4.offsetHeight) || 0) + DEFAULT_ICON_PADDING\n    };\n  }\n  return {\n    top: 0,\n    bottom: 0\n  };\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/ValidateRowPositioner.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/ViewManager.js":
/*!***********************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/ViewManager.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = getViewManager;\n__webpack_require__(/*! core-js/modules/es.function.bind.js */ \"../../node_modules/core-js/modules/es.function.bind.js\");\n__webpack_require__(/*! core-js/modules/es.object.assign.js */ \"../../node_modules/core-js/modules/es.object.assign.js\");\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _ViewManager = _interopRequireDefault(__webpack_require__(/*! ../TableHelper/render/viewModel/ViewManager */ \"./src/component/web/DataGrid/TableHelper/render/viewModel/ViewManager.js\"));\nvar _columnToolMethods = _interopRequireDefault(__webpack_require__(/*! ./column/columnToolMethods */ \"./src/component/web/DataGrid/KDTable/column/columnToolMethods.js\"));\nvar _row = __webpack_require__(/*! ./utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nvar _visibility = __webpack_require__(/*! ../TableHelper/column/visibility */ \"./src/component/web/DataGrid/TableHelper/column/visibility.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction getViewManager(_ref) {\n  var readyed = _ref.readyed,\n    model = _ref.model,\n    parentModel = _ref.parentModel,\n    dispatch = _ref.dispatch,\n    getTableOptions = _ref.getTableOptions,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getInstance = _ref.getInstance,\n    activeView = _ref.activeView,\n    setActiveView = _ref.setActiveView,\n    tablePoster = _ref.tablePoster,\n    getTableApi = _ref.getTableApi;\n  if (!readyed) return null;\n  var colToolMethods = (0, _columnToolMethods[\"default\"])(model, parentModel, {\n    getTableOptions: getTableOptions,\n    getTableConfigImmediately: getTableConfigImmediately\n  });\n  var instance = getInstance();\n  var tableConfig = getTableConfigImmediately();\n  var getColPropertyByData = colToolMethods.getColPropertyByData,\n    getDataProperty = colToolMethods.getDataProperty,\n    getVisibleByViNumber = colToolMethods.getVisibleByViNumber;\n  var viewParams = tableConfig.viewParams,\n    id = tableConfig.id,\n    rowKey = tableConfig.rowKey,\n    seqKey = tableConfig.seqKey,\n    localeId = tableConfig.localeId,\n    defaultLocalId = tableConfig.defaultLocalId;\n  if (viewParams.length === 0) return null;\n  var getColProperty = function getColProperty(colId, propName) {\n    var path = [propName, colId];\n    return getColPropertyByData(path);\n  };\n\n  // 获取字段的可见性\n  var getFiledVisible = function getFiledVisible(colMeta) {\n    var _getColPropertyByData;\n    if (!colMeta) return false; // 列元数据找不到，直接隐藏\n\n    return !(0, _visibility.getColHidden)({\n      vi: colMeta.vi,\n      visible: colMeta.visible,\n      colId: colMeta.dataIndex,\n      parentColHide: false,\n      getVisibleByNum: getVisibleByViNumber,\n      visibleData: getColPropertyByData && ((_getColPropertyByData = getColPropertyByData(['colVisb'])) === null || _getColPropertyByData === void 0 ? void 0 : _getColPropertyByData.toJS())\n    });\n  };\n\n  // 获取字段的锁定性\n  var getFieldLocked = function getFieldLocked(colMeta, activeRowKey) {\n    if (!colMeta) return; // 列元数据找不到\n    var tableApi = getTableApi();\n    var colId = colMeta.dataIndex;\n    // false 为是否需要判断可编辑性\n    var isCellLocked = tableApi.isCellLock(colId, activeRowKey, false);\n    return isCellLocked;\n  };\n  var postRowSelection = function postRowSelection(rowKeyValue) {\n    tablePoster.send({\n      type: 'editorRowClick',\n      args: {\n        column: {},\n        rowKeyValue: rowKeyValue\n      }\n    });\n  };\n  var tieldViewToolMethods = {\n    getRowDatas: function getRowDatas() {\n      return instance.tableModel.getFlatRows();\n    },\n    getRow: function getRow(id) {\n      return instance.tableModel.getRow(id);\n    },\n    setSelectRows: function setSelectRows(selectedRows) {\n      return instance.controller.setSelectedRows(selectedRows);\n    },\n    getColProperty: getColProperty,\n    getDataProperty: getDataProperty,\n    getFiledVisible: getFiledVisible,\n    getFieldLocked: getFieldLocked,\n    postRowSelection: postRowSelection\n  };\n  var params = {\n    pid: model.pageId,\n    id: id,\n    gridId: id,\n    rowKey: rowKey,\n    seq: seqKey,\n    localeId: localeId,\n    defaultLocalId: defaultLocalId,\n    config: model.getFormConfig()\n  };\n  return /*#__PURE__*/_react[\"default\"].createElement(_ViewManager[\"default\"], _extends({\n    pageId: model.pageId,\n    id: id,\n    activeView: activeView,\n    setActiveView: setActiveView,\n    activeRowKey: (0, _row.getActiveRowKeyValue)({\n      getInstance: getInstance,\n      rowKeyName: rowKey\n    }),\n    viewParams: viewParams,\n    model: model,\n    params: params,\n    dispatch: dispatch\n  }, tieldViewToolMethods));\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/ViewManager.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/aggregate/Aggregate.js":
/*!*******************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/aggregate/Aggregate.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AggregateRowFoldIcon = AggregateRowFoldIcon;\nexports.StickyAggregate = StickyAggregate;\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.map.js */ \"../../node_modules/core-js/modules/es.map.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ \"webpack/sharing/consume/default/react-dom/react-dom?418d\"));\nvar _kdesign = __webpack_require__(/*! @kdcloudjs/kdesign */ \"webpack/sharing/consume/default/@kdcloudjs/kdesign/@kdcloudjs/kdesign\");\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"../../node_modules/classnames/index.js\"));\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _BaseTileAggregate = _interopRequireDefault(__webpack_require__(/*! ../../TableHelper/component/BaseTileAggregate */ \"./src/component/web/DataGrid/TableHelper/component/BaseTileAggregate.js\"));\nvar _array = __webpack_require__(/*! ../../TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _resizeObserve = _interopRequireDefault(__webpack_require__(/*! @/util/resizeObserve */ \"./src/util/resizeObserve.js\"));\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _index = _interopRequireDefault(__webpack_require__(/*! ./style/index.less */ \"./src/component/web/DataGrid/KDTable/aggregate/style/index.less\"));\nvar _index2 = __webpack_require__(/*! ./hooks/index */ \"./src/component/web/DataGrid/KDTable/aggregate/hooks/index.js\");\nvar _element = __webpack_require__(/*! ../utils/element */ \"./src/component/web/DataGrid/KDTable/utils/element.js\");\nvar _index3 = __webpack_require__(/*! ../data/index */ \"./src/component/web/DataGrid/KDTable/data/index.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar getDataCount = _index3.dataHelper.getDataCount,\n  getAggregateData = _index3.dataHelper.getAggregateData,\n  getCurrentPageRowsLength = _index3.dataHelper.getCurrentPageRowsLength;\nfunction FooterRowAggregateRowOverlay(_ref) {\n  var getTableOptions = _ref.getTableOptions,\n    getActionByKey = _ref.getActionByKey,\n    getInstance = _ref.getInstance,\n    containerEleRef = _ref.containerEleRef,\n    readyed = _ref.readyed,\n    getTableConfig = _ref.getTableConfig,\n    getInternalEventService = _ref.getInternalEventService;\n  var tableOptions = getTableOptions();\n  var tableConfig = getTableConfig();\n  var pageId = tableConfig.pageId,\n    id = tableConfig.id,\n    parentId = tableConfig.parentId,\n    gridType = tableConfig.gridType,\n    rowHeight = tableConfig.rowHeight;\n  var isCompoletedLoad = !!tableOptions.getAggregateChecked(); // 表格级别记录是否加载过合计数据\n\n  var instance = getInstance();\n  var invokeControlMethodSingle = getActionByKey('invokeControlMethodSingle');\n  var setAggregateChecked = (0, _react.useCallback)(function (checked) {\n    return tableOptions.setAggregateChecked(checked);\n  }, [tableOptions]);\n  var getAggregateChecked = (0, _react.useCallback)(function () {\n    return tableOptions.getAggregateChecked();\n  }, [tableOptions]);\n  var setAbleAutoGetAggData = (0, _react.useCallback)(function (checked) {\n    return tableOptions.setAbleAutoGetAggData(checked);\n  }, [tableOptions]);\n  var _useState = (0, _react.useState)(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    bottom = _useState2[0],\n    setBottom = _useState2[1];\n  var _useFooterRowData = (0, _index2.useFooterRowData)(getInternalEventService, instance.tableModel.getFooterRowData()),\n    _useFooterRowData2 = _slicedToArray(_useFooterRowData, 1),\n    footerRowData = _useFooterRowData2[0];\n\n  // 计算定位的位置，需要算上是否有横向滚动条\n  (0, _react.useEffect)(function () {\n    if (!readyed) {\n      return;\n    }\n    var horizontalScrollEle = containerEleRef.current.querySelector('.kd-horizontal-scroll-container .kd-sticky-scroll');\n    var setPosition = function setPosition(scrollEle) {\n      var _getTableConfig = getTableConfig(),\n        toolbarLocation = _getTableConfig.toolbarLocation,\n        hasNavgation = _getTableConfig.hasNavgation;\n      var offsetYOfToolbar = toolbarLocation === '1' && hasNavgation ? tableOptions.getMetaOptionsProperty('navigationDefaultHeight') || 32 : 0;\n      setBottom((scrollEle === null || scrollEle === void 0 ? void 0 : scrollEle.style.display) !== 'none' ? tableOptions.getScrollBarSize().height + offsetYOfToolbar : offsetYOfToolbar);\n    };\n    var horizontalScrollEleAttrChanged = function horizontalScrollEleAttrChanged(mutationsList) {\n      setPosition(mutationsList[0].target);\n    };\n    var mutationObserver = new window.MutationObserver(horizontalScrollEleAttrChanged);\n    if (horizontalScrollEle) {\n      setPosition(horizontalScrollEle);\n      mutationObserver.observe(horizontalScrollEle, {\n        attributes: true\n      });\n    }\n    return function () {\n      mutationObserver.disconnect();\n      horizontalScrollEle = null;\n    };\n  }, [readyed]);\n  return /*#__PURE__*/_react[\"default\"].createElement(BaseAggregateRowOverlay, {\n    style: {\n      bottom: bottom\n    },\n    isCompoletedLoad: isCompoletedLoad,\n    footerRowData: footerRowData,\n    pageId: pageId,\n    parentId: parentId,\n    id: id,\n    gridType: gridType,\n    rowHeight: rowHeight,\n    autoGetAggData: tableOptions.getAutoGetAggData(),\n    invokeControlMethodSingle: invokeControlMethodSingle,\n    getInternalEventService: getInternalEventService,\n    setAggregateChecked: setAggregateChecked,\n    getAggregateChecked: getAggregateChecked,\n    setAbleAutoGetAggData: setAbleAutoGetAggData\n  });\n}\nfunction BaseAggregateRowOverlay(_ref2) {\n  var style = _ref2.style,\n    isCompoletedLoad = _ref2.isCompoletedLoad,\n    footerRowData = _ref2.footerRowData,\n    pageId = _ref2.pageId,\n    parentId = _ref2.parentId,\n    id = _ref2.id,\n    gridType = _ref2.gridType,\n    rowHeight = _ref2.rowHeight,\n    getInternalEventService = _ref2.getInternalEventService,\n    autoGetAggData = _ref2.autoGetAggData,\n    invokeControlMethodSingle = _ref2.invokeControlMethodSingle,\n    setAggregateChecked = _ref2.setAggregateChecked,\n    getAggregateChecked = _ref2.getAggregateChecked,\n    setAbleAutoGetAggData = _ref2.setAbleAutoGetAggData;\n  var _useState3 = (0, _react.useState)(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = (0, _react.useState)(isCompoletedLoad),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isCompoleted = _useState6[0],\n    setCompoleted = _useState6[1];\n  var _useState7 = (0, _react.useState)(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var loaddingTimerId = (0, _react.useRef)(null);\n  var _useReducer = (0, _react.useReducer)(function (x) {\n      return x + 1;\n    }, 0),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    forceUpdate = _useReducer2[1]; // 强制刷新\n\n  var getAggregateRowData = function getAggregateRowData() {\n    if (invokeControlMethodSingle) {\n      setError(false);\n      (0, _memoryCacher.setPageData)(pageId, [parentId || id, 'invokeControlMethod', _const.GETSUMDATA], true);\n      // 只有列表才会启用异步合计请求回调监听\n      invokeControlMethodSingle({\n        pageId: pageId,\n        key: parentId || id\n      }, _const.GETSUMDATA, [], gridType === _const.GRID_TYPE.listViewGrid);\n      loaddingTimerId.current && clearTimeout(loaddingTimerId.current);\n      loaddingTimerId.current = setTimeout(function () {\n        setLoading(true);\n      }, 200);\n    }\n  };\n  var getSumDataCb = function getSumDataCb(data) {\n    var _ref3 = data || {},\n      success = _ref3.success;\n    loaddingTimerId.current && clearTimeout(loaddingTimerId.current);\n    setLoading(false);\n    if (success === false) {\n      setError(true);\n      setCompoleted(false);\n      setAggregateChecked(false); // 请求失败\n      return;\n    }\n    setAggregateChecked(true); // 请求成功,缓存\n    setAbleAutoGetAggData(true); // 设置允许自动合计 这个只有在自动合计被关闭之后有效\n    setCompoleted(true);\n  };\n\n  // 监听设置合计值的指令\n  (0, _react.useEffect)(function () {\n    var getSumDataListenHandle = (0, _memoryCacher.addDataChangeListener)(pageId, [parentId || id, _gridConst.SET_FLOAT_BUTTOM_DATA_DONE], getSumDataCb);\n    return function cleanup() {\n      getSumDataListenHandle && getSumDataListenHandle();\n    };\n  }, [pageId, parentId, id]);\n\n  // 计算合计开关开启时，响应任一地方触发了计算合计\n  (0, _react.useEffect)(function () {\n    function loaddingInInvokeGetSumData() {\n      if (getAggregateChecked()) {\n        loaddingTimerId.current && clearTimeout(loaddingTimerId.current);\n        setCompoleted(false);\n        setLoading(true);\n      }\n    }\n    var invokeGetSumDataHandler = (0, _memoryCacher.addDataChangeListener)(pageId, [parentId || id, 'invokeControlMethod', 'getSumData'], loaddingInInvokeGetSumData);\n    return function cleanup() {\n      invokeGetSumDataHandler();\n    };\n  }, [pageId, id, parentId]);\n  (0, _react.useEffect)(function () {\n    setCompoleted(isCompoletedLoad);\n  }, [isCompoletedLoad]);\n  var handleTotalStatusChanged = (0, _react.useCallback)(function () {\n    setAggregateChecked(false); // 需重新点击计算合计\n    setAbleAutoGetAggData(false); // 需重新点击计算合计\n    setCompoleted(false); // 计算合计按钮恢复\n    forceUpdate(); // 防止setCompoleted不会刷新\n  }, []);\n  // 后端设置恢复点击计算状态\n  (0, _index2.useTotalStatusChanged)(getInternalEventService, handleTotalStatusChanged);\n  if (autoGetAggData || isCompoleted || footerRowData == null || footerRowData.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _index[\"default\"]['agregate-row-overlay'],\n    style: _objectSpread({\n      height: rowHeight\n    }, style)\n  }, /*#__PURE__*/_react[\"default\"].createElement(_kdesign.Button, {\n    className: \"kd-cq-control kd-cq-btn\",\n    onClick: getAggregateRowData,\n    type: \"link\",\n    loading: loading,\n    bordered: false\n  }, !loading ? /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"theme-fc hover-theme-hover-fc\"\n  }, (0, _intlApi.getLangMsg)('grid.key0029')) : (0, _intlApi.getLangMsg)('grid.key0030')), error ? /*#__PURE__*/_react[\"default\"].createElement(\"span\", null, (0, _intlApi.getLangMsg)('grid.key0040')) : null);\n}\nvar ICON_HEIGHT = 18;\nfunction AggregateRowFoldIcon(_ref4) {\n  var isFoldFooterRows = _ref4.isFoldFooterRows,\n    onIconClick = _ref4.onIconClick,\n    containerEleRef = _ref4.containerEleRef,\n    getTableConfigImmediately = _ref4.getTableConfigImmediately;\n  var iconRef = (0, _react.useRef)(null);\n  var footerElement = (0, _element.getTableFooterElement)(containerEleRef);\n  var _getTableConfigImmedi = getTableConfigImmediately(),\n    rowHeight = _getTableConfigImmedi.rowHeight;\n  (0, _react.useEffect)(function () {\n    var _footerElement;\n    var footerElement = (0, _element.getTableFooterElement)(containerEleRef);\n    var handleScroll = function handleScroll(e) {\n      iconRef.current.style.top = e.currentTarget.scrollTop + _getTopDefaultDiff(rowHeight) + 'px';\n    };\n    (_footerElement = footerElement) === null || _footerElement === void 0 || _footerElement.addEventListener('scroll', handleScroll);\n    return function () {\n      var _footerElement2;\n      (_footerElement2 = footerElement) === null || _footerElement2 === void 0 || _footerElement2.removeEventListener('scroll', handleScroll);\n      footerElement = null;\n    };\n  }, [containerEleRef.current]);\n  (0, _react.useEffect)(function () {\n    if (isFoldFooterRows) {\n      var _footerElement3 = (0, _element.getTableFooterElement)(containerEleRef);\n      if (_footerElement3) {\n        _footerElement3.scrollTop = 0;\n      }\n    }\n  }, [isFoldFooterRows]);\n  var style = {\n    transform: !isFoldFooterRows ? 'rotate(90deg)' : undefined\n  };\n  return footerElement ? /*#__PURE__*/_reactDom[\"default\"].createPortal( /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _index[\"default\"]['agregate-row-fold-content'],\n    ref: iconRef,\n    style: {\n      top: _getTopDefaultDiff(rowHeight)\n    },\n    onClick: onIconClick\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"kdfont kdfont-right\",\n    style: style\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"span\", null, (0, _intlApi.getLangMsg)('grid.key0019'))), footerElement) : null;\n  function _getTopDefaultDiff() {\n    var rowHeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n    return (rowHeight - ICON_HEIGHT) / 2;\n  }\n}\nfunction StickyAggregate(_ref5) {\n  var getTableOptions = _ref5.getTableOptions,\n    getActionByKey = _ref5.getActionByKey,\n    getTableConfig = _ref5.getTableConfig,\n    getInternalEventService = _ref5.getInternalEventService,\n    model = _ref5.model,\n    parentModel = _ref5.parentModel;\n  var tableOptions = getTableOptions();\n  var tableConfig = getTableConfig();\n  var pageId = tableConfig.pageId,\n    id = tableConfig.id,\n    parentId = tableConfig.parentId,\n    gridType = tableConfig.gridType,\n    rowHeight = tableConfig.rowHeight;\n  var isCompoletedLoad = !!tableOptions.getAggregateChecked(); // 表格级别记录是否加载过合计数据\n\n  var invokeControlMethodSingle = getActionByKey('invokeControlMethodSingle');\n  var setAggregateChecked = (0, _react.useCallback)(function (checked) {\n    return tableOptions.setAggregateChecked(checked);\n  }, [tableOptions]);\n  var getAggregateChecked = (0, _react.useCallback)(function () {\n    return tableOptions.getAggregateChecked();\n  }, [tableOptions]);\n  var setAbleAutoGetAggData = (0, _react.useCallback)(function (checked) {\n    return tableOptions.setAbleAutoGetAggData(checked);\n  }, [tableOptions]);\n  var initFooterRowData = (0, _react.useMemo)(function () {\n    return getDataCount(model, parentModel) > 1 || getCurrentPageRowsLength(model, parentModel) > 1 ? getAggregateData(model, parentModel) : [];\n  });\n  var _useFooterRowData3 = (0, _index2.useFooterRowData)(getInternalEventService, initFooterRowData),\n    _useFooterRowData4 = _slicedToArray(_useFooterRowData3, 1),\n    footerRowData = _useFooterRowData4[0];\n  var dataIndex = tableOptions.getDataOptionsProperty('dataIndex');\n  var eleRef = (0, _react.useRef)(null);\n  (0, _react.useEffect)(function () {\n    var onContainerSizeChanged = function onContainerSizeChanged(rect) {\n      var height = rect.height;\n      var tableOption = getTableOptions();\n      if (height > 0 && tableOption.getStickyAggregateHeight() !== height) {\n        tableOption.setStickyAggregateHeight(height);\n        getInternalEventService().dispatchEvent({\n          type: _eventServiceName.KD_TABLE_EVENT_NAMES.stickyAggregateHeightChanged,\n          params: {\n            trigger: 'stickyAggregateHeightChanged'\n          }\n        });\n      }\n    };\n    var resizeObserveHandler = eleRef.current && (0, _resizeObserve[\"default\"])(eleRef.current, onContainerSizeChanged);\n    return function () {\n      var _resizeObserveHandler;\n      (_resizeObserveHandler = resizeObserveHandler) === null || _resizeObserveHandler === void 0 || _resizeObserveHandler.removeResizeObserve();\n      resizeObserveHandler = null;\n    };\n  }, [eleRef.current]);\n  if (footerRowData == null || footerRowData.length === 0) {\n    return null;\n  }\n  var getColumnMap = function getColumnMap() {\n    var map = new Map();\n    (0, _array.iterateColumns)(tableConfig.getColumns(), function (col) {\n      map.set(col.code, col);\n    });\n    return map;\n  };\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: (0, _classnames[\"default\"])(_index[\"default\"]['tile-aggregate'], 'kd-cq-table-sticky-aggregate'),\n    style: {\n      minHeight: rowHeight\n    },\n    ref: eleRef\n  }, /*#__PURE__*/_react[\"default\"].createElement(_BaseTileAggregate[\"default\"], {\n    dataSource: footerRowData,\n    dataIndex: dataIndex,\n    seqName: tableConfig.seqKey,\n    getColumnMap: getColumnMap\n  }), tableOptions.getShowAggregateRowOverlay() ? /*#__PURE__*/_react[\"default\"].createElement(BaseAggregateRowOverlay, {\n    isCompoletedLoad: isCompoletedLoad,\n    footerRowData: footerRowData,\n    pageId: pageId,\n    parentId: parentId,\n    id: id,\n    gridType: gridType,\n    rowHeight: rowHeight,\n    autoGetAggData: tableOptions.getAutoGetAggData(),\n    invokeControlMethodSingle: invokeControlMethodSingle,\n    getInternalEventService: getInternalEventService,\n    setAggregateChecked: setAggregateChecked,\n    getAggregateChecked: getAggregateChecked,\n    setAbleAutoGetAggData: setAbleAutoGetAggData,\n    style: {\n      height: '100%'\n    }\n  }) : null);\n}\nvar _default = exports[\"default\"] = FooterRowAggregateRowOverlay;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/aggregate/Aggregate.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/aggregate/getAggregateData.js":
/*!**************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/aggregate/getAggregateData.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getAggregateData = void 0;\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"../../node_modules/core-js/modules/es.array.reduce.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.number.to-fixed.js */ \"../../node_modules/core-js/modules/es.number.to-fixed.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.parse-float.js */ \"../../node_modules/core-js/modules/es.parse-float.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _big = _interopRequireDefault(__webpack_require__(/*! big.js */ \"../../node_modules/big.js/big.js\"));\nvar _lodash = _interopRequireDefault(__webpack_require__(/*! lodash */ \"../../node_modules/lodash/lodash.js\"));\nvar _serverproperties = __webpack_require__(/*! @/constant/serverproperties */ \"./src/constant/serverproperties.js\");\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nvar _index = __webpack_require__(/*! ../data/index */ \"./src/component/web/DataGrid/KDTable/data/index.js\");\nvar _row = __webpack_require__(/*! ../utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar getStoreAggregateData = _index.dataHelper.getAggregateData;\nvar getAggregateData = exports.getAggregateData = function getAggregateData(_ref) {\n  var model = _ref.model,\n    parentModel = _ref.parentModel,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    tableOptions = _ref.tableOptions,\n    dataSource = _ref.dataSource;\n  var tableConfig = getTableConfigImmediately();\n  var gridType = tableConfig.gridType,\n    seqKey = tableConfig.seqKey;\n  var storeAggregateData = getStoreAggregateData(model, parentModel);\n\n  // gridType为空时表示单据体,需要前端合计\n  if (!gridType) {\n    if (!(0, _row.hadFooterRowData)({\n      aggregateColumns: tableOptions.getAggregateColumns(),\n      gridType: gridType\n    })) {\n      return [];\n    }\n    var flatDataSource = flat(dataSource || []);\n    var clientAggregateData = getClientAggregateData(flatDataSource, tableOptions.getAggregateColumns());\n    return [_objectSpread(_objectSpread(_objectSpread({}, clientAggregateData), storeAggregateData[0] || {}), {}, _defineProperty(_defineProperty({}, seqKey, (0, _intlApi.getLangMsg)('grid.key0019')), \"$AGG$\", true))];\n  }\n  return storeAggregateData;\n};\nvar getClientAggregateData = function getClientAggregateData(dataSource, aggregateColumns) {\n  var data = {};\n  var dataSourceSize = dataSource.length;\n  aggregateColumns.forEach(function (aggregateColumn) {\n    var key = aggregateColumn.key,\n      editor = aggregateColumn.editor;\n    var colResult = '';\n    var colNaNValCount = 0;\n    dataSource.forEach(function (rowData, i) {\n      var v;\n      var temporaryVal = parseFloat(rowData[key]); // 因为big不支持isNaN,这里临时用js方法判断\n      if (isNaN(temporaryVal)) {\n        // 合计、最大值、最小值、平均值为空(是NaN)的数据不参与运算(后端需求确定)\n        v = (0, _big[\"default\"])(0);\n        if (!['avg', 'count'].includes(aggregateColumn.aggType)) {\n          return;\n        }\n        if (aggregateColumn.aggType === 'avg') {\n          // 平均数需要记录空值的行\n          colNaNValCount += 1;\n        }\n      } else {\n        v = (0, _big[\"default\"])(rowData[key]);\n      }\n      switch (aggregateColumn.aggType) {\n        case 'sum':\n          {\n            // 空行不参与合计, 为0的情况只有‘为0显示’时才会参与合计（步进器的为0显示一直为true）\n            var zeroShow = (editor === null || editor === void 0 ? void 0 : editor[_serverproperties.ZERO_SHOW]) || aggregateColumn.type === _serverproperties.Ctrls.KDStepper;\n            if (!v.eq((0, _big[\"default\"])(0)) || !isNaN(temporaryVal) && v.eq((0, _big[\"default\"])(0)) && zeroShow) {\n              colResult = v.plus((0, _big[\"default\"])(colResult || 0));\n            }\n            break;\n          }\n        case 'min':\n          colResult = colResult === '' ? v : getMin(v, colResult);\n          break;\n        case 'max':\n          colResult = colResult === '' ? v : getMax(v, colResult);\n          break;\n        case 'avg':\n          {\n            colResult = v.plus((0, _big[\"default\"])(colResult || 0));\n            // TODO:平均值现在走前端计算是保留两位小数，后面业务可能会修改\n            // 仅计算存在值的行\n            var numberValRowCount = dataSourceSize - colNaNValCount;\n            if (i === dataSourceSize - 1 && numberValRowCount !== 0) {\n              var sc = (editor === null || editor === void 0 ? void 0 : editor[_serverproperties.SCALE]) || 2;\n              colResult = colResult.div(numberValRowCount).toFixed(sc);\n            }\n            break;\n          }\n        case 'count':\n          colResult = dataSourceSize;\n          break;\n      }\n    });\n    data[key] = _lodash[\"default\"].isString(colResult) ? colResult : colResult.toFixed();\n  });\n  return data;\n};\nvar getMin = function getMin(v1, v2) {\n  return v1.lt(v2) ? v1 : v2;\n};\nvar getMax = function getMax(v1, v2) {\n  return v1.gt(v2) ? v1 : v2;\n};\nvar flat = function flat(arr) {\n  return arr.reduce(function (flatArr, item) {\n    flatArr.push(item);\n    var children = item.children;\n    if (children) {\n      return flatArr.concat(flat(children));\n    }\n    return flatArr;\n  }, []);\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/aggregate/getAggregateData.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/aggregate/hooks/index.js":
/*!*********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/aggregate/hooks/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"useFooterRowData\", ({\n  enumerable: true,\n  get: function get() {\n    return _useFooterRowData.useFooterRowData;\n  }\n}));\nObject.defineProperty(exports, \"useTotalStatusChanged\", ({\n  enumerable: true,\n  get: function get() {\n    return _useTotalStatusChanged.useTotalStatusChanged;\n  }\n}));\nvar _useFooterRowData = __webpack_require__(/*! ./useFooterRowData */ \"./src/component/web/DataGrid/KDTable/aggregate/hooks/useFooterRowData.js\");\nvar _useTotalStatusChanged = __webpack_require__(/*! ./useTotalStatusChanged */ \"./src/component/web/DataGrid/KDTable/aggregate/hooks/useTotalStatusChanged.js\");\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/aggregate/hooks/index.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/aggregate/hooks/useFooterRowData.js":
/*!********************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/aggregate/hooks/useFooterRowData.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useFooterRowData = useFooterRowData;\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; } /*\n * @Author: wqhui\n * @Date: 2023-08-09 14:37:45\n * @Description:\n */\nfunction useFooterRowData(getInternalEventService, initFooterRowData) {\n  var _useState = (0, _react.useState)(initFooterRowData),\n    _useState2 = _slicedToArray(_useState, 2),\n    footerRowData = _useState2[0],\n    setFooterRowData = _useState2[1];\n  (0, _react.useEffect)(function () {\n    var handledFooterRowDataChanged = function handledFooterRowDataChanged(_ref) {\n      var params = _ref.params;\n      var footerRowData = params.footerRowData;\n      setFooterRowData(footerRowData);\n    };\n    var internalEventService = getInternalEventService();\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.footerRowDataChanged, handledFooterRowDataChanged);\n    return function () {\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.footerRowDataChanged, handledFooterRowDataChanged);\n    };\n  }, []);\n  return [footerRowData, setFooterRowData];\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/aggregate/hooks/useFooterRowData.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/aggregate/hooks/useTotalStatusChanged.js":
/*!*************************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/aggregate/hooks/useTotalStatusChanged.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useTotalStatusChanged = useTotalStatusChanged;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\n/*\n * @Author: wqhui\n * @Date: 2023-09-01 10:01:47\n * @Description:\n */\n\nfunction useTotalStatusChanged(getInternalEventService, handleTotalStatusChanged) {\n  (0, _react.useEffect)(function () {\n    var internalEventService = getInternalEventService();\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.totalStatusChanged, handleTotalStatusChanged);\n    return function () {\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.totalStatusChanged, handleTotalStatusChanged);\n    };\n  }, [handleTotalStatusChanged]);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/aggregate/hooks/useTotalStatusChanged.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/aggregate/index.js":
/*!***************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/aggregate/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"useFooterAggregate\", ({\n  enumerable: true,\n  get: function get() {\n    return _useAggregate.useFooterAggregate;\n  }\n}));\nvar _useAggregate = __webpack_require__(/*! ./useAggregate */ \"./src/component/web/DataGrid/KDTable/aggregate/useAggregate.js\");\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/aggregate/index.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/aggregate/useAggregate.js":
/*!**********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/aggregate/useAggregate.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useFooterAggregate = useFooterAggregate;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _index = __webpack_require__(/*! ../data/index */ \"./src/component/web/DataGrid/KDTable/data/index.js\");\nvar getEnableGetSumdata = _index.dataHelper.getEnableGetSumdata,\n  getAggregateData = _index.dataHelper.getAggregateData;\nfunction useFooterAggregate(_ref) {\n  var this$ = _ref.this$,\n    model = _ref.model,\n    parentModel = _ref.parentModel,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getTableOptions = _ref.getTableOptions,\n    getInstance = _ref.getInstance,\n    getActionByKey = _ref.getActionByKey,\n    getInternalEventService = _ref.getInternalEventService;\n  // 列表合计\n  (0, _react.useEffect)(function () {\n    if (!parentModel) {\n      return;\n    }\n    var pageId = parentModel.pageId,\n      key = parentModel.key;\n    var getSumData = function getSumData() {\n      var tableOptions = getTableOptions();\n      if (getEnableGetSumdata(this$.current.model, this$.current.parentModel)) {\n        var _getAggregateData;\n        var aggregateDataLength = (_getAggregateData = getAggregateData(this$.current.model, this$.current.parentModel)) === null || _getAggregateData === void 0 ? void 0 : _getAggregateData.length;\n        var needInvokeByAutoGetAggData = tableOptions.getAutoGetAggData() && aggregateDataLength > 0;\n\n        // 1. 前端合计按钮开启 2.后端设置自动请求合计\n        if (tableOptions.getAggregateChecked() || needInvokeByAutoGetAggData) {\n          invokeControlMethodOfGetSumData(pageId, key, getActionByKey);\n        }\n      }\n    };\n    // 防止初始情况下设置过参数，但是还未监参数变化情况\n    var hasGetRealCount = (0, _memoryCacher.getPageData)(pageId, [key, _const.SERVERCBLISTENER, 'getRealCount']);\n    var isGetSumData = (0, _memoryCacher.getPageData)(pageId, [key, 'getSumData']);\n    if (hasGetRealCount || isGetSumData) {\n      getSumData();\n    }\n    var handleResetTotalStatus = function handleResetTotalStatus(data) {\n      getInternalEventService().dispatchEvent({\n        type: _eventServiceName.KD_TABLE_EVENT_NAMES.totalStatusChanged,\n        params: {\n          data: data\n        }\n      });\n    };\n\n    // 异步请求真实条数，在请求真实条数之后发送合计请求。 （后端要求：合计请求需在条数请求之后发送，此处监听条数请求的返回指令）\n    var getSumDataHandle = (0, _memoryCacher.addDataChangeListener)(pageId, [key, _const.SERVERCBLISTENER, 'getRealCount'], getSumData);\n    // 不存在异步请求真实条数，直接发送合计请求。\n    var getSumDataWithoutRealCountHandle = (0, _memoryCacher.addDataChangeListener)(pageId, [key, 'getSumData'], getSumData);\n    var removeTotalStateHandler = (0, _memoryCacher.addDataChangeListener)(pageId, [key, _gridConst.RESET_TOTAL_STATUS_DATA], handleResetTotalStatus);\n    return function () {\n      getSumDataHandle && getSumDataHandle();\n      getSumDataWithoutRealCountHandle && getSumDataWithoutRealCountHandle();\n      removeTotalStateHandler === null || removeTotalStateHandler === void 0 || removeTotalStateHandler();\n    };\n  }, []);\n\n  // 报表合计\n  (0, _react.useEffect)(function () {\n    var tableConfig = getTableConfigImmediately();\n    if (tableConfig.gridType === _const.GRID_TYPE.virtualViewGrid) {\n      if (getTableOptions().getAggregateChecked() && getTableOptions().getShowAggregateRowOverlay()) {\n        invokeControlMethodOfGetSumData(tableConfig.pageId, tableConfig.id, getActionByKey);\n      }\n    }\n  }, [model.getDataProperty(['value', 'queryId'])]);\n}\nfunction invokeControlMethodOfGetSumData(pageId, id, getActionByKey) {\n  var invokeControlMethodSingle = getActionByKey('invokeControlMethodSingle');\n  if (invokeControlMethodSingle) {\n    (0, _memoryCacher.setPageData)(pageId, [id, 'invokeControlMethod', _const.GETSUMDATA], true);\n    invokeControlMethodSingle({\n      pageId: pageId,\n      key: id\n    }, _const.GETSUMDATA, [], true);\n  }\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/aggregate/useAggregate.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/data/index.js":
/*!**********************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/data/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.dataHelper = void 0;\nvar dataHelper = _interopRequireWildcard(__webpack_require__(/*! ./dataHelper */ \"./src/component/web/DataGrid/KDTable/data/dataHelper.js\"));\nexports.dataHelper = dataHelper;\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/data/index.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/directive/directiveCallbacks.js":
/*!****************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/directive/directiveCallbacks.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.find-index.js */ \"../../node_modules/core-js/modules/es.array.find-index.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"../../node_modules/core-js/modules/es.array.reduce.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _index = __webpack_require__(/*! ../data/index */ \"./src/component/web/DataGrid/KDTable/data/index.js\");\nvar _gridInfo2 = __webpack_require__(/*! ./gridInfo */ \"./src/component/web/DataGrid/KDTable/directive/gridInfo.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar getRows = _index.dataHelper.getRows;\nvar DIRECTIVES_CALLBACKS = {};\nfunction addDirectiveCallbacks(key, callback) {\n  DIRECTIVES_CALLBACKS[key] = callback;\n}\nvar setSubTableData = function setSubTableData(controller, extraParams) {\n  return function (tableData) {\n    var seqKey = extraParams.seqKey,\n      getTableConfigImmediately = extraParams.getTableConfigImmediately;\n    var pkId = tableData.pkId;\n    var rows = getRows(tableData, {\n      getTableConfigImmediately: getTableConfigImmediately\n    });\n    controller.setSubTableData({\n      rows: rows,\n      pkId: pkId\n    });\n  };\n};\n/**\n * 后端设置列表的过滤条件, 目前只有单个\n * @param {*} filter {\"colId\":\"dpt_name\",\"value\":{\"filter\":[\"3\"],\"type\":[\"59\"]}}\n * @return {*} [{code:'number',filter:[111],filterCondition:'lessthen'}]\n */\nvar setFilters = function setFilters(controller, extraParams) {\n  return function (filter) {\n    if (!filter) {\n      return;\n    }\n    var getTableConfigImmediately = extraParams.getTableConfigImmediately,\n      getActionByKey = extraParams.getActionByKey;\n    var filters = controller.getFilters() || [];\n    var colId = filter.colId,\n      value = filter.value;\n    var _filter = value.filter,\n      type = value.type;\n    var index = filters.findIndex(function (item) {\n      return item.code === colId;\n    });\n    var currentFilter = {\n      code: filter.colId,\n      filter: _filter,\n      filterCondition: type[0]\n    };\n    if (index >= 0) {\n      filters[index] = currentFilter;\n    } else {\n      filters.push(currentFilter);\n    }\n\n    // 发送指令\n    var config = getTableConfigImmediately();\n    var pageId = config.pageId,\n      id = config.id,\n      parentId = config.parentId;\n    var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n    invokeControlMethodOnly && invokeControlMethodOnly({\n      pageId: pageId,\n      key: parentId || id\n    }, 'getGridDataByFilter', [[{\n      FieldName: [currentFilter.code],\n      Value: currentFilter.filter || [],\n      Compare: [currentFilter.filterCondition]\n    }]]);\n\n    // 更新基础表格状态\n    controller.setFilters(filters);\n  };\n};\nvar setSorts = function setSorts(controller, extraParams) {\n  return function (sort) {\n    if (_typeof(sort) !== 'object') {\n      sort = {};\n    }\n    var currentSort = Object.keys(sort).reduce(function (sortObj, key) {\n      var sortValue = sort[key];\n      var order = _const.SORT_ORDER[sortValue];\n      sortObj.code = key;\n      sortObj.order = order;\n      return sortObj;\n    }, {});\n    var sorts = [];\n    if (currentSort.order) {\n      sorts.push(currentSort);\n    }\n    // 更新基础表格状态\n    controller.setSorts(sorts);\n  };\n};\nvar getGridInfo = function getGridInfo(controller, extraParams) {\n  return function (types) {\n    var api = controller.viewer.api;\n    var getTableConfigImmediately = extraParams.getTableConfigImmediately,\n      tablePoster = extraParams.tablePoster;\n    var config = getTableConfigImmediately();\n    var gridInfoTypes = _toConsumableArray(types);\n    if (gridInfoTypes.length === 0) {\n      // 默认获取所有信息\n      gridInfoTypes = [_const.GRID_IFNO_TYPE.cw, _const.GRID_IFNO_TYPE.cwg, _const.GRID_IFNO_TYPE.cv, _const.GRID_IFNO_TYPE.cs, _const.GRID_IFNO_TYPE.ca];\n    }\n    var gridInfo = _defineProperty({}, config.modelKey, gridInfoTypes.reduce(function (gridInfo, type) {\n      gridInfo[type] = (0, _gridInfo2.getGridInfoByType)(config, api, type);\n      return gridInfo;\n    }, {}));\n    tablePoster.send({\n      type: 'postGridInfo',\n      args: {\n        gridInfo: gridInfo\n      }\n    });\n  };\n};\nvar resetFilter = function resetFilter(controller, extraParams) {\n  return function () {\n    var filterData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    if (filterData.length === 0) {\n      // 仅重置\n      controller.setFilters([]);\n    } else {\n      // 重设状态\n      var _filterData = _slicedToArray(filterData, 1),\n        filters = _filterData[0];\n      controller.setFilters(filters.map(function (_ref) {\n        var cp = _ref.cp,\n          k = _ref.k,\n          v = _ref.v;\n        return {\n          code: k,\n          filter: v,\n          filterCondition: cp === null || cp === void 0 ? void 0 : cp[0]\n        };\n      }));\n    }\n  };\n};\naddDirectiveCallbacks(_const.DIRECTIVES.setSubTableData, setSubTableData);\naddDirectiveCallbacks(_const.DIRECTIVES.setFilters, setFilters);\naddDirectiveCallbacks(_const.DIRECTIVES.setSorts, setSorts);\naddDirectiveCallbacks(_const.DIRECTIVES.getGridInfo, getGridInfo);\naddDirectiveCallbacks(_const.DIRECTIVES.resetFilter, resetFilter);\nvar _default = exports[\"default\"] = DIRECTIVES_CALLBACKS;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/directive/directiveCallbacks.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/directive/gridInfo.js":
/*!******************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/directive/gridInfo.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getGridInfoByType = void 0;\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"../../node_modules/core-js/modules/es.array.reduce.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _columns = __webpack_require__(/*! ../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _array = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar getGridInfoByType = exports.getGridInfoByType = function getGridInfoByType(tableConfig, api, type) {\n  var columns = tableConfig.columns;\n  var columnSize = api.getColumnWidth();\n  switch (type) {\n    case _const.GRID_IFNO_TYPE.cw:\n      // 列宽\n      return getColumnWidth(columns, columnSize);\n    case _const.GRID_IFNO_TYPE.cwg:\n      return getColumnWidthWithGroup(columns, columnSize);\n    case _const.GRID_IFNO_TYPE.cv:\n      // 列显示/隐藏\n      return getColumnVisible(columns);\n    case _const.GRID_IFNO_TYPE.cs:\n      // 列顺序\n      return getColumnSequence(columns, api);\n    case _const.GRID_IFNO_TYPE.ca:\n      // 列对齐方式\n      return getColumnAlign(columns);\n    default:\n      {}\n  }\n};\nvar getColumnWidth = function getColumnWidth(columns, columnSize) {\n  return columns.reduce(function (columnWidth, column) {\n    var _columnSize$originCod;\n    var code = column.code,\n      width = column.width,\n      hide = column.hide;\n    var originCode = (0, _columns.getOriginColumnCode)(code);\n    var acturalWidth = (_columnSize$originCod = columnSize[originCode]) !== null && _columnSize$originCod !== void 0 ? _columnSize$originCod : width;\n    if (originCode && acturalWidth && !hide) {\n      columnWidth[originCode] = acturalWidth;\n    }\n    return columnWidth;\n  }, {});\n};\nvar getColumnWidthWithGroup = function getColumnWidthWithGroup(columns, columnSize) {\n  return columns.reduce(function (columnWidth, column) {\n    var _columnSize$originCod2;\n    var code = column.code,\n      width = column.width,\n      hide = column.hide,\n      name = column.name,\n      children = column.children;\n    var originCode = (0, _columns.getOriginColumnCode)(code);\n    var acturalWidth = (_columnSize$originCod2 = columnSize[originCode]) !== null && _columnSize$originCod2 !== void 0 ? _columnSize$originCod2 : width;\n    if (originCode && acturalWidth && !hide) {\n      var columnWidthItem = {\n        name: name,\n        colId: originCode,\n        width: acturalWidth\n      };\n      if (children) {\n        columnWidthItem.children = getColumnWidthWithGroup(children, columnSize);\n      }\n      columnWidth.push(columnWidthItem);\n    }\n    return columnWidth;\n  }, []);\n};\nvar getColumnVisible = function getColumnVisible(columns) {\n  return columns.reduce(function (columnVisible, column) {\n    var code = column.code,\n      hide = column.hide;\n    var originCode = (0, _columns.getOriginColumnCode)(code);\n    if (originCode) {\n      columnVisible[originCode] = !hide;\n    }\n    return columnVisible;\n  }, {});\n};\nvar getColumnSequence = function getColumnSequence(columns, api) {\n  // 如果存在拖拽后的顺序，直接取拖拽后的顺序\n  var columnSeqAfterDrag = api.getColumnSeq();\n  if (columnSeqAfterDrag) {\n    var displayFlatColumns = (0, _array.flatColumns)(columnSeqAfterDrag);\n    return displayFlatColumns.map(function (_ref) {\n      var k = _ref.k,\n        w = _ref.w;\n      return (0, _columns.getOriginColumnCode)(k);\n    });\n  }\n  var displayColumns = (0, _array.flatColumns)(columns);\n  return displayColumns.filter(function (column) {\n    var code = column.code,\n      hide = column.hide;\n    return !!code && !hide;\n  }).map(function (_ref2) {\n    var code = _ref2.code;\n    return (0, _columns.getOriginColumnCode)(code);\n  });\n};\nvar getColumnAlign = function getColumnAlign(columns) {\n  return columns.reduce(function (columnAlign, column) {\n    var code = column.code,\n      align = column.align;\n    var originCode = (0, _columns.getOriginColumnCode)(code);\n    if (originCode) {\n      columnAlign[originCode] = align;\n    }\n    return columnAlign;\n  }, {});\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/directive/gridInfo.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/directive/index.js":
/*!***************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/directive/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _console = _interopRequireDefault(__webpack_require__(/*! @/api/console */ \"./src/api/console.js\"));\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _directiveCallbacks = _interopRequireDefault(__webpack_require__(/*! ./directiveCallbacks */ \"./src/component/web/DataGrid/KDTable/directive/directiveCallbacks.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/*\n * @Author: wqhui\n * @Date: 2021-08-09 10:35:27\n * @Description: 统一处理指令的回调，__listener__用来存储指令的相关信息（method和path,后者是该方法存储数据的路径），以及触发监听\n */\n\nfunction useHandleDirective(params) {\n  (0, _react.useEffect)(function () {\n    var getTableConfigImmediately = params.getTableConfigImmediately,\n      getInstance = params.getInstance,\n      getActionByKey = params.getActionByKey,\n      tablePoster = params.tablePoster;\n    var instance = getInstance();\n    var tableConfig = getTableConfigImmediately();\n    var pageId = tableConfig.pageId,\n      id = tableConfig.id,\n      parentId = tableConfig.parentId,\n      seqKey = tableConfig.seqKey;\n    var extraParams = {\n      seqKey: seqKey,\n      getTableConfigImmediately: getTableConfigImmediately,\n      getActionByKey: getActionByKey,\n      tablePoster: tablePoster\n    };\n    var handleDirective = function handleDirective(params) {\n      var path = params.path,\n        method = params.method;\n      if (_directiveCallbacks[\"default\"][method]) {\n        _directiveCallbacks[\"default\"][method](instance.controller, extraParams)((0, _memoryCacher.getPageData)(pageId, path));\n        return;\n      }\n      _console[\"default\"].warn(\"KDTable\\u672A\\u627E\\u5230\\u6307\\u4EE4[\".concat(method, \"]\\u7684\\u5904\\u7406\\u51FD\\u6570\"));\n    };\n    handleDirectiveWhenInit({\n      getTableConfigImmediately: getTableConfigImmediately,\n      getInstance: getInstance,\n      extraParams: extraParams\n    });\n    var tableDiretiveListenerRemover = (0, _memoryCacher.addDataChangeListener)(pageId, [parentId || id, _const.DIRECTIVES.__listener__], handleDirective);\n    return function () {\n      tableDiretiveListenerRemover();\n    };\n  }, []);\n}\n\n// todo: 增加对应存储的对应地址，方便初始化的时候进行调用指令处理函数\nfunction handleDirectiveWhenInit(_ref) {\n  var getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getInstance = _ref.getInstance,\n    extraParams = _ref.extraParams;\n  var tableConfig = getTableConfigImmediately();\n  var pageId = tableConfig.pageId,\n    id = tableConfig.id,\n    parentId = tableConfig.parentId,\n    gridType = tableConfig.gridType;\n  var instance = getInstance();\n\n  // 过滤 列表使用 会发送指令到后端\n  var filters = (0, _memoryCacher.getPageData)(pageId, [parentId || id, 'setGridFilter']);\n  if (filters) {\n    _directiveCallbacks[\"default\"].setFilters(instance.controller, extraParams)(filters);\n  }\n\n  // 过滤 仅设置过滤图标和数据\n  var resetFilterData = (0, _memoryCacher.getPageData)(pageId, [parentId || id, _gridConst.RESET_FILTER_DATA]);\n  if (resetFilterData) {\n    _directiveCallbacks[\"default\"].resetFilter(instance.controller, extraParams)(resetFilterData);\n  }\n  if (gridType === _const.GRID_TYPE.entryGrid || gridType === _const.GRID_TYPE.virtualViewGrid) {\n    // 排序 仅设置排序图标和数据\n    var sortData = (0, _memoryCacher.getPageData)(pageId, [parentId || id, _gridConst.GRID_SORTED_DATA]);\n    if (sortData) {\n      _directiveCallbacks[\"default\"].setSorts(instance.controller, extraParams)(sortData);\n    }\n  }\n}\nvar _default = exports[\"default\"] = useHandleDirective;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/directive/index.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/columnMove.js":
/*!*******************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/columnMove.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.handleColumnDragStart = exports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nvar _dataService = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/dataService.js */ \"./src/component/web/DataGrid/TableHelper/util/dataService.js\");\nvar _trackingExtendCtrlProps = __webpack_require__(/*! @/constant/trackingExtendCtrlProps */ \"./src/constant/trackingExtendCtrlProps.js\");\nvar _columns = __webpack_require__(/*! ../../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _merge = __webpack_require__(/*! ../../utils/merge */ \"./src/component/web/DataGrid/KDTable/utils/merge.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar handleColumnMoved = exports[\"default\"] = function handleColumnMoved(params) {\n  return function (eventParams) {\n    var parentModel = params.parentModel,\n      model = params.model,\n      getActionByKey = params.getActionByKey,\n      getTableConfigImmediately = params.getTableConfigImmediately,\n      getTableOptions = params.getTableOptions,\n      getMergeModel = params.getMergeModel,\n      getInternalEventService = params.getInternalEventService;\n    var useModel = parentModel || model;\n    var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n    var tableConfig = getTableConfigImmediately();\n    var tableOptions = getTableOptions();\n    var internalEventService = getInternalEventService();\n    // 拖拽结束\n    tableOptions.setColumnDraging(false);\n    var _eventParams$args = eventParams.args,\n      columnSeq = _eventParams$args.columnSeq,\n      columnMoved = _eventParams$args.columnMoved;\n\n    // 列没有移动不需要处理\n    if (!columnMoved) return;\n    var hadRepeatedColumnCode = tableOptions.getHadRepeatedColumnCode();\n    if (hadRepeatedColumnCode) {\n      tarckingOfRepeatedColumnDrag(tableConfig);\n      // showSameColumnCodeTips(tableConfig.pageId)\n      // return\n    }\n    var tableColumns = tableConfig.getColumns().filter(function (col) {\n      return !col.hide;\n    });\n    // 每一列所在的位置\n    var columnSort = {};\n    var originColumnSeq = [];\n    columnSeq.forEach(function (item, index) {\n      var code = item.k;\n      columnSort[code] = index;\n      var originItem = {\n        k: (0, _columns.getOriginColumnCode)(code),\n        w: item.w\n      };\n      originColumnSeq.push(originItem);\n    });\n    var columns = sortColumns(tableColumns, columnSort);\n    tableConfig.setColumns(columns);\n    internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.afterColumnMove\n    });\n    // 更新mergeModel\n    var mergeModel = getMergeModel();\n    mergeModel.updateBorderCols(columns, model.getMetaProperty('columns') || (0, _immutable.List)(), tableConfig.seqKey);\n\n    // 更新显示右边框线的列,适用于报表融合的场景\n    (0, _merge.setRightBorderCols)({\n      columns: columns,\n      getTableOptions: getTableOptions\n    });\n    if (tableOptions.getGridType() === _const.GRID_TYPE.virtualViewGrid || tableOptions.getGridType() === _const.GRID_TYPE.listViewGrid || tableOptions.getGridType() === _const.GRID_TYPE.entryGrid && tableConfig.hasTableConfigOperation) {\n      invokeControlMethodOnly && invokeControlMethodOnly(useModel, 'postColsInfo', [tableOptions.getGridType() === _const.GRID_TYPE.entryGrid ? originColumnSeq.filter(function (item) {\n        return item.k !== tableConfig.seqKey;\n      }) : originColumnSeq]);\n    }\n  };\n};\nfunction sortColumns(columns, sort) {\n  var res = new Array(columns.length);\n  columns.forEach(function (col) {\n    res[sort[col.code]] = col;\n  });\n  return res;\n}\nfunction tarckingOfRepeatedColumnDrag(tableConfig) {\n  var pageId = tableConfig.pageId,\n    id = tableConfig.id,\n    parentId = tableConfig.parentId,\n    type = tableConfig.type,\n    gridType = tableConfig.gridType,\n    modelKey = tableConfig.modelKey;\n  var controlProp = _trackingExtendCtrlProps.trackingExtendCtrlProps.GRID_WITH_REPEATED_COLUMN_DRAG;\n  var controlValue = true;\n  var controlType = (0, _dataService.getGridTrackingType)({\n    type: type,\n    gridType: gridType\n  });\n  (0, _dataService.trackingOfGridProps)({\n    pageId: pageId,\n    controlId: parentId || modelKey,\n    controlType: controlType,\n    controlProp: controlProp,\n    controlValue: controlValue\n  });\n}\nvar handleColumnDragStart = exports.handleColumnDragStart = function handleColumnDragStart(params) {\n  return function (eventParams) {\n    var getTableOptions = params.getTableOptions;\n    var tableOptions = getTableOptions();\n    tableOptions.setColumnDraging(true);\n  };\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/columnMove.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/columnResized.js":
/*!**********************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/columnResized.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.handleColumnResizedDoubleClick = exports.handleColumnResized = exports.handleAfterColumnResized = void 0;\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _array = __webpack_require__(/*! ../../../TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _dataService = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/dataService.js */ \"./src/component/web/DataGrid/TableHelper/util/dataService.js\");\nvar _columns = __webpack_require__(/*! ../../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _poster = __webpack_require__(/*! ../../post/poster */ \"./src/component/web/DataGrid/KDTable/post/poster.js\");\nvar _height = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/column/height */ \"./src/component/web/DataGrid/TableHelper/column/height.js\");\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n *\n * @param {columns} eventParams 此次拖拽返回的列信息\n */\nvar handleColumnResized = exports.handleColumnResized = function handleColumnResized(params) {\n  return function (_ref) {\n    var args = _ref.args;\n    var getTableConfigImmediately = params.getTableConfigImmediately;\n    var tableConfig = getTableConfigImmediately();\n    var columnSize = args.columnSize;\n    var columns = tableConfig.getColumns();\n    var processFn = function processFn(col) {\n      var code = col.code;\n      if (columnSize[code]) {\n        col.width = columnSize[code];\n      }\n    };\n    (0, _array.iterateColumns)(columns, processFn);\n    tableConfig.setColumns(columns);\n  };\n};\n\n/**\n *\n * @param {columns} eventParams 此次拖拽完成时返回的列信息\n */\nvar handleAfterColumnResized = exports.handleAfterColumnResized = function handleAfterColumnResized(params) {\n  return function (_ref2) {\n    var _getPageUIState;\n    var args = _ref2.args;\n    var getTableOptions = params.getTableOptions,\n      getTableConfigImmediately = params.getTableConfigImmediately,\n      getActionByKey = params.getActionByKey,\n      parentModel = params.parentModel,\n      model = params.model,\n      getTableApi = params.getTableApi,\n      getInstance = params.getInstance;\n    var getInternalEventService = params.getInternalEventService;\n    var internalEventService = getInternalEventService();\n    var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n    var useModel = parentModel || model;\n    var tableOptions = getTableOptions();\n    var tableConfig = getTableConfigImmediately();\n    var columnResizeMode = tableConfig.columnResizeMode,\n      pageId = tableConfig.pageId,\n      id = tableConfig.id,\n      parentId = tableConfig.parentId,\n      type = tableConfig.type,\n      gridType = tableConfig.gridType,\n      autoHeight = tableConfig.autoHeight,\n      titleAutoHeight = tableConfig.titleAutoHeight,\n      modelKey = tableConfig.modelKey;\n    var personalizedColumnWidth = tableOptions.getPersonalizedColumnWidth();\n    var changeColumnSizes = args.changeColumnSizes;\n    // 拖拽完成时设置个性化列宽信息\n    if (changeColumnSizes.length > 0) {\n      changeColumnSizes.forEach(function (col) {\n        var code = col.code,\n          width = col.width;\n        var originColumnCode = (0, _columns.getOriginColumnCode)(code);\n        var column = (0, _columns.getColumnByCode)(code, tableConfig.columns);\n        var colLockInfo = tableOptions.getDataOptionsProperty('colLockInfo');\n        if (originColumnCode !== _const.SHADOW_COLUMN_ID.tableConfigPlaceholderColumn) {\n          if (column && !(0, _columns.shouldAutoSizedColumn)({\n            column: column,\n            colLockInfo: colLockInfo\n          }) || columnResizeMode === _const.TABLE_COLUMN_RESIZE_MODE.preset || autoHeight) {\n            personalizedColumnWidth[_const.PERSONALIZED_COLUMN_WIDTH][originColumnCode] = Math.round(width);\n          } else {\n            personalizedColumnWidth[_const.PERSONALIZED_COLUMN_MAX_WIDTH][originColumnCode] = Math.round(width);\n            // 拖拽后重新计算自适应宽度，并保存，防止下次页面进来抖动,重新计算自适应后宽度，但是不渲染\n            internalEventService.dispatchEvent({\n              type: _eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns,\n              params: {\n                trigger: 'afterDrag'\n              }\n            });\n          }\n        }\n      });\n      internalEventService.dispatchEvent({\n        type: _eventServiceName.KD_TABLE_EVENT_NAMES.afterColumnResized,\n        params: {\n          changeColumnSizes: changeColumnSizes\n        }\n      });\n    }\n    // todo：标题行高自适应的场景下，拖拽完成后要重新设置标题行高度\n    if (titleAutoHeight) {\n      var _getTableApi = getTableApi(),\n        _containerEleRef = _getTableApi._containerEleRef;\n      var tableContainer = _containerEleRef.current;\n      var tableInstance = getInstance();\n      // todo:需要考虑包含分组，凭证金额，设计器表头高度等条件，来判断到底设置的单行行高值，不可以直接 set 行高\n      var _newHeaderHeight = (0, _height.calAutoHeightHeader)(tableContainer, {\n        tableOptions: tableOptions,\n        tableInstance: tableInstance,\n        tableConfig: tableConfig,\n        model: model\n      });\n      tableConfig.setHeaderHeight(_newHeaderHeight);\n      internalEventService.dispatchEvent({\n        type: _eventServiceName.KD_TABLE_EVENT_NAMES.afterColumnResized\n      });\n    }\n    tableOptions.setPersonalizedColumnWidth(personalizedColumnWidth);\n    (0, _poster.postPersonalizedColumnWidth)(pageId, modelKey)(personalizedColumnWidth);\n    var curTableUiState = ((_getPageUIState = (0, _memoryCacher.getPageUIState)(pageId)) === null || _getPageUIState === void 0 || (_getPageUIState = _getPageUIState.get(modelKey)) === null || _getPageUIState === void 0 ? void 0 : _getPageUIState.toJS()) || {};\n    invokeControlMethodOnly && invokeControlMethodOnly(useModel, 'saveGridViewWidth', [_defineProperty({}, modelKey, curTableUiState)]);\n    var controlType = (0, _dataService.getGridTrackingType)({\n      type: type,\n      gridType: gridType\n    });\n    (0, _dataService.buriedPointOfColumnResize)({\n      pageId: pageId,\n      controlId: parentId || modelKey,\n      controlType: controlType\n    });\n  };\n};\n\n// 拖拽线双击自适应功能\nvar handleColumnResizedDoubleClick = exports.handleColumnResizedDoubleClick = function handleColumnResizedDoubleClick(params) {\n  return function (_ref4) {\n    var args = _ref4.args;\n    var getInternalEventService = params.getInternalEventService;\n    var col = args.col;\n    var internalEventService = getInternalEventService();\n    internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns,\n      params: {\n        trigger: 'columnResizedDoubleClick',\n        targetColumns: [col]\n      }\n    });\n  };\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/columnResized.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/configOperation.js":
/*!************************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/configOperation.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _index = __webpack_require__(/*! ../../post/index */ \"./src/component/web/DataGrid/KDTable/post/index.js\");\nvar handleTableConfigOperation = function handleTableConfigOperation(params) {\n  return function (eventParams) {\n    var parentModel = params.parentModel,\n      model = params.model,\n      getActionByKey = params.getActionByKey,\n      getInstance = params.getInstance,\n      getTableConfigImmediately = params.getTableConfigImmediately;\n    var useModel = parentModel || model;\n    var pageId = useModel.pageId,\n      key = useModel.key;\n    _index.poster.postTableConfigOperation({\n      pageId: pageId,\n      key: key,\n      getActionByKey: getActionByKey,\n      getInstance: getInstance,\n      getTableConfigImmediately: getTableConfigImmediately\n    })();\n  };\n};\nvar _default = exports[\"default\"] = handleTableConfigOperation;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/configOperation.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/filter.js":
/*!***************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/filter.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.every.js */ \"../../node_modules/core-js/modules/es.array.every.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.set.js */ \"../../node_modules/core-js/modules/es.set.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _getAggregateData = __webpack_require__(/*! ../../aggregate/getAggregateData */ \"./src/component/web/DataGrid/KDTable/aggregate/getAggregateData.js\");\nvar _cell = __webpack_require__(/*! ../../utils/cell */ \"./src/component/web/DataGrid/KDTable/utils/cell.js\");\nvar _validate = __webpack_require__(/*! ../../utils/validate */ \"./src/component/web/DataGrid/KDTable/utils/validate.js\");\nvar _row = __webpack_require__(/*! ../../utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nvar _columns = __webpack_require__(/*! ../../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _index = __webpack_require__(/*! ../../data/index */ \"./src/component/web/DataGrid/KDTable/data/index.js\");\nvar _data = __webpack_require__(/*! ../../utils/data */ \"./src/component/web/DataGrid/KDTable/utils/data.js\");\nvar _array = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _filter = __webpack_require__(/*! ../../utils/filter */ \"./src/component/web/DataGrid/KDTable/utils/filter.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /*\n * @Author: wqhui\n * @Date: 2023-11-01 16:33:11\n * @Description:\n */\nvar getPageIndex = _index.dataHelper.getPageIndex;\nvar handleFilterChanged = function handleFilterChanged(params) {\n  return function (eventParams) {\n    var _model$getMetaPropert;\n    var parentModel = params.parentModel,\n      model = params.model,\n      getTableOptions = params.getTableOptions,\n      getInstance = params.getInstance,\n      getActionByKey = params.getActionByKey,\n      getTableConfigImmediately = params.getTableConfigImmediately,\n      getTablePoster = params.getTablePoster,\n      getTableApi = params.getTableApi,\n      getInternalEventService = params.getInternalEventService;\n    var tableConfig = getTableConfigImmediately();\n    var filterType = tableConfig.filterType,\n      rowKey = tableConfig.rowKey,\n      treeTable = tableConfig.treeTable,\n      pageId = tableConfig.pageId,\n      parentId = tableConfig.parentId,\n      id = tableConfig.id;\n    var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n    var args = eventParams.args;\n    // currentFilter:{code:'number',filter:[111],filterCondition:'lessthen'}\n    var _args$currentFilter = args.currentFilter,\n      currentFilter = _args$currentFilter === void 0 ? {} : _args$currentFilter,\n      nextFilters = args.nextFilters,\n      passiveTrigger = args.passiveTrigger;\n    var isReset = nextFilters.length === 0;\n    if (filterType !== _const.FILTER_TYPES.service) {\n      var _getInstance = getInstance(),\n        tableModel = _getInstance.tableModel,\n        tableController = _getInstance.controller;\n      var internalEventService = getInternalEventService();\n      var tableOptions = getTableOptions();\n      var tablePoster = getTablePoster();\n      var sumWithFilter = tableOptions.getSumWithFilter();\n      var originRows = tableModel.getRowData();\n      var isRowValid = function isRowValid(filter, record, code) {\n        var column = (0, _columns.getColumnByCode)(code, tableConfig.getColumns());\n        if (!column) {\n          // 因为列定义和数据一起改变进行的再次过滤，可能存在找不到列的情况，此时忽略该过滤\n          return true;\n        }\n        var commonGetValue = function commonGetValue(record) {\n          return (0, _cell.getCellValue)(record, code);\n        };\n        var _column$getValue = column.getValue,\n          getValue = _column$getValue === void 0 ? commonGetValue : _column$getValue,\n          filterable = column.features.filterable;\n        var filterValue = filter.filter;\n        return filterable(filterValue, filter)(getValue(record), record);\n      };\n      // 找过滤行的时候顺便把需要展开的节点记录下来，在判断是否是树形后，把命中的数据展开\n      var expandKeyAfterFilter = {\n        expandKeys: new Set()\n      };\n      var rowsAfterFilter;\n      if (isReset) {\n        rowsAfterFilter = originRows;\n      } else {\n        rowsAfterFilter = getFilteredRows(originRows, nextFilters, isRowValid, expandKeyAfterFilter);\n      }\n      tableModel.setRows(rowsAfterFilter, !isReset);\n      !isReset && changeExpandRkAfterFilter(expandKeyAfterFilter, {\n        tableConfig: tableConfig,\n        tableOptions: tableOptions,\n        tableController: tableController\n      });\n      if (tableConfig.treeTable) {\n        setTimeout(function () {\n          getInternalEventService().dispatchEvent({\n            type: _eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns,\n            params: {\n              trigger: 'rowExpand',\n              targetColumns: [(0, _columns.getColumnByCode)(getInstance().controller.getExpandColCode(), tableConfig.columns)]\n            }\n          });\n        }, 0);\n      } else {\n        setTimeout(function () {\n          getInternalEventService().dispatchEvent({\n            type: _eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns,\n            params: {\n              trigger: 'rowDataChanged'\n            }\n          });\n        }, 0);\n      }\n      if (sumWithFilter) {\n        var showFooterRows = (0, _row.shouldShowFooterRow)({\n          rowCount: tableModel.getFlatDisplayRows().length,\n          pageIndex: getPageIndex(model, parentModel)\n        });\n        var footerRowData = showFooterRows ? (0, _getAggregateData.getAggregateData)({\n          model: model,\n          parentModel: parentModel,\n          tableOptions: tableOptions,\n          dataSource: rowsAfterFilter,\n          getTableConfigImmediately: getTableConfigImmediately\n        }) : [];\n        (0, _data.setAggregateData)(footerRowData, tableModel, getInternalEventService(), tableOptions);\n        tablePoster.send({\n          type: 'postFilterData',\n          args: {\n            rowKeys: isReset ? [] : getRowKeys(rowsAfterFilter, treeTable, rowKey),\n            reset: isReset\n          }\n        });\n      }\n\n      // 手动触发过滤时清空选中行\n      if (!passiveTrigger) {\n        tableController.setSelectedRows([]);\n        tablePoster.send({\n          type: 'editorRowClick',\n          args: {\n            column: {},\n            rowKeyValue: -1\n          }\n        });\n      }\n      tablePoster.send({\n        type: 'setFilterStatus',\n        args: {\n          hasFilter: nextFilters.length > 0\n        }\n      });\n      internalEventService.dispatchEvent({\n        type: _eventServiceName.KD_TABLE_EVENT_NAMES.reFreshToolBar\n      });\n      internalEventService.dispatchEvent({\n        type: _eventServiceName.KD_TABLE_EVENT_NAMES.afterFilter\n      });\n      window.requestAnimationFrame(function () {\n        var pageId = tableConfig.pageId,\n          id = tableConfig.id;\n        (0, _validate.updateValidateFailedCellCount)({\n          pageId: pageId,\n          id: id,\n          rowKey: rowKey,\n          tableApi: getTableApi(),\n          controller: getInstance().controller\n        });\n      });\n      return;\n    }\n    var filterParams = (0, _filter.getFilterRequestParams)(currentFilter, (_model$getMetaPropert = model.getMetaProperty('columns')) === null || _model$getMetaPropert === void 0 ? void 0 : _model$getMetaPropert.toJS(), getTableOptions().getEnableBaseDataSelectFilter());\n    if (filterParams.length) {\n      var useModel = parentModel || model;\n      var _invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n      _invokeControlMethodOnly && _invokeControlMethodOnly(useModel, 'getGridDataByFilter', filterParams);\n    } else if (isReset) {\n      // 后端过滤的清空\n      var instance = getInstance();\n      var filters = instance.controller.getFilters();\n      filters.forEach(function (item) {\n        var _model$getMetaPropert2;\n        var filterParams = (0, _filter.getFilterRequestParams)((0, _filter.createResetFilterValue)(item.code), (_model$getMetaPropert2 = model.getMetaProperty('columns')) === null || _model$getMetaPropert2 === void 0 ? void 0 : _model$getMetaPropert2.toJS(), getTableOptions().getEnableBaseDataSelectFilter());\n        if (filterParams.length) {\n          invokeControlMethodOnly({\n            pageId: pageId,\n            key: parentId || id\n          }, 'getGridDataByFilter', filterParams);\n        }\n      });\n    }\n  };\n};\nvar _default = exports[\"default\"] = handleFilterChanged;\nvar matchFn = function matchFn(record, filters, isRowValid) {\n  return filters.every(function (filter) {\n    var code = filter.code;\n    return isRowValid(filter, record, code);\n  });\n};\nvar getFilteredRows = function getFilteredRows(rows, filters, isRowValid, expandKeyAfterFilter) {\n  var rowMatchFn = function rowMatchFn(row) {\n    return matchFn(row, filters, isRowValid);\n  };\n  return layeredFilter(rows, rowMatchFn, expandKeyAfterFilter);\n};\n\n// 过滤行(支持树形结构)\nvar layeredFilter = function layeredFilter(rows, rowMatchFn, expandKeyAfterFilter) {\n  var dataAfterFilter = dfs(rows, expandKeyAfterFilter);\n  // 重新展开后还是要重新触发一下展开列的宽度重计算\n  return dataAfterFilter;\n  function dfs(rows, expandKeyAfterFilter) {\n    return rows.map(function (row) {\n      var children = row.children;\n      var currentMatched = rowMatchFn(row);\n      var rowAfterFilterChildren = _objectSpread(_objectSpread({}, row), {}, {\n        children: children ? dfs(children, expandKeyAfterFilter) : undefined\n      });\n      var matchedByChildren = !isLeafRow(rowAfterFilterChildren);\n      if (currentMatched || matchedByChildren) {\n        // 只要有 child match 到就展开节点\n        if (matchedByChildren) {\n          expandKeyAfterFilter.expandKeys.add(String(row.rk));\n        }\n        return rowAfterFilterChildren;\n      }\n      return null;\n    }).filter(Boolean);\n  }\n};\nvar getRowKeys = function getRowKeys(rowsFilters, treeTable, rowKeyName) {\n  // 树形单据体，过滤子集\n  if (treeTable) {\n    var rowKeys = [];\n    setTreeRowKeys(rowKeys, rowsFilters, rowKeyName);\n    return rowKeys;\n  }\n  return rowsFilters.map(function (rowItem) {\n    return rowItem[rowKeyName];\n  });\n};\nvar setTreeRowKeys = function setTreeRowKeys(rowKeys, rowsFilterItem, rowKeyName) {\n  rowsFilterItem.forEach(function (row) {\n    rowKeys.push(row[rowKeyName]);\n    if (!(0, _array.isLeafNode)(row)) {\n      setTreeRowKeys(rowKeys, row.children, rowKeyName);\n    }\n  });\n};\nvar isLeafRow = function isLeafRow(_ref) {\n  var children = _ref.children;\n  return !children || children.length === 0;\n};\nvar changeExpandRkAfterFilter = function changeExpandRkAfterFilter(expandKeyAfterFilter, _ref2) {\n  var tableConfig = _ref2.tableConfig,\n    tableOptions = _ref2.tableOptions,\n    tableController = _ref2.tableController;\n  if (tableConfig.treeTable) {\n    var rowKeyMap = tableOptions.getDataOptionsProperty('rowKeyMap');\n    tableOptions.setExpandRowIds(Array.from(expandKeyAfterFilter.expandKeys).map(function (rk) {\n      return rowKeyMap.get(rk);\n    }), 'expand');\n    tableController.setExpandRowKeys(Array.from(expandKeyAfterFilter.expandKeys));\n  }\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/filter.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/handleColExtend.js":
/*!************************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/handleColExtend.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.object.assign.js */ \"../../node_modules/core-js/modules/es.object.assign.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\n// 缓存分组列展开收缩状态\nvar handleColExtend = function handleColExtend(params) {\n  return function (eventParams) {\n    var args = eventParams.args;\n    var getTableConfigImmediately = params.getTableConfigImmediately,\n      getInternalEventService = params.getInternalEventService;\n    var internalEventService = getInternalEventService();\n    var tableConfig = getTableConfigImmediately();\n    var pageId = tableConfig.pageId,\n      id = tableConfig.id;\n    var expandStatus = args.expandStatus;\n    // 保存在用户个人数据中，在每次数据变化后回传到基础表格，控制当前展开箭头状态\n    var uiState = (0, _memoryCacher.getPageUIState)(pageId);\n    var setting = uiState && uiState.toJS && uiState.toJS() || {};\n    var _expandStaus = setting[id] && setting[id][_const.COL_EXPAND_STATUS] || {};\n    (0, _memoryCacher.setPageUIState)({\n      pageId: pageId,\n      key: id\n    }, [_const.COL_EXPAND_STATUS], Object.assign(_expandStaus, expandStatus));\n    internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.groupExtendChanged,\n      params: {\n        trigger: _const.COLGROUP_EXTEND_CHANGE\n      }\n    });\n  };\n};\nvar _default = exports[\"default\"] = handleColExtend;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/handleColExtend.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/index.js":
/*!**************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/index.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _index = __webpack_require__(/*! ../index */ \"./src/component/web/DataGrid/KDTable/event/index.js\");\nvar _columnMove = _interopRequireWildcard(__webpack_require__(/*! ./columnMove */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/columnMove.js\"));\nvar _columnResized = __webpack_require__(/*! ./columnResized */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/columnResized.js\");\nvar _configOperation = _interopRequireDefault(__webpack_require__(/*! ./configOperation */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/configOperation.js\"));\nvar _filter = _interopRequireDefault(__webpack_require__(/*! ./filter */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/filter.js\"));\nvar _rowDetail = _interopRequireWildcard(__webpack_require__(/*! ./rowDetail */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowDetail.js\"));\nvar _rowSelection = _interopRequireWildcard(__webpack_require__(/*! ./rowSelection */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowSelection.js\"));\nvar _sort = _interopRequireDefault(__webpack_require__(/*! ./sort */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/sort.js\"));\nvar _subGridRendered = _interopRequireDefault(__webpack_require__(/*! ./subGridRendered */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/subGridRendered.js\"));\nvar _subGridScroll = _interopRequireDefault(__webpack_require__(/*! ./subGridScroll */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/subGridScroll.js\"));\nvar _tableRendered = _interopRequireDefault(__webpack_require__(/*! ./tableRendered */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/tableRendered.js\"));\nvar _rangeSelection = _interopRequireDefault(__webpack_require__(/*! ./rangeSelection */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rangeSelection.js\"));\nvar _scrollLoad = _interopRequireDefault(__webpack_require__(/*! ./scrollLoad */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/scrollLoad.js\"));\nvar _setEditingCell = _interopRequireDefault(__webpack_require__(/*! ./setEditingCell */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/setEditingCell.js\"));\nvar _tableRowClick = _interopRequireDefault(__webpack_require__(/*! ./tableRowClick */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/tableRowClick.js\"));\nvar _rowExpand = _interopRequireWildcard(__webpack_require__(/*! ./rowExpand */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowExpand.js\"));\nvar _handleColExtend = _interopRequireDefault(__webpack_require__(/*! ./handleColExtend */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/handleColExtend.js\"));\nvar _rowDrag = __webpack_require__(/*! ./rowDrag */ \"./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowDrag.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\n/*\n * @Author: wqhui\n * @Date: 2021-07-06 15:41:53\n * @Description: 表格事件回调函数的注册入口，负责引入所有回调事件文件\n */\n\n(0, _index.addEventHandles)(_const.EVENT_NAMES.columnMoved, _columnMove[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.columnDragStart, _columnMove.handleColumnDragStart);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.afterColumnResized, _columnResized.handleAfterColumnResized);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.columnResized, _columnResized.handleColumnResized);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.columnResizedDoubleClick, _columnResized.handleColumnResizedDoubleClick);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.configOperation, _configOperation[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.filterChanged, _filter[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.detailTableDataGetter, _rowDetail[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.detailTableExpandClick, _rowDetail.handleDetailTableExpandClick);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.rowSelectionChanged, _rowSelection[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.rowDoubleClick, _rowSelection.handleRowDoubleClick);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.sortChanged, _sort[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.subGridRendered, _subGridRendered[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.subGridScroll, _subGridScroll[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.tableRendered, _tableRendered[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.rangeSelection, _rangeSelection[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.scrollLoad, _scrollLoad[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.setEditingCell, _setEditingCell[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.tableRowClick, _tableRowClick[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.expandRowKeysChange, _rowExpand[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.afterExpandRowKeysChange, _rowExpand.handleAfterExpandRowKeysChange);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.changeColExtendStatus, _handleColExtend[\"default\"]);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.rowDragEnd, _rowDrag.handleRowDragEnd);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.rowDragStart, _rowDrag.handleRowDragStart);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.rowDragEnter, _rowDrag.handleRowDragEnter);\n(0, _index.addEventHandles)(_const.EVENT_NAMES.rowDragLeave, _rowDrag.handleRowDragLeave);\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/index.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rangeSelection.js":
/*!***********************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rangeSelection.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\nvar _rangeSelection = __webpack_require__(/*! ../../utils/rangeSelection */ \"./src/component/web/DataGrid/KDTable/utils/rangeSelection.js\");\nvar _cell = __webpack_require__(/*! ../../utils/cell */ \"./src/component/web/DataGrid/KDTable/utils/cell.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar handleRangeSelection = function handleRangeSelection(params) {\n  return function (eventParams) {\n    var getTableOptions = params.getTableOptions,\n      getInstance = params.getInstance,\n      getTableConfigImmediately = params.getTableConfigImmediately,\n      getActionByKey = params.getActionByKey,\n      model = params.model,\n      getTableApi = params.getTableApi;\n    var args = eventParams.args;\n    var _cellRanges = args.cellRanges,\n      isFinished = args.isFinished;\n    // 兼容返回值不是数数组的场景\n    var cellRanges = Array.isArray(_cellRanges) ? _cellRanges : _cellRanges ? [_cellRanges] : [];\n    var tableOptions = getTableOptions();\n    var tableApi = getTableApi();\n    tableOptions.setCellRanges(cellRanges);\n    var _getTableConfigImmedi = getTableConfigImmediately(),\n      shouldPostRangeSelection = _getTableConfigImmedi.shouldPostRangeSelection,\n      rowKey = _getTableConfigImmedi.rowKey,\n      isCellRangesSum = _getTableConfigImmedi.isCellRangesSum;\n    if (isFinished && isCellRangesSum) {\n      handleCellRangesSum(cellRanges, {\n        getTableOptions: getTableOptions,\n        getInstance: getInstance,\n        getTableConfigImmediately: getTableConfigImmediately,\n        getTableApi: getTableApi\n      });\n    }\n    if (isFinished && !(0, _cell.isCellRangeSingleCell)(cellRanges)) {\n      tableApi.focus();\n    }\n    if (shouldPostRangeSelection && cellRanges.length > 0) {\n      var setSelectionRangePostData = getActionByKey('setSelectionRangePostData');\n      var getRowKeyByIndex = function getRowKeyByIndex(rowIndex) {\n        var _getInstance$controll;\n        return (_getInstance$controll = getInstance().controller.getRowByIndex(rowIndex)) === null || _getInstance$controll === void 0 ? void 0 : _getInstance$controll[rowKey];\n      };\n      // 往后端发的范围框选只发第一个\n      var firstCellRanges = cellRanges[0];\n      _addRangeSelectionToPostData(model, firstCellRanges, setSelectionRangePostData, getRowKeyByIndex);\n    }\n  };\n};\nfunction _addRangeSelectionToPostData(model, cellRange, setSelectionRangePostData, getRowKeyByIndex) {\n  if (cellRange) {\n    var columns = cellRange.columns,\n      endRow = cellRange.endRow,\n      startRow = cellRange.startRow;\n    var colFieldKeys = columns.map(function (col) {\n      return col.code;\n    });\n    var cellRangeData = {\n      selectionRange: [{\n        colFieldKeys: colFieldKeys,\n        startRowKey: getRowKeyByIndex(startRow),\n        endRowKey: getRowKeyByIndex(endRow)\n      }]\n    };\n    setSelectionRangePostData(model, cellRangeData);\n  }\n}\nfunction handleCellRangesSum(cellRanges, _ref) {\n  var getTableOptions = _ref.getTableOptions,\n    getInstance = _ref.getInstance,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getTableApi = _ref.getTableApi;\n  var tableConfig = getTableConfigImmediately();\n  var tableApi = getTableApi();\n  var tableOptions = getTableOptions();\n  var pageId = tableConfig.pageId,\n    id = tableConfig.id;\n\n  // 存在重复区域则清空框选范围\n  if ((0, _rangeSelection.isCellRangesOverlap)(cellRanges, {\n    getInstance: getInstance,\n    getTableConfigImmediately: getTableConfigImmediately\n  })) {\n    (0, _rangeSelection.cellRangesOverlapTips)(pageId);\n    tableApi.clearRangeSelection();\n    return;\n  }\n\n  // 超出最大框选范围则不显示框选结果\n  if ((0, _rangeSelection.isCellRangesSumRowOutOfSize)(cellRanges, {\n    getInstance: getInstance,\n    getTableConfigImmediately: getTableConfigImmediately\n  })) {\n    (0, _memoryCacher.updatePageData)(pageId, [_gridConst.CELL_RANGES_SUM_RESULT, id], function (value) {\n      return _objectSpread(_objectSpread({}, value), {}, {\n        isValid: false\n      });\n    });\n    (0, _rangeSelection.cellRangesOutOfSizeTips)(pageId);\n    return;\n  }\n\n  // 选中范围只有单个，清空已计算过的范围缓存\n  if ((0, _cell.isCellRangeSingleCell)(cellRanges)) {\n    var singleCellRangeId = (0, _rangeSelection.getCellRangeId)(cellRanges[0]);\n    if (!tableOptions.getCellRangesSumResult(singleCellRangeId)) {\n      tableOptions.clearCellRangesSumResult();\n    }\n  }\n  var result = (0, _rangeSelection.getCellRangesResult)(cellRanges, {\n    getTableOptions: getTableOptions,\n    getInstance: getInstance,\n    getTableConfigImmediately: getTableConfigImmediately,\n    getTableApi: getTableApi\n  });\n  (0, _memoryCacher.setPageData)(pageId, [_gridConst.CELL_RANGES_SUM_RESULT, id], result);\n}\nvar _default = exports[\"default\"] = handleRangeSelection;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rangeSelection.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowDetail.js":
/*!******************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowDetail.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.handleDetailTableExpandClick = exports[\"default\"] = void 0;\n/**\n * 行展开获取子表数据\n * @param {Object} eventParams {type: typeName,args: {mainEntityPrimaryKeyId}}\n */\nvar handleDetailTableDataGetter = exports[\"default\"] = function handleDetailTableDataGetter(params) {\n  return function (eventParams) {\n    var getTableConfigImmediately = params.getTableConfigImmediately,\n      getActionByKey = params.getActionByKey;\n    var args = eventParams.args;\n    var mainEntityPrimaryKeyId = args.mainEntityPrimaryKeyId;\n    var tableConfig = getTableConfigImmediately();\n    var pageId = tableConfig.pageId,\n      parentId = tableConfig.parentId;\n    var getDetailGridData = getActionByKey('getDetailGridData');\n    getDetailGridData({\n      pageId: pageId,\n      key: parentId\n    }, [mainEntityPrimaryKeyId]);\n  };\n};\nvar handleDetailTableExpandClick = exports.handleDetailTableExpandClick = function handleDetailTableExpandClick(params) {\n  return function (eventParams) {\n    var parentModel = params.parentModel,\n      model = params.model,\n      getActionByKey = params.getActionByKey,\n      getInstance = params.getInstance,\n      getTableConfigImmediately = params.getTableConfigImmediately;\n    var useModel = parentModel || model;\n    var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n    var args = eventParams.args;\n    var rowKey = args.rowKey;\n    var rowData = getInstance().controller.viewer.api.getRow(rowKey);\n    var tableConfig = getTableConfigImmediately();\n    var mainEntityPrimaryKeyFieldName = tableConfig.rowDetailOptions.mainEntityPrimaryKeyFieldName;\n    var pkId = rowData === null || rowData === void 0 ? void 0 : rowData[mainEntityPrimaryKeyFieldName];\n    invokeControlMethodOnly && invokeControlMethodOnly({\n      key: useModel.key,\n      pageId: useModel.pageId\n    }, 'expandClick', [pkId, rowKey]);\n  };\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowDetail.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowDrag.js":
/*!****************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowDrag.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.handleRowDragStart = exports.handleRowDragLeave = exports.handleRowDragEnter = exports.handleRowDragEnd = void 0;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.every.js */ \"../../node_modules/core-js/modules/es.array.every.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.parse-int.js */ \"../../node_modules/core-js/modules/es.parse-int.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _treeTable = __webpack_require__(/*! ../../utils/treeTable */ \"./src/component/web/DataGrid/KDTable/utils/treeTable.js\");\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nvar _appModelFunction = __webpack_require__(/*! @/model/appModelFunction */ \"./src/model/appModelFunction.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nvar _global = __webpack_require__(/*! @/global */ \"./src/global/index.js\");\nvar handleRowDragEnd = exports.handleRowDragEnd = function handleRowDragEnd(params) {\n  return function (eventParams) {\n    var getTableOptions = params.getTableOptions,\n      getInstance = params.getInstance,\n      getTableConfigImmediately = params.getTableConfigImmediately,\n      getActionByKey = params.getActionByKey,\n      model = params.model,\n      getTableContainterRef = params.getTableContainterRef;\n    var args = eventParams.args;\n    var rowDragEvent = args.rowDragEvent;\n    var _getTableConfigImmedi = getTableConfigImmediately(),\n      rowKey = _getTableConfigImmedi.rowKey,\n      gridType = _getTableConfigImmedi.gridType,\n      treeTable = _getTableConfigImmedi.treeTable,\n      pageId = _getTableConfigImmedi.pageId,\n      allowDragOtherLevel = _getTableConfigImmedi.allowDragOtherLevel,\n      id = _getTableConfigImmedi.id;\n    var instance = getInstance();\n    var tableOptions = getTableOptions();\n    var endRow = rowDragEvent.endRow,\n      startRow = rowDragEvent.startRow,\n      endRowIndex = rowDragEvent.endRowIndex,\n      dragPosition = rowDragEvent.dragPosition,\n      startDropZoneTagret = rowDragEvent.startDropZoneTagret,\n      startCommonParams = rowDragEvent.startCommonParams,\n      dropZoneTarget = rowDragEvent.dropZoneTarget;\n\n    // 获取结束拖拽行的位置，-1表示插到表格最前面\n    var endRowKeyValue = endRow ? endRow[rowKey] : -1;\n    var startRowKeyValue = startRow[rowKey];\n    var selectedRowKeys = instance.controller.getSelectedRowKeys();\n\n    // 获取起始拖拽行\n    var startRowKeys = selectedRowKeys.includes(startRowKeyValue) ? selectedRowKeys : [startRowKeyValue];\n    var containerEleRef = getTableContainterRef();\n    containerEleRef.current.classList.remove('row-drag-with-selected');\n    containerEleRef.current.classList.remove('row-drag-actived');\n    tableOptions.setRowDragActived(false);\n    var position = dragPosition === 'middle' ? 'into' : dragPosition;\n    if (startDropZoneTagret === dropZoneTarget) {\n      if (!endRow) return;\n      if (!isValidDrag(startRowKeys, endRowKeyValue, {\n        getTableOptions: getTableOptions,\n        treeTable: treeTable,\n        pageId: pageId,\n        allowDragOtherLevel: allowDragOtherLevel\n      })) {\n        // 拖到自身拖拽行不提示\n        if (!startRowKeys.includes(endRowKeyValue)) {\n          treeTableDragTips(pageId);\n        }\n        return;\n      }\n      var dragRows = getActionByKey('dragRows');\n      if (allowDragOtherLevel) {\n        dragRows && dragRows(model, [startRowKeys, endRowKeyValue, position]);\n      } else {\n        // 兼容历史逻辑，不允许拖拽入时不发position参数\n        var prevRowIndex = endRowIndex - 1;\n        var _endRow = dragPosition === 'top' && prevRowIndex !== -1 ? instance.controller.getRowByIndex(prevRowIndex) : endRow;\n\n        // 获取结束拖拽行的位置，-1表示插到表格最前面\n        var _endRowKeyValue = dragPosition === 'top' && prevRowIndex === -1 ? _endRow[rowKey] - 1 : _endRow[rowKey];\n        dragRows && dragRows(model, [startRowKeys, _endRowKeyValue]);\n      }\n      // 处理完请求后再展开，避免根据rowIndex获取对应行不正确\n      expandDragRowKeys({\n        pageId: pageId,\n        id: id,\n        tableOptions: tableOptions,\n        instance: instance\n      });\n    } else {\n      var filters = instance.controller.getFilters() || [];\n      var sorts = instance.controller.getSorts() || [];\n      // 存在排序过滤不允许拖拽\n      if (filters.length > 0 || sorts.length > 0) {\n        var content = (0, _intlApi.getLangMsg)('grid.key0063');\n        var message = [{\n          content: content,\n          duration: 3500,\n          type: 2\n        }];\n        (0, _appModelFunction.setDataMessages)(pageId, message);\n        return;\n      }\n      var startInstance = startCommonParams === null || startCommonParams === void 0 ? void 0 : startCommonParams.getInstance();\n      var _selectedRowKeys = startInstance.controller.getSelectedRowKeys();\n      // 获取起始拖拽行\n      var _startRowKeys = _selectedRowKeys.includes(startRowKeyValue) ? _selectedRowKeys : [startRowKeyValue];\n      var startTableInfo = getTableInfo(startDropZoneTagret);\n      if (startTableInfo) {\n        var _pageId = startTableInfo.pageId,\n          _id = startTableInfo.id;\n        var startTableOptions = startCommonParams === null || startCommonParams === void 0 ? void 0 : startCommonParams.getTableOptions();\n        expandDragRowKeys({\n          pageId: _pageId,\n          id: _id,\n          tableOptions: startTableOptions,\n          instance: startInstance\n        });\n        var state = (0, _global.getGlobalState)();\n        var startTableParentRow = (0, _appModelFunction.getSubGridParentRow)(_pageId, _id)(state);\n        var endTableParentRow = (0, _appModelFunction.getSubGridParentRow)(model.pageId, model.key)(state);\n        var startTableParams = {\n          pageId: _pageId,\n          key: _id,\n          rows: _startRowKeys\n        };\n        var endTableParams = {\n          pageId: model.pageId,\n          key: model.key,\n          row: endRowKeyValue\n        };\n        if (startTableParentRow >= 0) {\n          startTableParams.pr = startTableParentRow;\n        }\n        if (endTableParentRow >= 0) {\n          endTableParams.pr = endTableParentRow;\n        }\n        var _params = [startTableParams, endTableParams, position];\n        var dragRowGridToGrid = getActionByKey('dragRowGridToGrid');\n        dragRowGridToGrid && dragRowGridToGrid(model, _params);\n      }\n    }\n  };\n};\nfunction getTableInfo(target) {\n  while (target) {\n    if (target.getAttribute('data-comtype') === 'grid') {\n      var id = target.getAttribute('id');\n      var pageId = target.getAttribute('data-pid');\n      return {\n        id: id,\n        pageId: pageId\n      };\n    }\n    target = target.parentElement;\n  }\n  return null;\n}\nfunction isValidDrag(startRowKeys, endRowKeyValue, _ref) {\n  var getTableOptions = _ref.getTableOptions,\n    treeTable = _ref.treeTable,\n    pageId = _ref.pageId,\n    allowDragOtherLevel = _ref.allowDragOtherLevel;\n  var tableOptions = getTableOptions();\n\n  // 树形单据体不允许跨父节点进行拖拽\n  if (treeTable) {\n    var parentNodeMap = tableOptions.getParentNodeMap();\n    // 目标行全部是endRow的子节点时也允许拖拽\n    if (isParentRowChildren(startRowKeys, endRowKeyValue, parentNodeMap)) return true;\n    var isValidRowKey = startRowKeys.every(function (startRowKey) {\n      if (allowDragOtherLevel) {\n        return !(0, _treeTable.isTargetRowChild)(startRowKey, endRowKeyValue, parentNodeMap);\n      }\n      if (startRowKey === endRowKeyValue) return true;\n      return (0, _treeTable.isSameParentNode)(startRowKey, endRowKeyValue, {\n        parentNodeMap: parentNodeMap\n      });\n    });\n    return isValidRowKey;\n  }\n  return true;\n}\n\n// 判断目标行是否全部是某行的子节点\nfunction isParentRowChildren(targetRowKeys, parentRowKeyValue, parentNodeMap) {\n  var children = parentRowKeyValue === -1 ? parentNodeMap.get('all') : parentNodeMap.get(parentRowKeyValue);\n  if (!children) return false;\n  return targetRowKeys.every(function (rowKey) {\n    return children.includes(rowKey);\n  });\n}\nfunction treeTableDragTips(pageId) {\n  var content = (0, _intlApi.getLangMsg)('grid.key0059');\n  var message = [{\n    content: content,\n    duration: 3500,\n    type: 2\n  }];\n  (0, _appModelFunction.setDataMessages)(pageId, message);\n}\nfunction expandDragRowKeys(_ref2) {\n  var _instance$controller, _instance$controller2;\n  var pageId = _ref2.pageId,\n    id = _ref2.id,\n    tableOptions = _ref2.tableOptions,\n    instance = _ref2.instance;\n  var rowKeyMap = tableOptions.getDataOptionsProperty('rowKeyMap');\n  var collapseRowKeys = (0, _memoryCacher.getPageData)(pageId, [_const.ROW_DRAG_COLLAPSE_KEYS, id]) || [];\n  if (collapseRowKeys.length === 0) return;\n  collapseRowKeys.forEach(function (key) {\n    var id = rowKeyMap.get(parseInt(key));\n    tableOptions.setExpandRowIds([id], 'expand');\n  });\n  var expandRowKeys = (_instance$controller = instance.controller) === null || _instance$controller === void 0 ? void 0 : _instance$controller.getExpandRowKeys();\n  var nextKeys = expandRowKeys.concat(collapseRowKeys);\n  (_instance$controller2 = instance.controller) === null || _instance$controller2 === void 0 || _instance$controller2.setExpandRowKeys(nextKeys, true);\n  (0, _memoryCacher.deletePageData)(pageId, [_const.ROW_DRAG_COLLAPSE_KEYS, id]);\n}\nfunction collapseDragRowKeys(_ref3) {\n  var _instance$controller3, _instance$controller4;\n  var selectedRowKeys = _ref3.selectedRowKeys,\n    startRowKeyValue = _ref3.startRowKeyValue,\n    tableOptions = _ref3.tableOptions,\n    instance = _ref3.instance,\n    pageId = _ref3.pageId,\n    id = _ref3.id;\n  var startRowKeys = selectedRowKeys.includes(startRowKeyValue) ? selectedRowKeys : [startRowKeyValue];\n  var rowKeyMap = tableOptions.getDataOptionsProperty('rowKeyMap');\n  var collapseRowKeys = [];\n  var expandRowKeys = (_instance$controller3 = instance.controller) === null || _instance$controller3 === void 0 ? void 0 : _instance$controller3.getExpandRowKeys();\n  startRowKeys.forEach(function (startRowKey) {\n    var key = startRowKey + '';\n    if (expandRowKeys.includes(key)) {\n      var _id2 = rowKeyMap.get(parseInt(key));\n      tableOptions.setExpandRowIds([_id2], 'collapse');\n      collapseRowKeys.push(key);\n    }\n  });\n  var nextKeys = expandRowKeys.filter(function (key) {\n    return !collapseRowKeys.includes(key);\n  });\n  (_instance$controller4 = instance.controller) === null || _instance$controller4 === void 0 || _instance$controller4.setExpandRowKeys(nextKeys, true);\n  (0, _memoryCacher.setPageData)(pageId, [_const.ROW_DRAG_COLLAPSE_KEYS, id], collapseRowKeys);\n}\nvar handleRowDragStart = exports.handleRowDragStart = function handleRowDragStart(params) {\n  return function (eventParams) {\n    var getTableContainterRef = params.getTableContainterRef,\n      getInstance = params.getInstance,\n      getTableConfigImmediately = params.getTableConfigImmediately,\n      getTableOptions = params.getTableOptions;\n    var args = eventParams.args;\n    var rowDragEvent = args.rowDragEvent;\n    var startRow = rowDragEvent.startRow;\n    var _getTableConfigImmedi2 = getTableConfigImmediately(),\n      rowKey = _getTableConfigImmedi2.rowKey,\n      treeTable = _getTableConfigImmedi2.treeTable,\n      pageId = _getTableConfigImmedi2.pageId,\n      id = _getTableConfigImmedi2.id;\n    var instance = getInstance();\n    var startRowKeyValue = startRow[rowKey];\n    var selectedRowKeys = instance.controller.getSelectedRowKeys();\n\n    // 拖拽开始时折叠拖拽行\n    if (treeTable) {\n      var tableOptions = getTableOptions();\n      collapseDragRowKeys({\n        selectedRowKeys: selectedRowKeys,\n        startRowKeyValue: startRowKeyValue,\n        tableOptions: tableOptions,\n        instance: instance,\n        pageId: pageId,\n        id: id\n      });\n    }\n\n    // 选中行被拖拽增加一个全局样式，用于控制拖拽时选中行的样式\n    if (selectedRowKeys.includes(startRowKeyValue)) {\n      var containerEleRef = getTableContainterRef();\n      containerEleRef.current.classList.add('row-drag-with-selected');\n    }\n  };\n};\nvar handleRowDragEnter = exports.handleRowDragEnter = function handleRowDragEnter(params) {\n  return function (eventParams) {\n    var getTableContainterRef = params.getTableContainterRef,\n      getTableOptions = params.getTableOptions;\n    var containerEleRef = getTableContainterRef();\n    var tableOptions = getTableOptions();\n    containerEleRef.current.classList.add('row-drag-actived');\n    // 行拖拽状态激活\n    tableOptions.setRowDragActived(true);\n  };\n};\nvar handleRowDragLeave = exports.handleRowDragLeave = function handleRowDragLeave(params) {\n  return function (eventParams) {\n    var getTableContainterRef = params.getTableContainterRef,\n      getTableOptions = params.getTableOptions;\n    var containerEleRef = getTableContainterRef();\n    var tableOptions = getTableOptions();\n    containerEleRef.current.classList.remove('row-drag-actived');\n\n    // 行拖拽状态激活\n    tableOptions.setRowDragActived(false);\n  };\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowDrag.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowExpand.js":
/*!******************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowExpand.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.handleAfterExpandRowKeysChange = exports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.parse-int.js */ \"../../node_modules/core-js/modules/es.parse-int.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _columns = __webpack_require__(/*! ../../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar handleExpandRowKeysChange = exports[\"default\"] = function handleExpandRowKeysChange(params) {\n  return function (eventParams) {\n    var _instance$controller;\n    var model = params.model,\n      getTableOptions = params.getTableOptions,\n      getTableConfigImmediately = params.getTableConfigImmediately,\n      getActionByKey = params.getActionByKey,\n      getInstance = params.getInstance;\n    var args = eventParams.args;\n    var nextKeys = args.nextKeys,\n      key = args.key,\n      action = args.action;\n    var rowKey = parseInt(key);\n    var tableOptions = getTableOptions();\n    var tableConfig = getTableConfigImmediately();\n    var instance = getInstance();\n    var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n    var rowKeyMap = tableOptions.getDataOptionsProperty('rowKeyMap');\n    var lazyLoadGroup = tableOptions.getDataOptionsProperty('lazyLoadGroup');\n    var gridType = tableOptions.getMetaOptionsProperty('gridType');\n    var id = rowKeyMap.get(parseInt(rowKey));\n    tableOptions.setExpandRowIds([id], action);\n    (_instance$controller = instance.controller) === null || _instance$controller === void 0 || _instance$controller.setExpandRowKeys(nextKeys, false);\n    var expandIds = nextKeys.map(function (key) {\n      return rowKeyMap.get(parseInt(key));\n    });\n    if (gridType === 'VIRTUALVIEWGRID') {\n      var startIndex = 0;\n      var blockSize = tableConfig.blockSize;\n      if (action === 'expand' && lazyLoadGroup.includes(rowKey)) {\n        invokeControlMethodOnly && invokeControlMethodOnly(model, 'getVirtualData', [startIndex, blockSize, id, rowKey]);\n      }\n    } else {\n      invokeControlMethodOnly(model, 'postExpandNodes', [expandIds]);\n      // 树形单据体展开后需要重新计算一下表格高度\n      var getInternalEventService = params.getInternalEventService;\n      var internalEventService = getInternalEventService();\n      internalEventService.dispatchEvent({\n        type: _eventServiceName.KD_TABLE_EVENT_NAMES.afterRowExpand\n      });\n      if (action === 'expand' && lazyLoadGroup.includes(rowKey)) {\n        invokeControlMethodOnly(model, 'loadChildrenData', [{\n          id: id,\n          rowkey: rowKey\n        }]);\n      }\n    }\n  };\n};\nvar handleAfterExpandRowKeysChange = exports.handleAfterExpandRowKeysChange = function handleAfterExpandRowKeysChange(_ref) {\n  var getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getInstance = _ref.getInstance,\n    getInternalEventService = _ref.getInternalEventService;\n  return function (_ref2) {\n    var args = _ref2.args;\n    if (getTableConfigImmediately().treeTable) {\n      setTimeout(function () {\n        getInternalEventService().dispatchEvent({\n          type: _eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns,\n          params: {\n            trigger: 'rowExpand',\n            targetColumns: [(0, _columns.getColumnByCode)(getInstance().controller.getExpandColCode(), getTableConfigImmediately().columns)]\n          }\n        });\n      }, 0);\n    }\n  };\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowExpand.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowSelection.js":
/*!*********************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowSelection.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.handleRowDoubleClick = exports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.every.js */ \"../../node_modules/core-js/modules/es.array.every.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"../../node_modules/core-js/modules/es.array.reduce.js\");\n__webpack_require__(/*! core-js/modules/es.array.sort.js */ \"../../node_modules/core-js/modules/es.array.sort.js\");\n__webpack_require__(/*! core-js/modules/es.array.splice.js */ \"../../node_modules/core-js/modules/es.array.splice.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.parse-int.js */ \"../../node_modules/core-js/modules/es.parse-int.js\");\n__webpack_require__(/*! core-js/modules/es.set.js */ \"../../node_modules/core-js/modules/es.set.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nvar _index = __webpack_require__(/*! ../../post/index */ \"./src/component/web/DataGrid/KDTable/post/index.js\");\nvar _paramsGetter = __webpack_require__(/*! ../../utils/paramsGetter */ \"./src/component/web/DataGrid/KDTable/utils/paramsGetter.js\");\nvar _row = __webpack_require__(/*! ../../utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nvar _gridSelect = __webpack_require__(/*! ../../utils/gridSelect */ \"./src/component/web/DataGrid/KDTable/utils/gridSelect.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/**\n * 选中行功能\n * 1. 发送请求 2.更新选中行\n * @param {Object} eventParams {type: typeName,args: {actionRowkey,effectRowskeys,action}}\n */\nvar handleRowSelectionChanged = exports[\"default\"] = function handleRowSelectionChanged(params) {\n  return function (eventParams) {\n    var dispatch = params.dispatch,\n      getActionByKey = params.getActionByKey,\n      parentModel = params.parentModel,\n      model = params.model,\n      getInstance = params.getInstance,\n      getTableConfigImmediately = params.getTableConfigImmediately,\n      getTableOptions = params.getTableOptions,\n      getTableApi = params.getTableApi,\n      getMergeModel = params.getMergeModel;\n    var instance = getInstance();\n    var args = eventParams.args;\n    // 注意actionRowskeys均为字符串类型\n    var action = args.action,\n      selectedRowKeys = args.selectedRows,\n      actionRowkey = args.actionRowkey,\n      actionRowskeys = args.actionRowskeys;\n    if (typeof actionRowkey === 'string' && actionRowkey.includes('detail')) {\n      instance.controller.setSelectedRows(selectedRowKeys); // 更新适配层表格数据\n      return;\n    }\n    var _getRowSelectedParams = (0, _paramsGetter.getRowSelectedParams)({\n        parentModel: parentModel,\n        model: model,\n        getInstance: getInstance,\n        getTableConfigImmediately: getTableConfigImmediately,\n        getTableOptions: getTableOptions,\n        actionRowkey: actionRowkey\n      }),\n      pageId = _getRowSelectedParams.pageId,\n      key = _getRowSelectedParams.key,\n      rowKey = _getRowSelectedParams.rowKey,\n      rowSelection = _getRowSelectedParams.rowSelection,\n      focusedCell = _getRowSelectedParams.focusedCell,\n      postCols = _getRowSelectedParams.postCols;\n    // todo: 点击行空白处不会设置焦点，获取当前点击行有问题\n    var focusRowKey = focusedCell.rowKey,\n      rowIndex = focusedCell.rowIndex,\n      code = focusedCell.code;\n    var tableConfig = getTableConfigImmediately();\n    var tableOptions = getTableOptions();\n    var tableApi = getTableApi();\n    var isClickNormalCell = tableApi.getIsClickNormalCell();\n    var hasSelectAllRow = tableOptions.getSelectAllRow();\n    var column = tableConfig.getDisplayColumn(code);\n    var gridType = tableConfig.gridType,\n      isScrollLoad = tableConfig.isScrollLoad;\n    if (!gridType) {\n      if ((0, _gridSelect.isClickSameCell)(instance)) {\n        return;\n      }\n    }\n\n    // #region =====处理选中行和选中行Key以及更新适配层表格数据=====\n    var _getSelectedDataset = getSelectedDataset({\n        selectedRowKeys: selectedRowKeys,\n        actionRowkey: actionRowkey,\n        actionRowskeys: actionRowskeys,\n        action: action,\n        getMergeModel: getMergeModel,\n        getInstance: getInstance,\n        getTableConfigImmediately: getTableConfigImmediately,\n        code: code\n      }),\n      nextSelectedRows = _getSelectedDataset.selectedRows,\n      nextSelectedRowKeys = _getSelectedDataset.selectedRowKeys,\n      nextActionRowKeys = _getSelectedDataset.nextActionRowKeys,\n      selectedAction = _getSelectedDataset.selectedAction;\n    // 接着更新适配层表格数据\n    instance.controller.setSelectedRows(nextSelectedRowKeys);\n    // #endregion =====处理选中行和选中行Key以及更新适配层表格数据=====\n\n    var rowKeyValue = rowSelection && rowSelection.type === 'radio' ? getSingleSelectRowKeyValue(nextSelectedRowKeys) : getMulSelectRowKeyValue({\n      selectedRows: nextSelectedRows,\n      action: action,\n      rowIndex: rowIndex,\n      focusRowKey: focusRowKey,\n      rowKey: rowKey,\n      actionRowkey: actionRowkey,\n      isClickNormalCell: isClickNormalCell\n    });\n\n    // 列表滚动加载行选中另外发请求处理\n    if (gridType === 'VIEWGRID' && isScrollLoad || hasSelectAllRow) {\n      // 当前点击的行\n      var activeRowKeyValue = getScrollLoadRowKeyValue({\n        action: action,\n        rowIndex: rowIndex,\n        focusRowKey: focusRowKey,\n        actionRowkey: actionRowkey\n      });\n      var pendingSelectedRowKeys = (0, _row.getPendingSelectedRowKeys)({\n        getInstance: getInstance,\n        rowKeyValue: activeRowKeyValue,\n        column: column,\n        actionRowKeys: nextActionRowKeys\n      });\n      var pendingSelectedRows = instance.controller.viewer.api.getRows(pendingSelectedRowKeys);\n      scrollLoadRowSelection({\n        action: selectedAction,\n        pageId: pageId,\n        key: key,\n        column: column,\n        getActionByKey: getActionByKey,\n        dispatch: dispatch,\n        postCols: postCols,\n        rowKeyValue: rowKeyValue,\n        pendingSelectedRowKeys: pendingSelectedRowKeys,\n        pendingSelectedRows: pendingSelectedRows,\n        gridType: gridType\n      });\n      return;\n    }\n    _index.poster.postRowClick({\n      pageId: pageId,\n      key: key,\n      dispatch: dispatch,\n      getActionByKey: getActionByKey,\n      postCols: postCols,\n      gridType: gridType,\n      getTableOptions: getTableOptions\n    })({\n      selectedRows: nextSelectedRows,\n      selectedRowKeys: nextSelectedRowKeys,\n      column: column,\n      rowKeyValue: rowKeyValue\n    });\n  };\n};\n\n/**\n * 行双击功能\n * 1. 发送请求 2.更新选中行\n * @param {Object} eventParams {type: typeName,args: {actionRowkey,effectRowskeys,action}}\n */\nvar handleRowDoubleClick = exports.handleRowDoubleClick = function handleRowDoubleClick(params) {\n  return function (eventParams) {\n    var dispatch = params.dispatch,\n      getActionByKey = params.getActionByKey,\n      parentModel = params.parentModel,\n      model = params.model,\n      getInstance = params.getInstance,\n      getTableConfigImmediately = params.getTableConfigImmediately,\n      getTableOptions = params.getTableOptions,\n      getTableApi = params.getTableApi,\n      getMergeModel = params.getMergeModel;\n    var _getRowSelectedParams2 = (0, _paramsGetter.getRowSelectedParams)({\n        parentModel: parentModel,\n        model: model,\n        getInstance: getInstance,\n        getTableConfigImmediately: getTableConfigImmediately,\n        getTableOptions: getTableOptions\n      }),\n      pageId = _getRowSelectedParams2.pageId,\n      key = _getRowSelectedParams2.key,\n      rowKey = _getRowSelectedParams2.rowKey,\n      rowSelection = _getRowSelectedParams2.rowSelection,\n      focusedCell = _getRowSelectedParams2.focusedCell,\n      postCols = _getRowSelectedParams2.postCols;\n    var focusRowKey = focusedCell.rowKey,\n      rowIndex = focusedCell.rowIndex,\n      code = focusedCell.code;\n    var instance = getInstance();\n    var args = eventParams.args;\n    var triggerAction = args.action,\n      selectedRows = args.selectedRows,\n      actionRowkey = args.actionRowkey,\n      actionRowskeys = args.actionRowskeys;\n    var selectedRowKeys = _toConsumableArray(selectedRows);\n    // #region 双击没有反选，都是选中，\n    // 强制设为选中\n    var action = 'check';\n    // 如果为反选，强制反转选中行\n    if (triggerAction === 'uncheck') {\n      selectedRowKeys.splice.apply(selectedRowKeys, [selectedRowKeys.length, 0].concat(_toConsumableArray(actionRowskeys)));\n    }\n    // #endregion 双击没有反选，都是选中，\n\n    if (typeof actionRowkey === 'string' && actionRowkey.includes('detail')) {\n      instance.controller.setSelectedRows(actionRowskeys); // 更新适配层表格数据\n      return;\n    }\n\n    // #region =====处理选中行和选中行Key以及更新适配层表格数据=====\n    var _getSelectedDataset2 = getSelectedDataset({\n        selectedRowKeys: selectedRowKeys,\n        actionRowkey: actionRowkey,\n        actionRowskeys: actionRowskeys,\n        action: action,\n        getMergeModel: getMergeModel,\n        getInstance: getInstance,\n        getTableConfigImmediately: getTableConfigImmediately,\n        code: code\n      }),\n      nextSelectedRows = _getSelectedDataset2.selectedRows,\n      nextSelectedRowKeys = _getSelectedDataset2.selectedRowKeys;\n    // 接着更新适配层表格数据\n\n    instance.controller.setSelectedRows(nextSelectedRowKeys);\n    // #endregion =====处理选中行和选中行Key以及更新适配层表格数据=====\n\n    var tableConfig = getTableConfigImmediately();\n    var column = tableConfig.getDisplayColumn(code);\n    var gridType = tableConfig.gridType,\n      isScrollLoad = tableConfig.isScrollLoad;\n    var rowKeyValue = rowSelection && rowSelection.type === 'radio' ? getSingleSelectRowKeyValue(nextSelectedRowKeys) : getMulSelectRowKeyValue({\n      selectedRows: nextSelectedRows,\n      action: action,\n      rowIndex: rowIndex,\n      focusRowKey: focusRowKey,\n      rowKey: rowKey,\n      actionRowkey: actionRowkey\n    });\n    var isAllClick = action === 'check-all' || action === 'uncheck-all';\n    // 点击的是非选择列才发,同时要考虑填充列\n    if (!isAllClick) {\n      var _instance = getInstance();\n      var tableOptions = getTableOptions();\n      var hasSelectAllRow = tableOptions.getSelectAllRow();\n      if (gridType === 'VIEWGRID' && isScrollLoad || hasSelectAllRow) {\n        var methodName = isSelectCol(column === null || column === void 0 ? void 0 : column.code) ? 'addRowSelection' : 'doubleClickRow';\n        var activeRowKeyValue = getScrollLoadRowKeyValue({\n          action: action,\n          rowIndex: rowIndex,\n          focusRowKey: focusRowKey,\n          actionRowkey: actionRowkey\n        });\n        var pendingSelectedRowKeys = (0, _row.getPendingSelectedRowKeys)({\n          getInstance: getInstance,\n          rowKeyValue: activeRowKeyValue,\n          column: column\n        });\n        var pendingSelectedRows = _instance.controller.viewer.api.getRows(pendingSelectedRowKeys);\n        _index.poster.postRowSelection({\n          pageId: pageId,\n          key: key,\n          getActionByKey: getActionByKey,\n          postCols: postCols,\n          dispatch: dispatch,\n          gridType: gridType\n        })({\n          methodName: methodName,\n          pendingSelectedRowKeys: pendingSelectedRowKeys,\n          pendingSelectedRows: pendingSelectedRows,\n          rowKeyValue: rowKeyValue,\n          column: column\n        });\n        return;\n      }\n\n      // 双击选择列发单击请求\n      if (isSelectCol(column === null || column === void 0 ? void 0 : column.code)) {\n        _index.poster.postRowClick({\n          pageId: pageId,\n          key: key,\n          dispatch: dispatch,\n          getActionByKey: getActionByKey,\n          postCols: postCols,\n          gridType: gridType,\n          getTableOptions: getTableOptions\n        })({\n          selectedRows: nextSelectedRows,\n          selectedRowKeys: nextSelectedRowKeys,\n          column: column,\n          code: code,\n          rowKeyValue: rowKeyValue\n        });\n      } else {\n        _index.poster.postRowDoubleClick({\n          pageId: pageId,\n          key: key,\n          dispatch: dispatch,\n          getActionByKey: getActionByKey,\n          postCols: postCols\n        })({\n          selectedRows: nextSelectedRows,\n          selectedRowKeys: nextSelectedRowKeys,\n          column: column,\n          rowKeyValue: rowKeyValue\n        });\n      }\n    }\n  };\n};\nfunction getSingleSelectRowKeyValue(selectedRowKeys) {\n  return selectedRowKeys.length > 0 ? selectedRowKeys[0] : -1;\n}\nfunction getMulSelectRowKeyValue(_ref) {\n  var selectedRows = _ref.selectedRows,\n    action = _ref.action,\n    rowIndex = _ref.rowIndex,\n    focusRowKey = _ref.focusRowKey,\n    rowKey = _ref.rowKey,\n    actionRowkey = _ref.actionRowkey,\n    isClickNormalCell = _ref.isClickNormalCell;\n  var rowKeyValue = -1;\n  if (action === 'check') {\n    // 单个选中\n    // getIsClickNormalCell 判断当前点击的是否是正常单元格，如果是空列的单元格 由于focusRowKey 逻辑在 RowClick 中处理，这里来不及处通过 focusRowKey 去判断\n    if (rowIndex > -1 && isClickNormalCell) {\n      rowKeyValue = focusRowKey;\n    } else {\n      // 点击自动充满空白列\n      rowKeyValue = Number(actionRowkey);\n    }\n  } else {\n    // 反选|全部选中|全部反选\n    if (selectedRows.length > 0) {\n      rowKeyValue = selectedRows[0][rowKey];\n    }\n  }\n  return rowKeyValue;\n}\nfunction getScrollLoadRowKeyValue(_ref2) {\n  var action = _ref2.action,\n    rowIndex = _ref2.rowIndex,\n    focusRowKey = _ref2.focusRowKey,\n    actionRowkey = _ref2.actionRowkey;\n  var rowKeyValue = -1;\n  if (action === 'check' || action === 'uncheck') {\n    if (rowIndex > -1) {\n      rowKeyValue = focusRowKey;\n    } else {\n      // 点击自动充满空白列\n      rowKeyValue = Number(actionRowkey);\n    }\n  }\n  return rowKeyValue;\n}\nfunction scrollLoadRowSelection(_ref3) {\n  var action = _ref3.action,\n    pageId = _ref3.pageId,\n    key = _ref3.key,\n    getActionByKey = _ref3.getActionByKey,\n    dispatch = _ref3.dispatch,\n    column = _ref3.column,\n    postCols = _ref3.postCols,\n    rowKeyValue = _ref3.rowKeyValue,\n    pendingSelectedRows = _ref3.pendingSelectedRows,\n    pendingSelectedRowKeys = _ref3.pendingSelectedRowKeys,\n    gridType = _ref3.gridType;\n  if (action === 'check-all' || action === 'uncheck-all') {\n    var _methodName = action === 'check-all' ? 'selectPageAllRows' : 'clearPageSelection';\n    _index.poster.postPageSelection({\n      pageId: pageId,\n      key: key,\n      getActionByKey: getActionByKey\n    })({\n      methodName: _methodName\n    });\n    return;\n  }\n  var methodName = action === 'check' ? 'addRowSelection' : 'clearRowSelection';\n  _index.poster.postRowSelection({\n    pageId: pageId,\n    key: key,\n    getActionByKey: getActionByKey,\n    postCols: postCols,\n    dispatch: dispatch,\n    gridType: gridType\n  })({\n    methodName: methodName,\n    rowKeyValue: rowKeyValue,\n    pendingSelectedRows: pendingSelectedRows,\n    pendingSelectedRowKeys: pendingSelectedRowKeys,\n    column: column\n  });\n}\nfunction isSelectCol(code) {\n  return code === null;\n}\nfunction getSelectedDataset(_ref4) {\n  var selectedRowKeys = _ref4.selectedRowKeys,\n    actionRowkey = _ref4.actionRowkey,\n    actionRowskeys = _ref4.actionRowskeys,\n    action = _ref4.action,\n    getMergeModel = _ref4.getMergeModel,\n    getInstance = _ref4.getInstance,\n    getTableConfigImmediately = _ref4.getTableConfigImmediately,\n    code = _ref4.code;\n  var _getSelectedRowsAfter = getSelectedRowsAfterMerge({\n      selectedRows: selectedRowKeys,\n      key: actionRowkey,\n      batchKeys: actionRowskeys,\n      action: action,\n      mergeModel: getMergeModel()\n    }),\n    nextSelectedRowKeys = _getSelectedRowsAfter.selectedRows,\n    nextActionRowKeys = _getSelectedRowsAfter.batchKeys,\n    selectedAction = _getSelectedRowsAfter.selectedAction;\n  var instance = getInstance();\n  var tableConfig = getTableConfigImmediately();\n  // 后续的nextSelectedRowKeys转为数字类型\n  nextSelectedRowKeys = getDigitalSelectedRowKeys(nextSelectedRowKeys);\n  var nextSelectedRows = instance.controller.getRows(nextSelectedRowKeys);\n\n  // 2.处理单击排他选中\n  // code 为null表示点击的是选择列\n  // todo: 点击列头全选要清空焦点单元格\n  var isAllClick = action === 'check-all' || action === 'uncheck-all';\n  // shift 选中不需要排他\n  if (!isSelectCol(code) && !isAllClick && nextActionRowKeys.length === 1) {\n    // 单据体排他选中处理\n    if ((0, _gridSelect.isExclusiveSelected)({\n      getTableConfigImmediately: getTableConfigImmediately\n    })) {\n      var _actionRowKey = parseInt(actionRowkey);\n      nextSelectedRowKeys = [_actionRowKey];\n      nextSelectedRows = instance.controller.getRows(nextSelectedRowKeys);\n    }\n  }\n\n  // 处理报表不开启选择列时单选不允许反选的场景\n  var gridType = tableConfig.gridType,\n    _tableConfig$rowSelec = tableConfig.rowSelection,\n    rowSelection = _tableConfig$rowSelec === void 0 ? {} : _tableConfig$rowSelec;\n  if (gridType === 'VIRTUALVIEWGRID' && !rowSelection.showSelectionColumn) {\n    var _actionRowKey2 = parseInt(actionRowkey);\n    nextSelectedRowKeys = [_actionRowKey2];\n    nextSelectedRows = instance.controller.getRows(nextSelectedRowKeys);\n  }\n  return {\n    selectedRowKeys: nextSelectedRowKeys,\n    selectedRows: nextSelectedRows,\n    nextActionRowKeys: nextActionRowKeys,\n    selectedAction: selectedAction\n  };\n}\nfunction getSelectedRowsAfterMerge(_ref5) {\n  var selectedRows = _ref5.selectedRows,\n    key = _ref5.key,\n    batchKeys = _ref5.batchKeys,\n    action = _ref5.action,\n    mergeModel = _ref5.mergeModel;\n  var selectedRowsRes = selectedRows;\n  var batchKeysRes = batchKeys;\n  var selectedAction = action;\n  if (mergeModel.hasMergeRow) {\n    var selectRowsSet = new Set(selectedRows);\n    var batchKeysAfterMerge = new Set(batchKeys);\n    // 不合并选择列时,处理点击合并的单元格的场景\n    if (mergeModel.suppressMergeSelect && mergeModel.currentColumnCode !== undefined && batchKeys.length === 1) {\n      // 行选中内部均为字符串类型的key,这里需修改值类型\n      var rowGroup = mergeModel.getRowGroup(batchKeys[0]).map(function (key) {\n        return key + '';\n      });\n      if (rowGroup.length > 1) {\n        if (action === 'uncheck') {\n          // 点击已选择的融合单元格，如果该组没有全部选中则全选，已经全部选中则反选\n          var isCancelAll = Array.from(rowGroup).every(function (_key) {\n            return selectRowsSet.has(_key) || _key === key; // selectRows返回的是选中/反选后的结果,当前行不在selectRows里面\n          });\n          if (isCancelAll) {\n            // 全部取消\n            var _iterator = _createForOfIteratorHelper(rowGroup),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var _key2 = _step.value;\n                selectRowsSet[\"delete\"](_key2);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          } else {\n            // 全选\n            selectRowsSet = new Set([].concat(_toConsumableArray(selectRowsSet), _toConsumableArray(rowGroup)));\n            // action为反选操作，但实际上是选中\n            selectedAction = 'check';\n          }\n        } else {\n          selectRowsSet = new Set([].concat(_toConsumableArray(selectedRowsRes), _toConsumableArray(rowGroup)));\n        }\n      }\n    }\n    // 融合选择行场景\n    if (!mergeModel.suppressMergeSelect) {\n      batchKeysAfterMerge = batchKeys.reduce(function (batchKeysAfterMerge, key) {\n        var rowGroup = mergeModel.getRowGroup(key).map(function (key) {\n          return key + '';\n        }); // 取主实体融合信息\n        return new Set([].concat(_toConsumableArray(batchKeysAfterMerge), _toConsumableArray(rowGroup)));\n      }, new Set());\n      var check = ['check', 'check-all'].includes(action);\n      var _iterator2 = _createForOfIteratorHelper(batchKeysAfterMerge),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _key3 = _step2.value;\n          check ? selectRowsSet.add(_key3) : selectRowsSet[\"delete\"](_key3);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n    selectedRowsRes = Array.from(selectRowsSet);\n    batchKeysRes = Array.from(batchKeysAfterMerge);\n    mergeModel.currentColumnCode = undefined;\n  }\n  return {\n    selectedRows: selectedRowsRes,\n    batchKeys: batchKeysRes,\n    selectedAction: selectedAction\n  };\n}\nfunction getDigitalSelectedRowKeys() {\n  var rowskeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return rowskeys.map(function (key) {\n    return Number(key);\n  }).sort(function (a, b) {\n    return a - b;\n  });\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/rowSelection.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/scrollLoad.js":
/*!*******************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/scrollLoad.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.index-of.js */ \"../../node_modules/core-js/modules/es.array.index-of.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar proxy = _interopRequireWildcard(__webpack_require__(/*! @/proxy/formproxy */ \"./src/proxy/formproxy.js\"));\nvar _ajaxState = __webpack_require__(/*! @/api/ajaxState */ \"./src/api/ajaxState.js\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nvar handleScrollLoad = function handleScrollLoad(params) {\n  return function (eventParams) {\n    var getTableOptions = params.getTableOptions,\n      model = params.model,\n      parentModel = params.parentModel,\n      getActionByKey = params.getActionByKey,\n      getTableConfigImmediately = params.getTableConfigImmediately,\n      getInstance = params.getInstance;\n    var useModel = parentModel || model;\n    var args = eventParams.args;\n    var startIndex = args.startIndex;\n    var tableOptions = getTableOptions();\n    var tableConfig = getTableConfigImmediately();\n    var instance = getInstance();\n    var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n\n    // dataCount 为0时不发getVirtualData请求，树形报表不走scrollLoad回调，走另外的逻辑\n    var dataCount = model.getDataProperty(['value', 'datacount']);\n    var isTreeVirtualView = tableConfig.gridType === _const.GRID_TYPE.virtualViewGrid && tableConfig.treeTable;\n    if (isTreeVirtualView || dataCount === 0 && tableConfig.gridType === _const.GRID_TYPE.virtualViewGrid) return;\n    var pageId = useModel.pageId,\n      key = useModel.key;\n    var blockSize = tableConfig.blockSize;\n    if (tableConfig.scrollLoadType === _const.SCROLL_LOAD_TYPE.serverSide) {\n      var rowDatas = instance.tableModel.getRowData();\n      var isScrollLoadedLastPage = tableOptions.getIsScrollLoadedLastPage();\n      // 滚动到最后且数据没加载完时才处理回调\n      if (startIndex !== rowDatas.length || isScrollLoadedLastPage) {\n        return;\n      }\n      var methodName = tableConfig.gridType === 'VIEWGRID' ? 'getRowData' : 'getVirtualData';\n      invokeControlMethodOnly && invokeControlMethodOnly({\n        pageId: pageId,\n        key: key\n      }, methodName, [startIndex, blockSize]);\n    } else if (tableConfig.scrollLoadType === _const.SCROLL_LOAD_TYPE.infinite) {\n      var loadedPages = tableOptions.getLoadedPages();\n      var page = Math.floor(startIndex / blockSize);\n      var index = loadedPages.indexOf(page);\n      if (index > -1) {\n        // 新的页数据回来时需要放到最后，保证页面刷新时可以取到最新的页码去重新请求数据\n        newPageSwapToLast(loadedPages, index);\n        tableOptions.setLoadedPages(loadedPages);\n        return;\n      }\n      var requestKey = (0, _ajaxState.makeAjaxKey)(pageId, key, 'getVirtualData');\n      proxy.disableDisposeAction(requestKey);\n      invokeControlMethodOnly && invokeControlMethodOnly({\n        pageId: pageId,\n        key: key\n      }, 'getVirtualData', [startIndex, blockSize]);\n      proxy.allowDisposeAction(requestKey);\n    }\n  };\n};\n\n// 把最新回来的页交换到数组最右边\nfunction newPageSwapToLast(arr, index) {\n  var temp = arr[index];\n  var length = arr.length;\n  arr[index] = arr[length - 1];\n  arr[length - 1] = temp;\n  return arr;\n}\nvar _default = exports[\"default\"] = handleScrollLoad;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/scrollLoad.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/setEditingCell.js":
/*!***********************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/setEditingCell.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar handleSetEditingCell = function handleSetEditingCell(params) {\n  return function (_ref) {\n    var args = _ref.args;\n    var rowKey = args.rowKey,\n      code = args.code,\n      record = args.record;\n    var setEditingCell = params.setEditingCell,\n      getTableApi = params.getTableApi;\n    if (rowKey === -1) {\n      setEditingCell({\n        rowKey: rowKey\n      });\n      return;\n    }\n    var isCellLocked = getTableApi().isCellLock(code, record);\n    if (!isCellLocked) {\n      setEditingCell({\n        rowKey: rowKey,\n        code: code\n      });\n    }\n  };\n};\nvar _default = exports[\"default\"] = handleSetEditingCell;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/setEditingCell.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/sort.js":
/*!*************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/sort.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.array.find.js */ \"../../node_modules/core-js/modules/es.array.find.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _params = __webpack_require__(/*! ../../../TableHelper/util/params */ \"./src/component/web/DataGrid/TableHelper/util/params.js\");\nvar _array = __webpack_require__(/*! ../../../TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _columns = __webpack_require__(/*! ../../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar handleSortChanged = function handleSortChanged(params) {\n  return function (eventParams) {\n    var _model$getMetaPropert;\n    var parentModel = params.parentModel,\n      model = params.model,\n      getActionByKey = params.getActionByKey,\n      getTableConfigImmediately = params.getTableConfigImmediately,\n      getInstance = params.getInstance,\n      getInternalEventService = params.getInternalEventService;\n    var tableConfig = getTableConfigImmediately();\n    var internalEventService = getInternalEventService();\n    var sortType = tableConfig.sortType;\n    var useModel = parentModel || model;\n    var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n    var columns = ((_model$getMetaPropert = model.getMetaProperty('columns')) === null || _model$getMetaPropert === void 0 ? void 0 : _model$getMetaPropert.toJS()) || [];\n    var args = eventParams.args;\n    var _getInstance = getInstance(),\n      tableModel = _getInstance.tableModel;\n    var currentSort = args.currentSort,\n      nextSorts = args.nextSorts;\n    tableModel.setIsSortActive(nextSorts.length > 0);\n    internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.afterSortChange\n    });\n    if (sortType !== _const.SORT_TYPES.service) return;\n\n    // 后端还不支持多项排序\n    //   const sendArgs = []\n    //   if (Array.isArray(args.data)) {\n    //     args.data.forEach(() => {\n    //       const colId = args.data[0].code\n    //       const order = args.data[0].order === 'desc' ? 2 : args.data.order === 'asc' ? 1 : 0\n    //       sendArgs.push([colId, order])\n    //     })\n    //   }\n\n    if (currentSort) {\n      var originColumnCode = (0, _columns.getOriginColumnCode)(currentSort.code);\n      var targetColumn = (0, _array.find)(columns, function (col) {\n        return col.dataIndex === originColumnCode;\n      });\n      var colId = (0, _params.getSortAndFilterColumnId)(originColumnCode, targetColumn);\n      var order = currentSort.order === 'desc' ? 2 : currentSort.order === 'asc' ? 1 : 0;\n      invokeControlMethodOnly(useModel, 'setRowSort', [colId, order]);\n    }\n  };\n};\nvar _default = exports[\"default\"] = handleSortChanged;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/sort.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/subGridRendered.js":
/*!************************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/subGridRendered.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar handleSubGridRendered = function handleSubGridRendered(params) {\n  return function (eventParams) {\n    var getInternalEventService = params.getInternalEventService;\n    var args = eventParams.args;\n    var trigger = args.trigger,\n      containerEleRef = args.containerEleRef,\n      mainEntityPrimaryKeyId = args.mainEntityPrimaryKeyId;\n    var internalEventService = getInternalEventService();\n    internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.subGridRendered,\n      params: {\n        trigger: trigger,\n        containerEleRef: containerEleRef,\n        mainEntityPrimaryKeyId: mainEntityPrimaryKeyId\n      }\n    });\n  };\n};\nvar _default = exports[\"default\"] = handleSubGridRendered;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/subGridRendered.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/subGridScroll.js":
/*!**********************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/subGridScroll.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar handleSubGridScroll = function handleSubGridScroll(params) {\n  return function (eventParams) {\n    var getInternalEventService = params.getInternalEventService;\n    var args = eventParams.args;\n    var direction = args.direction,\n      top = args.top,\n      left = args.left,\n      containerEleRef = args.containerEleRef,\n      mainEntityPrimaryKeyId = args.mainEntityPrimaryKeyId;\n    var internalEventService = getInternalEventService();\n    internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.subGridScroll,\n      params: {\n        direction: direction,\n        top: top,\n        left: left,\n        containerEleRef: containerEleRef,\n        mainEntityPrimaryKeyId: mainEntityPrimaryKeyId\n      }\n    });\n  };\n};\nvar _default = exports[\"default\"] = handleSubGridScroll;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/subGridScroll.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/tableRendered.js":
/*!**********************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/tableRendered.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar handleTableRendered = function handleTableRendered(params) {\n  return function (eventParams) {\n    var getInternalEventService = params.getInternalEventService;\n    var args = eventParams.args;\n    var trigger = args.trigger;\n    var internalEventService = getInternalEventService();\n    internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.baseTableRendered,\n      params: {\n        trigger: trigger\n      }\n    });\n  };\n};\nvar _default = exports[\"default\"] = handleTableRendered;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/tableRendered.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/eventHandleDLC/tableRowClick.js":
/*!**********************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/eventHandleDLC/tableRowClick.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar handleTableRowClick = function handleTableRowClick(params) {\n  return function (eventParams) {\n    var _rowData$cprop;\n    var getInstance = params.getInstance,\n      getTablePoster = params.getTablePoster,\n      getTableConfigImmediately = params.getTableConfigImmediately,\n      getTableApi = params.getTableApi;\n    var currentRowKey = eventParams.args.rowKey;\n    var instance = getInstance();\n    var tableConfig = getTableConfigImmediately();\n    var poster = getTablePoster();\n    var tableApi = getTableApi();\n    // 点击合计行\n    if (typeof currentRowKey === 'undefined') {\n      tableApi.setFocusedCell({\n        rowIndex: -1\n      });\n      tableApi.setIsClickNormalCell(false);\n      return;\n    }\n    // 点击自动充满列的单元格时,清空焦点单元格\n    if (!tableApi.getIsClickNormalCell()) {\n      tableApi.setFocusedCell({\n        rowIndex: -1\n      });\n    }\n    tableApi.setIsClickNormalCell(false);\n    var focusedCell = instance.controller.getFocusedCell();\n    var isCheckboxSelected = tableConfig.isCheckboxSelected;\n    var code = focusedCell.code,\n      rowIndex = focusedCell.rowIndex;\n    var column;\n    if (rowIndex > -1) {\n      // rowIndex === -1 为点击自动充满列单元格的场景，column为undefined\n      column = tableConfig.getDisplayColumn(code);\n    }\n    var rowData = instance.controller.getRow(currentRowKey);\n    // 排他选中且点击不是选中列，只发行点击，不选中(!column表示自动充满空白列)\n    if (isCheckboxSelected && (!column || column.code !== null) && !(rowData !== null && rowData !== void 0 && (_rowData$cprop = rowData.cprop) !== null && _rowData$cprop !== void 0 && _rowData$cprop.disabled)) {\n      poster.send({\n        type: 'editorRowClick',\n        args: {\n          rowKeyValue: currentRowKey,\n          column: column\n        }\n      });\n    }\n  };\n};\nvar _default = exports[\"default\"] = handleTableRowClick;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/eventHandleDLC/tableRowClick.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/event/index.js":
/*!***********************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/event/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.addEventHandles = addEventHandles;\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.promise.js */ \"../../node_modules/core-js/modules/es.promise.js\");\n/*\n * @Author: wqhui\n * @Date: 2021-07-06 15:41:53\n * @Description: 表格事件回调处理入口，提供函调的函数集和注册的函数\n */\n\nvar eventHandles = exports[\"default\"] = {}; // 表格事件回调处理\nfunction addEventHandles(type, cb) {\n  eventHandles[type] = function (commonParams) {\n    return function (eventParams) {\n      return new Promise(function (resolve) {\n        cb(commonParams)(eventParams);\n        resolve();\n      });\n    };\n  };\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/event/index.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/index.js":
/*!***********************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"getIsRowsChanged\", ({\n  enumerable: true,\n  get: function get() {\n    return _useDataValueChanged.getIsRowsChanged;\n  }\n}));\nObject.defineProperty(exports, \"useAutoSizeColumnWidth\", ({\n  enumerable: true,\n  get: function get() {\n    return _useAutoSizeColumnWidth.useAutoSizeColumnWidth;\n  }\n}));\nObject.defineProperty(exports, \"useColumnsChanged\", ({\n  enumerable: true,\n  get: function get() {\n    return _useColumnsChanged[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useContextMenu\", ({\n  enumerable: true,\n  get: function get() {\n    return _useContextMenu.useContextMenu;\n  }\n}));\nObject.defineProperty(exports, \"useDataTimestampUpdate\", ({\n  enumerable: true,\n  get: function get() {\n    return _useDataUpdate.useDataTimestampUpdate;\n  }\n}));\nObject.defineProperty(exports, \"useDataValueChanged\", ({\n  enumerable: true,\n  get: function get() {\n    return _useDataValueChanged[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useDataValueChangedMark\", ({\n  enumerable: true,\n  get: function get() {\n    return _useDataValueChanged.useDataValueChangedMark;\n  }\n}));\nObject.defineProperty(exports, \"useDisabledSelectAll\", ({\n  enumerable: true,\n  get: function get() {\n    return _useDisabledSelectAll[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useDropZoneChange\", ({\n  enumerable: true,\n  get: function get() {\n    return _useDropZoneChange[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useEdit\", ({\n  enumerable: true,\n  get: function get() {\n    return _useEdit.useEdit;\n  }\n}));\nObject.defineProperty(exports, \"useExtendScriptApi\", ({\n  enumerable: true,\n  get: function get() {\n    return _useExtendScriptApi[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useFmtInfoChanged\", ({\n  enumerable: true,\n  get: function get() {\n    return _useDataUpdate.useFmtInfoChanged;\n  }\n}));\nObject.defineProperty(exports, \"useFormStatusChanged\", ({\n  enumerable: true,\n  get: function get() {\n    return _useFormStatusChanged[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useInsertData\", ({\n  enumerable: true,\n  get: function get() {\n    return _useInsertData[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useKeyBoardEvent\", ({\n  enumerable: true,\n  get: function get() {\n    return _useKeyBoardEvent[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useOperationColPermission\", ({\n  enumerable: true,\n  get: function get() {\n    return _useOperationColPermission[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useResizeTableHeight\", ({\n  enumerable: true,\n  get: function get() {\n    return _useTableSize.useResizeTableHeight;\n  }\n}));\nObject.defineProperty(exports, \"useRowExpand\", ({\n  enumerable: true,\n  get: function get() {\n    return _useRowExpand.useRowExpand;\n  }\n}));\nObject.defineProperty(exports, \"useRowSelected\", ({\n  enumerable: true,\n  get: function get() {\n    return _useRowSelected[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useRowsChangeByRowOpereate\", ({\n  enumerable: true,\n  get: function get() {\n    return _useDataUpdate.useRowsChangeByRowOpereate;\n  }\n}));\nObject.defineProperty(exports, \"useRowsChangedAndSelectStateunchanged\", ({\n  enumerable: true,\n  get: function get() {\n    return _useDataUpdate.useRowsChangedAndSelectStateunchanged;\n  }\n}));\nObject.defineProperty(exports, \"useSavePersonaliedCache\", ({\n  enumerable: true,\n  get: function get() {\n    return _useSavePersonaliedCache[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useSetFocuedCell\", ({\n  enumerable: true,\n  get: function get() {\n    return _useSetFocuedCell.useSetFocuedCell;\n  }\n}));\nObject.defineProperty(exports, \"useSetOperationColLockStatus\", ({\n  enumerable: true,\n  get: function get() {\n    return _useSetOperationColLockStatus[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useShortCutSettingChange\", ({\n  enumerable: true,\n  get: function get() {\n    return _useShortCutSettingChange[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useSubGridAutoSizeColumnWidth\", ({\n  enumerable: true,\n  get: function get() {\n    return _useAutoSizeColumnWidth.useSubGridAutoSizeColumnWidth;\n  }\n}));\nObject.defineProperty(exports, \"useTableFocus\", ({\n  enumerable: true,\n  get: function get() {\n    return _useTableFocus[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useTableGlobalConfig\", ({\n  enumerable: true,\n  get: function get() {\n    return _useTableGlobalConfig[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useTablePoster\", ({\n  enumerable: true,\n  get: function get() {\n    return _useTablePoster.useTablePoster;\n  }\n}));\nObject.defineProperty(exports, \"useTableRendered\", ({\n  enumerable: true,\n  get: function get() {\n    return _useTableRendered[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useTableSize\", ({\n  enumerable: true,\n  get: function get() {\n    return _useTableSize[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useTableTracking\", ({\n  enumerable: true,\n  get: function get() {\n    return _useTableTracking[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useThemeChange\", ({\n  enumerable: true,\n  get: function get() {\n    return _useThemeChange[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useTreeVirtualDataLoaded\", ({\n  enumerable: true,\n  get: function get() {\n    return _useTreeVirtuualDataLoaded[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useUpdateDataOptions\", ({\n  enumerable: true,\n  get: function get() {\n    return _useDataUpdate.useUpdateDataOptions;\n  }\n}));\nObject.defineProperty(exports, \"useValidate\", ({\n  enumerable: true,\n  get: function get() {\n    return _useValidate[\"default\"];\n  }\n}));\nObject.defineProperty(exports, \"useWindowClick\", ({\n  enumerable: true,\n  get: function get() {\n    return _useWindowClick[\"default\"];\n  }\n}));\nvar _useSavePersonaliedCache = _interopRequireDefault(__webpack_require__(/*! ./useSavePersonaliedCache */ \"./src/component/web/DataGrid/KDTable/hooks/useSavePersonaliedCache.js\"));\nvar _useAutoSizeColumnWidth = __webpack_require__(/*! ./useAutoSizeColumnWidth */ \"./src/component/web/DataGrid/KDTable/hooks/useAutoSizeColumnWidth.js\");\nvar _useContextMenu = __webpack_require__(/*! ./useContextMenu */ \"./src/component/web/DataGrid/KDTable/hooks/useContextMenu.js\");\nvar _useSetFocuedCell = __webpack_require__(/*! ./useSetFocuedCell */ \"./src/component/web/DataGrid/KDTable/hooks/useSetFocuedCell.js\");\nvar _useDataUpdate = __webpack_require__(/*! ./useDataUpdate */ \"./src/component/web/DataGrid/KDTable/hooks/useDataUpdate.js\");\nvar _useRowSelected = _interopRequireDefault(__webpack_require__(/*! ./useRowSelected */ \"./src/component/web/DataGrid/KDTable/hooks/useRowSelected.js\"));\nvar _useTableGlobalConfig = _interopRequireDefault(__webpack_require__(/*! ./useTableGlobalConfig */ \"./src/component/web/DataGrid/KDTable/hooks/useTableGlobalConfig.js\"));\nvar _useKeyBoardEvent = _interopRequireDefault(__webpack_require__(/*! ./useKeyBoardEvent */ \"./src/component/web/DataGrid/KDTable/hooks/useKeyBoardEvent.js\"));\nvar _useTableRendered = _interopRequireDefault(__webpack_require__(/*! ./useTableRendered */ \"./src/component/web/DataGrid/KDTable/hooks/useTableRendered.js\"));\nvar _useSetOperationColLockStatus = _interopRequireDefault(__webpack_require__(/*! ./useSetOperationColLockStatus */ \"./src/component/web/DataGrid/KDTable/hooks/useSetOperationColLockStatus.js\"));\nvar _useDisabledSelectAll = _interopRequireDefault(__webpack_require__(/*! ./useDisabledSelectAll */ \"./src/component/web/DataGrid/KDTable/hooks/useDisabledSelectAll.js\"));\nvar _useTableSize = _interopRequireWildcard(__webpack_require__(/*! ./useTableSize */ \"./src/component/web/DataGrid/KDTable/hooks/useTableSize.js\"));\nvar _useColumnsChanged = _interopRequireDefault(__webpack_require__(/*! ./useColumnsChanged */ \"./src/component/web/DataGrid/KDTable/hooks/useColumnsChanged.js\"));\nvar _useThemeChange = _interopRequireDefault(__webpack_require__(/*! ./useThemeChange */ \"./src/component/web/DataGrid/KDTable/hooks/useThemeChange.js\"));\nvar _useOperationColPermission = _interopRequireDefault(__webpack_require__(/*! ./useOperationColPermission */ \"./src/component/web/DataGrid/KDTable/hooks/useOperationColPermission.js\"));\nvar _useInsertData = _interopRequireDefault(__webpack_require__(/*! ./useInsertData */ \"./src/component/web/DataGrid/KDTable/hooks/useInsertData.js\"));\nvar _useDataValueChanged = _interopRequireWildcard(__webpack_require__(/*! ./useDataValueChanged */ \"./src/component/web/DataGrid/KDTable/hooks/useDataValueChanged.js\"));\nvar _useEdit = __webpack_require__(/*! ./useEdit */ \"./src/component/web/DataGrid/KDTable/hooks/useEdit.js\");\nvar _useRowExpand = __webpack_require__(/*! ./useRowExpand */ \"./src/component/web/DataGrid/KDTable/hooks/useRowExpand.js\");\nvar _useTablePoster = __webpack_require__(/*! ./useTablePoster */ \"./src/component/web/DataGrid/KDTable/hooks/useTablePoster.js\");\nvar _useValidate = _interopRequireDefault(__webpack_require__(/*! ./useValidate */ \"./src/component/web/DataGrid/KDTable/hooks/useValidate.js\"));\nvar _useFormStatusChanged = _interopRequireDefault(__webpack_require__(/*! ./useFormStatusChanged */ \"./src/component/web/DataGrid/KDTable/hooks/useFormStatusChanged.js\"));\nvar _useTableFocus = _interopRequireDefault(__webpack_require__(/*! ./useTableFocus */ \"./src/component/web/DataGrid/KDTable/hooks/useTableFocus.js\"));\nvar _useWindowClick = _interopRequireDefault(__webpack_require__(/*! ./useWindowClick */ \"./src/component/web/DataGrid/KDTable/hooks/useWindowClick.js\"));\nvar _useTableTracking = _interopRequireDefault(__webpack_require__(/*! ./useTableTracking */ \"./src/component/web/DataGrid/KDTable/hooks/useTableTracking.js\"));\nvar _useTreeVirtuualDataLoaded = _interopRequireDefault(__webpack_require__(/*! ./useTreeVirtuualDataLoaded */ \"./src/component/web/DataGrid/KDTable/hooks/useTreeVirtuualDataLoaded.js\"));\nvar _useShortCutSettingChange = _interopRequireDefault(__webpack_require__(/*! ./useShortCutSettingChange */ \"./src/component/web/DataGrid/KDTable/hooks/useShortCutSettingChange.js\"));\nvar _useExtendScriptApi = _interopRequireDefault(__webpack_require__(/*! ./useExtendScriptApi */ \"./src/component/web/DataGrid/KDTable/hooks/useExtendScriptApi.js\"));\nvar _useDropZoneChange = _interopRequireDefault(__webpack_require__(/*! ./useDropZoneChange */ \"./src/component/web/DataGrid/KDTable/hooks/useDropZoneChange.js\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/index.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useAutoSizeColumnWidth.js":
/*!****************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useAutoSizeColumnWidth.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.autoSizeColumns = autoSizeColumns;\nexports.getGreedyPreferredWidthsMap = getGreedyPreferredWidthsMap;\nexports.useAutoSizeColumnWidth = useAutoSizeColumnWidth;\nexports.useSubGridAutoSizeColumnWidth = useSubGridAutoSizeColumnWidth;\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"../../node_modules/core-js/modules/es.array.reduce.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.map.js */ \"../../node_modules/core-js/modules/es.map.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.promise.js */ \"../../node_modules/core-js/modules/es.promise.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _lodash = __webpack_require__(/*! lodash */ \"../../node_modules/lodash/lodash.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _calculateColumnWidth = __webpack_require__(/*! ../../TableHelper/util/calculateColumnWidth */ \"./src/component/web/DataGrid/TableHelper/util/calculateColumnWidth.js\");\nvar _array = __webpack_require__(/*! ../../TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _columnWidthFit = __webpack_require__(/*! ../utils/columnWidthFit */ \"./src/component/web/DataGrid/KDTable/utils/columnWidthFit.js\");\nvar _personalizedSetting = __webpack_require__(/*! ../utils/personalizedSetting */ \"./src/component/web/DataGrid/KDTable/utils/personalizedSetting.js\");\nvar _columns = __webpack_require__(/*! ../../TableHelper/util/columns */ \"./src/component/web/DataGrid/TableHelper/util/columns.js\");\nvar _columns2 = __webpack_require__(/*! ../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _width = __webpack_require__(/*! ../../TableHelper/column/width */ \"./src/component/web/DataGrid/TableHelper/column/width.js\");\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _regexp = __webpack_require__(/*! ../../TableHelper/util/regexp */ \"./src/component/web/DataGrid/TableHelper/util/regexp.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar IGNORE_TRIGGRS = [_const.CONTEXT_MENU, 'columnResizedDoubleClick', 'rowExpand'];\nfunction useAutoSizeColumnWidth(_ref) {\n  var _model$meta$get, _parentModel$getDataP, _model$getDataPropert;\n  var readyed = _ref.readyed,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    containerEleRef = _ref.containerEleRef,\n    getInternalEventService = _ref.getInternalEventService,\n    getInstance = _ref.getInstance,\n    getTableOptions = _ref.getTableOptions,\n    model = _ref.model,\n    parentModel = _ref.parentModel;\n  var hadRenderColRef = (0, _react.useRef)({});\n  (0, _react.useEffect)(function () {\n    if (!readyed) {\n      return;\n    }\n    var internalEventService = getInternalEventService();\n    var getPersonalizedColumnWidthByCode = (0, _personalizedSetting.personalizedColumnWidthGetter)({\n      model: model,\n      getTableOptions: getTableOptions\n    });\n    var tableConfig = getTableConfigImmediately();\n    var autoSizeColumnsParams = {\n      getPersonalizedColumnWidthByCode: getPersonalizedColumnWidthByCode,\n      getTableConfigImmediately: getTableConfigImmediately,\n      containerEleRef: containerEleRef,\n      getTableOptions: getTableOptions,\n      getInstance: getInstance,\n      getInternalEventService: getInternalEventService\n    };\n    var handleTableScroll = function handleTableScroll(e) {\n      var params = e.params;\n      var direction = params.direction,\n        top = params.top,\n        left = params.left;\n      var tableOptions = getTableOptions();\n      var isColumnDraging = tableOptions.getColumnDraging();\n      // 正在拖拽列时，禁止列宽自适应\n      if (!(0, _columns2.isEnableAutoSizeColumns)({\n        getTableConfigImmediately: getTableConfigImmediately\n      }) || isColumnDraging) {\n        return;\n      }\n      if (direction === 'vertical' || direction === 'horizontal') {\n        tableOptions.setTableScrollOffset({\n          top: top,\n          left: left\n        });\n        var isBreak = function isBreak() {\n          var _tableOptions$getTabl, _tableOptions$getTabl2;\n          return ((_tableOptions$getTabl = tableOptions.getTableTableScrollOffset()) === null || _tableOptions$getTabl === void 0 ? void 0 : _tableOptions$getTabl.top) !== top || ((_tableOptions$getTabl2 = tableOptions.getTableTableScrollOffset()) === null || _tableOptions$getTabl2 === void 0 ? void 0 : _tableOptions$getTabl2.left) !== left;\n        };\n        handleAutoSizeColumnWidthByTableScroll(_objectSpread(_objectSpread(_objectSpread({}, params), autoSizeColumnsParams), {}, {\n          hadRenderColRef: hadRenderColRef,\n          isBreak: isBreak\n        }));\n      }\n    };\n    var doAutoSizeColumns = function doAutoSizeColumns(e) {\n      var params = e.params;\n      var targetColumns = params.targetColumns,\n        trigger = params.trigger;\n      var ignoreMaxWidth = IGNORE_TRIGGRS.includes(trigger);\n      var ignoreEditableColumn = trigger === _const.CONTEXT_MENU || trigger === 'columnResizedDoubleClick' ? true : undefined;\n      if (!(0, _columns2.isEnableAutoSizeColumns)({\n        getTableConfigImmediately: getTableConfigImmediately,\n        trigger: trigger\n      })) {\n        autoSizeTreeExpandCol({\n          autoSizeColumnsParams: autoSizeColumnsParams,\n          getInstance: getInstance,\n          getTableConfigImmediately: getTableConfigImmediately\n        });\n        return;\n      }\n      autoSizeColumns(_objectSpread(_objectSpread({}, autoSizeColumnsParams), {}, {\n        targetColumns: targetColumns,\n        ignoreMaxWidth: ignoreMaxWidth,\n        ignoreEditableColumn: ignoreEditableColumn,\n        trigger: trigger\n      }));\n    };\n    var _autoSizeColumns = function _autoSizeColumns() {\n      // internalEventService.removeEventListener(KD_TABLE_EVENT_NAMES.baseTableRendered, _autoSizeColumns)\n      // internalEventService.removeEventListener(KD_TABLE_EVENT_NAMES.scroll, handleTableScroll)\n      setTimeout(function () {\n        internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.scroll, handleTableScroll);\n        if (!(0, _columns2.isEnableAutoSizeColumns)({\n          getTableConfigImmediately: getTableConfigImmediately\n        })) {\n          autoSizeTreeExpandCol({\n            autoSizeColumnsParams: autoSizeColumnsParams,\n            getInstance: getInstance,\n            getTableConfigImmediately: getTableConfigImmediately\n          });\n          return;\n        }\n        var allDisplayCols = (0, _columns.getAllDisplayColumns)(tableConfig.getColumns(), containerEleRef.current);\n        autoSizeColumns(_objectSpread(_objectSpread({}, autoSizeColumnsParams), {}, {\n          allDisplayCols: allDisplayCols\n        }));\n        markInitRenderedColumns(hadRenderColRef, allDisplayCols);\n      }, 0);\n    };\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.baseTableRendered, _autoSizeColumns, false, true);\n    // 其他地方可直接触发该事件调用自适应方法\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns, doAutoSizeColumns);\n    return function () {\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.baseTableRendered, _autoSizeColumns);\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.scroll, handleTableScroll);\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns, doAutoSizeColumns);\n    };\n  }, [readyed, // 列定义改变\n  (_model$meta$get = model.meta.get('columns')) === null || _model$meta$get === void 0 ? void 0 : _model$meta$get.hashCode(), // 行数据改变\n  parentModel === null || parentModel === void 0 || (_parentModel$getDataP = parentModel.getDataProperty(['value', 'rows'])) === null || _parentModel$getDataP === void 0 ? void 0 : _parentModel$getDataP.hashCode(), (_model$getDataPropert = model.getDataProperty(['value', 'rows'])) === null || _model$getDataPropert === void 0 ? void 0 : _model$getDataPropert.hashCode()]);\n}\nfunction useSubGridAutoSizeColumnWidth(_ref2) {\n  var _model$getDataPropert2;\n  var readyed = _ref2.readyed,\n    getTableConfigImmediately = _ref2.getTableConfigImmediately,\n    getInternalEventService = _ref2.getInternalEventService,\n    getInstance = _ref2.getInstance,\n    getTableOptions = _ref2.getTableOptions,\n    model = _ref2.model;\n  var hadRenderColRef = (0, _react.useRef)({});\n  (0, _react.useEffect)(function () {\n    if (!readyed) {\n      return;\n    }\n    var internalEventService = getInternalEventService();\n    var getPersonalizedColumnWidthByCode = (0, _personalizedSetting.personalizedColumnWidthGetter)({\n      model: model,\n      getTableOptions: getTableOptions\n    });\n    var tableConfig = getTableConfigImmediately();\n    var subGridConfig = tableConfig.subGridConfig;\n    if (!subGridConfig) {\n      return;\n    }\n    var getSubTableConfigImmediately = function getSubTableConfigImmediately(mainEntityPrimaryKeyId) {\n      var tableConfig = getTableConfigImmediately();\n      var instance = getInstance();\n      var subGridConfig = tableConfig.subGridConfig,\n        columnResizeMode = tableConfig.columnResizeMode,\n        seqKey = tableConfig.seqKey;\n      return {\n        columnResizeMode: columnResizeMode,\n        seqKey: seqKey,\n        getColumns: subGridConfig.getColumns,\n        setColumns: function setColumns(columns) {\n          instance.controller.setSubGridColumns({\n            columns: columns,\n            mainEntityPrimaryKeyId: mainEntityPrimaryKeyId\n          });\n        }\n      };\n    };\n    var autoSizeColumnsParams = {\n      getPersonalizedColumnWidthByCode: getPersonalizedColumnWidthByCode,\n      getTableOptions: getTableOptions,\n      getInstance: getInstance,\n      getInternalEventService: getInternalEventService,\n      getExpectedFullWidth: function getExpectedFullWidth() {\n        return (0, _columnWidthFit.getExpectedFullWidthOfSubGrid)(getTableOptions());\n      }\n    };\n    var handleTableScroll = function handleTableScroll(_ref3) {\n      var params = _ref3.params;\n      var direction = params.direction,\n        top = params.top,\n        containerEleRef = params.containerEleRef,\n        mainEntityPrimaryKeyId = params.mainEntityPrimaryKeyId;\n      // const tableOptions = getTableOptions()\n      var _getTableConfigImmedi = getTableConfigImmediately(),\n        autoHeight = _getTableConfigImmedi.autoHeight,\n        columnResizeMode = _getTableConfigImmedi.columnResizeMode;\n      // 非列宽自适应模式、开启行高自适应不处理\n      if (columnResizeMode !== _const.TABLE_COLUMN_RESIZE_MODE.adaptive || autoHeight) {\n        return;\n      }\n      if (direction === 'vertical' || direction === 'horizontal') {\n        // const isBreak = () => tableOptions.getTableTableScrollOffset() !== top\n        handleAutoSizeColumnWidthByTableScroll(_objectSpread(_objectSpread(_objectSpread({}, params), autoSizeColumnsParams), {}, {\n          containerEleRef: containerEleRef,\n          getTableConfigImmediately: function getTableConfigImmediately() {\n            return getSubTableConfigImmediately(mainEntityPrimaryKeyId);\n          },\n          hadRenderColRef: hadRenderColRef\n        }));\n      }\n    };\n    var _autoSizeColumns = function _autoSizeColumns(_ref4) {\n      var params = _ref4.params;\n      var containerEleRef = params.containerEleRef,\n        mainEntityPrimaryKeyId = params.mainEntityPrimaryKeyId;\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.subGridScroll, handleTableScroll);\n      setTimeout(function () {\n        internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.subGridScroll, handleTableScroll);\n        if (!(0, _columns2.isEnableAutoSizeColumns)({\n          getTableConfigImmediately: getTableConfigImmediately\n        })) {\n          return;\n        }\n        autoSizeColumns(_objectSpread(_objectSpread({}, autoSizeColumnsParams), {}, {\n          containerEleRef: containerEleRef,\n          getTableConfigImmediately: function getTableConfigImmediately() {\n            return getSubTableConfigImmediately(mainEntityPrimaryKeyId);\n          }\n        }));\n      }, 0);\n    };\n    var doSubTableAutoSizeColumns = function doSubTableAutoSizeColumns(_ref5) {\n      var params = _ref5.params;\n      var targetColumns = params.targetColumns,\n        trigger = params.trigger,\n        containerEleRef = params.containerEleRef,\n        mainEntityPrimaryKeyId = params.mainEntityPrimaryKeyId;\n      if (!(0, _columns2.isEnableAutoSizeColumns)({\n        getTableConfigImmediately: getTableConfigImmediately,\n        trigger: trigger\n      })) {\n        return;\n      }\n      var ignoreMaxWidth = trigger === _const.CONTEXT_MENU;\n      autoSizeColumns(_objectSpread(_objectSpread({}, autoSizeColumnsParams), {}, {\n        containerEleRef: containerEleRef,\n        getTableConfigImmediately: function getTableConfigImmediately() {\n          return getSubTableConfigImmediately(mainEntityPrimaryKeyId);\n        },\n        targetColumns: targetColumns,\n        ignoreMaxWidth: ignoreMaxWidth\n      }));\n    };\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.subGridRendered, _autoSizeColumns);\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.doSubTableAutoSizeColumns, doSubTableAutoSizeColumns);\n    return function () {\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.subGridRendered, _autoSizeColumns);\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.subGridScroll, handleTableScroll);\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.doSubTableAutoSizeColumns, doSubTableAutoSizeColumns);\n    };\n  }, [readyed, // 列定义改变\n  (_model$getDataPropert2 = model.getDataProperty(['subMeta'])) === null || _model$getDataPropert2 === void 0 || (_model$getDataPropert2 = _model$getDataPropert2.get('columns')) === null || _model$getDataPropert2 === void 0 ? void 0 : _model$getDataPropert2.hashCode()]);\n}\n\n/**\n * 表格列宽自适应\n * @param {object} params\n * @param {[]} [params.allDisplayCols] 当前显示的所有列，用以获得当前所有列之和，可以为空\n * @param {[]} [params.targetColumns] 预期自适应的所有列，如果为空可自适应当前显示的所有列\n * @returns\n */\nfunction autoSizeColumns(_ref6) {\n  var _getInstance$controll;\n  var getTableConfigImmediately = _ref6.getTableConfigImmediately,\n    allDisplayCols = _ref6.allDisplayCols,\n    targetColumns = _ref6.targetColumns,\n    ignoreMaxWidth = _ref6.ignoreMaxWidth,\n    ignoreEditableColumn = _ref6.ignoreEditableColumn,\n    containerEleRef = _ref6.containerEleRef,\n    getPersonalizedColumnWidthByCode = _ref6.getPersonalizedColumnWidthByCode,\n    getTableOptions = _ref6.getTableOptions,\n    getInstance = _ref6.getInstance,\n    trigger = _ref6.trigger,\n    getInternalEventService = _ref6.getInternalEventService,\n    getExpectedFullWidth = _ref6.getExpectedFullWidth;\n  var internalEventService = getInternalEventService();\n  var shouldRerender = trigger !== 'afterDrag';\n  var tableConfig = getTableConfigImmediately();\n  var seqKey = tableConfig.seqKey,\n    columnResizeMode = tableConfig.columnResizeMode,\n    autoHeight = tableConfig.autoHeight,\n    titleAutoHeight = tableConfig.titleAutoHeight;\n  var tableOptions = getTableOptions();\n  var instance = getInstance();\n  var personalizedColumnWidth = tableOptions.getPersonalizedColumnWidth();\n  var columns = tableConfig.getColumns();\n  allDisplayCols = allDisplayCols || (0, _columns.getAllDisplayColumns)(columns, containerEleRef.current);\n  var targetCols = targetColumns || allDisplayCols;\n  var rowDataCount = instance.controller.getRows().length;\n  // 数据为空时，存在个性化列宽的列不需要自适应\n  if (rowDataCount === 0) {\n    targetCols = targetCols.filter(function (col) {\n      var code = col.code;\n      var personalizedColumnWidth = getPersonalizedColumnWidthByCode(code, _const.PERSONALIZED_AUTOSIZE_COLUMN_WIDTH);\n      return personalizedColumnWidth === undefined;\n    });\n  }\n  var ignoreMaxWidthColCode = (_getInstance$controll = getInstance().controller) === null || _getInstance$controll === void 0 ? void 0 : _getInstance$controll.getExpandColCode();\n  var _getAutoSizedColumns = getAutoSizedColumns({\n      columns: targetCols,\n      getPersonalizedColumnWidthByCode: getPersonalizedColumnWidthByCode,\n      colLockInfo: getTableOptions().getColLockInfo(),\n      ignoreEditableColumn: ignoreEditableColumn,\n      ignoreMaxWidthColCodes: [ignoreMaxWidthColCode]\n    }),\n    autoSizedColumns = _getAutoSizedColumns.autoSizedColumns;\n  if (autoSizedColumns.length === 0) {\n    return;\n  }\n  var tableViewWidth = tableOptions.getTableSize().width;\n  var scrollBarWidth = tableOptions.getScrollBarSize().width;\n  var autoSizedGroupColumns = getAutoSizeGroupColumns(columns);\n  var preferredWidths = getAutoSizedColumnsPreferredWidth({\n    autoSizedColumns: [].concat(_toConsumableArray(autoSizedColumns), _toConsumableArray(autoSizedGroupColumns)),\n    containerEleRef: containerEleRef,\n    ignoreMaxWidth: ignoreMaxWidth\n  });\n  // 处理分组列的场景\n  var widthsMap = new Map(preferredWidths.map(function (item) {\n    return [item.colId, item.width];\n  }));\n  preferredWidths = processGroupHeaderCells(columns, widthsMap);\n  // 空数据自适应时每列多加60px宽度\n  if (rowDataCount === 0) {\n    preferredWidths = preferredWidths.map(function (item) {\n      var width = item.width,\n        colId = item.colId;\n      if (colId !== seqKey) {\n        item.width = width + _gridConst.EMPTY_DATA_COL_PADDING;\n      }\n      return item;\n    });\n  }\n  var preferredWidthsMap = getGreedyPreferredWidthsMap({\n    allDisplayCols: allDisplayCols,\n    preferredWidthsMap: new Map(preferredWidths.map(function (item) {\n      return [item.colId, item.width];\n    })),\n    seqKey: seqKey,\n    tableViewWidth: tableViewWidth,\n    scrollBarWidth: scrollBarWidth,\n    getPersonalizedColumnWidthByCode: getPersonalizedColumnWidthByCode,\n    treeExpandcolCode: ignoreMaxWidthColCode\n  });\n  var getAddapterCols = function getAddapterCols(columns) {\n    return columns.map(function (column) {\n      if (!(0, _array.isLeafNode)(column)) {\n        column.children = getAddapterCols(column.children);\n        return column;\n      }\n      var code = column.code;\n      var preferredWidth = preferredWidthsMap.get(code);\n      var originColumnCode = (0, _columns2.getOriginColumnCode)(code);\n      if (preferredWidth > 0) {\n        personalizedColumnWidth[_const.PERSONALIZED_AUTOSIZE_COLUMN_WIDTH][originColumnCode] = preferredWidth;\n        if (shouldRerender) {\n          return _objectSpread(_objectSpread({}, column), {}, {\n            width: preferredWidth\n          });\n        }\n      }\n      return column;\n    });\n  };\n  columns = getAddapterCols(columns);\n\n  // 自适应充满模式，充满表格\n  // todo: 可能跟默认的表格大小改变，充满表格冲突，需加标识\n  if (columnResizeMode === _const.TABLE_COLUMN_RESIZE_MODE.fit) {\n    columns = (0, _columnWidthFit.getFitedTableSizeColumns)({\n      columns: columns,\n      getTableOptions: getTableOptions,\n      getTableConfigImmediately: getTableConfigImmediately,\n      containerWidth: getExpectedFullWidth === null || getExpectedFullWidth === void 0 ? void 0 : getExpectedFullWidth()\n    });\n  }\n  tableOptions.setPersonalizedColumnWidth(personalizedColumnWidth);\n  if (shouldRerender) {\n    tableConfig.setColumns(columns);\n    // 开启行高自适应或者标题自适应时，列宽自适应后需要重新计算表头高度\n    internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.afterColumnAutoSize,\n      params: {\n        trigger: _const.CONTEXT_MENU\n      }\n    });\n  }\n}\nfunction getAutoSizedColumnsPreferredWidth(_ref7) {\n  var autoSizedColumns = _ref7.autoSizedColumns,\n    containerEleRef = _ref7.containerEleRef,\n    ignoreMaxWidth = _ref7.ignoreMaxWidth;\n  var getHeaderCellSelector = function getHeaderCellSelector(colId) {\n    var codeMatchStr = (0, _regexp.isIncludeNewlineCharacter)(colId) ? \"[data-escap-code=\\\"\".concat((0, _regexp.getMatchEscapeNewlineCharacteStr)(colId), \"\\\"]\") : \"[data-code=\\\"\".concat(colId, \"\\\"]\");\n    return \".kd-table-header .kd-table-header-cell\".concat(codeMatchStr);\n  };\n  var getBodyCellSelector = function getBodyCellSelector(colId) {\n    var codeMatchStr = (0, _regexp.isIncludeNewlineCharacter)(colId) ? \"[data-escap-code=\\\"\".concat((0, _regexp.getMatchEscapeNewlineCharacteStr)(colId), \"\\\"]\") : \"[data-code=\\\"\".concat(colId, \"\\\"]\");\n    return \".kd-table-row:not([data-row-detail-key]) .kd-table-cell\".concat(codeMatchStr);\n  };\n  var getAppendContainerSelector = function getAppendContainerSelector() {\n    return '.kd-table-body';\n  };\n  var columnPreferredWidths = (0, _calculateColumnWidth.calculatePreferredColumnsWidth)({\n    columns: autoSizedColumns,\n    ignoreMaxWidth: ignoreMaxWidth,\n    selector: {\n      headerCell: getHeaderCellSelector,\n      bodyCell: getBodyCellSelector,\n      appendContainer: getAppendContainerSelector\n    },\n    eGridContainer: containerEleRef.current\n  });\n  return columnPreferredWidths;\n}\n\n/**\n * @return { autoSizedColumns, autoSizedOriginColumns }\n */\nfunction getAutoSizedColumns(_ref8) {\n  var columns = _ref8.columns,\n    getPersonalizedColumnWidthByCode = _ref8.getPersonalizedColumnWidthByCode,\n    ignoreEditableColumn = _ref8.ignoreEditableColumn,\n    colLockInfo = _ref8.colLockInfo,\n    ignoreMaxWidthColCodes = _ref8.ignoreMaxWidthColCodes;\n  var autoSizedColumns = [];\n  var autoSizedOriginColumns = [];\n  function processCallback(column) {\n    if ((0, _columns2.shouldAutoSizedColumn)({\n      column: column,\n      ignoreEditableColumn: ignoreEditableColumn,\n      colLockInfo: colLockInfo\n    })) {\n      autoSizedOriginColumns.push(column);\n      autoSizedColumns.push(getAutoSizeColumn({\n        column: column,\n        getPersonalizedColumnWidthByCode: getPersonalizedColumnWidthByCode,\n        ignoreMaxWidthColCodes: ignoreMaxWidthColCodes\n      }));\n    }\n  }\n  (0, _array.iterateColumns)(columns, processCallback);\n  return {\n    autoSizedColumns: autoSizedColumns,\n    autoSizedOriginColumns: autoSizedOriginColumns\n  };\n}\nfunction getAutoSizeColumn(_ref9) {\n  var column = _ref9.column,\n    getPersonalizedColumnWidthByCode = _ref9.getPersonalizedColumnWidthByCode,\n    ignoreMaxWidthColCodes = _ref9.ignoreMaxWidthColCodes;\n  var code = column.code,\n    width = column.width,\n    extendParams = column.extendParams,\n    minWidth = column.minWidth;\n  var metaColWidth = extendParams.metaColWidth;\n  return {\n    colId: code,\n    maxWidth: getPersonalizedColumnWidthByCode ? getPersonalizedColumnWidthByCode(code, _const.PERSONALIZED_COLUMN_MAX_WIDTH) : null,\n    preWidth: width,\n    metaColWidth: metaColWidth,\n    minWidth: minWidth,\n    isIgnoreMaxWidth: ignoreMaxWidthColCodes === null || ignoreMaxWidthColCodes === void 0 ? void 0 : ignoreMaxWidthColCodes.includes(code) // 树形单据体rk列做展开列，需要自适应且不限制最大宽度\n  };\n}\nfunction getAutoSizeGroupColumns(columns) {\n  var autoSizedGroupColumns = [];\n  (0, _array.iterateParentsColumns)(columns, function (groupCol) {\n    var code = groupCol.code;\n    autoSizedGroupColumns.push({\n      colId: code,\n      maxWidth: null\n    });\n  });\n  return autoSizedGroupColumns;\n}\n\n// 将分组列的列宽加入到列宽自适应逻辑中，使分组列可以展示完全\nfunction processGroupHeaderCells(columns, widthsMap) {\n  var newPreferredWidths = [];\n  var processGroupCell = function processGroupCell(col) {\n    if ((0, _array.isLeafNode)(col)) {\n      return;\n    }\n    var getChildrenWidthSum = function getChildrenWidthSum(cols) {\n      return cols.reduce(function (sum, col) {\n        var hide = col.hide;\n        if (hide) {\n          return sum;\n        }\n        return sum + ((0, _array.isLeafNode)(col) ? widthsMap.get(col.code) : processGroupCell(col));\n      }, 0);\n    };\n    var childrenWidthSum = getChildrenWidthSum(col.children);\n    var curGourpCellWidth = widthsMap.get(col.code);\n    if (curGourpCellWidth > childrenWidthSum) {\n      // 找到当前节点应该有多少叶子后代节点\n      var leafChild = 0;\n      (0, _array.iterateColumns)(col.children, function (col) {\n        leafChild = col.hide ? leafChild : leafChild + 1;\n      });\n      // 所有叶子后代节点均分多余的宽度\n      var addtionWidth = Math.ceil((curGourpCellWidth - childrenWidthSum) / leafChild);\n      (0, _array.iterateColumns)(col.children, function (col) {\n        widthsMap.set(col.code, widthsMap.get(col.code) + addtionWidth);\n      });\n    }\n    return Math.max(curGourpCellWidth, childrenWidthSum);\n  };\n  columns.forEach(function (col) {\n    return processGroupCell(col);\n  });\n  (0, _array.iterateColumns)(columns, function (col) {\n    var code = col.code;\n    widthsMap.get(code) !== undefined && newPreferredWidths.push({\n      width: widthsMap.get(code),\n      colId: code\n    });\n  });\n  return newPreferredWidths;\n}\n/* 滚动自适应 -------------------------------------------------------------------- */\n\nvar handleAutoSizeColumnWidthByTableScroll = (0, _lodash.debounce)(function (params) {\n  handleAutoSizeColumnsByScroll(params);\n}, 200);\nfunction handleAutoSizeColumnsByScroll(_ref10) {\n  var _getInstance$controll2;\n  var direction = _ref10.direction,\n    getTableConfigImmediately = _ref10.getTableConfigImmediately,\n    getTableOptions = _ref10.getTableOptions,\n    containerEleRef = _ref10.containerEleRef,\n    hadRenderColRef = _ref10.hadRenderColRef,\n    getPersonalizedColumnWidthByCode = _ref10.getPersonalizedColumnWidthByCode,\n    isBreak = _ref10.isBreak,\n    getInstance = _ref10.getInstance;\n  var tableConfig = getTableConfigImmediately();\n  var columns = tableConfig.getColumns();\n  var allDisplayCols = (0, _columns.getAllDisplayColumns)(columns, containerEleRef.current);\n  var ignoreMaxWidthColCode = (_getInstance$controll2 = getInstance().controller) === null || _getInstance$controll2 === void 0 ? void 0 : _getInstance$controll2.getExpandColCode();\n  var _getAutoSizedColumns2 = getAutoSizedColumns({\n      columns: allDisplayCols,\n      getPersonalizedColumnWidthByCode: getPersonalizedColumnWidthByCode,\n      colLockInfo: getTableOptions().getColLockInfo(),\n      ignoreMaxWidthColCodes: [ignoreMaxWidthColCode]\n    }),\n    autoSizedColumns = _getAutoSizedColumns2.autoSizedColumns,\n    autoSizedOriginColumns = _getAutoSizedColumns2.autoSizedOriginColumns;\n  if (autoSizedColumns.length === 0) {\n    return;\n  }\n  var columnPreferredWidthsMap = new Map();\n  var handleAutoSizeCol = function handleAutoSizeCol(column) {\n    var _getAutoSizedColumnsP = getAutoSizedColumnsPreferredWidth({\n        autoSizedColumns: [column],\n        containerEleRef: containerEleRef\n      }),\n      _getAutoSizedColumnsP2 = _slicedToArray(_getAutoSizedColumnsP, 1),\n      preferredWidth = _getAutoSizedColumnsP2[0];\n    if (!preferredWidth) {\n      return;\n    }\n    var colId = preferredWidth.colId,\n      width = preferredWidth.width;\n    // 横向滚动自适应需要考虑初始没渲染的列，否则初始列宽很长的情况下不会做自适应\n    var isWidethanPreWidth = width > 0 && width > column.preWidth;\n    if (direction === 'vertical') {\n      isWidethanPreWidth && columnPreferredWidthsMap.set(colId, width);\n    } else if (direction === 'horizontal') {\n      // 已经渲染过的列仅处理变宽情况\n      if (hadRenderColRef.current[colId]) {\n        isWidethanPreWidth && columnPreferredWidthsMap.set(colId, width);\n      } else {\n        // 没渲染过的列列宽不等时做自适应\n        var isEqualPreWidth = width > 0 && width !== column.preWidth;\n        isEqualPreWidth && columnPreferredWidthsMap.set(colId, width);\n        hadRenderColRef.current[colId] = true;\n      }\n    }\n  };\n  new Promise(function (resolve) {\n    (0, _array.piecewiseIterator)(_toConsumableArray(autoSizedColumns), handleAutoSizeCol, {\n      resolve: resolve,\n      isBreak: isBreak\n    });\n  }).then(function (result) {\n    var status = result.status;\n    if (status === 'finish') {\n      var tableOptions = getTableOptions();\n      var personalizedColumnWidth = tableOptions.getPersonalizedColumnWidth();\n      // 这里会修改原对象=>columns\n      autoSizedOriginColumns.forEach(function (column) {\n        var code = column.code;\n        var preferredWidth = columnPreferredWidthsMap.get(code);\n        var originColumnCode = (0, _columns2.getOriginColumnCode)(code);\n        if (preferredWidth > 0) {\n          column.width = personalizedColumnWidth[_const.PERSONALIZED_AUTOSIZE_COLUMN_WIDTH][originColumnCode] = preferredWidth;\n        }\n      });\n      if (tableConfig.columnResizeMode === _const.TABLE_COLUMN_RESIZE_MODE.fit) {\n        columns = (0, _columnWidthFit.getFitedTableSizeColumns)({\n          columns: columns,\n          getTableOptions: getTableOptions,\n          getTableConfigImmediately: getTableConfigImmediately\n        });\n      }\n      tableOptions.setPersonalizedColumnWidth(personalizedColumnWidth);\n      tableConfig.setColumns(columns);\n    }\n  });\n}\nvar AUTO_SIZE_COL_MAX_PADDING = 64;\nvar GREEDY_GRID_WIDTH_MAX_RATE = 0.7;\nvar GREEDY_DIFF = 5;\nfunction getGreedyPreferredWidthsMap(_ref11) {\n  var allDisplayCols = _ref11.allDisplayCols,\n    preferredWidthsMap = _ref11.preferredWidthsMap,\n    seqKey = _ref11.seqKey,\n    tableViewWidth = _ref11.tableViewWidth,\n    scrollBarWidth = _ref11.scrollBarWidth,\n    getPersonalizedColumnWidthByCode = _ref11.getPersonalizedColumnWidthByCode,\n    treeExpandcol = _ref11.treeExpandcol,\n    treeExpandcolCode = _ref11.treeExpandcolCode;\n  if (tableViewWidth && preferredWidthsMap.size > 0) {\n    var totalWidth = Math.floor(tableViewWidth - 2 - scrollBarWidth);\n    var nextWidthCollection = {\n      visibleColumnsWidthCount: 0,\n      metaColWidths: {}\n    };\n    (0, _array.iterateColumns)(allDisplayCols, function (col) {\n      var code = col.code,\n        width = col.width,\n        extendParams = col.extendParams;\n      var preferredWidth = preferredWidthsMap.get(code);\n      var nextWidth = preferredWidth || width;\n      nextWidthCollection.visibleColumnsWidthCount += nextWidth;\n      nextWidthCollection.metaColWidths[code] = (extendParams === null || extendParams === void 0 ? void 0 : extendParams.metaColWidth) || 0;\n    });\n    var maxWidth = Math.ceil(totalWidth * GREEDY_GRID_WIDTH_MAX_RATE);\n    if (nextWidthCollection.visibleColumnsWidthCount < maxWidth) {\n      var addPaddingToCol = function addPaddingToCol(width, colId) {\n        var nextWidth = width;\n        if (![seqKey, treeExpandcolCode].includes(colId)) {\n          var _maxWidth = getPersonalizedColumnWidthByCode(colId, _const.PERSONALIZED_COLUMN_MAX_WIDTH) || (0, _width.getMaxAutoWidth)({\n            metaWidths: nextWidthCollection.metaColWidths,\n            id: colId\n          });\n          var nextMaxWidth = _maxWidth + AUTO_SIZE_COL_MAX_PADDING;\n          // 传入的宽度 小于 最大的宽度+填充边距，才进行宽度的边距填充\n          // 如果大于，说明此次自适应的宽度已经大于最大宽度，说明要忽略最大列宽，此处不进行宽度的缩窄\n          if (nextWidth < nextMaxWidth) {\n            var w = width + additionalPadding;\n            nextWidth = w < nextMaxWidth ? w : nextMaxWidth;\n          }\n        }\n        newPreferredWidthsMap.set(colId, nextWidth);\n      };\n      var isExsitSeqCol = preferredWidthsMap.get(seqKey);\n      var length = getExpandedColumnsLength({\n        length: preferredWidthsMap.size,\n        isExsitSeqCol: isExsitSeqCol\n      });\n      if (length < 1) {\n        return preferredWidthsMap;\n      }\n      var additionalPadding = Math.ceil((maxWidth - nextWidthCollection.visibleColumnsWidthCount) / length);\n      additionalPadding = additionalPadding > AUTO_SIZE_COL_MAX_PADDING ? AUTO_SIZE_COL_MAX_PADDING : additionalPadding;\n      var newPreferredWidthsMap = new Map();\n      preferredWidthsMap.forEach(addPaddingToCol);\n      return newPreferredWidthsMap;\n    }\n  }\n  return preferredWidthsMap;\n}\nfunction getExpandedColumnsLength(_ref12) {\n  var length = _ref12.length,\n    isExsitSeqCol = _ref12.isExsitSeqCol;\n  if (isExsitSeqCol) {\n    length -= 1;\n  }\n  return length;\n}\nfunction markInitRenderedColumns(hadRenderColRef, allDisplayCols) {\n  // 记住初始渲染过的列\n  if (Object.keys(hadRenderColRef.current).length === 0) {\n    var processFn = function processFn(col) {\n      hadRenderColRef.current[col.code] = true;\n    };\n    (0, _array.iterateColumns)(allDisplayCols, processFn);\n  }\n}\nfunction autoSizeTreeExpandCol(_ref13) {\n  var autoSizeColumnsParams = _ref13.autoSizeColumnsParams,\n    getInstance = _ref13.getInstance,\n    getTableConfigImmediately = _ref13.getTableConfigImmediately;\n  var config = getTableConfigImmediately();\n  var instance = getInstance();\n  // 树形单据体，不管是什么场景下，都要给展开列自适应一下让展开列显示完全\n  if (config.treeTable) {\n    var expandCol = (0, _columns2.getColumnByCode)(instance.controller.getExpandColCode(), config.columns);\n    autoSizeColumns(_objectSpread(_objectSpread({}, autoSizeColumnsParams), {}, {\n      targetColumns: [expandCol]\n    }));\n  }\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useAutoSizeColumnWidth.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useColumnsChanged.js":
/*!***********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useColumnsChanged.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.find.js */ \"../../node_modules/core-js/modules/es.array.find.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useColumnsChanged;\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"../../node_modules/core-js/modules/es.array.reduce.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nvar _utils = __webpack_require__(/*! @/validator/utils */ \"./src/validator/utils.js\");\nvar _tableConfig = __webpack_require__(/*! ../tableConfig */ \"./src/component/web/DataGrid/KDTable/tableConfig.js\");\nvar _columns = __webpack_require__(/*! ../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nvar _columnWidthFit = __webpack_require__(/*! ../utils/columnWidthFit */ \"./src/component/web/DataGrid/KDTable/utils/columnWidthFit.js\");\nvar _cell = __webpack_require__(/*! ../utils/cell */ \"./src/component/web/DataGrid/KDTable/utils/cell.js\");\nvar _treeTable = __webpack_require__(/*! ../utils/treeTable */ \"./src/component/web/DataGrid/KDTable/utils/treeTable.js\");\nvar _merge = __webpack_require__(/*! ../utils/merge */ \"./src/component/web/DataGrid/KDTable/utils/merge.js\");\nvar _array = __webpack_require__(/*! ../../TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _array2 = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction useColumnsChanged(_ref) {\n  var _model$meta$get, _parentModel$getDataP, _model$getDataPropert, _model$getDataPropert2, _parentModel$getDataP2, _model$getDataPropert3;\n  var readyed = _ref.readyed,\n    model = _ref.model,\n    parentModel = _ref.parentModel,\n    containerEleRef = _ref.containerEleRef,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getTableOptions = _ref.getTableOptions,\n    getInstance = _ref.getInstance,\n    getInternalEventService = _ref.getInternalEventService,\n    getTableApi = _ref.getTableApi;\n  var hadTrackingOfRepeatedColumnRef = (0, _react.useRef)(false);\n  (0, _react.useEffect)(function () {\n    var instance = getInstance();\n    var tableOptions = getTableOptions();\n    var tableConfig = getTableConfigImmediately();\n    var getCellSpan = getTableApi().getCellSpan;\n    // TODO tableOptions中的合计列信息需要在getColumns中初始化,所以暂时提从readyed中提出来\n    var columns = (0, _tableConfig.getColumns)(model, parentModel, {\n      getTableOptions: getTableOptions,\n      mergeModel: instance.mergeModel,\n      getTableConfigImmediately: getTableConfigImmediately,\n      getInternalEventService: getInternalEventService,\n      handleCellClick: (0, _cell.createCellClickHandler)(getTableApi, getInstance),\n      handleCellMouseDown: (0, _cell.createCellMouseDownHandler)(getTableApi, getInstance, tableOptions),\n      getCellClassName: (0, _cell.getCellClassNameWrapper)({\n        getTableConfigImmediately: getTableConfigImmediately,\n        getTableOptions: getTableOptions,\n        getInstance: getInstance\n      }),\n      getCellSpan: getCellSpan\n    });\n    if (readyed) {\n      // 单据体，列的必录性改变，删除所有校验信息\n      if (tableConfig.gridType === undefined) {\n        var lastMustInputColumnCodes = getMustInputColumnCodes(tableConfig.getColumns());\n        if (isAnyColumnMustInputChanged(columns, lastMustInputColumnCodes)) {\n          (0, _utils.removeTableValidateMsg)({\n            pageId: tableConfig.pageId,\n            tableId: tableConfig.id\n          });\n          (0, _utils.finishTableValidate)(tableConfig.pageId, tableConfig.id);\n        }\n      }\n      var handleUpdateColumns = function handleUpdateColumns() {\n        // 列定义构造完不会刷新KDTable,这里用ref更新KDTable 样式\n        if ((tableConfig === null || tableConfig === void 0 ? void 0 : tableConfig.getMaxLevel()) > 1) {\n          containerEleRef.current.classList.add('kd-table-with-column-groups');\n        }\n        (0, _treeTable.defineTreeTableColumns)(columns, {\n          tableConfig: tableConfig,\n          getInstance: getInstance,\n          getTableOptions: getTableOptions\n        }); // 处理树形单据体 columns & 展开列\n        (0, _columns.handleRepeatedColumns)({\n          columns: columns,\n          model: model,\n          parentModel: parentModel,\n          getTableOptions: getTableOptions,\n          getInstance: getInstance\n        });\n        (0, _columns.repeatedColumnTracking)({\n          hadTrackingOfRepeatedColumnRef: hadTrackingOfRepeatedColumnRef,\n          getTableOptions: getTableOptions,\n          getTableConfigImmediately: getTableConfigImmediately\n        });\n        tableConfig.setColumns(tableConfig.columnResizeMode === _const.TABLE_COLUMN_RESIZE_MODE.adaptive ? columns : (0, _columnWidthFit.getFitedTableSizeColumns)({\n          columns: columns,\n          getTableOptions: getTableOptions,\n          getTableConfigImmediately: getTableConfigImmediately\n        }));\n        instance.mergeModel.updateBorderCols(columns, model.getMetaProperty('columns') || (0, _immutable.List)(), tableConfig.seqKey);\n\n        // 更新显示右边框线的列,适用于报表融合的场景\n        (0, _merge.setRightBorderCols)({\n          columns: columns,\n          getTableOptions: getTableOptions\n        });\n      };\n      if (tableOptions.getCustomSchemaMap().size) {\n        (0, _columns.initAllCustomColumns)(getTableConfigImmediately(), getTableOptions()).then(handleUpdateColumns, function (err) {\n          console.warn(\"[kd-table] \\u5B58\\u5728\\u81EA\\u5B9A\\u4E49\\u63A7\\u4EF6\\u4F46\\u52A0\\u8F7D\\u5931\\u8D25\\uFF1A\".concat(err));\n          handleUpdateColumns();\n        });\n      } else {\n        handleUpdateColumns();\n      }\n      dealFilterAfterColumnsChange({\n        getInstance: getInstance,\n        columns: columns\n      });\n    }\n  }, [readyed, (_model$meta$get = model.meta.get('columns')) === null || _model$meta$get === void 0 ? void 0 : _model$meta$get.hashCode(), // 可见性改变,一般单据体样式规则修改的就是这里，列表是否存在该功能存疑\n  parentModel === null || parentModel === void 0 || (_parentModel$getDataP = parentModel.getDataProperty('colVisb')) === null || _parentModel$getDataP === void 0 ? void 0 : _parentModel$getDataP.hashCode(), (_model$getDataPropert = model.getDataProperty('colVisb')) === null || _model$getDataPropert === void 0 ? void 0 : _model$getDataPropert.hashCode(), (_model$getDataPropert2 = model.getDataProperty('colCtrl')) === null || _model$getDataPropert2 === void 0 ? void 0 : _model$getDataPropert2.hashCode(), // 锁定性单据体才有\n  parentModel === null || parentModel === void 0 || (_parentModel$getDataP2 = parentModel.getDataProperty('colLock')) === null || _parentModel$getDataP2 === void 0 ? void 0 : _parentModel$getDataP2.hashCode(), model === null || model === void 0 || (_model$getDataPropert3 = model.getDataProperty('colLock')) === null || _model$getDataPropert3 === void 0 ? void 0 : _model$getDataPropert3.hashCode(), model === null || model === void 0 ? void 0 : model.getMetaProperty('hasOperateIcon')]);\n}\nfunction getMustInputColumnCodes() {\n  var columns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return columns.reduce(function (acc, col) {\n    var _col$extendParams;\n    if ((_col$extendParams = col.extendParams) !== null && _col$extendParams !== void 0 && (_col$extendParams = _col$extendParams.editor) !== null && _col$extendParams !== void 0 && _col$extendParams.mi) {\n      acc.push(col.code);\n    }\n    return acc;\n  }, []);\n}\nfunction isAnyColumnMustInputChanged(columns) {\n  var lastMustInputColumnCodes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return (0, _array.find)(columns, function (col) {\n    var _col$extendParams2;\n    if (!((_col$extendParams2 = col.extendParams) !== null && _col$extendParams2 !== void 0 && (_col$extendParams2 = _col$extendParams2.editor) !== null && _col$extendParams2 !== void 0 && _col$extendParams2.mi) && lastMustInputColumnCodes.includes(col.code)) {\n      return true;\n    }\n  }) != null;\n}\nfunction dealFilterAfterColumnsChange(_ref2) {\n  var getInstance = _ref2.getInstance,\n    columns = _ref2.columns;\n  var instance = getInstance();\n  var filters = instance.controller.getFilters();\n  var flatedColumns = (0, _array2.flatColumns)(columns);\n  var colCodes = flatedColumns.filter(function (col) {\n    return col.hide !== true;\n  }).map(function (col) {\n    return col.code;\n  });\n  var newFilter = filters.filter(function (filter) {\n    return colCodes.includes(filter.code);\n  });\n  // 列隐藏后，相关的过滤要清空\n  instance.controller.setFilters(newFilter);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useColumnsChanged.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useContextMenu.js":
/*!********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useContextMenu.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useContextMenu = useContextMenu;\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.set.js */ \"../../node_modules/core-js/modules/es.set.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _copy = __webpack_require__(/*! ../utils/copy */ \"./src/component/web/DataGrid/KDTable/utils/copy.js\");\nvar _dataService = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/dataService.js */ \"./src/component/web/DataGrid/TableHelper/util/dataService.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _symbolConst = __webpack_require__(/*! @/constant/symbolConst */ \"./src/constant/symbolConst.js\");\nvar _GlobalDataCacher = __webpack_require__(/*! @/model/GlobalDataCacher */ \"./src/model/GlobalDataCacher.js\");\nvar _row = __webpack_require__(/*! ../utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nvar _object = __webpack_require__(/*! ../utils/object */ \"./src/component/web/DataGrid/KDTable/utils/object.js\");\nvar _filter = __webpack_require__(/*! ../utils/filter */ \"./src/component/web/DataGrid/KDTable/utils/filter.js\");\nvar _switch = __webpack_require__(/*! ../../TableHelper/util/switch */ \"./src/component/web/DataGrid/TableHelper/util/switch.js\");\nvar _rangeSelection = __webpack_require__(/*! ../utils/rangeSelection */ \"./src/component/web/DataGrid/KDTable/utils/rangeSelection.js\");\nvar _regexp = __webpack_require__(/*! ../../TableHelper/util/regexp */ \"./src/component/web/DataGrid/TableHelper/util/regexp.js\");\nvar _array = __webpack_require__(/*! ../../TableHelper/util/array.js */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _columns = __webpack_require__(/*! ../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction useContextMenu(_ref) {\n  var containerEleRef = _ref.containerEleRef,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getTableOptions = _ref.getTableOptions,\n    getInternalEventService = _ref.getInternalEventService,\n    getInstance = _ref.getInstance,\n    getActionByKey = _ref.getActionByKey,\n    getTableApi = _ref.getTableApi,\n    getNewColumns = _ref.getNewColumns,\n    getFilterRequestParams = _ref.getFilterRequestParams;\n  (0, _react.useEffect)(function () {\n    var config = getTableConfigImmediately();\n    config.setContextMenu({\n      menuClassName: 'kd-cq-context-menu',\n      getContextMenuItems: contextMenuGetter({\n        containerEleRef: containerEleRef,\n        getTableOptions: getTableOptions,\n        getInternalEventService: getInternalEventService,\n        getTableConfigImmediately: getTableConfigImmediately,\n        getInstance: getInstance,\n        getActionByKey: getActionByKey,\n        getTableApi: getTableApi,\n        getNewColumns: getNewColumns,\n        getFilterRequestParams: getFilterRequestParams\n      })\n    });\n    var handleContextMenu = function handleContextMenu(e) {\n      var instance = getInstance();\n      var editCell = instance.controller.getEditCell();\n      // 进入编辑态时右键阻止冒泡，显示浏览器原生的右键菜单\n      if (editCell && editCell.rowKey !== -1) {\n        e.stopPropagation();\n      }\n    };\n    containerEleRef.current && containerEleRef.current.addEventListener('contextmenu', handleContextMenu, true);\n    return function () {\n      config.setContextMenu(null);\n      containerEleRef.current && containerEleRef.current.removeEventListener('contextmenu', handleContextMenu, true);\n    };\n  }, []);\n}\nvar trackingContextMenuItemClick = function trackingContextMenuItemClick(getTableConfigImmediately) {\n  return function (methodKey, methodName) {\n    var _getTableConfigImmedi = getTableConfigImmediately(),\n      pageId = _getTableConfigImmedi.pageId,\n      id = _getTableConfigImmedi.id,\n      parentId = _getTableConfigImmedi.parentId,\n      type = _getTableConfigImmedi.type,\n      gridType = _getTableConfigImmedi.gridType;\n    var controlType = (0, _dataService.getGridTrackingType)({\n      type: type,\n      gridType: gridType\n    });\n    (0, _dataService.buriedPointOfContextMenu)({\n      pageId: pageId,\n      controlId: parentId || id,\n      controlType: controlType,\n      methodKey: methodKey,\n      methodName: methodName\n    });\n  };\n};\nvar BASE_ITEM = {\n  className: 'kd-cq-context-menu-item'\n};\nvar contextMenuGetter = function contextMenuGetter(_ref2) {\n  var containerEleRef = _ref2.containerEleRef,\n    getTableOptions = _ref2.getTableOptions,\n    getInternalEventService = _ref2.getInternalEventService,\n    getTableConfigImmediately = _ref2.getTableConfigImmediately,\n    getInstance = _ref2.getInstance,\n    getActionByKey = _ref2.getActionByKey,\n    getTableApi = _ref2.getTableApi,\n    getNewColumns = _ref2.getNewColumns,\n    getFilterRequestParams = _ref2.getFilterRequestParams;\n  return function (_ref3) {\n    var record = _ref3.record,\n      column = _ref3.column,\n      value = _ref3.value,\n      event = _ref3.event,\n      api = _ref3.api;\n    // api表示获取对应参数的方法，暂时命名\n    var tableOptions = getTableOptions();\n    var config = getTableConfigImmediately();\n    var instance = getInstance();\n    var suppressCopy = tableOptions.getMetaOptionsProperty('suppressCopy');\n    var autoHeight = config.autoHeight,\n      rowDetailOptions = config.rowDetailOptions,\n      gridType = config.gridType,\n      pageId = config.pageId,\n      id = config.id,\n      parentId = config.parentId;\n    var tableElement = event ? _getTableWrapperElementByEvent(event) : null;\n    var cellElement = event ? _getCellWrapperElementByEvent(event) : null;\n    var rowIndex = cellElement && cellElement.getAttribute('data-rowindex') || 0;\n    var isSubTable = _isSubTable(tableElement);\n    var isDetailBill = (record === null || record === void 0 ? void 0 : record[_const.ROW_DETAIL_META_KEY]) && column === null && !isSubTable && (rowDetailOptions === null || rowDetailOptions === void 0 ? void 0 : rowDetailOptions.type) === _const.ROW_DETAIL_TYPES.bill;\n    var selectionText = getSelectionText();\n    // 切换新旧表格\n    var switchTableItem = _objectSpread(_objectSpread({}, BASE_ITEM), {}, {\n      name: (0, _intlApi.getLangMsg)('grid.key0042'),\n      action: function action() {\n        return switchToOldTable(gridType);\n      }\n    });\n    var _ref4 = rowDetailOptions || {},\n      mainEntityPrimaryKeyFieldName = _ref4.mainEntityPrimaryKeyFieldName;\n    var mainEntityPrimaryKeyId = isSubTable ? record === null || record === void 0 ? void 0 : record[mainEntityPrimaryKeyFieldName] : '';\n    var contextMenuItems = [_objectSpread(_objectSpread({}, BASE_ITEM), {}, {\n      name: (0, _intlApi.getLangMsg)('grid.key0002'),\n      action: function action() {\n        isSubTable ? _clearClientFilters(api) : clearFilters({\n          getTableConfigImmediately: getTableConfigImmediately,\n          getInstance: getInstance,\n          getActionByKey: getActionByKey,\n          getTableOptions: getTableOptions,\n          getTableApi: getTableApi,\n          getFilterRequestParams: getFilterRequestParams\n        });\n        trackingContextMenuItemClick(getTableConfigImmediately)('clearFilters', (0, _intlApi.getLangMsg)('grid.key0002'));\n      }\n    }), // 单列自适应\n    _objectSpread(_objectSpread({}, BASE_ITEM), {}, {\n      name: (0, _intlApi.getLangMsg)('grid.key0003'),\n      action: function action() {\n        autoSizeColumns({\n          getInternalEventService: getInternalEventService,\n          targetColumns: [column],\n          isSubTable: isSubTable,\n          api: api,\n          mainEntityPrimaryKeyId: mainEntityPrimaryKeyId\n        });\n        trackingContextMenuItemClick(getTableConfigImmediately)('autoSizeColumn', (0, _intlApi.getLangMsg)('grid.key0003'));\n      }\n      // disabled: autoHeight\n    }), // 全部自适应\n    _objectSpread(_objectSpread({}, BASE_ITEM), {}, {\n      name: (0, _intlApi.getLangMsg)('grid.key0004'),\n      action: function action() {\n        autoSizeColumns({\n          getInternalEventService: getInternalEventService,\n          isSubTable: isSubTable,\n          api: api,\n          mainEntityPrimaryKeyId: mainEntityPrimaryKeyId\n        });\n        trackingContextMenuItemClick(getTableConfigImmediately)('autoSizeAllColumns', (0, _intlApi.getLangMsg)('grid.key0004'));\n      }\n      // disabled: autoHeight\n    }), // 默认列宽\n    _objectSpread(_objectSpread({}, BASE_ITEM), {}, {\n      name: (0, _intlApi.getLangMsg)('grid.key0046'),\n      action: function action() {\n        var _getPageUIState;\n        var config = getTableConfigImmediately();\n        var pageId = config.pageId,\n          parentId = config.parentId,\n          id = config.id,\n          modelKey = config.modelKey;\n        var curTableUiState = ((_getPageUIState = (0, _memoryCacher.getPageUIState)(pageId)) === null || _getPageUIState === void 0 ? void 0 : _getPageUIState.get(modelKey)) || new _immutable.Map();\n        if (!curTableUiState.size) {\n          return;\n        }\n        var columns = api ? api.getColumns() : config.getColumns();\n        curTableUiState = deletePersonalizedColumnsWidth(pageId, id, curTableUiState, getTableOptions(), columns);\n\n        // 实时更新到后端\n        getActionByKey('invokeControlMethodOnly')({\n          pageId: pageId,\n          key: parentId || modelKey\n        }, 'saveGridViewWidth', [_defineProperty({}, modelKey, curTableUiState.toJS())]);\n        var trigger = 'resetColumnsWidth';\n        if (isSubTable) {\n          var subGridConfig = config.subGridConfig;\n          if ((0, _columns.isEnableAutoSizeColumns)({\n            getTableConfigImmediately: getTableConfigImmediately\n          })) {\n            // 子表格自适应\n            _autoSizeSubTableColumns(getInternalEventService(), {\n              trigger: trigger,\n              targetColumns: columns,\n              containerEleRef: api.getContainerEleRef(),\n              mainEntityPrimaryKeyId: mainEntityPrimaryKeyId\n            });\n          } else {\n            // 刷新子表格\n            getInstance().controller.setSubGridColumns({\n              columns: subGridConfig.getColumns(),\n              mainEntityPrimaryKeyId: mainEntityPrimaryKeyId\n            });\n          }\n        } else {\n          // 刷新表格\n          config.setColumns(getNewColumns());\n          // 触发自适应事件\n          getInternalEventService().dispatchEvent({\n            type: _eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns,\n            params: {\n              trigger: trigger\n            }\n          });\n        }\n        trackingContextMenuItemClick(getTableConfigImmediately)('resetColumnsWidth', (0, _intlApi.getLangMsg)('grid.key0046'));\n      }\n    }), _objectSpread(_objectSpread({}, BASE_ITEM), {}, {\n      name: (0, _intlApi.getLangMsg)('grid.key0060'),\n      action: function action() {\n        var showGridHelp = getActionByKey('showGridHelp');\n        showGridHelp && showGridHelp({\n          pageId: pageId,\n          key: parentId || id\n        }, []);\n      }\n    })];\n    var copyAction = function copyAction(isCopyWithHeader) {\n      var tableOptions = getTableOptions();\n      var instance = getInstance();\n      // todo: 参数的获取应该都放到api中 !?\n      var cellRanges = api ? api.getCellRanges() : tableOptions.getCellRanges();\n      // const openRowKeys = api ? api.getOpenRowKeys() : instance.controller.getOpenRowKeys() || []\n      var rowDatas = api ? api.getRowDatas() : instance.controller.getRowDatas() || [];\n      var footerDataSource = api ? api.getFooterDataSource() : instance.controller.getFooterDataSource() || [];\n      var tableDom = tableElement || containerEleRef.current;\n      var tableConfig = getTableConfigImmediately();\n      var rowKey = tableConfig.rowKey,\n        localeId = tableConfig.localeId,\n        defaultLocalId = tableConfig.defaultLocalId;\n      // const rowKeyValue = record[rowKey]\n\n      // 右键复制， 展开内容为表单时需复制已选中的文本\n      if (selectionText) {\n        (0, _copy.copyValueToClipboard)(selectionText || '');\n        // trackingContextMenuItemClick(getTableConfigImmediately)('copy', getLangMsg('grid.key0001'))\n        return;\n      }\n      var code = column.code,\n        type = column.type;\n      var rowPinned = (0, _row.isRowPinned)({\n        record: record,\n        rowKey: rowKey\n      });\n      if ((0, _rangeSelection.isCellInRanges)(cellRanges, rowIndex, code, rowPinned)) {\n        var displayColumns = api ? api.getDisplayFlatColumns() : tableConfig.getDisplayFlatColumns();\n        var cellRangeColumnsCodeSet = (0, _rangeSelection.getCellRangesColumnsCodeSet)(cellRanges);\n        var displayColumnsInCellRange = (0, _columns.filterColumnsInAnyColsRanges)(displayColumns, cellRanges);\n        var haederData = isCopyWithHeader ? (0, _copy.getCopyHeaderData)({\n          columns: displayColumnsInCellRange,\n          cellRangeColumnsCodeSet: cellRangeColumnsCodeSet\n        }) : undefined;\n        (0, _copy.copyCellRangesValue)(cellRanges, {\n          displayColumns: displayColumns,\n          rowDatas: rowDatas,\n          footerDataSource: footerDataSource,\n          rowKey: rowKey,\n          localeId: localeId,\n          defaultLocalId: defaultLocalId,\n          haederData: haederData\n        });\n        cellRanges.forEach(function (cellRange) {\n          (0, _copy.addTableCellRangeCopyAnimation)({\n            cellRange: cellRange,\n            tableDom: tableDom\n          });\n        });\n        if (isCopyWithHeader) {\n          var rangesColumns = displayColumnsInCellRange.filter(function (col) {\n            return cellRangeColumnsCodeSet.has(col.code);\n          });\n          (0, _copy.addTableHeaderCopyAnimation)({\n            tableDom: tableDom,\n            columns: rangesColumns\n          });\n        }\n      } else {\n        // 这里rowKeyValue和dom节点上的data-rowindex不对应，要做调整\n        // const animationrowIndex = isSubTable ? rowKeyValue : rowKeyValue + openRowKeys.filter(openRowKey => openRowKey < rowKeyValue).length\n\n        var className = rowPinned ? '.kd-table-footer' : '.kd-table-body';\n        // 这里取rowIndex不严谨，但是目前合计都只有一行，可以先这样取，后续可以考虑底层表格提供rowIndex参数\n        // const rowIndex = rowPinned ? 0 : animationrowIndex\n        var codeMatchStr = (0, _regexp.isIncludeNewlineCharacter)(code) ? \"[data-escap-code=\\\"\".concat((0, _regexp.getMatchEscapeNewlineCharacteStr)(code), \"\\\"]\") : \"[data-code=\\\"\".concat(code, \"\\\"]\");\n        var tableCellSelector = \"\".concat(className, \" .kd-table-cell[data-rowindex=\\\"\").concat(rowIndex, \"\\\"]\").concat(codeMatchStr);\n        var cell = tableDom.querySelector(tableCellSelector);\n        (0, _copy.addTableCellCopyAnimation)(cell);\n        if (isCopyWithHeader) {\n          (0, _copy.addTableHeaderCopyAnimation)({\n            tableDom: tableDom,\n            columns: [column]\n          });\n        }\n        var _haederData = isCopyWithHeader ? (0, _copy.getCopyHeaderData)({\n          columns: [column],\n          cellRangeColumnsCodeSet: new Set([column.code])\n        }) : undefined;\n        (0, _copy.copyCellValueToClipboard)({\n          row: record,\n          value: value,\n          type: type,\n          column: column,\n          localeId: localeId,\n          defaultLocalId: defaultLocalId,\n          rowPinned: rowPinned,\n          haederData: _haederData\n        });\n      }\n    };\n\n    // #region copy\n    var copyItem = _objectSpread(_objectSpread({}, BASE_ITEM), {}, {\n      name: (0, _intlApi.getLangMsg)('grid.key0001'),\n      action: function action() {\n        copyAction();\n        trackingContextMenuItemClick(getTableConfigImmediately)('copy', (0, _intlApi.getLangMsg)('grid.key0001'));\n      }\n    });\n    var copyWithHeaderItem = _objectSpread(_objectSpread({}, BASE_ITEM), {}, {\n      name: (0, _intlApi.getLangMsg)('grid.key0061'),\n      action: function action() {\n        copyAction(true);\n        trackingContextMenuItemClick(getTableConfigImmediately)('copyWithHeader', (0, _intlApi.getLangMsg)('grid.key0061'));\n      }\n    });\n    var rowDatas = api ? api.getRowDatas() : instance.controller.getRowDatas() || [];\n    if (!suppressCopy && rowDatas.length > 0) {\n      !selectionText && contextMenuItems.unshift(copyWithHeaderItem);\n      contextMenuItems.unshift(copyItem);\n    }\n    // !suppressCopy && contextMenuItems.unshift(copyItem)\n    // #endregion copy\n\n    // 按住ctrl+右键 开启新旧表格\n    var enableSwitchGrid = (event === null || event === void 0 ? void 0 : event.ctrlKey) || (event === null || event === void 0 ? void 0 : event.metaKey);\n    enableSwitchGrid && !isSubTable && contextMenuItems.push(switchTableItem);\n    return contextMenuItems;\n  };\n};\nfunction _clearClientFilters(api) {\n  var _api$setFilters;\n  // 更新表格状态\n  api === null || api === void 0 || (_api$setFilters = api.setFilters) === null || _api$setFilters === void 0 || _api$setFilters.call(api, []);\n}\nfunction clearFilters(_ref6) {\n  var getTableConfigImmediately = _ref6.getTableConfigImmediately,\n    getInstance = _ref6.getInstance,\n    getActionByKey = _ref6.getActionByKey,\n    getTableOptions = _ref6.getTableOptions,\n    getTableApi = _ref6.getTableApi,\n    getFilterRequestParams = _ref6.getFilterRequestParams;\n  var instance = getInstance();\n  var filters = instance.controller.getFilters();\n\n  // 当前无过滤条件不处理\n  if (filters == null || filters.length === 0) {\n    return;\n  }\n  var tableConfig = getTableConfigImmediately();\n  var pageId = tableConfig.pageId,\n    id = tableConfig.id,\n    parentId = tableConfig.parentId,\n    filterType = tableConfig.filterType;\n  var tableOptions = getTableOptions();\n  var sumWithFilter = tableOptions.getSumWithFilter();\n\n  // 更新基础表格状态\n  instance.controller.setFilters([]);\n  if (sumWithFilter) {\n    // 开启过滤合计后更新后端过滤状态\n    var postFilterData = getActionByKey('postFilterData');\n    postFilterData({\n      pageId: pageId,\n      key: id\n    }, [[{\n      rk: [],\n      reset: true\n    }]]);\n  }\n  if (filterType === _const.FILTER_TYPES.service) {\n    var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n    // 发送清空指令\n    if (invokeControlMethodOnly) {\n      filters.forEach(function (item) {\n        var filterParams = getFilterRequestParams((0, _filter.createResetFilterValue)(item.code));\n        if (filterParams.length) {\n          invokeControlMethodOnly({\n            pageId: pageId,\n            key: parentId || id\n          }, 'getGridDataByFilter', filterParams);\n        }\n      });\n    }\n  } else {\n    // 清空后不会触发filterchange回调，单据体需要手动触发过滤\n    getTableApi().execFilter([]);\n  }\n}\nfunction autoSizeColumns(_ref7) {\n  var getInternalEventService = _ref7.getInternalEventService,\n    targetColumns = _ref7.targetColumns,\n    isSubTable = _ref7.isSubTable,\n    api = _ref7.api,\n    mainEntityPrimaryKeyId = _ref7.mainEntityPrimaryKeyId;\n  var internalEventService = getInternalEventService();\n  var trigger = 'contextMenu';\n  if (isSubTable) {\n    _autoSizeSubTableColumns(internalEventService, {\n      trigger: trigger,\n      targetColumns: targetColumns || (api === null || api === void 0 ? void 0 : api.getColumns()),\n      containerEleRef: api.getContainerEleRef(),\n      mainEntityPrimaryKeyId: mainEntityPrimaryKeyId\n    });\n  } else {\n    _autoSizeColumns(internalEventService, {\n      trigger: trigger,\n      targetColumns: targetColumns\n    });\n  }\n}\nfunction _autoSizeColumns(internalEventService, _ref8) {\n  var trigger = _ref8.trigger,\n    targetColumns = _ref8.targetColumns;\n  internalEventService.dispatchEvent({\n    type: _eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns,\n    params: {\n      trigger: trigger,\n      targetColumns: targetColumns\n    }\n  });\n}\nfunction _autoSizeSubTableColumns(internalEventService, _ref9) {\n  var trigger = _ref9.trigger,\n    targetColumns = _ref9.targetColumns,\n    containerEleRef = _ref9.containerEleRef,\n    mainEntityPrimaryKeyId = _ref9.mainEntityPrimaryKeyId;\n  internalEventService.dispatchEvent({\n    type: _eventServiceName.KD_TABLE_EVENT_NAMES.doSubTableAutoSizeColumns,\n    params: {\n      trigger: trigger,\n      targetColumns: targetColumns,\n      containerEleRef: containerEleRef,\n      mainEntityPrimaryKeyId: mainEntityPrimaryKeyId\n    }\n  });\n}\nfunction switchToOldTable(gridType) {\n  var isUseNewTable = false;\n  (0, _switch.setNewTable)(gridType, isUseNewTable);\n  (0, _GlobalDataCacher.setData)(_symbolConst.KEY_USE_TABLE_CHANGED, {\n    gridType: gridType,\n    isUseNewTable: isUseNewTable\n  });\n}\nfunction deletePersonalizedColumnsWidth(pageId, id, curTableUiState, tableOptions, columns) {\n  var personalizedWidth = (0, _object.convertToJS)(curTableUiState.get(_const.PERSONALIZED_COLUMN_WIDTH));\n  var personalizedMaxWidth = (0, _object.convertToJS)(curTableUiState.get(_const.PERSONALIZED_COLUMN_MAX_WIDTH));\n  var personalizedLockedWidth = (0, _object.convertToJS)(curTableUiState.get(_const.PERSONALIZED_LOCK_COLUMN_WIDTH));\n  var columnCodes = [];\n  (0, _array.iterateColumns)(columns, function (col) {\n    return columnCodes.push(col.code);\n  });\n  personalizedWidth = personalizedWidth ? (0, _object.deleteObjectProps)(personalizedWidth, columnCodes) : personalizedWidth;\n  personalizedMaxWidth = personalizedMaxWidth ? (0, _object.deleteObjectProps)(personalizedWidth, columnCodes) : personalizedMaxWidth;\n  personalizedLockedWidth = personalizedLockedWidth ? (0, _object.deleteObjectProps)(personalizedWidth, columnCodes) : personalizedLockedWidth;\n\n  // 删除本地个性化数据\n  (0, _memoryCacher.setPageUIState)({\n    pageId: pageId,\n    key: id\n  }, [_const.PERSONALIZED_COLUMN_WIDTH], personalizedWidth);\n  (0, _memoryCacher.setPageUIState)({\n    pageId: pageId,\n    key: id\n  }, [_const.PERSONALIZED_COLUMN_MAX_WIDTH], personalizedMaxWidth);\n  (0, _memoryCacher.setPageUIState)({\n    pageId: pageId,\n    key: id\n  }, [_const.PERSONALIZED_LOCK_COLUMN_WIDTH], personalizedLockedWidth);\n\n  // 重置表格本身存的个性化列宽\n  var tablePersonalizedColumnWidth = tableOptions.getPersonalizedColumnWidth();\n  tableOptions.setPersonalizedColumnWidth(_defineProperty(_defineProperty(_defineProperty({}, _const.PERSONALIZED_COLUMN_WIDTH, personalizedWidth || {}), _const.PERSONALIZED_AUTOSIZE_COLUMN_WIDTH, (0, _object.deleteObjectProps)(tablePersonalizedColumnWidth[_const.PERSONALIZED_AUTOSIZE_COLUMN_WIDTH], columnCodes)), _const.PERSONALIZED_COLUMN_MAX_WIDTH, personalizedMaxWidth || {}));\n  return curTableUiState.set(_const.PERSONALIZED_COLUMN_WIDTH, personalizedWidth).set(_const.PERSONALIZED_COLUMN_MAX_WIDTH, personalizedMaxWidth).set(_const.PERSONALIZED_LOCK_COLUMN_WIDTH, personalizedLockedWidth);\n}\n\n// function _shouldShowResetColumn (getTableConfigImmediately) {\n//   const { pageId, id } = getTableConfigImmediately()\n//   const curTableUiState = getPageUIState(pageId)?.get(id) || new IMap()\n//   if (curTableUiState.size) {\n//     return !isObjectEmpty(curTableUiState.get(PERSONALIZED_COLUMN_WIDTH)) ||\n//      !isObjectEmpty(curTableUiState.get(PERSONALIZED_COLUMN_MAX_WIDTH)) ||\n//      !isObjectEmpty(curTableUiState.get(PERSONALIZED_LOCK_COLUMN_WIDTH))\n//   }\n//   return false\n// }\n\nfunction _getTableWrapperElementByEvent(event) {\n  var target = event.target;\n  var point = target;\n  while (point) {\n    var _point$classList;\n    if ((_point$classList = point.classList) !== null && _point$classList !== void 0 && _point$classList.contains('kd-table-wrapper')) {\n      return point;\n    }\n    point = point.parentNode;\n  }\n  return null;\n}\nfunction _getCellWrapperElementByEvent(event) {\n  var target = event.target;\n  var point = target;\n  while (point) {\n    var _point$classList2;\n    if ((_point$classList2 = point.classList) !== null && _point$classList2 !== void 0 && _point$classList2.contains('kd-table-cell')) {\n      return point;\n    }\n    point = point.parentNode;\n  }\n  return null;\n}\nfunction _isSubTable(element) {\n  var _element$parentNode;\n  return element === null || element === void 0 || (_element$parentNode = element.parentNode) === null || _element$parentNode === void 0 ? void 0 : _element$parentNode.classList.contains('kd-sub-table');\n}\nfunction getSelectionText() {\n  var _window$getSelection, _window, _window$getSelection$;\n  return (_window$getSelection = (_window = window).getSelection) === null || _window$getSelection === void 0 || (_window$getSelection = _window$getSelection.call(_window)) === null || _window$getSelection === void 0 || (_window$getSelection$ = _window$getSelection.toString) === null || _window$getSelection$ === void 0 ? void 0 : _window$getSelection$.call(_window$getSelection);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useContextMenu.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useDataUpdate.js":
/*!*******************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useDataUpdate.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useDataTimestampUpdate = useDataTimestampUpdate;\nexports.useFmtInfoChanged = useFmtInfoChanged;\nexports.useRowsChangeByRowOpereate = useRowsChangeByRowOpereate;\nexports.useRowsChangedAndSelectStateunchanged = useRowsChangedAndSelectStateunchanged;\nexports.useUpdateDataOptions = useUpdateDataOptions;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _grid = __webpack_require__(/*! @/util/component/grid */ \"./src/util/component/grid.js\");\nvar _const = __webpack_require__(/*! @/constant/const */ \"./src/constant/const.js\");\nvar _data = __webpack_require__(/*! ../utils/data */ \"./src/component/web/DataGrid/KDTable/utils/data.js\");\nvar _index = __webpack_require__(/*! ../data/index */ \"./src/component/web/DataGrid/KDTable/data/index.js\");\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _const2 = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\n/*\n * @Author: wqhui\n * @Date: 2021-11-26 13:49:28\n * @Description: 数据内部细化更新\n */\n\nvar getDatasource = _index.dataHelper.getDatasource;\nfunction useDataTimestampUpdate(_ref) {\n  var parentModel = _ref.parentModel,\n    model = _ref.model,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getTableOptions = _ref.getTableOptions,\n    getActionByKey = _ref.getActionByKey,\n    getInstance = _ref.getInstance,\n    getTableApi = _ref.getTableApi,\n    updateFoldFooterRowsStatus = _ref.updateFoldFooterRowsStatus;\n  var hadRefresh = (0, _react.useRef)(false);\n  (0, _react.useEffect)(function () {\n    var useModel = parentModel || model;\n    var pageId = useModel.pageId,\n      key = useModel.key;\n    var tableConfig = getTableConfigImmediately();\n    var filterType = tableConfig.filterType;\n    if (filterType !== _const2.FILTER_TYPES.service) {\n      // 单据体(客户端过滤)u指令批量更新数据时重新触发过滤\n      var filters = getInstance().controller.getFilters();\n      // 存在过滤条件时需要重新过滤\n      if ((filters === null || filters === void 0 ? void 0 : filters.length) > 0) {\n        var tableApi = getTableApi();\n        tableApi.execFilter();\n      }\n    }\n    var dataValue = useModel.getDataValue();\n    //  u指令数据刷新时需要重新请求报表数据, 初始进来不需要\n    if (tableConfig.isScrollLoad && dataValue) {\n      // u指令刷新的时候列表数据可能不会刷新，这里会多算一遍数据\n      if (tableConfig.gridType === 'VIEWGRID') {\n        var newDataSource = getDatasource(model, parentModel, {\n          getTableConfigImmediately: getTableConfigImmediately\n        });\n        (0, _data.updateInstanceModelWhenDataChanged)(newDataSource, {\n          getInstance: getInstance,\n          getTableConfigImmediately: getTableConfigImmediately,\n          getTableOptions: getTableOptions,\n          model: model\n        });\n      }\n      (0, _data.resetScrollLoadOptions)({\n        getTableOptions: getTableOptions,\n        getTableConfigImmediately: getTableConfigImmediately,\n        getActionByKey: getActionByKey,\n        model: model\n      });\n    }\n    // 不是单据体，清除所有\n    if (tableConfig.gridType !== undefined) {\n      (0, _grid.clearAllGridPlainText)({\n        pageId: pageId,\n        gridId: key\n      });\n    }\n    hadRefresh.current = true;\n  }, [parentModel === null || parentModel === void 0 ? void 0 : parentModel.getDataProperty([_const.TIME_STAMP_FRESH]), model.getDataProperty([_const.TIME_STAMP_FRESH])]);\n}\nfunction useRowsChangedAndSelectStateunchanged(_ref2) {\n  var _parentModel$getDataP2, _parentModel$getDataP4;\n  var parentModel = _ref2.parentModel,\n    instance = _ref2.instance;\n  var selectStateRef = (0, _react.useRef)();\n  var uMarkRef = (0, _react.useRef)();\n  // 列表数据变化时，如果slctState不变，需要清空选中数据(eg:过滤时u指令更新了数据，但是没有重新设置选择行)\n  // 先前逻辑是先排除很多属性，再判断conponentData变化，详细逻辑在dataDiff\n  // 这里简化成判断u指令更新rows\n  (0, _react.useEffect)(function () {\n    var _parentModel$getDataP;\n    if (!parentModel) return;\n    var slctStateCode = (_parentModel$getDataP = parentModel.getDataProperty(['slctState'])) === null || _parentModel$getDataP === void 0 ? void 0 : _parentModel$getDataP.hashCode();\n    var uMark = parentModel.getDataProperty([_const.TIME_STAMP_FRESH]);\n    // 1. 前后选中状态一致\n    // 2. u指令导致行行数据刷新\n    if (selectStateRef.current === slctStateCode && uMarkRef.current !== undefined && uMarkRef.current !== uMark) {\n      instance.current.controller.setSelectedRows([]);\n    }\n    uMarkRef.current = uMark;\n  }, [parentModel === null || parentModel === void 0 || (_parentModel$getDataP2 = parentModel.getDataProperty(['value', 'rows'])) === null || _parentModel$getDataP2 === void 0 ? void 0 : _parentModel$getDataP2.hashCode()]);\n\n  // 选中状态更新则更新状态\n  (0, _react.useEffect)(function () {\n    var _parentModel$getDataP3;\n    if (!parentModel) return;\n    selectStateRef.current = parentModel === null || parentModel === void 0 || (_parentModel$getDataP3 = parentModel.getDataProperty(['slctState'])) === null || _parentModel$getDataP3 === void 0 ? void 0 : _parentModel$getDataP3.hashCode();\n  }, [parentModel === null || parentModel === void 0 || (_parentModel$getDataP4 = parentModel.getDataProperty(['slctState'])) === null || _parentModel$getDataP4 === void 0 ? void 0 : _parentModel$getDataP4.hashCode()]);\n}\n\n/**\n * 单据体行操作导致的行数据变化(增/删/插行、置顶/底、上/下移)\n * 重新触发过滤\n */\nfunction useRowsChangeByRowOpereate(_ref3) {\n  var model = _ref3.model,\n    getTableApi = _ref3.getTableApi,\n    getInstance = _ref3.getInstance;\n  (0, _react.useEffect)(function () {\n    if (model.getDataProperty([_gridConst.ROW_CHANGE_FLAG])) {\n      var filters = getInstance().controller.getFilters();\n      // 存在过滤条件时需要重新过滤\n      if ((filters === null || filters === void 0 ? void 0 : filters.length) > 0) {\n        var tableApi = getTableApi();\n        tableApi.execFilter();\n      }\n    }\n  }, [model.getDataProperty([_gridConst.ROW_CHANGE_FLAG])]);\n}\nfunction useUpdateDataOptions(_ref4) {\n  var _parentModel$getDataP5, _model$getDataPropert, _parentModel$getDataP6, _model$getDataPropert2;\n  var model = _ref4.model,\n    parentModel = _ref4.parentModel,\n    getTableOptions = _ref4.getTableOptions,\n    dataValueTimestamp = _ref4.dataValueTimestamp;\n  (0, _react.useEffect)(function () {\n    var tableOptions = getTableOptions();\n    // 更新dataOptions\n    tableOptions.setDataOptions(model, parentModel);\n  }, [dataValueTimestamp, parentModel === null || parentModel === void 0 || (_parentModel$getDataP5 = parentModel.getDataProperty('colLock')) === null || _parentModel$getDataP5 === void 0 ? void 0 : _parentModel$getDataP5.hashCode(), model === null || model === void 0 || (_model$getDataPropert = model.getDataProperty('colLock')) === null || _model$getDataPropert === void 0 ? void 0 : _model$getDataPropert.hashCode(), parentModel === null || parentModel === void 0 || (_parentModel$getDataP6 = parentModel.getDataProperty('fmtinfo')) === null || _parentModel$getDataP6 === void 0 ? void 0 : _parentModel$getDataP6.hashCode(), model === null || model === void 0 || (_model$getDataPropert2 = model.getDataProperty('fmtinfo')) === null || _model$getDataPropert2 === void 0 ? void 0 : _model$getDataPropert2.hashCode()]);\n}\nfunction useFmtInfoChanged(_ref5) {\n  var _parentModel$getDataP7, _model$getDataPropert3;\n  var model = _ref5.model,\n    parentModel = _ref5.parentModel,\n    forceUpdate = _ref5.forceUpdate,\n    getTableApi = _ref5.getTableApi;\n  (0, _react.useEffect)(function () {\n    forceUpdate();\n    // 刷新adapter层表格\n    var tableApi = getTableApi();\n    tableApi.forceUpdateTable();\n  }, [parentModel === null || parentModel === void 0 || (_parentModel$getDataP7 = parentModel.getDataProperty('fmtinfo')) === null || _parentModel$getDataP7 === void 0 ? void 0 : _parentModel$getDataP7.hashCode(), model === null || model === void 0 || (_model$getDataPropert3 = model.getDataProperty('fmtinfo')) === null || _model$getDataPropert3 === void 0 ? void 0 : _model$getDataPropert3.hashCode()]);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useDataUpdate.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useDataValueChanged.js":
/*!*************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useDataValueChanged.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useDataValueChanged;\nexports.getIsRowsChanged = getIsRowsChanged;\nexports.useDataValueChangedMark = useDataValueChangedMark;\n__webpack_require__(/*! core-js/modules/es.array.every.js */ \"../../node_modules/core-js/modules/es.array.every.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _tableConfig = __webpack_require__(/*! ../tableConfig */ \"./src/component/web/DataGrid/KDTable/tableConfig.js\");\nvar _index = __webpack_require__(/*! ../data/index */ \"./src/component/web/DataGrid/KDTable/data/index.js\");\nvar _row = __webpack_require__(/*! ../utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nvar _data = __webpack_require__(/*! ../utils/data */ \"./src/component/web/DataGrid/KDTable/utils/data.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nvar _treeTable = __webpack_require__(/*! ../utils/treeTable */ \"./src/component/web/DataGrid/KDTable/utils/treeTable.js\");\nvar _getAggregateData = __webpack_require__(/*! ../aggregate/getAggregateData */ \"./src/component/web/DataGrid/KDTable/aggregate/getAggregateData.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _merge = __webpack_require__(/*! ../utils/merge */ \"./src/component/web/DataGrid/KDTable/utils/merge.js\");\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _cell = __webpack_require__(/*! ../utils/cell */ \"./src/component/web/DataGrid/KDTable/utils/cell.js\");\nvar getDatasource = _index.dataHelper.getDatasource,\n  getPageIndex = _index.dataHelper.getPageIndex,\n  getDataCount = _index.dataHelper.getDataCount,\n  isDisableResetScroll = _index.dataHelper.isDisableResetScroll;\nvar MAX_CHANGE_ROWLEN = 10;\nfunction useDataValueChanged(_ref) {\n  var getTableOptions = _ref.getTableOptions,\n    getTableApi = _ref.getTableApi,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getInstance = _ref.getInstance,\n    getInternalEventService = _ref.getInternalEventService,\n    model = _ref.model,\n    parentModel = _ref.parentModel,\n    dataValueTimestamp = _ref.dataValueTimestamp,\n    containerEleRef = _ref.containerEleRef,\n    isRowsChanged = _ref.isRowsChanged,\n    updateFoldFooterRowsStatus = _ref.updateFoldFooterRowsStatus;\n  var hadTrackingOfLargePageRowsRef = (0, _react.useRef)(false);\n  var lastQueryIdRef = (0, _react.useRef)();\n  (0, _react.useEffect)(function () {\n    var tableConfig = getTableConfigImmediately();\n    var instance = getInstance();\n    var tableOptions = getTableOptions();\n    var tableApi = getTableApi();\n    var internalEventService = getInternalEventService();\n    var useModel = parentModel || model;\n    var pageId = tableConfig.pageId,\n      id = tableConfig.id;\n    tableConfig.setPropertyConfig((0, _tableConfig.getPropertyConfig)(model, parentModel));\n    var shouldScroll = (0, _memoryCacher.getPageData)(pageId, [id, _const.SHOULD_SCROLL_TO_TOP]);\n    // 针对列表 切换页码，或者左树右表的情况，点击后数据的数据总数和当前页不一致就可以重置滚动条\n    // 单据体也需要把滚动条重置回顶部\n    // isDisableResetScroll阻止默认的竖直滚动条复位\n    var shouldEntryEntityScroll = shouldScroll && tableOptions.getGridType() === _const.GRID_TYPE.entryGrid;\n    var shouldListScroll = isRowsChanged && !isDisableResetScroll(model, parentModel) && tableOptions.getGridType() === _const.GRID_TYPE.listViewGrid;\n    if (containerEleRef && (shouldListScroll || shouldEntryEntityScroll)) {\n      var tableBodyContainer = containerEleRef.current.querySelector('.kd-table-body.kd-horizontal-scroll-container');\n      if (tableBodyContainer) {\n        tableBodyContainer.scrollTop = 0;\n      }\n      // 单据体是否滚动标志，只生效一次，滚动结束就删掉\n      shouldEntryEntityScroll && (0, _memoryCacher.deletePageData)(pageId, [id, _const.SHOULD_SCROLL_TO_TOP]);\n    }\n    var dataSource = getDatasource(model, parentModel, {\n      getTableConfigImmediately: getTableConfigImmediately\n    });\n    var queryId = model.getDataProperty(['value', 'queryId']);\n    // 数据改变时，清空展开行\n    (0, _row.refreshOpenRowKeys)(dataSource, {\n      getInstance: getInstance,\n      getTableConfigImmediately: getTableConfigImmediately\n    });\n    (0, _row.refreshExpandRowKeys)(dataSource, {\n      getInstance: getInstance,\n      getTableConfigImmediately: getTableConfigImmediately,\n      getTableOptions: getTableOptions,\n      getInternalEventService: getInternalEventService\n    });\n    (0, _data.largePageRowsTracking)({\n      hadTrackingOfLargePageRowsRef: hadTrackingOfLargePageRowsRef,\n      getTableOptions: getTableOptions,\n      getTableConfigImmediately: getTableConfigImmediately,\n      useModel: useModel\n    });\n    // 数据改变时，清空范围选中内容\n    tableApi.clearRangeSelection();\n\n    // 单据体单元格值更新时退出编辑态\n    if (!tableOptions.getGridType()) {\n      (0, _cell.updateEditingCellValue)(dataSource, {\n        getTableApi: getTableApi,\n        getInstance: getInstance,\n        getTableConfigImmediately: getTableConfigImmediately\n      });\n    }\n    var tableRows = dataSource;\n    if (tableConfig.treeTable) {\n      var showTreeSeq = tableOptions.getShowTreeSeq();\n      var rowId = tableOptions.getMetaOptionsProperty('rowId');\n      var isTreeVirtualView = tableConfig.gridType === _const.GRID_TYPE.virtualViewGrid && tableConfig.treeTable;\n      // 树形报表序号取数据中返回的序号，不需要重新构造\n      var shouldModifySeq = !isTreeVirtualView;\n      var _getTreeDataInfo = (0, _treeTable.getTreeDataInfo)(dataSource, {\n          rowKey: tableConfig.rowKey,\n          seqKey: tableConfig.seqKey,\n          showTreeSeq: showTreeSeq,\n          rowId: rowId,\n          shouldModifySeq: shouldModifySeq\n        }),\n        treeData = _getTreeDataInfo.treeData,\n        rowKeyMap = _getTreeDataInfo.rowKeyMap,\n        groupMap = _getTreeDataInfo.groupMap,\n        lazyLoadGroup = _getTreeDataInfo.lazyLoadGroup,\n        parentNodeMap = _getTreeDataInfo.parentNodeMap;\n      tableOptions.setTreeRowKeyInfo({\n        rowKeyMap: rowKeyMap,\n        groupMap: groupMap,\n        lazyLoadGroup: lazyLoadGroup,\n        parentNodeMap: parentNodeMap\n      }); // 需要放在setDataOptions之后,否则会被重置\n      tableRows = treeData;\n    }\n\n    // 更新表格数据，报表是异步请求数据，此时不需要更新表格数据\n    var isScrollLoadVirtualView = tableOptions.getGridType() === _const.GRID_TYPE.virtualViewGrid && tableConfig.isScrollLoad;\n    if (!isScrollLoadVirtualView || lastQueryIdRef.current !== queryId) {\n      instance.tableModel.setRows(tableRows);\n      if (tableOptions.getGridType() === _const.GRID_TYPE.virtualViewGrid) {\n        var rowSpan = (0, _merge.getVirtualViewMergeRowSpan)(tableRows, {\n          getTableOptions: getTableOptions,\n          getTableConfigImmediately: getTableConfigImmediately\n        });\n        tableOptions.setVirtualViewRowSpan(rowSpan);\n      }\n      lastQueryIdRef.current = queryId;\n    }\n\n    // 数据改变时刷新平铺视图\n    (0, _memoryCacher.setPageData)(pageId, [id, 'refreshTiledView']);\n    var sumWithFilter = tableOptions.getSumWithFilter();\n    var displayRows = sumWithFilter ? instance.tableModel.getFlatDisplayRows() : dataSource;\n    // datacount或者floatBottomData改变都需要重新设置合计信息\n    // todo: 后续应考虑是否将合计与行数据信息区分处理\n    // 此处使用rowCount和pageindex判断是否显示合计行\n    var rowCount = tableConfig.gridType === _const.GRID_TYPE.virtualViewGrid ? getDataCount(model, parentModel) : displayRows.length;\n    var footerRowData = (0, _row.shouldShowFooterRow)({\n      rowCount: rowCount,\n      pageIndex: getPageIndex(model, parentModel)\n    }) ? (0, _getAggregateData.getAggregateData)({\n      model: model,\n      parentModel: parentModel,\n      tableOptions: tableOptions,\n      dataSource: displayRows,\n      getTableConfigImmediately: getTableConfigImmediately\n    }) : [];\n    _updateIsFoldFooterRowData(instance.tableModel.getFooterRowData() || [], footerRowData, updateFoldFooterRowsStatus);\n    (0, _data.setAggregateData)(footerRowData, instance.tableModel, internalEventService, tableOptions);\n    instance.mergeModel.updateMergeModel(tableConfig.entities, dataSource, tableConfig.rowKey, tableConfig.rowDetailOptions.type);\n    instance.mergeModel.updateBorderCols(tableConfig.columns, model.getMetaProperty('columns') || (0, _immutable.List)(), tableConfig.seqKey);\n    // 更新显示右边框线的列,适用于报表融合的场景\n    (0, _merge.setRightBorderCols)({\n      columns: tableConfig.columns,\n      getTableOptions: getTableOptions\n    });\n  }, [dataValueTimestamp]);\n}\nfunction useDataValueChangedMark(_ref2) {\n  var this$ = _ref2.this$,\n    parentModel = _ref2.parentModel,\n    model = _ref2.model;\n  var timestamp = this$.current.dataValueTimestamp;\n  var preModel = this$.current.parentModel || this$.current.model;\n  var curModel = parentModel || model;\n  // 1. 初次渲染 2. 当前不存在model（防止意外情况) 3.value发生变化\n  if (!preModel || !curModel || !(0, _immutable.is)(preModel.getDataValue(), curModel.getDataValue())) {\n    timestamp = window.performance.now();\n  }\n  return timestamp;\n}\n// 判断本次刷新是否需要重置滚动条位置，目前需要的场景为 切换页码，左树右表点击左边树节点\nfunction getIsRowsChanged(_ref3) {\n  var this$ = _ref3.this$,\n    parentModel = _ref3.parentModel,\n    model = _ref3.model;\n  var preModel = this$.current.parentModel || this$.current.model;\n  var curModel = parentModel || model;\n  // 判断是否需要刷新滚动条位置\n  if (preModel && curModel) {\n    // data 中存在不一致属性则需要更新滚动条位置\n    var oldValue = preModel.getDataValue();\n    var newValue = curModel.getDataValue();\n    var oldRows = (oldValue === null || oldValue === void 0 ? void 0 : oldValue.get('rows')) || (0, _immutable.List)();\n    var newRows = (newValue === null || newValue === void 0 ? void 0 : newValue.get('rows')) || (0, _immutable.List)();\n    if (Math.abs(newRows.size - oldRows.size) >= MAX_CHANGE_ROWLEN) {\n      return true;\n    }\n    return oldRows.size > 0 ? calIsRowsChanged(oldRows, newRows) : false;\n  }\n  return false;\n}\nfunction calIsRowsChanged(oldRows, newRows) {\n  var diffRows = [];\n  for (var i = 0; i < newRows.size; i++) {\n    if (!(0, _immutable.is)(newRows.get(i, ''), oldRows.get(i, ''))) {\n      diffRows.push(i);\n      // 数据不一致量超过阀值才重置滚动条，阀值为舒适模式下能出现滚动条的最小行数\n      if (diffRows.length > MAX_CHANGE_ROWLEN) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction _updateIsFoldFooterRowData(preFooterRowData, nowFooterRowData, updateFoldFooterRowsStatus) {\n  if (preFooterRowData.length && nowFooterRowData.length) {\n    var preLoadingCellKeys = _getFooterRowLoadingCellKeys(preFooterRowData);\n    if (_isLoadedFooterRowsAllCellValue(preLoadingCellKeys, nowFooterRowData)) {\n      updateFoldFooterRowsStatus(false, false, true);\n    }\n  }\n}\nfunction _getFooterRowLoadingCellKeys() {\n  var footerRowData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var lastFooterRow = footerRowData[footerRowData.length - 1] || {};\n  var cells = [];\n  Object.keys(lastFooterRow).forEach(function (key) {\n    lastFooterRow[key] === _gridConst.AGGREGATE_CELL_LOADING_VAL && cells.push(key);\n  });\n  return cells;\n}\nfunction _isLoadedFooterRowsAllCellValue(preLoadingCellKeys) {\n  var footerRowData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (!preLoadingCellKeys.length) {\n    return false; // 上次加载没有未加载的合计值\n  }\n  var lastFooterRow = footerRowData[footerRowData.length - 1] || {};\n  return preLoadingCellKeys.every(function (key) {\n    return lastFooterRow[key] != null && lastFooterRow[key] !== _gridConst.AGGREGATE_CELL_LOADING_VAL;\n  });\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useDataValueChanged.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useDisabledSelectAll.js":
/*!**************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useDisabledSelectAll.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useDisabledSelectAll;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\n/*\n * @Author: wqhui\n * @Date: 2022-04-26 14:46:17\n * @Description: 禁用列头选择全部\n */\nfunction useDisabledSelectAll(_ref) {\n  var readyed = _ref.readyed,\n    parentModel = _ref.parentModel,\n    getTableConfigImmediately = _ref.getTableConfigImmediately;\n  (0, _react.useEffect)(function () {\n    if (!readyed || !parentModel) {\n      return;\n    }\n    var pageId = parentModel.pageId,\n      key = parentModel.key;\n    function disabledClickInInvokeGetSumData() {\n      var tableConfig = getTableConfigImmediately();\n      tableConfig.setDisableSelectAll(true);\n    }\n    function abledClickAfterInvokeGetSumData() {\n      var tableConfig = getTableConfigImmediately();\n      tableConfig.setDisableSelectAll(false);\n    }\n    var invokeGetSumDataHandler = (0, _memoryCacher.addDataChangeListener)(pageId, [key, 'invokeControlMethod', _const.GETSUMDATA], disabledClickInInvokeGetSumData);\n    var getSumDataHandler = (0, _memoryCacher.addDataChangeListener)(pageId, [key, _const.SERVERCBLISTENER, _const.GETSUMDATA], abledClickAfterInvokeGetSumData);\n    return function () {\n      invokeGetSumDataHandler && invokeGetSumDataHandler();\n      invokeGetSumDataHandler && getSumDataHandler();\n    };\n  }, [readyed]);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useDisabledSelectAll.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useDropZoneChange.js":
/*!***********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useDropZoneChange.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useDropZoneChange;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _GlobalDataCacher = __webpack_require__(/*! @/model/GlobalDataCacher */ \"./src/model/GlobalDataCacher.js\");\nvar _symbolConst = __webpack_require__(/*! @/constant/symbolConst */ \"./src/constant/symbolConst.js\");\nvar _appModelFunction = __webpack_require__(/*! @/model/appModelFunction */ \"./src/model/appModelFunction.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction useDropZoneChange(_ref) {\n  var model = _ref.model,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getTableApi = _ref.getTableApi,\n    getInternalEventService = _ref.getInternalEventService;\n  var _useState = (0, _react.useState)(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    featureApiReadyed = _useState2[0],\n    setFeatureApiReadyed = _useState2[1];\n  (0, _react.useEffect)(function () {\n    var internalEventService = getInternalEventService();\n    var setReadyed = function setReadyed() {\n      setTimeout(function () {\n        setFeatureApiReadyed(true);\n      });\n    };\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.baseTableRendered, setReadyed, false, true);\n    return function () {\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.baseTableRendered, setReadyed);\n    };\n  }, []);\n  (0, _react.useEffect)(function () {\n    var tableConfig = getTableConfigImmediately();\n    var gridType = tableConfig.gridType,\n      isRowDrag = tableConfig.isRowDrag;\n    if (!featureApiReadyed || gridType !== _const.GRID_TYPE.entryGrid) return;\n    var formId = (0, _appModelFunction.getFormId)(model.pageId)(model.state);\n    var zoneKey = \"\".concat(formId, \"_\").concat(model.key, \"_\").concat(model.pageId);\n    var dragRowApi = getTableApi().getFeatureApi('rowDrag');\n    if (!dragRowApi) return;\n    if (isRowDrag) {\n      var _dragRowApi = getTableApi().getFeatureApi('rowDrag');\n      var dropZones = (0, _GlobalDataCacher.getData)(_symbolConst.KEY_DROP_ZONES) || {};\n      dropZones[zoneKey] = _dragRowApi.getRowDropZoneParams();\n      (0, _GlobalDataCacher.setData)(_symbolConst.KEY_DROP_ZONES, dropZones);\n    } else {\n      var _dropZones2 = (0, _GlobalDataCacher.getData)(_symbolConst.KEY_DROP_ZONES) || {};\n      delete _dropZones2[zoneKey];\n      (0, _GlobalDataCacher.setData)(_symbolConst.KEY_DROP_ZONES, _dropZones2);\n    }\n  }, [featureApiReadyed, getTableConfigImmediately().isRowDrag]);\n  (0, _react.useEffect)(function () {\n    if (!featureApiReadyed) return;\n    var setRowDropZone = function setRowDropZone(_dropZones) {\n      var _model$meta$get;\n      var isAllowDragToTable = model.meta.get('allowDragToTable');\n      var allowEntries = (_model$meta$get = model.meta.get('allowedDragEntries')) === null || _model$meta$get === void 0 ? void 0 : _model$meta$get.toJS();\n      var dragRowApi = getTableApi().getFeatureApi('rowDrag');\n      if (!dragRowApi) return;\n      // 先全部清掉\n      var allDropZones = dragRowApi.getRowDropZone() || [];\n      allDropZones.forEach(function (zone) {\n        dragRowApi.removeRowDropZone(zone);\n      });\n      if (isAllowDragToTable) {\n        var dropZones = _dropZones || (0, _GlobalDataCacher.getData)(_symbolConst.KEY_DROP_ZONES) || {};\n        if (allowEntries === undefined) {\n          // undefined时全部添加\n          Object.keys(dropZones).forEach(function (key) {\n            var zone = dropZones[key];\n            dragRowApi.addRowDropZone(zone);\n          });\n        } else if (Array.isArray(allowEntries)) {\n          allowEntries.forEach(function (entry) {\n            var formId = entry.formId,\n              key = entry.key;\n            var zoneKey = \"\".concat(formId, \"_\").concat(key);\n            var targetZoneKeys = Object.keys(dropZones).filter(function (key) {\n              return key.includes(zoneKey);\n            }) || [];\n            targetZoneKeys.forEach(function (zoneKey) {\n              var zone = dropZones[zoneKey];\n              if (zone) {\n                dragRowApi.addRowDropZone(zone);\n              }\n            });\n          });\n        }\n      }\n    };\n    var removeDataChangeListener = (0, _GlobalDataCacher.addDataChangeListener)(_symbolConst.KEY_DROP_ZONES, function (dropZones) {\n      setRowDropZone(dropZones);\n    });\n    setRowDropZone();\n    return function () {\n      removeDataChangeListener && removeDataChangeListener();\n    };\n  }, [featureApiReadyed, model.meta.get('allowDragToTable'), model.meta.get('allowedDragEntries')]);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useDropZoneChange.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useEdit.js":
/*!*************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useEdit.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useEdit = void 0;\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _ctrlMethodConst = __webpack_require__(/*! @/constant/ctrlMethodConst */ \"./src/constant/ctrlMethodConst.js\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar useEdit = exports.useEdit = function useEdit(internalEventService, containerEleRef, tableConfig, handleTableStartEdit, controller) {\n  var lastEditCellRef = (0, _react.useRef)({\n    rowKey: -1\n  });\n  // foucesCell: { rowIndex: number, rowkey?: number, code?: string }\n  var _useState = (0, _react.useState)({\n      rowIndex: -1\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    focusCell = _useState2[0],\n    setFocusCell = _useState2[1]; // 焦点单元格主要与页面操作相关,以rowIndex为准\n  // editCell: { rowKey: number, code?: string, trigger?: '' }\n  var _useState3 = (0, _react.useState)({\n      rowKey: -1\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editCell = _useState4[0],\n    setEditCell = _useState4[1]; // 编辑主要和编辑态单元格定位和值更新有关,以rowKey为准\n  var handleSetEditCell = function handleSetEditCell(_ref) {\n    var params = _ref.params;\n    var editCell = params.editCell;\n    setEditCell(editCell);\n    controller.setEditCell(editCell);\n    controller.setLastEditCell(lastEditCellRef.current);\n    lastEditCellRef.current = editCell;\n  };\n  var handleSetFocusCell = function handleSetFocusCell(_ref2) {\n    var params = _ref2.params;\n    var focusCell = params.focusCell;\n    setFocusCell(focusCell);\n    controller.setFocusedCell(focusCell);\n  };\n\n  // const handleWindowClick = e => {\n  //   console.log('window click')\n  //   if (!containerEleRef.current?.contains(e.target)) {\n  //     setEditCell({ rowKey: -1 })\n  //   }\n  // }\n  (0, _react.useEffect)(function () {\n    var id = tableConfig.id,\n      pageId = tableConfig.pageId;\n    // window.addEventListener('click', handleWindowClick, true)\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.setEditCell, handleSetEditCell);\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.setFocusCell, handleSetFocusCell);\n    var startEditorListener = (0, _memoryCacher.addDataChangeListener)(pageId, [id, _ctrlMethodConst.M_GRID_START_EDIT], handleTableStartEdit);\n    return function () {\n      // window.removeEventListener('click', handleWindowClick, true)\n      startEditorListener();\n    };\n  }, []);\n  return [editCell, focusCell];\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useEdit.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useExtendScriptApi.js":
/*!************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useExtendScriptApi.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.find.js */ \"../../node_modules/core-js/modules/es.array.find.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _const = __webpack_require__(/*! @/constant/const */ \"./src/constant/const.js\");\nvar _index = __webpack_require__(/*! @/pagescope/api/grid/index */ \"./src/pagescope/api/grid/index.js\");\nvar _setCellValue = _interopRequireDefault(__webpack_require__(/*! @/pagescope/utils/setCellValue */ \"./src/pagescope/utils/setCellValue.js\"));\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction useExtendScriptApi(_ref) {\n  var model = _ref.model,\n    getInstance = _ref.getInstance,\n    getTableApi = _ref.getTableApi,\n    tablePoster = _ref.tablePoster,\n    tableConfig = _ref.tableConfig,\n    getInternalEventService = _ref.getInternalEventService;\n  var onInitCallBackRef = (0, _react.useRef)();\n  var isReadyRef = (0, _react.useRef)(false);\n  // 初始化- 执行页面脚本init\n  (0, _react.useEffect)(function () {\n    var internalEventService = getInternalEventService();\n    var handleInit = function handleInit(_ref2) {\n      var onInitCallBack = _ref2.callback;\n      if (typeof onInitCallBack === 'function') {\n        if (isReadyRef.current) {\n          onInitCallBack();\n          return;\n        }\n        onInitCallBackRef.current = onInitCallBack;\n      }\n    };\n    var setReadyed = function setReadyed() {\n      if (isReadyRef.current) return;\n      setTimeout(function () {\n        isReadyRef.current = true;\n        if (typeof onInitCallBackRef.current === 'function') {\n          onInitCallBackRef.current();\n        }\n      }, 0);\n    };\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.baseTableRendered, setReadyed, false, true);\n    var onInitData = (0, _memoryCacher.getPageData)(model.pageId, [model.key, _const.ON_INIT]) || {};\n    handleInit(onInitData);\n    var removeDataChangeListener = (0, _memoryCacher.addDataChangeListener)(model.pageId, [model.key, _const.ON_INIT], handleInit);\n    return function () {\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.baseTableRendered, setReadyed);\n      removeDataChangeListener === null || removeDataChangeListener === void 0 || removeDataChangeListener();\n      isReadyRef.current = false;\n    };\n  }, [model.pageId, model.key, getInternalEventService]);\n  // 页面脚本功能接口\n  (0, _react.useEffect)(function () {\n    var pageId = model.pageId,\n      key = model.key;\n    var _ref3 = getTableApi() || {},\n      isCellLock = _ref3.isCellLock;\n    var instanceController = getInstance().controller || {};\n    var columns = model.getMetaProperty('columns') || (0, _immutable.List)();\n    var getColMetaByField = function getColMetaByField(field) {\n      return columns.find(function (column) {\n        return column.get('dataIndex') === field;\n      });\n    };\n    var getUserLocale = function getUserLocale() {\n      return model.getUserLocale;\n    };\n    var updateCellValue = function updateCellValue(args) {\n      tablePoster.send({\n        type: 'updateCellValue',\n        args: args\n      });\n    };\n    var getRow = function getRow(rowIndex) {\n      return instanceController.getRow(rowIndex);\n    };\n    var getColumnByCode = function getColumnByCode(code) {\n      return tableConfig.columns.find(function (column) {\n        return column.code === code;\n      });\n    };\n    var removeSubScribe = (0, _memoryCacher.subscribeControlMethod)(pageId, key, 'directives', function (pageData) {\n      if (pageData === undefined || pageData === null) {\n        return;\n      }\n      var _pageData$ = pageData[0],\n        methodname = _pageData$.methodname,\n        args = _pageData$.args;\n      if (methodname === _const.CLIENT_ACTION) {\n        var data = Array.isArray(args) ? args[0] : args;\n        var type = data.type,\n          playload = data.playload,\n          callback = data.callback;\n        if (!isReadyRef.current) {\n          console.error((0, _intlApi.getLangMsg)({\n            key: 'PageJs.key001',\n            variables: {\n              controlKey: key,\n              apiType: type\n            }\n          }));\n          return;\n        }\n        if (type === 'setCellValue') {\n          (0, _setCellValue[\"default\"])(playload, {\n            pageId: pageId,\n            key: key,\n            isCellLock: isCellLock,\n            updateCellValue: updateCellValue,\n            getColMetaByField: getColMetaByField,\n            getUserLocale: getUserLocale,\n            getColumnByCode: getColumnByCode,\n            getRow: getRow\n          });\n          return;\n        }\n        if (callback && typeof callback === 'function') {\n          switch (type) {\n            case _index.GET_ROW_DATA:\n              {\n                var rowIndex = playload;\n                var rowData = getRow(rowIndex);\n                callback(rowData);\n                break;\n              }\n            case _index.GET_GRID_DATA:\n              {\n                var gridData = instanceController.getRowDatas();\n                callback(gridData);\n                break;\n              }\n            case _index.GET_GRID_STATE:\n              {\n                var focusedRow = instanceController.getFocusedRow(); // 焦点行\n                var editCell = instanceController.getEditCell(); // 正在编辑的单元格\n                var selectedRowKeys = instanceController.getSelectedRowKeys(); // 选中行 getSelectedRowKeys\n                var gridState = {\n                  focusedRow: focusedRow,\n                  editCell: editCell,\n                  selectedRowKeys: selectedRowKeys\n                };\n                callback(gridState);\n                break;\n              }\n            case _index.GET_FOCUSED_CELL:\n              {\n                var focusedCell = instanceController.getFocusedCell();\n                callback(focusedCell);\n              }\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    });\n    (0, _memoryCacher.setControlMount)(pageId, key, true);\n    return function () {\n      removeSubScribe();\n      (0, _memoryCacher.setControlMount)(pageId, key, false);\n    };\n  }, [model, tableConfig, getInstance, getTableApi, tablePoster]);\n}\nvar _default = exports[\"default\"] = useExtendScriptApi;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useExtendScriptApi.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useFormStatusChanged.js":
/*!**************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useFormStatusChanged.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useFormStatusChanged;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _columns = __webpack_require__(/*! ../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nfunction useFormStatusChanged(_ref) {\n  var model = _ref.model,\n    parentModel = _ref.parentModel,\n    isLocked = _ref.isLocked,\n    getInstance = _ref.getInstance,\n    getTableOptions = _ref.getTableOptions,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getInternalEventService = _ref.getInternalEventService,\n    getTableApi = _ref.getTableApi;\n  var prevFormStatusRef = (0, _react.useRef)(model.pageModel.getDynamicFormStatus(model.pageId));\n  var prevLockRef = (0, _react.useRef)(isLocked);\n  var formStatus = model.pageModel.getDynamicFormStatus(model.pageId);\n  (0, _react.useEffect)(function () {\n    var internalEventService = getInternalEventService();\n    if (formStatus !== prevFormStatusRef.current || isLocked !== prevLockRef.current) {\n      (0, _columns.resetTableColumnsAndConfig)({\n        model: model,\n        parentModel: parentModel,\n        isLocked: isLocked,\n        getInstance: getInstance,\n        getTableOptions: getTableOptions,\n        getTableConfigImmediately: getTableConfigImmediately,\n        getInternalEventService: getInternalEventService,\n        getTableApi: getTableApi\n      });\n      prevFormStatusRef.current = formStatus;\n      prevLockRef.current = isLocked;\n    }\n    internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.afterColumnAutoSize,\n      params: {\n        trigger: _const.FORMSTATUS_CHANGED\n      }\n    });\n  }, [formStatus, isLocked]);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useFormStatusChanged.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useInsertData.js":
/*!*******************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useInsertData.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useInsertData;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.find-index.js */ \"../../node_modules/core-js/modules/es.array.find-index.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.index-of.js */ \"../../node_modules/core-js/modules/es.array.index-of.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.array.splice.js */ \"../../node_modules/core-js/modules/es.array.splice.js\");\n__webpack_require__(/*! core-js/modules/es.object.assign.js */ \"../../node_modules/core-js/modules/es.object.assign.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.set.js */ \"../../node_modules/core-js/modules/es.set.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _dataHelper = __webpack_require__(/*! ../data/dataHelper */ \"./src/component/web/DataGrid/KDTable/data/dataHelper.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _data = __webpack_require__(/*! ../utils/data */ \"./src/component/web/DataGrid/KDTable/utils/data.js\");\nvar _treeTable = __webpack_require__(/*! ../utils/treeTable */ \"./src/component/web/DataGrid/KDTable/utils/treeTable.js\");\nvar _merge = __webpack_require__(/*! ../utils/merge */ \"./src/component/web/DataGrid/KDTable/utils/merge.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _grid = __webpack_require__(/*! @/util/component/grid */ \"./src/util/component/grid.js\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n// 处理滚动加载返回的数据\nfunction useInsertData(_ref) {\n  var this$ = _ref.this$,\n    dataValueTimestamp = _ref.dataValueTimestamp,\n    getInstance = _ref.getInstance,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getTableOptions = _ref.getTableOptions,\n    getInternalEventService = _ref.getInternalEventService;\n  var treeOriginDataRef = (0, _react.useRef)(null); // 缓存一份树形结构的原始数据\n\n  (0, _react.useEffect)(function () {\n    treeOriginDataRef.current = null;\n  }, [dataValueTimestamp]);\n  (0, _react.useEffect)(function () {\n    var useModel = this$.current.parentModel || this$.current.model;\n    var pageId = useModel.pageId,\n      key = useModel.key;\n    var tableConfig = getTableConfigImmediately();\n    var rowKey = tableConfig.rowKey,\n      gridType = tableConfig.gridType;\n    var insertData = function insertData(params) {\n      var tableConfig = getTableConfigImmediately();\n      var isScrollLoad = tableConfig.isScrollLoad,\n        gridType = tableConfig.gridType,\n        treeTable = tableConfig.treeTable,\n        blockSize = tableConfig.blockSize,\n        rowKey = tableConfig.rowKey;\n      if (!isScrollLoad) return;\n      var length = params.length,\n        startIndex = params.startIndex,\n        datacount = params.datacount;\n      var instance = getInstance();\n      var tableOptions = getTableOptions();\n      var internalEventService = getInternalEventService();\n      var rowId = tableOptions.getMetaOptionsProperty('rowId');\n      var tableRows = getTableRows(params, {\n        getTableOptions: getTableOptions,\n        getTableConfigImmediately: getTableConfigImmediately\n      });\n      var rowDatas = dfs(treeOriginDataRef.current || instance.tableModel.getFlatRows());\n      var isTreeVirtualView = gridType === _const.GRID_TYPE.virtualViewGrid && treeTable;\n      // 返回数据超过blockSize时，记住最后一行的rowKeyValue，当这行渲染时，去加载下一页的数据\n      if (isTreeVirtualView && tableRows.length >= blockSize) {\n        var lastRow = tableRows[tableRows.length - 1];\n        var lastRowKeyValue = lastRow[rowKey];\n        var currentTreeVirtualViewLoadedDataRow = tableOptions.getTreeVirtualViewLoadedDataRow();\n        var shouldLoadDataRowInfo = {\n          rowKeyValue: String(lastRowKeyValue),\n          pid: params.pid,\n          startIndex: params.startIndex\n        };\n        tableOptions.setTreeVirtualViewLoadedDataRow([].concat(_toConsumableArray(currentTreeVirtualViewLoadedDataRow), [shouldLoadDataRowInfo]));\n      }\n      if (tableConfig.scrollLoadType === _const.SCROLL_LOAD_TYPE.serverSide) {\n        setIsScrollLoadLastPage(params, {\n          getTableOptions: getTableOptions,\n          getTableConfigImmediately: getTableConfigImmediately\n        });\n        if (!params.pid || params.pid === '0') {\n          rowDatas = rowDatas.concat(tableRows);\n        } else {\n          var _rowDatas;\n          // 树形结构\n          var index = rowDatas.findIndex(function (row) {\n            return row[rowId] === params.pid;\n          });\n          // toDO:根据树形startIndex插入\n          (_rowDatas = rowDatas).splice.apply(_rowDatas, [index + 1 + params.startIndex, 0].concat(_toConsumableArray(tableRows)));\n        }\n      } else {\n        var _rowDatas2;\n        var currentPage = Math.floor(startIndex / length);\n        setLoadedPages(currentPage, {\n          getTableOptions: getTableOptions\n        });\n        (_rowDatas2 = rowDatas).splice.apply(_rowDatas2, [startIndex, length].concat(_toConsumableArray(tableRows)));\n      }\n      if (tableConfig.treeTable) {\n        treeOriginDataRef.current = rowDatas; // 缓存树形结构的原始数据，方便下次构造树形结构调用\n        var showTreeSeq = tableOptions.getShowTreeSeq();\n        var shouldModifySeq = !isTreeVirtualView;\n        var _getTreeDataInfo = (0, _treeTable.getTreeDataInfo)(rowDatas, {\n            rowKey: tableConfig.rowKey,\n            seqKey: tableConfig.seqKey,\n            showTreeSeq: showTreeSeq,\n            rowId: rowId,\n            shouldModifySeq: shouldModifySeq\n          }),\n          treeData = _getTreeDataInfo.treeData,\n          rowKeyMap = _getTreeDataInfo.rowKeyMap,\n          groupMap = _getTreeDataInfo.groupMap,\n          lazyLoadGroup = _getTreeDataInfo.lazyLoadGroup,\n          parentNodeMap = _getTreeDataInfo.parentNodeMap;\n        var isVirtualViewExpandAll = tableOptions.getTreeVirtualViewExpandAll();\n        // 后端设置展开全部后，返回的数据需要展开显示\n        if (isVirtualViewExpandAll) {\n          var _instance$controller, _instance$controller2;\n          var expandKeys = _toConsumableArray(groupMap.keys());\n          // 找出当前返回数据中可展开的行\n          var currentExpandRows = tableRows.filter(function (row) {\n            return expandKeys.includes(row[rowKey]);\n          });\n          var currentExpandKeys = currentExpandRows.map(function (row) {\n            return row[rowKey] + '';\n          });\n          var currentExpandIds = currentExpandRows.map(function (row) {\n            return row.rowid;\n          });\n\n          // 因为是新返回的数据，设置这些行在展开状态为true\n          var lastExpandRowkey = ((_instance$controller = instance.controller) === null || _instance$controller === void 0 ? void 0 : _instance$controller.getExpandRowKeys()) || [];\n          var nextExpandRowKeys = Array.from(new Set(lastExpandRowkey.concat(currentExpandKeys)));\n          (_instance$controller2 = instance.controller) === null || _instance$controller2 === void 0 || _instance$controller2.setExpandRowKeys(nextExpandRowKeys);\n          tableOptions.setExpandRowIds(currentExpandIds, 'expand');\n        }\n        tableOptions.setTreeRowKeyInfo({\n          rowKeyMap: rowKeyMap,\n          groupMap: groupMap,\n          lazyLoadGroup: lazyLoadGroup,\n          parentNodeMap: parentNodeMap\n        }); // 需要放在setDataOptions之后,否则会被重置\n        rowDatas = treeData;\n      }\n      (0, _data.updateInstanceModelWhenDataChanged)(rowDatas, {\n        getInstance: getInstance,\n        getTableConfigImmediately: getTableConfigImmediately,\n        getTableOptions: getTableOptions,\n        model: this$.current.model\n      });\n      if (tableOptions.getGridType() === _const.GRID_TYPE.virtualViewGrid) {\n        var dataDesc = (0, _dataHelper.getConvertedRowDesc)(params);\n        tableOptions.setDataDesc(dataDesc);\n        var rowSpan = (0, _merge.getVirtualViewMergeRowSpan)(rowDatas, {\n          getTableOptions: getTableOptions,\n          getTableConfigImmediately: getTableConfigImmediately\n        });\n        tableOptions.setVirtualViewRowSpan(rowSpan);\n        internalEventService.dispatchEvent({\n          type: _eventServiceName.KD_TABLE_EVENT_NAMES.virtualDataChanged,\n          params: {\n            data: rowDatas\n          }\n        });\n      }\n\n      // 基础表格数据还没有完全刷新出来，这里延后一个时机自适应\n      setTimeout(function () {\n        internalEventService.dispatchEvent({\n          type: _eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns,\n          params: {\n            trigger: 'dataChanged'\n          }\n        });\n      }, 0);\n    };\n\n    // 报表脱敏需要更新单个单元格值\n    var updateCellsData = function updateCellsData(cells) {\n      var instance = getInstance();\n      var tableOptions = getTableOptions();\n      var rowDatas = dfs(treeOriginDataRef.current || instance.tableModel.getFlatRows());\n      rowDatas.forEach(function (row) {\n        cells.forEach(function (cell) {\n          var r = cell.r,\n            k = cell.k,\n            v = cell.v;\n          if (r === row[rowKey]) {\n            row[k] = v;\n          }\n        });\n      });\n      if (tableConfig.treeTable) {\n        treeOriginDataRef.current = rowDatas; // 缓存树形结构的原始数据，方便下次构造树形结构调用\n        var showTreeSeq = tableOptions.getShowTreeSeq();\n        var rowId = tableOptions.getMetaOptionsProperty('rowId');\n        var isTreeVirtualView = tableConfig.gridType === _const.GRID_TYPE.virtualViewGrid && tableConfig.treeTable;\n        var shouldModifySeq = !isTreeVirtualView;\n        var _getTreeDataInfo2 = (0, _treeTable.getTreeDataInfo)(rowDatas, {\n            rowKey: tableConfig.rowKey,\n            seqKey: tableConfig.seqKey,\n            showTreeSeq: showTreeSeq,\n            rowId: rowId,\n            shouldModifySeq: shouldModifySeq\n          }),\n          treeData = _getTreeDataInfo2.treeData,\n          rowKeyMap = _getTreeDataInfo2.rowKeyMap,\n          groupMap = _getTreeDataInfo2.groupMap,\n          lazyLoadGroup = _getTreeDataInfo2.lazyLoadGroup,\n          parentNodeMap = _getTreeDataInfo2.parentNodeMap;\n        tableOptions.setTreeRowKeyInfo({\n          rowKeyMap: rowKeyMap,\n          groupMap: groupMap,\n          lazyLoadGroup: lazyLoadGroup,\n          parentNodeMap: parentNodeMap\n        }); // 需要放在setDataOptions之后,否则会被重置\n        rowDatas = treeData;\n      }\n      instance.tableModel.setRows(rowDatas);\n    };\n    var methodName = gridType === 'VIEWGRID' ? 'setRowData' : 'setVirtualData';\n    var removeListener = (0, _memoryCacher.addDataChangeListener)(pageId, [key, methodName], insertData);\n    var removeUpdateCellsDataListener = (0, _grid.addGridCellsDataChanged)(pageId, key, updateCellsData);\n    return function () {\n      removeListener && removeListener();\n      removeUpdateCellsDataListener && removeUpdateCellsDataListener();\n    };\n  }, []);\n}\n\n/**\n * 记录已经加载过的数据页\n * @param {*} currentPage\n * @param {*} param1\n */\nfunction setLoadedPages(currentPage, _ref2) {\n  var getTableOptions = _ref2.getTableOptions;\n  var tableOptions = getTableOptions();\n  var loadedPages = tableOptions.getLoadedPages();\n  if (loadedPages.indexOf(currentPage) === -1) {\n    loadedPages.push(currentPage);\n    tableOptions.setLoadedPages(loadedPages);\n  }\n}\n\n/**\n *判断滚动加载是否已经到最后一页\n * @param {*} params\n * @param {*} param1\n */\nfunction setIsScrollLoadLastPage(params, _ref3) {\n  var getTableOptions = _ref3.getTableOptions,\n    getTableConfigImmediately = _ref3.getTableConfigImmediately;\n  var tableOptions = getTableOptions();\n  var tableConfig = getTableConfigImmediately();\n  var isScrollLoadLastPage = false;\n  if (tableConfig.gridType === 'VIEWGRID') {\n    var dataDesc = tableOptions.getDataOptionsProperty('dataDesc');\n    var pageRows = dataDesc.pageRows;\n    var startIndex = params.startIndex,\n      rows = params.rows;\n    if (startIndex + rows.length === pageRows || rows.length < tableConfig.blockSize) {\n      isScrollLoadLastPage = true;\n    }\n  } else {\n    var length = params.length,\n      _startIndex = params.startIndex,\n      datacount = params.datacount,\n      isLast = params.isLast;\n    if (isLast || datacount <= _startIndex + length) {\n      isScrollLoadLastPage = true;\n    }\n  }\n  tableOptions.setIsScrollLoadedLastPage(isScrollLoadLastPage);\n}\nfunction getTableRows(params, _ref4) {\n  var _params$rows;\n  var getTableOptions = _ref4.getTableOptions,\n    getTableConfigImmediately = _ref4.getTableConfigImmediately;\n  var tableOptions = getTableOptions();\n  var tableConfig = getTableConfigImmediately();\n  if ((params === null || params === void 0 || (_params$rows = params.rows) === null || _params$rows === void 0 ? void 0 : _params$rows.length) === 0) {\n    return [];\n  }\n  if (tableConfig.gridType === 'VIEWGRID') {\n    var dataDesc = tableOptions.getDataOptionsProperty('dataDesc');\n    // 列表的params不包含dataindex等数据，需要在tableOptions里面取\n    var convertedRowParams = Object.assign(dataDesc, params);\n    return (0, _dataHelper.getRowsByConvertedRowParams)(convertedRowParams, {\n      getTableConfigImmediately: getTableConfigImmediately\n    });\n  } else {\n    return (0, _dataHelper.getRows)(params, {\n      getTableConfigImmediately: getTableConfigImmediately\n    });\n  }\n}\nfunction dfs(rows) {\n  if (!Array.isArray(rows)) return;\n  return rows.map(function (row) {\n    if (!row.children) return _objectSpread({}, row);\n    return _objectSpread(_objectSpread({}, row), {}, {\n      children: dfs(row.children)\n    });\n  });\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useInsertData.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useKeyBoardEvent.js":
/*!**********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useKeyBoardEvent.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useKeyBoardEvent;\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"../../node_modules/core-js/modules/es.array.reduce.js\");\n__webpack_require__(/*! core-js/modules/es.array.some.js */ \"../../node_modules/core-js/modules/es.array.some.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _keyCode = __webpack_require__(/*! @/constant/keyCode */ \"./src/constant/keyCode.js\");\nvar _copy = __webpack_require__(/*! ../utils/copy */ \"./src/component/web/DataGrid/KDTable/utils/copy.js\");\nvar _clipboardUtil = __webpack_require__(/*! @/util/clipboardUtil */ \"./src/util/clipboardUtil.js\");\nvar _cell = __webpack_require__(/*! ../utils/cell */ \"./src/component/web/DataGrid/KDTable/utils/cell.js\");\nvar _row = __webpack_require__(/*! ../utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nvar _keyboardEvent = __webpack_require__(/*! ../utils/keyboardEvent */ \"./src/component/web/DataGrid/KDTable/utils/keyboardEvent.js\");\nvar _lodash = _interopRequireDefault(__webpack_require__(/*! lodash */ \"../../node_modules/lodash/lodash.js\"));\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _const = __webpack_require__(/*! @/constant/const */ \"./src/constant/const.js\");\nvar _elementEvent = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/elementEvent.js */ \"./src/component/web/DataGrid/TableHelper/util/elementEvent.js\");\nvar _array = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction useKeyBoardEvent(_ref) {\n  var readyed = _ref.readyed,\n    containerEleRef = _ref.containerEleRef,\n    getTableOptions = _ref.getTableOptions,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getInstance = _ref.getInstance,\n    getTableApi = _ref.getTableApi,\n    tablePoster = _ref.tablePoster;\n  var selectionList = (0, _react.useRef)([]);\n  var focusToGrid = function focusToGrid() {\n    var _containerEleRef$curr, _containerEleRef$curr2;\n    (_containerEleRef$curr = containerEleRef.current) === null || _containerEleRef$curr === void 0 || (_containerEleRef$curr2 = _containerEleRef$curr.focus) === null || _containerEleRef$curr2 === void 0 || _containerEleRef$curr2.call(_containerEleRef$curr);\n  };\n  var handleRowSelection = (0, _react.useCallback)(function () {\n    if (selectionList.current.length > 0) {\n      // 执行回调时，取最后一次的选中数据\n      var lastSelection = selectionList.current.pop();\n      var rowKeyValue = lastSelection.rowKeyValue,\n        selectedRowKeys = lastSelection.selectedRowKeys,\n        isCheck = lastSelection.isCheck;\n      tablePoster.send({\n        type: 'postCheckedRowSelection',\n        args: {\n          rowKeyValue: rowKeyValue,\n          selectedRowKeys: selectedRowKeys,\n          isCheck: isCheck\n        }\n      });\n      // 请求发出去后，清掉选中请求数组\n      selectionList.current = [];\n    }\n  }, []);\n  var handleRowSelectionDebounce = (0, _react.useCallback)(_lodash[\"default\"].debounce(handleRowSelection, 200), []);\n  (0, _react.useEffect)(function () {\n    if (!readyed) {\n      return;\n    }\n    var tableDom = containerEleRef.current;\n    if (!tableDom) return;\n    var onKeyDown = function onKeyDown(event) {\n      // 焦点在工具栏上时不响应快捷键事件\n      if ((0, _keyboardEvent.isTargetAtToolBar)(event.target, containerEleRef)) return;\n      var ctrlKey = event.ctrlKey,\n        metaKey = event.metaKey,\n        keyCode = event.keyCode;\n      var tableOptions = getTableOptions();\n      var tableConfig = getTableConfigImmediately();\n      var instance = getInstance();\n      var rowKey = tableConfig.rowKey,\n        gridType = tableConfig.gridType,\n        defaultFocus = tableConfig.defaultFocus;\n      var handleSetFocusedRow = function handleSetFocusedRow(_ref2) {\n        var focusedRow = _ref2.focusedRow;\n        var postAction = function postAction(_ref3) {\n          var rowKeyValue = _ref3.rowKeyValue,\n            selectedRowKeys = _ref3.selectedRowKeys;\n          selectionList.current.push({\n            rowKeyValue: rowKeyValue,\n            selectedRowKeys: selectedRowKeys,\n            isCheck: true\n          });\n          handleRowSelectionDebounce();\n        };\n        (0, _row.shortCutSetFocusedRow)(focusedRow, {\n          getInstance: getInstance,\n          getTableApi: getTableApi,\n          getTableConfigImmediately: getTableConfigImmediately,\n          postAction: postAction\n        });\n      };\n      var isDefaultFocus = gridType === 'VIEWGRID' && defaultFocus;\n      switch (keyCode) {\n        case _keyCode.KEYS.C:\n          {\n            var _window$getSelection, _window, _window$getSelection$, _window$getSelection2, _window2;\n            var suppressCopy = tableOptions.getMetaOptionsProperty('suppressCopy');\n            var isCtrlKey = ctrlKey || metaKey;\n            var selectionText = (_window$getSelection = (_window = window).getSelection) === null || _window$getSelection === void 0 || (_window$getSelection = _window$getSelection.call(_window)) === null || _window$getSelection === void 0 || (_window$getSelection$ = _window$getSelection.toString) === null || _window$getSelection$ === void 0 ? void 0 : _window$getSelection$.call(_window$getSelection);\n            var anchorNode = (_window$getSelection2 = (_window2 = window).getSelection) === null || _window$getSelection2 === void 0 || (_window$getSelection2 = _window$getSelection2.call(_window2)) === null || _window$getSelection2 === void 0 ? void 0 : _window$getSelection2.anchorNode;\n            var isCurrentTableSelection = anchorNode && tableDom.contains(anchorNode) && selectionText;\n            if (suppressCopy) {\n              var isCuerrntTableTdSelectionCopy = isCurrentTableSelection && _isCuerrntTableTd(event);\n              isCuerrntTableTdSelectionCopy && event.preventDefault(); // 禁止复制时 当前表格（也包括子表格）td选中也不允许复制选中文本\n              break;\n            }\n            if (!isCtrlKey) break;\n            var cellRanges = tableOptions.getCellRanges();\n            var _rowKey = tableConfig.rowKey,\n              localeId = tableConfig.localeId,\n              defaultLocalId = tableConfig.defaultLocalId;\n            var selectedRows = instance.controller.getSelectedRows();\n\n            // 表格禁止了默认的文本选中，仅行详情为表单时可选中其中的文本\n            // 如果存在浏览器范围选中的文本，则优先级复制\n            // 表格禁止了文本选中，单头文本选中后再范围选中表格单元格，selectionText还是单头的值，导致范围复制不生效\n\n            // 表格中有selectionText时用Ctrl + C 原生的复制，使用copyDataToClipboard会引起焦点丢失，导致选中的文本被清楚\n            if (isCurrentTableSelection) break;\n            if (cellRanges && cellRanges.length > 0) {\n              // todo:子表ctrl + c 复制rowDatas取值\n              var rowDatas = instance.controller.getRowDatas() || [];\n              var footerDataSource = instance.controller.getFooterDataSource() || [];\n              var displayColumns = tableConfig.getDisplayFlatColumns();\n              (0, _copy.copyCellRangesValue)(cellRanges, {\n                displayColumns: displayColumns,\n                rowDatas: rowDatas,\n                footerDataSource: footerDataSource,\n                rowKey: _rowKey,\n                localeId: localeId,\n                defaultLocalId: defaultLocalId\n              });\n              cellRanges.forEach(function (cellRange) {\n                (0, _copy.addTableCellRangeCopyAnimation)({\n                  cellRange: cellRange,\n                  tableDom: tableDom\n                });\n              });\n            } else if (selectedRows.length > 0) {\n              var columns = (0, _array.flatColumns)(tableConfig.columns);\n              var data = selectedRows.reduce(function (acc, currRow, index) {\n                var value = (0, _copy.copyRowValue)({\n                  row: currRow,\n                  rowKey: _rowKey,\n                  columns: columns\n                });\n                var delimiter = index === selectedRows.length - 1 ? '' : '\\r\\n';\n                return acc + value + delimiter;\n              }, '');\n              (0, _clipboardUtil.copyDataToClipboard)(data);\n              var rowIndexKeys = instance.controller.getSelectedRowKeys().map(function (rowKey) {\n                return instance.controller.getRowIndex(rowKey);\n              });\n              (0, _copy.addTableRowsCopyAnimation)({\n                rowIndexKeys: rowIndexKeys,\n                tableDom: tableDom,\n                columns: columns\n              });\n            }\n            break;\n          }\n        case _keyCode.KEYS.UP:\n          {\n            if (isDefaultFocus) {\n              event.preventDefault();\n              // 按上下键需要重新聚焦到表格上，因为聚焦在单元格时，由于虚加载行销毁时会导致焦点丢失\n              focusToGrid();\n              var currentFocusedRow = instance.controller.getFocusedRow();\n              var rowIndex = currentFocusedRow.rowIndex;\n              if (rowIndex > 0) {\n                var prevRowIndex = rowIndex - 1;\n                var prevRow = instance.controller.getRowByIndex(prevRowIndex);\n                var focusedRow = {\n                  rowIndex: prevRowIndex,\n                  record: prevRow\n                };\n                handleSetFocusedRow({\n                  focusedRow: focusedRow\n                });\n              }\n            }\n            break;\n          }\n        case _keyCode.KEYS.DOWN:\n          {\n            if (isDefaultFocus) {\n              event.preventDefault();\n              focusToGrid();\n              var _currentFocusedRow = instance.controller.getFocusedRow();\n              var rows = instance.controller.getRows();\n              var _rowIndex = _currentFocusedRow.rowIndex;\n              if (_rowIndex < rows.length - 1) {\n                var nextRowIndex = _rowIndex + 1;\n                var nextRow = instance.controller.getRowByIndex(nextRowIndex);\n                var _focusedRow = {\n                  rowIndex: nextRowIndex,\n                  record: nextRow\n                };\n                handleSetFocusedRow({\n                  focusedRow: _focusedRow\n                });\n              }\n            }\n            break;\n          }\n        case _keyCode.KEYS.SPACE:\n          {\n            if (isDefaultFocus) {\n              var _focusedRow2 = instance.controller.getFocusedRow();\n              var record = _focusedRow2.record,\n                _rowIndex2 = _focusedRow2.rowIndex;\n              if (_rowIndex2 >= 0) {\n                var _ref4;\n                var rowKeyValue = (_ref4 = record && record[rowKey]) !== null && _ref4 !== void 0 ? _ref4 : -1;\n                var prevSelectedRowKeys = instance.controller.getSelectedRowKeys();\n                var isCheck = !prevSelectedRowKeys.includes(rowKeyValue);\n                var selectedRowKeys = (0, _row.getPostSelectedRowKeys)({\n                  rowKeyValue: rowKeyValue,\n                  column: {},\n                  isCheck: isCheck,\n                  getInstance: getInstance,\n                  getTableConfigImmediately: getTableConfigImmediately\n                });\n                instance.controller.setSelectedRows(selectedRowKeys);\n                selectionList.current.push({\n                  rowKeyValue: rowKeyValue,\n                  selectedRowKeys: selectedRowKeys,\n                  isCheck: isCheck\n                });\n                // 按空格调用handleRowSelection立即将请求发出去\n                handleRowSelection();\n                event.preventDefault();\n              }\n            }\n            break;\n          }\n        default:\n          break;\n      }\n    };\n    tableDom.addEventListener('keydown', onKeyDown);\n    return function () {\n      tableDom.removeEventListener('keydown', onKeyDown);\n    };\n  }, [readyed]);\n  (0, _react.useEffect)(function () {\n    var tableConfig = getTableConfigImmediately();\n    var gridType = tableConfig.gridType,\n      defaultFocus = tableConfig.defaultFocus;\n    var callback = function callback() {\n      if (readyed && gridType === 'VIEWGRID' && defaultFocus) {\n        // 监听到有快捷键调用时立即将请求发出\n        handleRowSelection();\n      }\n    };\n    var removeTriggerBtnClickShortCutListener = (0, _memoryCacher.addDataChangeListener)(tableConfig.pageId, [_const.TRIGGER_BTN_CLICK_SHORTCUT], callback);\n    return function () {\n      removeTriggerBtnClickShortCutListener();\n    };\n  }, [readyed]);\n}\nfunction _isCuerrntTableTd(event) {\n  var path = (0, _elementEvent.getEventPath)(event);\n  return path.some(function (ele) {\n    var _ele$classList;\n    return ele.tagName === 'TD' && ((_ele$classList = ele.classList) === null || _ele$classList === void 0 ? void 0 : _ele$classList.contains('kd-table-cell'));\n  });\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useKeyBoardEvent.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useOperationColPermission.js":
/*!*******************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useOperationColPermission.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.array.find.js */ \"../../node_modules/core-js/modules/es.array.find.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useOperationColPermission;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _const = __webpack_require__(/*! @/constant/const */ \"./src/constant/const.js\");\nvar _const2 = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nvar _array = __webpack_require__(/*! ../../TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _tableConfig = __webpack_require__(/*! ../tableConfig */ \"./src/component/web/DataGrid/KDTable/tableConfig.js\");\nvar _columnWidthFit = __webpack_require__(/*! ../utils/columnWidthFit */ \"./src/component/web/DataGrid/KDTable/utils/columnWidthFit.js\");\nvar _columns = __webpack_require__(/*! ../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _cell = __webpack_require__(/*! ../utils/cell */ \"./src/component/web/DataGrid/KDTable/utils/cell.js\");\n/*\n * @Author: wqhui\n * @Date: 2022-07-14 11:02:47\n * @Description:\n */\n\nfunction useOperationColPermission(_ref) {\n  var model = _ref.model,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    this$ = _ref.this$,\n    getTableOptions = _ref.getTableOptions,\n    getInstance = _ref.getInstance,\n    getTableApi = _ref.getTableApi;\n  (0, _react.useEffect)(function () {\n    var pageId = model.pageId;\n    var removePageDataListener = (0, _memoryCacher.addDataChangeListener)(pageId, _const.PERMISSION_PARAMS, handlePermission);\n    return function () {\n      removePageDataListener === null || removePageDataListener === void 0 || removePageDataListener();\n    };\n  }, []);\n  var handlePermission = function handlePermission(data) {\n    if (!data) return;\n    var _this$$current = this$.current,\n      model = _this$$current.model,\n      parentModel = _this$$current.parentModel;\n    var instance = getInstance();\n    var tableConfig = getTableConfigImmediately();\n    var tableOptions = getTableOptions();\n    var hasOperationColumns = (0, _array.find)(tableConfig.getColumns(), function (col) {\n      return col.type === 'operate';\n    });\n    if (!hasOperationColumns) {\n      return;\n    }\n    var columns = (0, _tableConfig.getColumns)(model, parentModel, {\n      getTableOptions: getTableOptions,\n      mergeModel: instance.mergeModel,\n      getTableConfigImmediately: getTableConfigImmediately,\n      handleCellClick: (0, _cell.createCellClickHandler)(getTableApi, getInstance),\n      handleCellMouseDown: (0, _cell.createCellMouseDownHandler)(getTableApi, getInstance, tableOptions),\n      getCellClassName: (0, _cell.getCellClassNameWrapper)({\n        getTableConfigImmediately: getTableConfigImmediately,\n        getTableOptions: getTableOptions,\n        getInstance: getInstance\n      }),\n      getCellSpan: getTableApi().getCellSpan\n    });\n    (0, _columns.handleRepeatedColumns)({\n      columns: columns,\n      getTableOptions: getTableOptions\n    });\n    // 此处更列定义，只是改变列中的操作列的子项显示，所以不处理列元数据改变的逻辑\n    tableConfig.setColumns(tableConfig.columnResizeMode === _const2.TABLE_COLUMN_RESIZE_MODE.adaptive ? columns : (0, _columnWidthFit.getFitedTableSizeColumns)({\n      columns: columns,\n      getTableOptions: getTableOptions,\n      getTableConfigImmediately: getTableConfigImmediately\n    }));\n  };\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useOperationColPermission.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useRowExpand.js":
/*!******************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useRowExpand.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useRowExpand = void 0;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"../../node_modules/core-js/modules/es.array.reduce.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.set.js */ \"../../node_modules/core-js/modules/es.set.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _compose = __webpack_require__(/*! @/util/compose */ \"./src/util/compose.js\");\nvar _row = __webpack_require__(/*! ../utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar useRowExpand = exports.useRowExpand = function useRowExpand(_ref) {\n  var model = _ref.model,\n    getTableOptions = _ref.getTableOptions,\n    getInstance = _ref.getInstance,\n    getActionByKey = _ref.getActionByKey,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getInternalEventService = _ref.getInternalEventService;\n  var tableOptions = getTableOptions();\n  var _getInstance = getInstance(),\n    controller = _getInstance.controller;\n  var expandStateRefId = (0, _react.useRef)(null);\n  var collapseStateRefId = (0, _react.useRef)(null);\n  var handleExpand = function handleExpand() {\n    var lastExpandRowkey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var expandStateId = model.getDataProperty(['expandState', 'id']);\n    var nextExpandRowKeys = lastExpandRowkey;\n    if (expandStateId !== expandStateRefId.current) {\n      expandStateRefId.current = expandStateId;\n      var groupMap = tableOptions.getDataOptionsProperty('groupMap');\n      var opreateRowKeys = model.getDataProperty(['expandState', 'rowKey']);\n      if (!opreateRowKeys) return nextExpandRowKeys;\n      opreateRowKeys = opreateRowKeys.toJS();\n      var isAll = model.getDataProperty(['expandState', 'isAll']);\n      if (isAll) {\n        if (opreateRowKeys.length === 0) {\n          opreateRowKeys = groupMap.get('all');\n        } else {\n          opreateRowKeys = opreateRowKeys.reduce(function (lastRowKeys, r) {\n            return [].concat(_toConsumableArray(lastRowKeys), _toConsumableArray(groupMap.get(r) || [r]));\n          }, []);\n        }\n      }\n      opreateRowKeys = opreateRowKeys.map(function (key) {\n        return key + '';\n      });\n      nextExpandRowKeys = Array.from(new Set(opreateRowKeys.concat(lastExpandRowkey)));\n      var expandRowIds = (0, _row.getIdsFromRks)(opreateRowKeys, {\n        getInstance: getInstance,\n        getTableConfigImmediately: getTableConfigImmediately\n      });\n      tableOptions.setExpandRowIds(expandRowIds, 'expand');\n    }\n    return nextExpandRowKeys;\n  };\n  var handleCollapse = function handleCollapse() {\n    var lastExpandRowkey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var collapseStateId = model.getDataProperty(['collapseState', 'id']);\n    var nextExpandRowKeys = lastExpandRowkey;\n    if (collapseStateId !== collapseStateRefId.current) {\n      collapseStateRefId.current = collapseStateId;\n      var groupMap = tableOptions.getDataOptionsProperty('groupMap');\n      var opreateRowKeys = model.getDataProperty(['collapseState', 'rowKey']);\n      if (!opreateRowKeys) return nextExpandRowKeys;\n      opreateRowKeys = opreateRowKeys.toJS();\n      var isAll = model.getDataProperty(['collapseState', 'isAll']);\n      if (isAll) {\n        if (opreateRowKeys.length === 0) {\n          opreateRowKeys = groupMap.get('all');\n        } else {\n          opreateRowKeys = opreateRowKeys.reduce(function (lastRowKeys, r) {\n            return [].concat(_toConsumableArray(lastRowKeys), _toConsumableArray(groupMap.get(r) || [r]));\n          }, []);\n          opreateRowKeys = Array.from(new Set(opreateRowKeys));\n        }\n      }\n      opreateRowKeys = opreateRowKeys.map(function (key) {\n        return key + '';\n      });\n      nextExpandRowKeys = nextExpandRowKeys.filter(function (rowKey) {\n        return !opreateRowKeys.includes(rowKey);\n      });\n      var collapseRowIds = (0, _row.getIdsFromRks)(opreateRowKeys, {\n        getInstance: getInstance,\n        getTableConfigImmediately: getTableConfigImmediately\n      });\n      tableOptions.setExpandRowIds(collapseRowIds, 'collapse');\n    }\n    return nextExpandRowKeys;\n  };\n  (0, _react.useEffect)(function () {\n    // 只有单据体需要响应后端展开收起指令\n    if (tableOptions.getGridType()) return;\n    var expandTimeStamp = model.getDataProperty(['expandState', 'timeStamp']) || 0;\n    var collapseTimeStamp = model.getDataProperty(['collapseState', 'timeStamp']) || 0;\n    // 都为0说明未设置，不往下执行\n    if (expandTimeStamp === 0 && collapseTimeStamp === 0) {\n      return;\n    }\n    var lastExpandRowkey = (controller === null || controller === void 0 ? void 0 : controller.getExpandRowKeys()) || [];\n    if (expandTimeStamp >= collapseTimeStamp) {\n      (0, _compose.pipe)([handleCollapse, handleExpand, updateExpandRowKeys])(lastExpandRowkey);\n    } else {\n      (0, _compose.pipe)([handleExpand, handleCollapse, updateExpandRowKeys])(lastExpandRowkey);\n    }\n    function updateExpandRowKeys(expandRowKeys) {\n      controller === null || controller === void 0 || controller.setExpandRowKeys(expandRowKeys);\n      var tableOptions = getTableOptions();\n      var expandRowIds = tableOptions.getExpandRowIds();\n      var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n      invokeControlMethodOnly(model, 'postExpandNodes', [expandRowIds]);\n    }\n    var internalEventService = getInternalEventService();\n    internalEventService.dispatchEvent({\n      type: _eventServiceName.KD_TABLE_EVENT_NAMES.afterRowExpand\n    });\n  }, [model.getDataProperty('collapseState'), model.getDataProperty('expandState')]);\n\n  // 报表展开全部逻辑\n  (0, _react.useEffect)(function () {\n    if (tableOptions.getGridType() !== _const.GRID_TYPE.virtualViewGrid) return;\n    var expandTimeStamp = model.getDataProperty(['expandState', 'timeStamp']) || 0;\n    var collapseTimeStamp = model.getDataProperty(['collapseState', 'timeStamp']) || 0;\n    var isExpandAll = model.getDataProperty(['expandState', 'isAll']);\n    var isCollapseAll = model.getDataProperty(['collapseState', 'isAll']);\n    if (isExpandAll && expandTimeStamp > collapseTimeStamp) {\n      tableOptions.setTreeVirtualViewExpandAll(true);\n    }\n    if (isCollapseAll && collapseTimeStamp > expandTimeStamp) {\n      tableOptions.setTreeVirtualViewExpandAll(false);\n    }\n  }, [model.getDataProperty('collapseState'), model.getDataProperty('expandState')]);\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useRowExpand.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useRowSelected.js":
/*!********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useRowSelected.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.set.js */ \"../../node_modules/core-js/modules/es.set.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _index = __webpack_require__(/*! ../data/index */ \"./src/component/web/DataGrid/KDTable/data/index.js\");\nvar _index2 = __webpack_require__(/*! ../post/index */ \"./src/component/web/DataGrid/KDTable/post/index.js\");\nvar _paramsGetter = __webpack_require__(/*! ../utils/paramsGetter */ \"./src/component/web/DataGrid/KDTable/utils/paramsGetter.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\n/*\n * @Author: wqhui\n * @Date: 2021-11-29 17:26:32\n * @Description: 后端设置行选中\n */\n\nvar getSeletedRows = _index.dataHelper.getSeletedRows,\n  getUpdateSeletedRowKeys = _index.dataHelper.getUpdateSeletedRowKeys;\nfunction useRowSelected(_ref) {\n  var _parentModel$getDataP, _model$getDataPropert, _parentModel$getDataP2, _model$getDataPropert2;\n  var model = _ref.model,\n    parentModel = _ref.parentModel,\n    activeView = _ref.activeView,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getInstance = _ref.getInstance,\n    getActionByKey = _ref.getActionByKey,\n    getTableOptions = _ref.getTableOptions,\n    getTableApi = _ref.getTableApi,\n    dispatch = _ref.dispatch;\n  (0, _react.useEffect)(function () {\n    var rowClickTimeOut;\n    var instance = getInstance();\n    var selectedRows = getSeletedRows(model, parentModel);\n    var tableOptions = getTableOptions();\n    var gridType = tableOptions.getMetaOptionsProperty('gridType');\n    // 清空目前的状态：如焦点单元格 ，并设置选中行\n    var tableApi = getTableApi();\n    tableApi.setFocusedCell({\n      rowIndex: -1\n    });\n    if (selectedRows.length > 0 && gridType === 'VIEWGRID') {\n      var remover = instance.controller.addViewerChangedListener(function () {\n        remover();\n        var tableConfig = getTableConfigImmediately();\n        if (instance.controller.viewer) {\n          var _getRowSelectedParams = (0, _paramsGetter.getRowSelectedParams)({\n              parentModel: parentModel,\n              model: model,\n              getInstance: getInstance,\n              getTableConfigImmediately: getTableConfigImmediately,\n              getTableOptions: getTableOptions\n            }),\n            pageId = _getRowSelectedParams.pageId,\n            key = _getRowSelectedParams.key,\n            selectedRowKeys = _getRowSelectedParams.selectedRowKeys,\n            _selectedRows = _getRowSelectedParams.selectedRows,\n            focusedCell = _getRowSelectedParams.focusedCell,\n            postCols = _getRowSelectedParams.postCols;\n          var code = focusedCell.code;\n          var column = tableConfig.getDisplayColumn(code);\n          if (!tableConfig.isScrollLoad) {\n            _index2.poster.postRowClick({\n              pageId: pageId,\n              key: key,\n              dispatch: dispatch,\n              getActionByKey: getActionByKey,\n              postCols: postCols,\n              gridType: gridType,\n              getTableOptions: getTableOptions\n            })({\n              selectedRows: _selectedRows,\n              selectedRowKeys: selectedRowKeys,\n              column: column,\n              rowKeyValue: selectedRowKeys[0]\n            });\n          } else {\n            _index2.poster.postRowSelection({\n              pageId: pageId,\n              key: key,\n              getActionByKey: getActionByKey,\n              postCols: postCols,\n              dispatch: dispatch,\n              gridType: gridType\n            })({\n              methodName: 'addRowSelection',\n              rowKeyValue: selectedRowKeys[0],\n              pendingSelectedRows: _selectedRows,\n              pendingSelectedRowKeys: selectedRowKeys,\n              column: column\n            });\n          }\n        }\n      });\n    }\n    if (!gridType && activeView === 'tiledView') {\n      var tableConfig = getTableConfigImmediately();\n      var pageId = tableConfig.pageId,\n        id = tableConfig.id;\n      var activeRowKey = selectedRows.length > 0 ? selectedRows[0] : 0;\n      (0, _memoryCacher.setPageData)(pageId, [id, 'setActiveRowKey'], activeRowKey);\n    }\n    instance.controller.setSelectedRows(selectedRows);\n    // setSelectRows设置之后为保持数据一致性，要向服务端发送行单击事件，带上选中状态\n    var postRowClick = (parentModel || model).getDataProperty(['slctState', 'postRowClick']);\n    if (postRowClick) {\n      rowClickTimeOut = setTimeout(function () {\n        clearTimeout(rowClickTimeOut);\n        var tableConfig = getTableConfigImmediately();\n        if (instance.controller.viewer) {\n          var _getRowSelectedParams2 = (0, _paramsGetter.getRowSelectedParams)({\n              parentModel: parentModel,\n              model: model,\n              getInstance: getInstance,\n              getTableConfigImmediately: getTableConfigImmediately,\n              getTableOptions: getTableOptions\n            }),\n            _pageId = _getRowSelectedParams2.pageId,\n            key = _getRowSelectedParams2.key,\n            selectedRowKeys = _getRowSelectedParams2.selectedRowKeys,\n            _selectedRows = _getRowSelectedParams2.selectedRows,\n            focusedCell = _getRowSelectedParams2.focusedCell,\n            postCols = _getRowSelectedParams2.postCols;\n          var code = focusedCell.code;\n          var column = tableConfig.getDisplayColumn(code);\n          _index2.poster.postRowClick({\n            pageId: _pageId,\n            key: key,\n            dispatch: dispatch,\n            getActionByKey: getActionByKey,\n            postCols: postCols,\n            gridType: gridType,\n            getTableOptions: getTableOptions\n          })({\n            selectedRows: _selectedRows,\n            selectedRowKeys: selectedRowKeys,\n            column: column,\n            rowKeyValue: selectedRowKeys[0]\n          });\n        }\n      }, 0);\n    }\n    return function () {\n      clearTimeout(rowClickTimeOut);\n    };\n  }, [parentModel === null || parentModel === void 0 || (_parentModel$getDataP = parentModel.getDataProperty(['slctState'])) === null || _parentModel$getDataP === void 0 ? void 0 : _parentModel$getDataP.hashCode(), (_model$getDataPropert = model.getDataProperty(['slctState'])) === null || _model$getDataPropert === void 0 ? void 0 : _model$getDataPropert.hashCode()]);\n\n  // 目前只有报表使用，列表要使用的话要加上上面effect的回发请求逻辑\n  (0, _react.useEffect)(function () {\n    var instance = getInstance();\n    var currentSelectRowKeys = instance.controller.getSelectedRowKeys() || [];\n    var updateSelectRowKeys = getUpdateSeletedRowKeys(model, parentModel);\n    if (!Array.isArray(updateSelectRowKeys) || updateSelectRowKeys.length === 0) return;\n\n    // 合并选中数据去重\n    var newSelectRowKeys = Array.from(new Set(currentSelectRowKeys.concat(updateSelectRowKeys)));\n    instance.controller.setSelectedRows(newSelectRowKeys);\n  }, [parentModel === null || parentModel === void 0 || (_parentModel$getDataP2 = parentModel.getDataProperty(['updateSlctState'])) === null || _parentModel$getDataP2 === void 0 ? void 0 : _parentModel$getDataP2.hashCode(), (_model$getDataPropert2 = model.getDataProperty(['updateSlctState'])) === null || _model$getDataPropert2 === void 0 ? void 0 : _model$getDataPropert2.hashCode()]);\n}\nvar _default = exports[\"default\"] = useRowSelected;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useRowSelected.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useSavePersonaliedCache.js":
/*!*****************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useSavePersonaliedCache.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nfunction useSavePersonaliedCache(_ref) {\n  var model = _ref.model,\n    parentModel = _ref.parentModel,\n    tablePoster = _ref.tablePoster;\n  (0, _react.useEffect)(function () {\n    var pageId = model.pageId;\n    var saveCache = function saveCache() {\n      // 缓存个性化列宽\n      tablePoster.send({\n        type: 'personalizedColumnWidthChanged'\n      });\n    };\n    var saveCacheRemover = (0, _memoryCacher.addPageReleaseListener)(pageId, saveCache);\n    return function () {\n      saveCacheRemover && saveCacheRemover();\n    };\n  }, []);\n}\nvar _default = exports[\"default\"] = useSavePersonaliedCache;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useSavePersonaliedCache.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useSetFocuedCell.js":
/*!**********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useSetFocuedCell.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useSetFocuedCell = useSetFocuedCell;\n__webpack_require__(/*! core-js/modules/es.array.find.js */ \"../../node_modules/core-js/modules/es.array.find.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _array = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nfunction useSetFocuedCell(_ref) {\n  var _parentModel$getDataP, _model$getDataPropert, _parentModel$getDataP2, _model$getDataPropert2;\n  var readyed = _ref.readyed,\n    containerEleRef = _ref.containerEleRef,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getInstance = _ref.getInstance,\n    model = _ref.model,\n    parentModel = _ref.parentModel,\n    getFocusedCellData = _ref.getFocusedCellData,\n    focusCell = _ref.focusCell,\n    getTableApi = _ref.getTableApi,\n    getInternalEventService = _ref.getInternalEventService,\n    getTableOptions = _ref.getTableOptions;\n  var instance = getInstance();\n  (0, _react.useEffect)(function () {\n    if (!readyed) return;\n    var setfoucesCell = function setfoucesCell() {\n      var tableApi = getTableApi();\n      var fcs = getFocusedCellData(model, parentModel);\n      var tableConfig = getTableConfigImmediately();\n      var focusedCell = {\n        rowIndex: -1\n      };\n      if (fcs !== null && fcs.length > 0 && fcs[0] !== -1) {\n        var rowKeyValue = fcs[0];\n        var colKey = fcs[1] !== undefined ? fcs[1] : '';\n        if (!colKey) {\n          var _tableConfig$rowSelec;\n          var flatedColumns = (0, _array.flatColumns)(tableConfig.getColumns());\n          var firstEditableCol = flatedColumns.find(function (col) {\n            return !col.hide && col.extendParams.columnEditable;\n          });\n          var showSelectionColumn = (_tableConfig$rowSelec = tableConfig.rowSelection) === null || _tableConfig$rowSelec === void 0 ? void 0 : _tableConfig$rowSelec.showSelectionColumn;\n          var gridType = tableConfig.gridType;\n          if (firstEditableCol) {\n            colKey = firstEditableCol.code;\n          } else {\n            var _flatedColumns$;\n            colKey = (_flatedColumns$ = flatedColumns[0]) === null || _flatedColumns$ === void 0 ? void 0 : _flatedColumns$.code;\n          }\n          // 列表和报表有选择列时焦点设置在选择列\n          if (gridType && showSelectionColumn) {\n            colKey = null;\n          }\n        }\n        var rowIndex = instance.controller.getRowIndex(rowKeyValue);\n        var realRowIndex = instance.controller.getRowIndex(rowKeyValue, false);\n        var treeTable = tableConfig.treeTable;\n        var tableOptions = getTableOptions();\n        var lazyLoadGroup = tableOptions.getDataOptionsProperty('lazyLoadGroup');\n        // 懒加载的树形单据体定位到中间\n        var position = treeTable && lazyLoadGroup.length > 0 ? 'middle' : undefined;\n        // 滚动到可见列\n        tableApi.ensureColumnVisible(colKey);\n        // 滚动到可见行\n        tableApi.ensureRowIndexVisible(realRowIndex, position);\n        focusedCell.rowIndex = rowIndex;\n        focusedCell.code = colKey;\n        focusedCell.rowKey = rowKeyValue;\n      }\n      if (focusedCell.rowIndex !== -1 && tableConfig.gridType === undefined) {\n        tableApi.focus();\n      }\n      tableApi.setFocusedCell(focusedCell);\n    };\n\n    // 新增行和设置新增行焦点指令同时返回时,需要等基础表格数据更新后再处理(否则取不到最新的rowIndex),暂时用延时处理\n    setTimeout(function () {\n      setfoucesCell();\n    });\n\n    // TODO internalEventService 同时触发type相同参数不同时只有一个生效？\n    // const internalEventService = getInternalEventService()\n    // const tableRenderedCallback = ({ params: { trigger } }) => {\n    //   console.log('cb', trigger)\n    //   if (trigger === 'rowDataChanged') {\n    //     setfoucesCell()\n    //   }\n    // }\n    // 新增行和设置新增行焦点指令同时返回时,需要等基础表格数据更新后再处理(否则取不到最新的rowIndex)\n    // internalEventService.addEventListener(KD_TABLE_EVENT_NAMES.baseTableRendered, tableRenderedCallback)\n    // return () => {\n    //   internalEventService.removeEventListener(KD_TABLE_EVENT_NAMES.baseTableRendered, tableRenderedCallback)\n    // }\n  }, [readyed, parentModel === null || parentModel === void 0 || (_parentModel$getDataP = parentModel.getDataProperty(['fcsState'])) === null || _parentModel$getDataP === void 0 ? void 0 : _parentModel$getDataP.hashCode(), (_model$getDataPropert = model.getDataProperty(['fcsState'])) === null || _model$getDataPropert === void 0 ? void 0 : _model$getDataPropert.hashCode()]);\n  (0, _react.useEffect)(function () {\n    var tableApi = getTableApi();\n    var useModel = parentModel || model;\n    var cellInfo = useModel.getDataProperty(['startEditing', 'cellInfo']);\n    cellInfo = cellInfo ? cellInfo.toJS() : null;\n    if (cellInfo) {\n      var _cellInfo = cellInfo,\n        code = _cellInfo.k,\n        rowKeyValue = _cellInfo.r;\n      if (rowKeyValue == null || rowKeyValue < 0 || !code) return;\n\n      // 若设置编辑单元格和新增行的指令一起回来，新增的行还没渲染取不到值，这里延后一个时机设置编辑态\n      setTimeout(function () {\n        if (!tableApi.isCellLock(code, rowKeyValue)) {\n          tableApi.startEditingCell({\n            code: code,\n            rowKey: rowKeyValue\n          });\n        }\n      }, 0);\n    }\n  }, [parentModel === null || parentModel === void 0 || (_parentModel$getDataP2 = parentModel.getDataProperty(['startEditing'])) === null || _parentModel$getDataP2 === void 0 ? void 0 : _parentModel$getDataP2.hashCode(), (_model$getDataPropert2 = model.getDataProperty(['startEditing'])) === null || _model$getDataPropert2 === void 0 ? void 0 : _model$getDataPropert2.hashCode()]);\n  (0, _react.useEffect)(function () {\n    var rowIndex = focusCell.rowIndex,\n      code = focusCell.code,\n      rowKey = focusCell.rowKey;\n    if (rowIndex > -1) {\n      var tableApi = getTableApi();\n      var _instance = getInstance();\n      tableApi.ensureColumnVisible(code);\n      // 滚动到可见行\n      var realRowIndex = _instance.controller.getRowIndex(rowKey, false);\n      tableApi.ensureRowIndexVisible(realRowIndex);\n    }\n  }, [focusCell]);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useSetFocuedCell.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useSetOperationColLockStatus.js":
/*!**********************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useSetOperationColLockStatus.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useSetOperationColLockStatus;\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _domObserverUtil = __webpack_require__(/*! @/util/domObserverUtil */ \"./src/util/domObserverUtil.js\");\nvar isScrollBarVisible = function isScrollBarVisible(style) {\n  return !style.includes('display: none');\n};\nfunction useSetOperationColLockStatus(_ref) {\n  var readyed = _ref.readyed,\n    containerEleRef = _ref.containerEleRef,\n    getInternalEventService = _ref.getInternalEventService,\n    getTableConfigImmediately = _ref.getTableConfigImmediately;\n  var scrollDomObserverRef = (0, _react.useRef)(null);\n  var scrollDomRef = (0, _react.useRef)(null);\n  (0, _react.useEffect)(function () {\n    if (!readyed) return;\n    scrollDomRef.current = containerEleRef.current && containerEleRef.current.querySelector('.kd-sticky-scroll');\n    // if (!scrollDom) return\n\n    // 滚动条可见性变化触发\n    var callback = function callback(mutations) {\n      var _lastColumn$extendPar;\n      var tableConfig = getTableConfigImmediately();\n      var tableColumns = tableConfig.getColumns().filter(function (col) {\n        return col && !col.hide;\n      });\n      if (tableColumns.length === 0) return;\n      var lastColumn = tableColumns[tableColumns.length - 1];\n      var isOperationColAtLast = lastColumn.type === 'operate';\n      var isLastColumnFixedRight = (_lastColumn$extendPar = lastColumn.extendParams) === null || _lastColumn$extendPar === void 0 ? void 0 : _lastColumn$extendPar.isFixedRight;\n      if (!isOperationColAtLast || isLastColumnFixedRight) return; // 操作列是最后一列才执行回调\n\n      mutations.forEach(function (mutation) {\n        // style 属性变化才执行\n        var attributeName = mutation.attributeName,\n          target = mutation.target,\n          oldValue = mutation.oldValue;\n        if (attributeName === 'style') {\n          var style = target.getAttribute('style');\n          var currentVisible = isScrollBarVisible(style);\n          var prevVisible = isScrollBarVisible(oldValue);\n          var isColLock = !!tableColumns[tableColumns.length - 1].lock;\n          // 滚动条可见性发生变化时，设置操作列的锁定性\n          if (currentVisible !== prevVisible && isColLock !== currentVisible) {\n            tableColumns[tableColumns.length - 1].lock = currentVisible;\n            tableConfig.setColumns(tableColumns);\n          }\n        }\n      });\n    };\n    var options = {\n      attributes: true,\n      // 属性的变动\n      attributeOldValue: true // 表示观察attributes变动时，是否需要记录变动前的属性\n    };\n\n    // 列定义变化触发\n    var setOperationColLockStatus = function setOperationColLockStatus(args) {\n      var params = args.params;\n      // 列定义改变时触发\n      if (params.trigger === 'columnsChanged') {\n        var _lastColumn$extendPar2;\n        var tableConfig = getTableConfigImmediately();\n\n        // 去掉设置列后，列表先渲染了TableShell，不会出滚动条，tableRender后滚动条不存在时再找一次\n        if (!scrollDomRef.current) {\n          scrollDomRef.current = containerEleRef.current && containerEleRef.current.querySelector('.kd-sticky-scroll');\n        }\n\n        // 监听不存在时设置一个监听\n        if (!scrollDomObserverRef.current && scrollDomRef.current) {\n          scrollDomObserverRef.current = (0, _domObserverUtil.addMutationObserver)(scrollDomRef.current, options, callback);\n        }\n        var tableColumns = tableConfig.getColumns().filter(function (col) {\n          return col && !col.hide;\n        });\n        if (tableColumns.length === 0) return;\n        var lastColumn = tableColumns[tableColumns.length - 1];\n        var isOperationColAtLast = lastColumn.type === 'operate';\n        var isLastColumnFixedRight = (_lastColumn$extendPar2 = lastColumn.extendParams) === null || _lastColumn$extendPar2 === void 0 ? void 0 : _lastColumn$extendPar2.isFixedRight;\n        if (isOperationColAtLast && !isLastColumnFixedRight && scrollDomRef.current) {\n          var isColLock = !!lastColumn.lock;\n          var style = scrollDomRef.current.getAttribute('style');\n          var currentVisible = isScrollBarVisible(style);\n          if (isColLock !== currentVisible) {\n            tableColumns[tableColumns.length - 1].lock = currentVisible;\n            tableConfig.setColumns(tableColumns);\n          }\n        }\n      }\n    };\n    var internalEventService = getInternalEventService();\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.baseTableRendered, setOperationColLockStatus);\n    return function () {\n      scrollDomObserverRef.current && scrollDomObserverRef.current.disconnect();\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.baseTableRendered, setOperationColLockStatus);\n    };\n  }, [readyed]);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useSetOperationColLockStatus.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useShortCutSettingChange.js":
/*!******************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useShortCutSettingChange.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useShortCutSettingChange;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _GlobalDataCacher = __webpack_require__(/*! @/model/GlobalDataCacher */ \"./src/model/GlobalDataCacher.js\");\nvar _symbolConst = __webpack_require__(/*! @/constant/symbolConst */ \"./src/constant/symbolConst.js\");\nfunction useShortCutSettingChange(_ref) {\n  var getTableOptions = _ref.getTableOptions;\n  var tableOptions = getTableOptions();\n  (0, _react.useEffect)(function () {\n    var shortCutSettingChangeRemover = (0, _GlobalDataCacher.addDataChangeListener)(_symbolConst.KEY_ADVANCE_SHORTCUT_INFO, function () {\n      tableOptions.setFullKeyboardOptions();\n    });\n    return function () {\n      shortCutSettingChangeRemover();\n    };\n  }, []);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useShortCutSettingChange.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useTableFocus.js":
/*!*******************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useTableFocus.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useTableFocus;\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _const = __webpack_require__(/*! @/constant/const */ \"./src/constant/const.js\");\nvar _row = __webpack_require__(/*! ../utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nvar _domObserverUtil = __webpack_require__(/*! @/util/domObserverUtil */ \"./src/util/domObserverUtil.js\");\nfunction useTableFocus(_ref) {\n  var readyed = _ref.readyed,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    containerEleRef = _ref.containerEleRef,\n    getInstance = _ref.getInstance,\n    tablePoster = _ref.tablePoster,\n    getTableApi = _ref.getTableApi;\n  (0, _react.useEffect)(function () {\n    var tableConfig = getTableConfigImmediately();\n    var defaultFocus = tableConfig.defaultFocus,\n      pageId = tableConfig.pageId;\n    var focusToGrid = function focusToGrid() {\n      var _containerEleRef$curr, _containerEleRef$curr2;\n      (_containerEleRef$curr = containerEleRef.current) === null || _containerEleRef$curr === void 0 || (_containerEleRef$curr2 = _containerEleRef$curr.focus) === null || _containerEleRef$curr2 === void 0 || _containerEleRef$curr2.call(_containerEleRef$curr);\n    };\n\n    // 初始加载时默认聚焦\n    if (readyed && containerEleRef.current && defaultFocus) {\n      setTimeout(function () {\n        focusToGrid();\n      });\n    }\n    var removeDataChangeListener = (0, _memoryCacher.addDataChangeListener)(pageId, _const.FOCUS_TARGET_KEY, function () {\n      focusToGrid();\n      var instance = getInstance();\n      var datas = instance.controller.getRowDatas();\n      var currentFocusedRow = instance.controller.getFocusedRow() || {};\n      var rowIndex = currentFocusedRow.rowIndex;\n      if (datas.length > 0 && rowIndex === -1) {\n        // 聚焦到第一行\n        var firstIndex = 0;\n        var firstRow = instance.controller.getRowByIndex(firstIndex);\n        var focusedRow = {\n          rowIndex: firstIndex,\n          record: firstRow\n        };\n        var postAction = function postAction(_ref2) {\n          var rowKeyValue = _ref2.rowKeyValue,\n            selectedRowKeys = _ref2.selectedRowKeys;\n          tablePoster.send({\n            type: 'postCheckedRowSelection',\n            args: {\n              rowKeyValue: rowKeyValue,\n              selectedRowKeys: selectedRowKeys,\n              isCheck: true\n            }\n          });\n        };\n        (0, _row.shortCutSetFocusedRow)(focusedRow, {\n          getInstance: getInstance,\n          getTableApi: getTableApi,\n          getTableConfigImmediately: getTableConfigImmediately,\n          postAction: postAction\n        });\n      }\n    });\n    return function () {\n      removeDataChangeListener();\n    };\n  }, [readyed]);\n  (0, _react.useEffect)(function () {\n    if (!readyed) return;\n    var options = {\n      attributes: true,\n      attributeFilter: ['data-focused-cell'],\n      subtree: true\n    };\n    var handleFocusedCellChange = function handleFocusedCellChange(mutations) {\n      mutations.forEach(function (mutation) {\n        var _mutation$target$getA, _mutation$target;\n        if ((_mutation$target$getA = (_mutation$target = mutation.target).getAttribute) !== null && _mutation$target$getA !== void 0 && _mutation$target$getA.call(_mutation$target, 'data-focused-cell')) {\n          var tableApi = getTableApi();\n          tableApi.focus();\n        }\n      });\n    };\n    var observer = (0, _domObserverUtil.addMutationObserver)(containerEleRef.current, options, handleFocusedCellChange);\n    return function () {\n      observer && observer.disconnect();\n    };\n  }, [readyed]);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useTableFocus.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useTableGlobalConfig.js":
/*!**************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useTableGlobalConfig.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useTableGlobalConfig;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nvar _symbolConst = __webpack_require__(/*! @/constant/symbolConst */ \"./src/constant/symbolConst.js\");\nvar _GlobalDataCacher = __webpack_require__(/*! @/model/GlobalDataCacher */ \"./src/model/GlobalDataCacher.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _params = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/params */ \"./src/component/web/DataGrid/TableHelper/util/params.js\");\nvar _cell = __webpack_require__(/*! ../utils/cell */ \"./src/component/web/DataGrid/KDTable/utils/cell.js\");\nvar _fieldType = _interopRequireDefault(__webpack_require__(/*! @/constant/fieldType */ \"./src/constant/fieldType.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/*\n * @Author: wqhui\n * @Date: 2022-02-16 14:51:11\n * @Description:  表格全局配置监听\n */\nfunction useTableGlobalConfig(_ref) {\n  var tableConfig = _ref.tableConfig,\n    model = _ref.model,\n    getInternalEventService = _ref.getInternalEventService,\n    getNewColumns = _ref.getNewColumns;\n  (0, _react.useEffect)(function () {\n    var tableGlobalConfigChangedRemover = (0, _GlobalDataCacher.addDataChangeListener)(_symbolConst.KEY_TABLE_GLOBAL_CONFIG, function (globalConfig, oldGlobalConfig) {\n      if (!(0, _immutable.is)(globalConfig, oldGlobalConfig)) {\n        var rowHeight = tableConfig.rowHeight,\n          headerHeight = tableConfig.headerHeight,\n          isGridStriped = tableConfig.isGridStriped,\n          verticalBordered = tableConfig.verticalBordered,\n          bordered = tableConfig.bordered,\n          columnResizeMode = tableConfig.columnResizeMode,\n          columns = tableConfig.columns;\n        var gridType = model.getMetaProperty('gridtype');\n        var newIsGridStriped = (0, _params.isGridStriped)(model, bordered);\n        var newColumnResizeMode = (0, _params.getColumnResizeMode)(model, gridType);\n        var newVerticalBordered = (0, _params.isVerticalBordered)(model, gridType);\n        // 默认值与defaultOption对应\n        var newRowHeight = (0, _params.getRowHeight)(model);\n        var newHeaderHeight = (0, _params.getHeaderHeight)(model);\n        var cheapConfig = {};\n        var internalEventService = getInternalEventService();\n        var shouldAutoSizeColumn = false;\n        if (newColumnResizeMode !== columnResizeMode) {\n          cheapConfig.columnResizeMode = newColumnResizeMode;\n          shouldAutoSizeColumn = cheapConfig.columnResizeMode !== undefined;\n        }\n        if (!!isGridStriped !== !!newIsGridStriped) {\n          cheapConfig.isGridStriped = newIsGridStriped;\n        }\n        if (newVerticalBordered !== verticalBordered) {\n          cheapConfig.verticalBordered = newVerticalBordered;\n        }\n        if (headerHeight !== newHeaderHeight) {\n          cheapConfig.headerHeight = newHeaderHeight;\n        }\n        if (rowHeight !== newRowHeight) {\n          cheapConfig.rowHeight = newRowHeight;\n          if ((0, _cell.hasCertainTypeCell)(columns, _fieldType[\"default\"].Picture) || (0, _cell.hasCertainTypeCell)(columns, _fieldType[\"default\"].Attachment)) {\n            tableConfig.setColumns(getNewColumns());\n            shouldAutoSizeColumn = true;\n          }\n          // 全配置局行高变化时，刷新表格\n          internalEventService.dispatchEvent({\n            type: _eventServiceName.KD_TABLE_EVENT_NAMES.globalConfigRowheightChanged\n          });\n        }\n        tableConfig.setCheapConfig(cheapConfig);\n        if (shouldAutoSizeColumn) {\n          internalEventService.dispatchEvent({\n            type: _eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns,\n            params: {\n              trigger: 'tableGlobalConfigChanged'\n            }\n          });\n        }\n      }\n    });\n    return function () {\n      tableGlobalConfigChangedRemover();\n    };\n  }, [model]);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useTableGlobalConfig.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useTablePoster.js":
/*!********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useTablePoster.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useTablePoster = void 0;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _tablePoster = __webpack_require__(/*! ../post/tablePoster */ \"./src/component/web/DataGrid/KDTable/post/tablePoster.js\");\nvar useTablePoster = exports.useTablePoster = function useTablePoster(_ref) {\n  var tablePoster = _ref.tablePoster,\n    getInstance = _ref.getInstance,\n    getActionByKey = _ref.getActionByKey,\n    getTableOptions = _ref.getTableOptions,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getDispatch = _ref.getDispatch;\n  (0, _react.useEffect)(function () {\n    tablePoster.init({\n      getInstance: getInstance,\n      getActionByKey: getActionByKey,\n      getTableOptions: getTableOptions,\n      getTableConfigImmediately: getTableConfigImmediately,\n      getDispatch: getDispatch\n    });\n    tablePoster.add('cellImageClick', _tablePoster.postImageClick);\n    tablePoster.add('cellOperationItemClick', _tablePoster.postOperationItemClick);\n    tablePoster.add('cellHyperLinkClick', _tablePoster.postHyperLinkClick);\n    tablePoster.add('personalizedColumnWidthChanged', _tablePoster.postPersonalizedColumnWidth);\n    tablePoster.add('tipsShown', _tablePoster.postShowFormByTips);\n    tablePoster.add('tipsLinkClick', _tablePoster.postClickTipsLink);\n    tablePoster.add('postGridInfo', _tablePoster.postGridInfo);\n    tablePoster.add('privacyIconClick', _tablePoster.getPlainText);\n    tablePoster.add('multiHyperLinkClick', _tablePoster.postMultiHyperLinkClick);\n    tablePoster.add('updateCellValue', _tablePoster.updateCellValue);\n    tablePoster.add('editorRowClick', _tablePoster.handleEditorRowClick);\n    tablePoster.add('editingRowClick', _tablePoster.handleEditingRowClick);\n    tablePoster.add('btnClick', _tablePoster.postBtnClick);\n    tablePoster.add('detailBtnClick', _tablePoster.postDetailBtnClick);\n    tablePoster.add('batchInputClick', _tablePoster.postBatchInputClick);\n    tablePoster.add('changeYear', _tablePoster.dateChangeYear);\n    tablePoster.add('invokeActionSingle', _tablePoster.invokeActionSingle);\n    tablePoster.add('invokeAction', _tablePoster.invokeAction);\n    tablePoster.add('invokeActionDisableDispose', _tablePoster.invokeActionDisableDispose);\n    tablePoster.add('dispatchAction', _tablePoster.dispatchAction);\n    tablePoster.add('seqOperationClick', _tablePoster.seqOperationClick);\n    tablePoster.add('viewDetailClick', _tablePoster.viewDetailClick);\n    tablePoster.add('sendCustomRequest', _tablePoster.sendCustomRequest);\n    tablePoster.add('autoAddRow', _tablePoster.postAutoAddRow);\n    tablePoster.add('postFilterData', _tablePoster.postFilterData);\n    tablePoster.add('setColAllChecked', _tablePoster.setColAllChecked);\n    tablePoster.add('attachmentClick', _tablePoster.attachmentClick);\n    tablePoster.add('postRowClick', _tablePoster.postRowClick);\n    tablePoster.add('postCheckedRowSelection', _tablePoster.postCheckedRowSelection);\n    tablePoster.add('filterPanelBaseDataLookUpList', _tablePoster.postBaseDataListLookUp);\n    tablePoster.add('setFilterStatus', _tablePoster.setFilterStatus);\n    tablePoster.add('postRowSelection', _tablePoster.postRowSelection);\n    tablePoster.add('postPreviewInNewTab', _tablePoster.postPreviewInNewTab);\n    return function () {\n      tablePoster.flush();\n    };\n  }, []);\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useTablePoster.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useTableRendered.js":
/*!**********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useTableRendered.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useTableRendered;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nfunction useTableRendered(_ref) {\n  var containerEleRef = _ref.containerEleRef,\n    getInternalEventService = _ref.getInternalEventService;\n  (0, _react.useEffect)(function () {\n    var internalEventService = getInternalEventService();\n    var setTableBodyAttribute = function setTableBodyAttribute() {\n      if (!containerEleRef.current) return;\n      var tableBody = containerEleRef.current && containerEleRef.current.querySelector('.kd-table-body');\n      var tableHorizontalContainer = containerEleRef.current && containerEleRef.current.querySelector('.kd-virtual');\n      tableBody && tableBody.setAttribute('tabindex', '-1');\n      // tableBody渲染时，给容器加个属性，方便监听\n      if (tableBody) {\n        containerEleRef.current.setAttribute('data-render', true);\n      } else {\n        containerEleRef.current.setAttribute('data-render', false);\n      }\n      tableHorizontalContainer && tableHorizontalContainer.setAttribute('tabindex', '-1');\n    };\n    var tableRenderedCallback = function tableRenderedCallback() {\n      setTableBodyAttribute();\n    };\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.baseTableRendered, tableRenderedCallback);\n    return function () {\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.baseTableRendered, tableRenderedCallback);\n    };\n  }, []);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useTableRendered.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useTableSize.js":
/*!******************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useTableSize.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useTableSize;\nexports.useResizeTableHeight = useResizeTableHeight;\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _lodash = _interopRequireDefault(__webpack_require__(/*! lodash */ \"../../node_modules/lodash/lodash.js\"));\nvar _resizeObserve = _interopRequireDefault(__webpack_require__(/*! @/util/resizeObserve */ \"./src/util/resizeObserve.js\"));\nvar _serverproperties = __webpack_require__(/*! @/constant/serverproperties */ \"./src/constant/serverproperties.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _params = __webpack_require__(/*! ../../TableHelper/util/params */ \"./src/component/web/DataGrid/TableHelper/util/params.js\");\nvar _row = __webpack_require__(/*! ../utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nvar _columns2 = __webpack_require__(/*! ../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _data = __webpack_require__(/*! ../data */ \"./src/component/web/DataGrid/KDTable/data/index.js\");\nvar _height = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/column/height */ \"./src/component/web/DataGrid/TableHelper/column/height.js\");\nvar _columnWidthFit = __webpack_require__(/*! ../utils/columnWidthFit */ \"./src/component/web/DataGrid/KDTable/utils/columnWidthFit.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n/*\n * @Author: wqhui\n * @Date: 2022-05-06 15:01:02\n * @Description:  表格宽高相关监听和设置\n */\n\nvar SAFE_REIZE = 1;\nvar TOORBAR_BOTTOM_BORDER = 1;\nvar getPageIndex = _data.dataHelper.getPageIndex,\n  getAggregateData = _data.dataHelper.getAggregateData,\n  getDataCount = _data.dataHelper.getDataCount;\nfunction useTableSize(_ref) {\n  var _getTableConfigImmedi, _getTableConfigImmedi2, _model$meta$get;\n  var getTableOptions = _ref.getTableOptions,\n    getInstance = _ref.getInstance,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getInternalEventService = _ref.getInternalEventService,\n    wrapperEleRef = _ref.wrapperEleRef,\n    containerEleRef = _ref.containerEleRef,\n    setReadyed = _ref.setReadyed,\n    model = _ref.model,\n    tableInitialSize = _ref.tableInitialSize,\n    this$ = _ref.this$,\n    getTableApi = _ref.getTableApi,\n    readyed = _ref.readyed,\n    getMergeModel = _ref.getMergeModel;\n  // 监听表格隐藏期间，表格是否有更新\n  this$.current.hasUpdateSinceHide = this$.current.lastHide === true;\n  var autoSizeColumns = (0, _react.useCallback)(function (preWidth, width, preHeight, height) {\n    var tableConfig = getTableConfigImmediately();\n    // 高度改变触发回调时，这里判断前后宽度不相等才执行就会执行不到，所以去掉这个判断条件\n    if (width > 0 && preWidth !== width && [_const.TABLE_COLUMN_RESIZE_MODE.fit, _const.TABLE_COLUMN_RESIZE_MODE.adaptive].includes(tableConfig.columnResizeMode) || preWidth > 0 && height - preHeight > 100 // 初始表格无高度，表格内容撑开了高度，超过100px则需要重新自适应会，否则下面的行自适应不到\n    ) {\n      // 2.重新计算表格列宽充满\n      // todo: 百分比列宽是否也也需要重新设置列宽...\n      var internalEventService = getInternalEventService();\n      internalEventService.dispatchEvent({\n        type: _eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns,\n        params: {\n          trigger: 'tableSizeChange'\n        }\n      });\n    }\n  }, []);\n  var updateTableSize = (0, _react.useCallback)(function (width, height) {\n    var tableOptions = getTableOptions();\n    tableOptions.setTableSize({\n      width: width,\n      height: height\n    });\n    // 表格需要固定的宽高，这里渲染一遍后设置固定的宽度\n    if (width && height && wrapperEleRef.current) {\n      wrapperEleRef.current.style.width = width + 'px';\n    }\n  }, []);\n  var _handleTableSizeChange = (0, _react.useCallback)(function (width, height) {\n    var tableOptions = getTableOptions();\n    var preWidth = tableOptions.getTableSize().width;\n    var preHeight = tableOptions.getTableSize().height;\n    updateTableSize(width, height);\n    autoSizeColumns(preWidth, width, preHeight, height);\n  }, []);\n  var handleTableSizeChange = (0, _react.useCallback)(_lodash[\"default\"].debounce(_handleTableSizeChange, 100), []);\n\n  // 重设表格标题高度\n  var resetHeaderHeight = function resetHeaderHeight(config) {\n    // 初始化数据加载结束后，如果开启了表头行高自适应，需要重新计算headerHeight\n    var tableContainer = containerEleRef.current;\n    var tableInstance = getInstance();\n    var headerHeight = (0, _height.calAutoHeightHeader)(tableContainer, {\n      tableOptions: getTableOptions(),\n      tableInstance: tableInstance,\n      tableConfig: config,\n      model: model\n    });\n    config.setHeaderHeight(headerHeight);\n  };\n  (0, _react.useEffect)(function () {\n    var setTableInitialSize = function setTableInitialSize(offsetWidth, offsetHeight) {\n      // 初始化设置表格容器的高度\n      var containerEle = containerEleRef.current;\n      var height = offsetHeight;\n      tableInitialSize.current.width = offsetWidth;\n      // 需要特殊处理表格高度：1. 用户设置了百分比的高度 2.用户未设置高度\n      // 如果用户已经设置了固定的高度，则不需要处理\n      if (_lodash[\"default\"].includes(containerEle.style.height, '%') || containerEle.style.height === '') {\n        var _instance$controller$;\n        var instance = getInstance();\n        var config = getTableConfigImmediately();\n        var headerHeight = ((_instance$controller$ = instance.controller.viewer) === null || _instance$controller$ === void 0 ? void 0 : _instance$controller$.api.getHeaderHeight()) || _const.DEFAULT_HEADER_HEIGHT;\n        var rowHeight = config.getRowHeight() || _const.DEFAULT_ROW_HEIGHT;\n        var maxLevel = config.getMaxLevel();\n        var toolBarHeight = getToolbarHeight({\n          getTableConfigImmediately: getTableConfigImmediately,\n          getTableOptions: getTableOptions\n        });\n        var tableHeaderHeight = (0, _params.getTableHeaderHeight)({\n          headerHeight: headerHeight,\n          maxLevel: maxLevel\n        });\n        // 此处只取最小高度\n        var tableBodyHeightInfo = (0, _params.getTableBodyHeight)({\n          minRowCount: _const.DEFAULT_SHOW_ROWS_COUNT,\n          rowHeight: rowHeight\n        });\n        var minHeight = toolBarHeight + tableHeaderHeight + tableBodyHeightInfo.minHeight;\n        var actualHeight = offsetHeight;\n        if (_lodash[\"default\"].includes(minHeight, '%') || minHeight < actualHeight) {\n          // 用户设置了百分比高度，或者最小高度小于实际撑开的高度，强制设为实际高度\n          containerEle.style.height = actualHeight + 'px'; // 受扩展压缩影响\n          height = actualHeight;\n        } else {\n          containerEle.style.height = minHeight + 'px'; // 强制最小高度\n          height = minHeight;\n        }\n      }\n      tableInitialSize.current.height = height;\n      containerEle = null;\n    };\n    // 设置表格初始大小并计算容器高度\n    var setTableInitSizeAndContainerHeight = function setTableInitSizeAndContainerHeight(width, height) {\n      // 设置初始大小\n      setTableInitialSize(width, height);\n      // 设置表格容器高度\n      resizeTableContainerHeight({\n        getTableConfigImmediately: getTableConfigImmediately,\n        getTableOptions: getTableOptions,\n        getInstance: getInstance,\n        containerEleRef: containerEleRef,\n        parentModel: this$.current.parentModel,\n        model: this$.current.model,\n        tableInitialSize: tableInitialSize\n      });\n    };\n    var isWithoutInitTableSize = function isWithoutInitTableSize() {\n      return !tableInitialSize.current.width && !tableInitialSize.current.height;\n    };\n\n    // ResizeObserver 在一开始总是会调用一次所提供的回调函数，所以该函数初始就会执行一次\n    // https://stackoverflow.com/questions/60026223/does-resizeobserver-invokes-initially-on-page-load\n\n    var handleTableContainerResize = function handleTableContainerResize(rect) {\n      var width = rect.width,\n        height = rect.height,\n        hide = rect.hide;\n      getInternalEventService().dispatchEvent({\n        type: _eventServiceName.KD_TABLE_EVENT_NAMES.tableContainerResize,\n        params: {\n          trigger: 'tableSizeChange',\n          rect: rect,\n          lastHide: this$.current.lastHide\n        }\n      });\n      // todo: 后续这些关于 表格可见性变化的，都需要抽出监听 KD_TABLE_EVENT_NAMES.tableContainerResize\n      // 开启标题行高自适应，需要在表格隐藏重现的时候重新计算标题高度\n\n      if ((this$.current.lastHide === true || this$.current.lastHide === undefined) && hide === false) {\n        var tableConfig = getTableConfigImmediately();\n        var columnResizeMode = tableConfig.columnResizeMode,\n          gridType = tableConfig.gridType,\n          getColumns = tableConfig.getColumns;\n        var columns = getColumns();\n        // 开启预设宽度，需要在报表不可见到可见后重算列宽\n        if (gridType === _const.GRID_TYPE.virtualViewGrid && columnResizeMode === _const.TABLE_COLUMN_RESIZE_MODE.preset) {\n          columns = (0, _columnWidthFit.getFitedTableSizeColumns)({\n            columns: columns,\n            getTableOptions: getTableOptions,\n            getTableConfigImmediately: getTableConfigImmediately,\n            containerWidth: width\n          });\n          tableConfig.setColumns(columns);\n        }\n\n        // 单据体从隐藏到显示，重新计算列定义，兼容百分比列宽计算的场景\n        if (gridType === _const.GRID_TYPE.entryGrid && !this$.current.hadHideResetColumns) {\n          var _columns = (0, _columns2.getNewColumns)({\n            model: this$.current.model,\n            parentModel: this$.current.parentModel,\n            getTableOptions: getTableOptions,\n            getMergeModel: getMergeModel,\n            getTableConfigImmediately: getTableConfigImmediately,\n            getTableApi: getTableApi,\n            getInstance: getInstance,\n            tableWidth: width\n          });\n          tableConfig.setColumns(_columns);\n          this$.current.hadHideResetColumns = true;\n\n          // 表格从隐藏到显示不会重新自适应，这里重构了列定义，列宽发生了改变，要重新自适应一下\n          var internalEventService = getInternalEventService();\n          internalEventService.dispatchEvent({\n            type: _eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns,\n            params: {\n              trigger: 'tableSizeChange'\n            }\n          });\n        }\n\n        // 设置表格容器高度\n        resizeTableContainerHeight({\n          getTableConfigImmediately: getTableConfigImmediately,\n          getTableOptions: getTableOptions,\n          getInstance: getInstance,\n          containerEleRef: containerEleRef,\n          parentModel: this$.current.parentModel,\n          model: this$.current.model,\n          tableInitialSize: tableInitialSize\n        });\n        setTimeout(function () {\n          // 保证列宽自适应完成之后再去做高度计算，否则高度计算会不正确\n          _resetHeaderAndTableHeight();\n        }, 0);\n      }\n      shouldTableRerender(hide, this$.current, getTableConfigImmediately);\n      if (isWithoutInitTableSize()) {\n        setTableInitSizeAndContainerHeight(width, height);\n      }\n      if (hide) return;\n      handleTableSizeChange(width, height);\n    };\n    var resizeObserver = null;\n    // 表格需要固定的宽度，这里延迟渲染表格\n    // 记录表格宽高，监听宽高变化\n    setTimeout(function () {\n      var containerEle = containerEleRef.current;\n      // 使用showform之后立马releaseform，可能出现containerEleRef的引用为空的情况，兼容一下\n      if (!containerEle) {\n        return;\n      }\n      var width = containerEle.clientWidth;\n      var height = containerEle.clientHeight;\n      updateTableSize(width, height);\n      resizeObserver = (0, _resizeObserve[\"default\"])(containerEle, handleTableContainerResize);\n\n      // const isElementHide = containerEle.offsetHeight === 0 && containerEle.offsetWidth === 0\n      if (isWithoutInitTableSize()) {\n        // 初始dom元素不可见，不去进行表格的宽高计算\n        setTableInitSizeAndContainerHeight(width, height);\n      }\n      setReadyed(true);\n    }, 0);\n    return function () {\n      // containerEleRef.current = null\n      if (resizeObserver) {\n        resizeObserver.removeResizeObserve();\n        resizeObserver = null;\n      }\n    };\n  }, [model.getMetaLocaleProperty(_serverproperties.HEIGHT)]);\n  (0, _react.useEffect)(function () {\n    var config = getTableConfigImmediately();\n    // 解决凭证金额编辑的标题高度问题\n    // 标题行高自适应不走这个标题高度计算逻辑，直接实时计算\n    if (!config.titleAutoHeight && readyed) {\n      var maxLevel = config.getMaxLevel();\n      // 需要使用元数据中的headerheight而不是state里面的，state里面取值多次显示隐藏分组列会取到旧值导致计算错误\n      var headerHeight = (0, _params.getHeaderHeight)(model) || _const.DEFAULT_HEADER_HEIGHT;\n      if (getTableOptions !== null && getTableOptions !== void 0 && getTableOptions().getHasVoucherHeader()) {\n        headerHeight = maxLevel > 1 ? headerHeight : headerHeight * _const.VOUCHER_HEADER.defaultLevel;\n      }\n      config.setHeaderHeight(headerHeight);\n      resizeTableContainerHeight({\n        getTableConfigImmediately: getTableConfigImmediately,\n        getTableOptions: getTableOptions,\n        getInstance: getInstance,\n        containerEleRef: containerEleRef,\n        parentModel: this$.current.parentModel,\n        model: this$.current.model,\n        tableInitialSize: tableInitialSize\n      });\n    }\n  }, [readyed, getTableOptions === null || getTableOptions === void 0 ? void 0 : getTableOptions().getHasVoucherHeader(), (_getTableConfigImmedi = getTableConfigImmediately()) === null || _getTableConfigImmedi === void 0 ? void 0 : _getTableConfigImmedi.getMaxLevel(), (_getTableConfigImmedi2 = getTableConfigImmediately()) === null || _getTableConfigImmedi2 === void 0 ? void 0 : _getTableConfigImmedi2.getHeaderHeight(), (_model$meta$get = model.meta.get('columns')) === null || _model$meta$get === void 0 ? void 0 : _model$meta$get.hashCode()]);\n  var _resetHeaderAndTableHeight = function _resetHeaderAndTableHeight() {\n    var config = getTableConfigImmediately();\n    if (config.titleAutoHeight) {\n      resetHeaderHeight(config);\n      setTimeout(function () {\n        resizeTableContainerHeight({\n          getTableConfigImmediately: getTableConfigImmediately,\n          getTableOptions: getTableOptions,\n          getInstance: getInstance,\n          containerEleRef: containerEleRef,\n          parentModel: this$.current.parentModel,\n          model: this$.current.model,\n          tableInitialSize: tableInitialSize\n        });\n      });\n    }\n  };\n  (0, _react.useEffect)(function () {\n    var internalEventService = getInternalEventService();\n    // 初始化数据加载结束后，如果开启了表头行高自适应，需要重新计算headerHeight\n    var resetTableHeight = function resetTableHeight(_ref2) {\n      var type = _ref2.type,\n        params = _ref2.params;\n      var trigger = params.trigger;\n      var tableConfig = getTableConfigImmediately();\n      var titleAutoHeight = tableConfig.titleAutoHeight;\n      var validTrigger = [_const.CONTEXT_MENU, _const.COLGROUP_EXTEND_CHANGE, _const.FORMSTATUS_CHANGED];\n      if (validTrigger.includes(trigger) && titleAutoHeight) {\n        setTimeout(function () {\n          _resetHeaderAndTableHeight();\n        }, 0);\n      }\n    };\n    var resetTableHeightAfterThemeChange = function resetTableHeightAfterThemeChange(_ref3) {\n      var type = _ref3.type,\n        params = _ref3.params;\n      var tableConfig = getTableConfigImmediately();\n      var titleAutoHeight = tableConfig.titleAutoHeight;\n      if (titleAutoHeight) {\n        setTimeout(function () {\n          _resetHeaderAndTableHeight();\n        }, 0);\n      } else {\n        setTimeout(function () {\n          resizeTableContainerHeight({\n            getTableConfigImmediately: getTableConfigImmediately,\n            getTableOptions: getTableOptions,\n            getInstance: getInstance,\n            containerEleRef: containerEleRef,\n            parentModel: this$.current.parentModel,\n            model: this$.current.model,\n            tableInitialSize: tableInitialSize\n          });\n        }, 0);\n      }\n    };\n    _resetHeaderAndTableHeight();\n    // 主题变化的时候，也要重新计算高度\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.groupExtendChanged, resetTableHeight);\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.themeChanged, resetTableHeightAfterThemeChange);\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterColumnAutoSize, resetTableHeight);\n    return function () {\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.groupExtendChanged, resetTableHeight);\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.themeChanged, resetTableHeightAfterThemeChange);\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterColumnAutoSize, resetTableHeight);\n    };\n  }, [tableInitialSize.current.height]);\n}\nfunction useResizeTableHeight(_ref4) {\n  var _parentModel$getDataP, _model$getDataPropert, _getTableConfigImmedi5;\n  var getTableOptions = _ref4.getTableOptions,\n    getInstance = _ref4.getInstance,\n    getTableConfigImmediately = _ref4.getTableConfigImmediately,\n    containerEleRef = _ref4.containerEleRef,\n    readyed = _ref4.readyed,\n    model = _ref4.model,\n    parentModel = _ref4.parentModel,\n    tableInitialSize = _ref4.tableInitialSize,\n    activeView = _ref4.activeView,\n    getInternalEventService = _ref4.getInternalEventService;\n  var resizeHeightCache = (0, _react.useRef)(0);\n  var metaHeight = model.getMetaLocaleProperty(_serverproperties.HEIGHT);\n  var debounceResizeHeight = (0, _react.useCallback)(_lodash[\"default\"].debounce(resizeTableContainerHeight, 100, {\n    trailing: true\n  }), []);\n  var debounceResizeTiledViewHeight = (0, _react.useCallback)(_lodash[\"default\"].debounce(resizeTableTiledViewContainerHeight, 100, {\n    trailing: true\n  }), []);\n  // 重新计算表格高度\n  (0, _react.useEffect)(function () {\n    if (readyed && typeof tableInitialSize.current.height !== 'undefined') {\n      if (activeView === 'grid') {\n        // 在表格加载完毕且存在初始化高度后，后续重新设置表格容器高度如： 1.表格行数量发生改变\n        debounceResizeHeight({\n          getTableConfigImmediately: getTableConfigImmediately,\n          getTableOptions: getTableOptions,\n          getInstance: getInstance,\n          containerEleRef: containerEleRef,\n          parentModel: parentModel,\n          model: model,\n          tableInitialSize: tableInitialSize\n        });\n      } else {\n        debounceResizeTiledViewHeight(containerEleRef, metaHeight || 'auto', '567px');\n      }\n    }\n    var internalEventService = getInternalEventService();\n    var tableRenderedCallback = function tableRenderedCallback(_ref5) {\n      var trigger = _ref5.params.trigger;\n      if (trigger === 'rowDataChanged') {\n        if (activeView === 'grid') {\n          var _getTableConfigImmedi3 = getTableConfigImmediately(),\n            autoHeight = _getTableConfigImmedi3.autoHeight;\n          // 行高自适应时,数据变化后可能会影响行高，需要重新计算表格高度\n          if (autoHeight) {\n            debounceResizeHeight({\n              getTableConfigImmediately: getTableConfigImmediately,\n              getTableOptions: getTableOptions,\n              getInstance: getInstance,\n              containerEleRef: containerEleRef,\n              parentModel: parentModel,\n              model: model,\n              tableInitialSize: tableInitialSize\n            });\n          }\n        } else {\n          containerEleRef.current.style.height = metaHeight || 'auto';\n          containerEleRef.current.style.maxHeight = 567 + 'px';\n        }\n      }\n    };\n    var doResizeTableHeight = function doResizeTableHeight() {\n      return debounceResizeHeight({\n        getTableConfigImmediately: getTableConfigImmediately,\n        getTableOptions: getTableOptions,\n        getInstance: getInstance,\n        containerEleRef: containerEleRef,\n        parentModel: parentModel,\n        model: model,\n        tableInitialSize: tableInitialSize\n      });\n    };\n    var doResizeTabeHeightForAutoHeight = function doResizeTabeHeightForAutoHeight() {\n      var _getTableConfigImmedi4 = getTableConfigImmediately(),\n        autoHeight = _getTableConfigImmedi4.autoHeight,\n        titleAutoHeight = _getTableConfigImmedi4.titleAutoHeight;\n      // 平铺视图下不能重算高度\n      if (autoHeight && !titleAutoHeight && activeView === 'grid') {\n        debounceResizeHeight({\n          getTableConfigImmediately: getTableConfigImmediately,\n          getTableOptions: getTableOptions,\n          getInstance: getInstance,\n          containerEleRef: containerEleRef,\n          parentModel: parentModel,\n          model: model,\n          tableInitialSize: tableInitialSize\n        });\n      }\n    };\n\n    // 新增行和设置新增行焦点指令同时返回时,需要等基础表格数据更新后再处理(否则取不到最新的rowIndex)\n\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.globalConfigRowheightChanged, doResizeTableHeight);\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.baseTableRendered, tableRenderedCallback);\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterColumnResized, doResizeTableHeight);\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterColumnAutoSize, doResizeTabeHeightForAutoHeight);\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterRowExpand, doResizeTableHeight);\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.stickyAggregateHeightChanged, doResizeTableHeight);\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterFilter, doResizeTableHeight);\n    return function () {\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.baseTableRendered, tableRenderedCallback);\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterColumnResized, doResizeTableHeight);\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterColumnAutoSize, doResizeTabeHeightForAutoHeight);\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterRowExpand, doResizeTableHeight);\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.stickyAggregateHeightChanged, doResizeTableHeight);\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.afterFilter, doResizeTableHeight);\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.globalConfigRowheightChanged, doResizeTableHeight);\n    };\n  }, [readyed, activeView, parentModel === null || parentModel === void 0 || (_parentModel$getDataP = parentModel.getDataProperty(['value', 'rows'])) === null || _parentModel$getDataP === void 0 ? void 0 : _parentModel$getDataP.size, model === null || model === void 0 || (_model$getDataPropert = model.getDataProperty(['value', 'rows'])) === null || _model$getDataPropert === void 0 ? void 0 : _model$getDataPropert.size, (_getTableConfigImmedi5 = getTableConfigImmediately()) === null || _getTableConfigImmedi5 === void 0 ? void 0 : _getTableConfigImmedi5.getMaxLevel(), model === null || model === void 0 ? void 0 : model.getDataProperty(['value', 'pageindex'])]);\n  (0, _react.useEffect)(function () {\n    var tableHeaderRow = containerEleRef.current.querySelector('.kd-table-header-row');\n    var headerObserver = null;\n    if (tableHeaderRow) {\n      // 监听标题行高变化\n      var handleTableHeaderResize = function handleTableHeaderResize(rect) {\n        // 监听变化通知需要响应的模块\n        var curHeight = (rect === null || rect === void 0 ? void 0 : rect.height) || 0;\n        // 当rect.height 为0 的时候，说明表格隐藏了，此时由于表格整体隐藏，标题高度如果设置为0，则会导致取到默认高度32\n        var isValidResize = curHeight !== 0 && Math.abs(curHeight - resizeHeightCache.current) > SAFE_REIZE;\n        if (isValidResize) {\n          resizeHeightCache.current = curHeight;\n          getInstance().controller.setHeaderHeight(rect === null || rect === void 0 ? void 0 : rect.height);\n        }\n      };\n      headerObserver = (0, _resizeObserve[\"default\"])(tableHeaderRow, handleTableHeaderResize);\n    }\n    return function () {\n      var _headerObserver;\n      (_headerObserver = headerObserver) === null || _headerObserver === void 0 || _headerObserver.removeResizeObserve();\n      headerObserver = null;\n    };\n  }, [readyed]);\n}\nfunction resizeTableContainerHeight(_ref6) {\n  var _getInstance;\n  var getTableConfigImmediately = _ref6.getTableConfigImmediately,\n    getTableOptions = _ref6.getTableOptions,\n    getInstance = _ref6.getInstance,\n    containerEleRef = _ref6.containerEleRef,\n    parentModel = _ref6.parentModel,\n    model = _ref6.model,\n    tableInitialSize = _ref6.tableInitialSize;\n  var config = getTableConfigImmediately();\n  var rowHeight = config.getRowHeight() || _const.DEFAULT_ROW_HEIGHT;\n  var rowCount = ((_getInstance = getInstance()) === null || _getInstance === void 0 || (_getInstance = _getInstance.controller) === null || _getInstance === void 0 || (_getInstance = _getInstance.getRows()) === null || _getInstance === void 0 ? void 0 : _getInstance.length) || 0;\n  var baseHeight = caclulateTableNonBodyHeight({\n    getTableConfigImmediately: getTableConfigImmediately,\n    getTableOptions: getTableOptions,\n    getInstance: getInstance,\n    containerEleRef: containerEleRef,\n    parentModel: parentModel,\n    model: model\n  });\n  var tableInitialHeight = tableInitialSize.current.height;\n  var metaHeight = model.getMetaLocaleProperty(_serverproperties.HEIGHT);\n  var rowHeightCache = getInstance().controller.getRowHeightCache();\n  var tableOptions = getTableOptions();\n  var defaultRowCount = tableOptions.getDefaultRowCount();\n  var isLimitHeight = tableOptions.getIsLimitHeight();\n  var tableHeight = (0, _params.caclulateTableHeight)({\n    metaHeight: metaHeight,\n    baseHeight: baseHeight,\n    tableInitialHeight: tableInitialHeight,\n    rowHeight: rowHeight,\n    rowCount: rowCount,\n    rowHeightCache: rowHeightCache,\n    defaultRowCount: defaultRowCount,\n    isLimitHeight: isLimitHeight\n  });\n  containerEleRef.current.style.height = tableHeight + 'px';\n\n  // 最小高度逻辑，有设置高度则取设计器高度，没有则取一行+表格高度\n  containerEleRef.current.style.minHeight = metaHeight !== null && metaHeight !== void 0 ? metaHeight : baseHeight + rowHeight * (0, _params.getTableDefaultShowRowsCount)() + 'px';\n  // 从平铺视图切换回表格视图的时候，平铺视图的最大高度显示要重置\n  containerEleRef.current.style.maxHeight = 'none';\n  containerEleRef = null;\n}\nfunction resizeTableTiledViewContainerHeight(containerEleRef, height, maxHeight) {\n  containerEleRef.current.style.height = height;\n  containerEleRef.current.style.maxHeight = maxHeight;\n}\nfunction getToolbarHeight(_ref7) {\n  var getTableConfigImmediately = _ref7.getTableConfigImmediately,\n    getTableOptions = _ref7.getTableOptions;\n  var tableConfig = getTableConfigImmediately();\n  var hasNavgation = tableConfig.hasNavgation,\n    toolbarLocation = tableConfig.toolbarLocation;\n  if (!hasNavgation) {\n    return 0;\n  }\n  var tableOptions = getTableOptions();\n  var isBottom = toolbarLocation === '1';\n  var baseToorbarHeight = tableOptions.getToolBarHeight() || tableOptions.getNavigationDefaultHeight();\n  return isBottom ? baseToorbarHeight + TOORBAR_BOTTOM_BORDER : baseToorbarHeight;\n}\nfunction getScrollBarHeight(_ref8) {\n  var containerEleRef = _ref8.containerEleRef,\n    tableOptions = _ref8.tableOptions;\n  var scrollBarHeight = 0;\n  var scrollBarSize = tableOptions.getScrollBarSize();\n  var scrollDom = containerEleRef.current && containerEleRef.current.querySelector('.kd-sticky-scroll');\n  if (scrollDom) {\n    var style = scrollDom.getAttribute('style');\n    var isScrollBarVisible = !style.includes('display: none');\n    if (isScrollBarVisible) {\n      scrollBarHeight = scrollBarSize.height;\n    }\n  }\n  // todo: 初始滚动条还没出来，这里先都加滚动条高度，后续再处理\n  return scrollBarSize.height;\n}\nfunction getAggregateHeight(_ref9) {\n  var _getInstance$tableMod;\n  var rowCount = _ref9.rowCount,\n    model = _ref9.model,\n    parentModel = _ref9.parentModel,\n    tableOptions = _ref9.tableOptions,\n    gridType = _ref9.gridType,\n    rowHeight = _ref9.rowHeight,\n    getInstance = _ref9.getInstance;\n  rowCount = tableOptions.getSumWithFilter() ? (_getInstance$tableMod = getInstance().tableModel.getFlatDisplayRows()) === null || _getInstance$tableMod === void 0 ? void 0 : _getInstance$tableMod.length : rowCount;\n  if (gridType === _const.GRID_TYPE.virtualViewGrid) {\n    rowCount = getDataCount(model, parentModel);\n  }\n  var showFooterRow = (0, _row.shouldShowFooterRow)({\n    rowCount: rowCount,\n    pageIndex: getPageIndex(model, parentModel)\n  });\n  var aggregateData = getAggregateData(model, parentModel);\n  if (!showFooterRow || !(0, _row.hadFooterRowData)({\n    aggregateColumns: tableOptions.getAggregateColumns(),\n    gridType: gridType,\n    aggregateDataLength: aggregateData.length\n  })) {\n    return 0;\n  }\n  return tableOptions.getTotalType(model) !== _const.TOTAL_TYPE.sticky ? rowHeight : getStickyAggregateHeight(tableOptions, rowHeight); // 暂不用考虑多行合计\n}\nfunction getStickyAggregateHeight(tableOptions, rowHeight) {\n  var _tableOptions$getStic;\n  return (_tableOptions$getStic = tableOptions.getStickyAggregateHeight()) !== null && _tableOptions$getStic !== void 0 ? _tableOptions$getStic : rowHeight;\n}\nvar HEADER_BOTTOM_BORDER = 1;\nvar SCROLL_TOP_BORDER = 1;\n\n// 计算除表格主体外的其他高度，包括工具栏，滚动条等\nfunction caclulateTableNonBodyHeight(_ref10) {\n  var _useModel$getDataProp;\n  var getTableConfigImmediately = _ref10.getTableConfigImmediately,\n    getTableOptions = _ref10.getTableOptions,\n    getInstance = _ref10.getInstance,\n    containerEleRef = _ref10.containerEleRef,\n    parentModel = _ref10.parentModel,\n    model = _ref10.model;\n  var tableOptions = getTableOptions();\n  var config = getTableConfigImmediately();\n  var rowHeight = config.getRowHeight() || _const.DEFAULT_ROW_HEIGHT;\n  var toolBarHeight = getToolbarHeight({\n    getTableConfigImmediately: getTableConfigImmediately,\n    getTableOptions: getTableOptions\n  });\n  var headerHeight = config.getHeaderHeight() || _const.DEFAULT_HEADER_HEIGHT;\n  var maxLevel = config.getMaxLevel();\n  var tableHeaderHeight = config.titleAutoHeight ? (0, _height.getCurMaxHeightCell)(containerEleRef.current, headerHeight) : (0, _params.getTableHeaderHeight)({\n    headerHeight: headerHeight,\n    maxLevel: maxLevel\n  });\n  var scrollBarHeight = getScrollBarHeight({\n    containerEleRef: containerEleRef,\n    tableOptions: tableOptions\n  });\n  var useModel = parentModel || model;\n  var rowCount = (useModel === null || useModel === void 0 || (_useModel$getDataProp = useModel.getDataProperty(['value', 'rows'])) === null || _useModel$getDataProp === void 0 ? void 0 : _useModel$getDataProp.size) || 0;\n  var containerBoderHeight = containerEleRef.current.offsetHeight - containerEleRef.current.clientHeight;\n  var aggregateHeight = getAggregateHeight({\n    rowCount: rowCount,\n    model: model,\n    parentModel: parentModel,\n    tableOptions: tableOptions,\n    gridType: config.gridType,\n    rowHeight: rowHeight,\n    getInstance: getInstance\n  });\n  var baseHeight = toolBarHeight + tableHeaderHeight + scrollBarHeight + containerBoderHeight + HEADER_BOTTOM_BORDER + SCROLL_TOP_BORDER + aggregateHeight;\n  return baseHeight;\n}\nfunction shouldTableRerender(hide, context, getTableConfigImmediately) {\n  // 解决虚加载模式下，表格不可见但是有 u 指令更新，导致滚动条实际位置和 offsetX 不一致的情况\n  if (context.lastHide === true && hide === false && context.hasUpdateSinceHide) {\n    var tableConfig = getTableConfigImmediately();\n    var columns = tableConfig.getColumns();\n    tableConfig.setColumns(columns);\n    context.hasUpdateSinceHide = false;\n  }\n  context.lastHide = hide;\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useTableSize.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useTableTracking.js":
/*!**********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useTableTracking.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useTableTracking;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _trackingExtendCtrlProps = __webpack_require__(/*! @/constant/trackingExtendCtrlProps */ \"./src/constant/trackingExtendCtrlProps.js\");\nvar _dataService = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/dataService.js */ \"./src/component/web/DataGrid/TableHelper/util/dataService.js\");\nvar _tracking = __webpack_require__(/*! ../utils/tracking */ \"./src/component/web/DataGrid/KDTable/utils/tracking.js\");\nfunction useTableTracking(_ref) {\n  var getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getTableOptions = _ref.getTableOptions;\n  var tableCellRangesSumTracking = function tableCellRangesSumTracking() {\n    var tableConfig = getTableConfigImmediately();\n    var pageId = tableConfig.pageId,\n      id = tableConfig.id,\n      parentId = tableConfig.parentId,\n      gridType = tableConfig.gridType,\n      type = tableConfig.type,\n      isCellRangesSum = tableConfig.isCellRangesSum,\n      modelKey = tableConfig.modelKey;\n    var shouldTracking = (0, _tracking.shouldCellRangesSumTracking)(gridType, isCellRangesSum);\n    if (shouldTracking) {\n      var controlProp = _trackingExtendCtrlProps.trackingExtendCtrlProps.GRID_CELL_RANGES_SUM;\n      var controlValue = isCellRangesSum;\n      var controlType = (0, _dataService.getGridTrackingType)({\n        type: type,\n        gridType: gridType\n      });\n      (0, _dataService.trackingOfGridProps)({\n        pageId: pageId,\n        controlId: parentId || modelKey,\n        controlType: controlType,\n        controlProp: controlProp,\n        controlValue: controlValue\n      });\n    }\n  };\n  (0, _react.useEffect)(function () {\n    tableCellRangesSumTracking();\n    trackingSuppressRowSpan(getTableConfigImmediately, getTableOptions);\n  }, []);\n  function trackingSuppressRowSpan(getTableConfigImmediately, getTableOptions) {\n    var tableConfig = getTableConfigImmediately();\n    var pageId = tableConfig.pageId,\n      id = tableConfig.id,\n      parentId = tableConfig.parentId,\n      gridType = tableConfig.gridType,\n      type = tableConfig.type,\n      modelKey = tableConfig.modelKey;\n    var tableOptions = getTableOptions();\n    if (tableOptions.getSuppressRowSpan()) {\n      (0, _dataService.trackingOfGridProps)({\n        pageId: pageId,\n        controlId: parentId || modelKey,\n        controlType: (0, _dataService.getGridTrackingType)({\n          type: type,\n          gridType: gridType\n        }),\n        controlProp: _trackingExtendCtrlProps.trackingExtendCtrlProps.GRID_NO_BILL_HEADER_SPAN,\n        // 目前只有列表的禁止单头合并\n        controlValue: tableOptions.getSuppressRowSpan()\n      });\n    }\n  }\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useTableTracking.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useThemeChange.js":
/*!********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useThemeChange.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useThemeChange;\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _GlobalDataCacher = __webpack_require__(/*! @/model/GlobalDataCacher */ \"./src/model/GlobalDataCacher.js\");\nvar _symbolConst = __webpack_require__(/*! @/constant/symbolConst */ \"./src/constant/symbolConst.js\");\nvar _PageVisibleStatus = __webpack_require__(/*! @/component/common/PageVisibleStatus */ \"./src/component/common/PageVisibleStatus.js\");\nvar _columns = __webpack_require__(/*! ../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _element = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/element */ \"./src/component/web/DataGrid/TableHelper/util/element.js\");\n/*\n * @Author: wqhui\n * @Date: 2022-07-01 10:19:58\n * @Description:\n */\n\nvar visiblePages = []; // 可见页面集合\nfunction useThemeChange(_ref) {\n  var getTableConfigImmediately = _ref.getTableConfigImmediately,\n    this$ = _ref.this$,\n    getTableOptions = _ref.getTableOptions,\n    getInstance = _ref.getInstance,\n    afterRefreshOfThemeChanged = _ref.afterRefreshOfThemeChanged,\n    getInternalEventService = _ref.getInternalEventService,\n    getTableApi = _ref.getTableApi;\n  var themeChangedRefreshFlag = (0, _react.useRef)(false);\n  var refreshDisplay = function refreshDisplay() {\n    var _this$$current = this$.current,\n      model = _this$$current.model,\n      parentModel = _this$$current.parentModel,\n      isLocked = _this$$current.isLocked;\n    // 主题变化时，重置缓存的展开列列宽\n    (0, _element.resetExpandColExpectWidth)();\n    (0, _columns.resetTableColumnsAndConfig)({\n      model: model,\n      parentModel: parentModel,\n      isLocked: isLocked,\n      getInstance: getInstance,\n      getTableOptions: getTableOptions,\n      getTableConfigImmediately: getTableConfigImmediately,\n      getInternalEventService: getInternalEventService,\n      getTableApi: getTableApi\n    });\n    afterRefreshOfThemeChanged === null || afterRefreshOfThemeChanged === void 0 || afterRefreshOfThemeChanged();\n  };\n  (0, _react.useEffect)(function () {\n    var removePageVisibleChangeListener = (0, _GlobalDataCacher.addDataChangeListener)(_symbolConst.KEY_PAGE_VISIBLE_STATUS, function (visibleStatus) {\n      visiblePages = (0, _PageVisibleStatus.getVisiblePages)(visibleStatus);\n      // 存在刷新标志，且当前页面可见，刷新表格显示效果\n      if (themeChangedRefreshFlag.current && visiblePages.includes(_getPageId(this$))) {\n        themeChangedRefreshFlag.current = false;\n        refreshDisplay();\n      }\n    });\n    var themeChangeRemover = (0, _GlobalDataCacher.addDataChangeListener)(_symbolConst.KEY_MODIFY_THEME_ACTION, function (data) {\n      // 页面可见，直接刷新表格显示效果，否则延迟更新\n      if (visiblePages.includes(this$.current.model.pageId)) {\n        refreshDisplay();\n      } else {\n        themeChangedRefreshFlag.current = true;\n      }\n    });\n    return function () {\n      themeChangeRemover();\n      removePageVisibleChangeListener();\n    };\n  }, []);\n}\nfunction _getPageId(this$) {\n  return this$.current.model.pageId;\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useThemeChange.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useTreeVirtuualDataLoaded.js":
/*!*******************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useTreeVirtuualDataLoaded.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useTreeVirtualDataLoaded;\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.find.js */ \"../../node_modules/core-js/modules/es.array.find.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.parse-int.js */ \"../../node_modules/core-js/modules/es.parse-int.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _domObserverUtil = __webpack_require__(/*! @/util/domObserverUtil */ \"./src/util/domObserverUtil.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar proxy = _interopRequireWildcard(__webpack_require__(/*! @/proxy/formproxy */ \"./src/proxy/formproxy.js\"));\nvar _ajaxState = __webpack_require__(/*! @/api/ajaxState */ \"./src/api/ajaxState.js\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction useTreeVirtualDataLoaded(_ref) {\n  var model = _ref.model,\n    containerEleRef = _ref.containerEleRef,\n    readyed = _ref.readyed,\n    getTableOptions = _ref.getTableOptions,\n    getActionByKey = _ref.getActionByKey,\n    getTableConfigImmediately = _ref.getTableConfigImmediately;\n  var _useState = (0, _react.useState)(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    isTbodyVisible = _useState2[0],\n    setTbodyVisible = _useState2[1];\n\n  // 监听tbody的可见性\n  (0, _react.useEffect)(function () {\n    var tableConfig = getTableConfigImmediately();\n    var gridType = tableConfig.gridType,\n      treeTable = tableConfig.treeTable;\n    // 这里只限制到报表，存在从报表切换为树形报表的场景导致监听不生效\n    var isVirtualView = gridType === _const.GRID_TYPE.virtualViewGrid;\n    if (!readyed || !isVirtualView) return;\n    var options = {\n      attributes: true\n    };\n    var setTbodyVisibleStatus = function setTbodyVisibleStatus(mutations) {\n      mutations.forEach(function (mutation) {\n        if (mutation.attributeName === 'data-render') {\n          var isVisible = containerEleRef.current.getAttribute('data-render') === 'true';\n          if (isVisible) {\n            setTbodyVisible(isTbodyVisible + 1);\n          } else {\n            setTbodyVisible(0);\n          }\n        }\n      });\n    };\n    var observer = (0, _domObserverUtil.addMutationObserver)(containerEleRef.current, options, setTbodyVisibleStatus);\n    return function () {\n      observer && observer.disconnect();\n    };\n  }, [readyed, isTbodyVisible]);\n\n  // 监听新增的行元素，出现目标行时加载报表数据\n  (0, _react.useEffect)(function () {\n    var tableConfig = getTableConfigImmediately();\n    var gridType = tableConfig.gridType,\n      treeTable = tableConfig.treeTable;\n    var isTreeVirtualView = gridType === _const.GRID_TYPE.virtualViewGrid && treeTable;\n    if (!readyed || !isTreeVirtualView || !isTbodyVisible) return;\n    var tableBody = containerEleRef.current.querySelector('.kd-table > .kd-table-body tbody');\n    if (!tableBody) return;\n    var handleMatchLoadDataRow = function handleMatchLoadDataRow(matchRowInfo) {\n      // 目标行出现时加载数据\n      var rowKeyValue = matchRowInfo.rowKeyValue,\n        pid = matchRowInfo.pid,\n        startIndex = matchRowInfo.startIndex;\n      var tableOptions = getTableOptions();\n      var tableConfig = getTableConfigImmediately();\n      var treeVirtualViewLoadedDataRow = tableOptions.getTreeVirtualViewLoadedDataRow();\n      var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n      var pageId = model.pageId,\n        key = model.key;\n      var blockSize = tableConfig.blockSize;\n      var isVirtualViewExpandAll = tableOptions.getTreeVirtualViewExpandAll();\n      var requestKey = (0, _ajaxState.makeAjaxKey)(pageId, key, 'getVirtualData');\n      proxy.disableDisposeAction(requestKey);\n      if (isVirtualViewExpandAll) {\n        invokeControlMethodOnly && invokeControlMethodOnly({\n          pageId: pageId,\n          key: key\n        }, 'getVirtualData', [startIndex + blockSize, blockSize]);\n      } else {\n        invokeControlMethodOnly && invokeControlMethodOnly({\n          pageId: pageId,\n          key: key\n        }, 'getVirtualData', [startIndex + blockSize, blockSize, pid, parseInt(rowKeyValue)]);\n      }\n      proxy.allowDisposeAction(requestKey);\n      // 数据加载完后清楚目标行\n      tableOptions.setTreeVirtualViewLoadedDataRow(treeVirtualViewLoadedDataRow.filter(function (row) {\n        return row.rowKeyValue !== rowKeyValue;\n      }));\n    };\n    var callback = function callback(mutations) {\n      mutations.forEach(function (mutation) {\n        if (mutation.addedNodes.length === 0) return;\n        var addRowNodes = mutation.addedNodes;\n        addRowNodes.forEach(function (node) {\n          var tableOptions = getTableOptions();\n          var rowKeyValue = node.getAttribute('data-row-key');\n          var treeVirtualViewLoadedDataRow = tableOptions.getTreeVirtualViewLoadedDataRow();\n          var targetRowInfo = treeVirtualViewLoadedDataRow.find(function (row) {\n            return row.rowKeyValue === rowKeyValue;\n          });\n          // 匹配到目标行\n          if (targetRowInfo) {\n            handleMatchLoadDataRow(targetRowInfo);\n          }\n        });\n      });\n    };\n    var options = {\n      childList: true\n    };\n    var observer = (0, _domObserverUtil.addMutationObserver)(tableBody, options, callback);\n    return function () {\n      observer && observer.disconnect();\n    };\n  }, [isTbodyVisible]);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useTreeVirtuualDataLoaded.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useValidate.js":
/*!*****************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useValidate.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useValidate;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _lodash = __webpack_require__(/*! lodash */ \"../../node_modules/lodash/lodash.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _const = __webpack_require__(/*! @/constant/const */ \"./src/constant/const.js\");\nvar _appModelFunction = __webpack_require__(/*! @/model/appModelFunction */ \"./src/model/appModelFunction.js\");\nvar _dataService = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/dataService */ \"./src/component/web/DataGrid/TableHelper/util/dataService.js\");\nvar _array = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _getColumnEditable = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/getColumnEditable */ \"./src/component/web/DataGrid/TableHelper/util/getColumnEditable.js\");\nvar _columns = __webpack_require__(/*! ../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _validate = __webpack_require__(/*! ../utils/validate */ \"./src/component/web/DataGrid/KDTable/utils/validate.js\");\nvar _table = _interopRequireDefault(__webpack_require__(/*! ../style/table.less */ \"./src/component/web/DataGrid/KDTable/style/table.less\"));\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\nvar _GlobalDataCacher = __webpack_require__(/*! @/model/GlobalDataCacher */ \"./src/model/GlobalDataCacher.js\");\nvar _symbolConst = __webpack_require__(/*! @/constant/symbolConst */ \"./src/constant/symbolConst.js\");\nvar _GridUtils = __webpack_require__(/*! ../../AgDataGrid/GridUtils */ \"./src/component/web/DataGrid/AgDataGrid/GridUtils.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; } /*\n * @Author: wqhui\n * @Date: 2022-12-29 14:04:37\n * @Description:\n */\nfunction useValidate(_ref) {\n  var activeView = _ref.activeView,\n    getTableOptions = _ref.getTableOptions,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getTableApi = _ref.getTableApi,\n    getInstance = _ref.getInstance,\n    containerEleRef = _ref.containerEleRef,\n    getInternalEventService = _ref.getInternalEventService,\n    tablePoster = _ref.tablePoster;\n  // 定位错误单元格\n  (0, _react.useEffect)(function () {\n    if (getTableOptions().getGridType()) {\n      return;\n    }\n    var _getTableConfigImmedi = getTableConfigImmediately(),\n      pageId = _getTableConfigImmedi.pageId,\n      id = _getTableConfigImmedi.id;\n    var remoceGridValidateFailedFocus = (0, _memoryCacher.addDataChangeListener)(pageId, [id, 'errorFocus'], function (data) {\n      if (data) {\n        var _data = _slicedToArray(data, 2),\n          colId = _data[0],\n          rowKey = _data[1];\n        var lastestValidateMessageKey = (0, _memoryCacher.getPageData)(pageId, [_const.LATEST_VALIDATE_MESSAGE_KEY]);\n        if (!lastestValidateMessageKey || lastestValidateMessageKey !== colId) {\n          (0, _memoryCacher.setPageData)(pageId, [_const.LATEST_VALIDATE_MESSAGE_KEY], colId);\n        }\n        if (activeView === 'grid') {\n          var rowIndex = getInstance().controller.getRowIndex(Number(rowKey), false);\n          getTableApi().ensureColumnVisible(colId);\n          getTableApi().ensureRowIndexVisible(rowIndex);\n          // 不可见到可见需要延迟提示\n          setTimeout(function () {\n            (0, _memoryCacher.setPageData)(pageId, [\"\".concat(id, \"_\").concat(colId, \"_\").concat(rowKey), 'errorFocus'], []);\n          });\n        }\n      }\n    });\n    return function () {\n      remoceGridValidateFailedFocus === null || remoceGridValidateFailedFocus === void 0 || remoceGridValidateFailedFocus();\n    };\n  }, [activeView]);\n  (0, _react.useEffect)(function () {\n    if (getTableOptions().getGridType()) {\n      return;\n    }\n    var _getTableConfigImmedi2 = getTableConfigImmediately(),\n      pageId = _getTableConfigImmedi2.pageId,\n      id = _getTableConfigImmedi2.id,\n      rowKeyName = _getTableConfigImmedi2.rowKey,\n      type = _getTableConfigImmedi2.type,\n      gridType = _getTableConfigImmedi2.gridType;\n    var rowValidateTipClickHandler = _createRowValidateTipClickHandler({\n      pageId: pageId,\n      tableId: id,\n      type: type,\n      gridType: gridType,\n      tableApi: getTableApi(),\n      controller: getInstance().controller,\n      tableConfig: getTableConfigImmediately()\n    });\n    var rowsDomOberserve = new window.MutationObserver(_handleGridBodyChanged({\n      pageId: pageId,\n      tableId: id,\n      rowValidateTipClickHandler: rowValidateTipClickHandler\n    }));\n    var handleTableRowValidate = function handleTableRowValidate(rowKey) {\n      var gridValidateData = (0, _appModelFunction.getGridValidateData)(pageId, [id]);\n      var targetContainer = containerEleRef.current.querySelector('.kd-table-body > .kd-fixed-left > table > tbody') || containerEleRef.current.querySelector('.kd-table-body > .kd-virtual > table > tbody');\n\n      // 处理行校验提示\n      targetContainer && setTimeout(function () {\n        var rowElements; // rowKey存在则仅处理一行，否则表示表格全部校验（如提交时）处理所有可见行\n        // row=== undefined 表示表格全部校验\n        if (rowKey === undefined) {\n          rowElements = targetContainer.children;\n          (0, _validate.updateValidateFailedCellCount)({\n            pageId: pageId,\n            id: id,\n            rowKey: rowKeyName,\n            tableApi: getTableApi(),\n            controller: getInstance().controller\n          });\n        } else {\n          rowElements = [targetContainer.querySelector(\"tr[data-row-key=\\\"\".concat(rowKey, \"\\\"]\"))];\n        }\n        _handleRowsValidateTipElement({\n          pageId: pageId,\n          tableId: id,\n          rowElements: rowElements,\n          rowValidateTipClickHandler: rowValidateTipClickHandler\n        });\n      });\n\n      // 根据此次校验完表格是否存在校验失败的单元格对内容进行处理\n      if (gridValidateData && gridValidateData.size > 0) {\n        // 1. 表体dom发生变化(如竖直滚动)时，处理校验提示\n        rowsDomOberserve.observe(targetContainer, {\n          childList: true\n        });\n        // 2. 设置表格折叠后的校验提示\n        containerEleRef.current.setAttribute('data-valid', pageId);\n      } else {\n        rowsDomOberserve.disconnect();\n        containerEleRef.current.removeAttribute('data-valid');\n      }\n    };\n    var removeValidateFinishListener = (0, _memoryCacher.addDataChangeListener)(pageId, [_const.VALIDATE_FINISH], function (data) {\n      var tableId = data.tableId,\n        rowKey = data.rowKey;\n      if (tableId && tableId !== id) {\n        return;\n      }\n      handleTableRowValidate(rowKey);\n    });\n    var removeGridValidateDataChangeListener = (0, _memoryCacher.addDataChangeListener)(pageId, [id, _const.GRID_VALIDATE_CHANGE], function () {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      handleTableRowValidate();\n    });\n    var internalEventService = getInternalEventService();\n    var handleScroll = (0, _lodash.debounce)(function (_ref2) {\n      var params = _ref2.params;\n      var direction = params.direction;\n      var gridValidateData = (0, _appModelFunction.getGridValidateData)(pageId, [id]);\n      if (direction === 'horizontal' && (gridValidateData === null || gridValidateData === void 0 ? void 0 : gridValidateData.size) > 0) {\n        keepRowValidateTipNodeInRowEnd({\n          trigger: 'scroll'\n        });\n      }\n    }, 300);\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.scroll, handleScroll);\n\n    // 表格的父容器直到window层级，存在纵向滚动条时，表格从可见到不可见时，表格会重新渲染一次，导致行渲染的单元格只剩一个\n    // 该问题需修复KDTable，保证可见到不可见时不重新渲染\n    internalEventService.addEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.tableContainerResize, function (_ref3) {\n      var params = _ref3.params;\n      var rect = params.rect,\n        lastHide = params.lastHide;\n      var hide = rect.hide;\n      if (lastHide && !hide) {\n        // 延迟到下个生命周期，等待表格先渲染行内容\n        setTimeout(function () {\n          keepRowValidateTipNodeInRowEnd({\n            cb: function cb(rowValidateTipNode, tr) {\n              // 不可见时设置的节点高度为0，此处需重设高度\n              // 兼容chrome低版本(70+)tr的relative属性失效，导致绝对定位不是相对于tr，需设置固定的高度\n              rowValidateTipNode.style.height = tr.clientHeight + 'px';\n            }\n          });\n        });\n      }\n    });\n    return function () {\n      removeValidateFinishListener();\n      rowsDomOberserve.disconnect();\n      rowsDomOberserve = null;\n      internalEventService.removeEventListener(_eventServiceName.KD_TABLE_EVENT_NAMES.scroll, handleScroll);\n      removeGridValidateDataChangeListener();\n    };\n    /**\n     * @param {Function} [modifyRowValidateTipNode]\n     * @returns\n     */\n    function keepRowValidateTipNodeInRowEnd(_ref4) {\n      var cb = _ref4.cb,\n        trigger = _ref4.trigger;\n      var targetContainer = containerEleRef.current.querySelector('.kd-table-body > .kd-fixed-left > table > tbody') || containerEleRef.current.querySelector('.kd-table-body > .kd-virtual > table > tbody');\n      // 从不可见到可见，高度也需要重新计算，也要重刷\n      var hasLeftLockCol = targetContainer.querySelector('td.kd-first.kd-lock-left');\n      if (hasLeftLockCol && trigger === 'scroll') {\n        // 存在左侧冻结列，标志会加到单元格中，无需重置\n        return;\n      }\n      var rowElements = targetContainer.children;\n      rowElements.forEach(function (tr) {\n        var oldRowValidateTipNode = tr.querySelector(\".\".concat(_table[\"default\"]['kd-row-validate-failed-tip']));\n        // 存在校验提示则移动到行元素的最后\n        if (oldRowValidateTipNode) {\n          cb === null || cb === void 0 || cb(oldRowValidateTipNode, tr);\n          var firstTd = tr.firstElementChild;\n          var appendTarget = (firstTd === null || firstTd === void 0 ? void 0 : firstTd.style.position) === 'sticky' ? firstTd : tr;\n          appendTarget.appendChild(oldRowValidateTipNode);\n        }\n      });\n    }\n  }, []);\n  // 如果存在手机类型的列，提前获取一下国家手机号对应信息\n  (0, _react.useEffect)(function () {\n    // 获取所有的国家手机号识别码\n    var countryList = (0, _GlobalDataCacher.getData)(_symbolConst.KEY_COUNTRU_VIA_DATA);\n    var tableConfig = getTableConfigImmediately();\n    var phoneCols = (0, _array.flatColumns)(tableConfig.getColumns()).filter(function (col) {\n      return col.type === _GridUtils.Ctrls.KDTelephone;\n    }).map(function (_col) {\n      return _col.code;\n    });\n    if (!countryList && phoneCols[0]) {\n      tablePoster.send({\n        type: 'invokeAction',\n        args: {\n          code: phoneCols[0],\n          actionName: 'getTelViaList',\n          params: []\n        }\n      });\n    }\n  }, [getTableConfigImmediately().getColumns()]);\n}\nvar _handleGridBodyChanged = function _handleGridBodyChanged(_ref5) {\n  var pageId = _ref5.pageId,\n    tableId = _ref5.tableId,\n    rowValidateTipClickHandler = _ref5.rowValidateTipClickHandler;\n  return function (mutationsList) {\n    var _iterator = _createForOfIteratorHelper(mutationsList),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var mutation = _step.value;\n        if (mutation.type === 'childList') {\n          var addedNodes = mutation.addedNodes;\n          _handleRowsValidateTipElement({\n            pageId: pageId,\n            tableId: tableId,\n            rowElements: addedNodes,\n            rowValidateTipClickHandler: rowValidateTipClickHandler\n          });\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n};\nfunction _handleRowsValidateTipElement(_ref6) {\n  var pageId = _ref6.pageId,\n    tableId = _ref6.tableId,\n    rowElements = _ref6.rowElements,\n    rowValidateTipClickHandler = _ref6.rowValidateTipClickHandler;\n  rowElements.forEach(function (tr) {\n    var _rowKey = tr.getAttribute('data-row-key');\n    if (_rowKey) {\n      var rowKey = _rowKey - 0;\n      var gridRowValidateData = (0, _appModelFunction.getGridValidateData)(pageId, [tableId, rowKey]);\n      if (gridRowValidateData) {\n        var height = tr.clientHeight;\n        var firstTd = tr.firstElementChild;\n        var appendTarget = (firstTd === null || firstTd === void 0 ? void 0 : firstTd.style.position) === 'sticky' ? firstTd : tr;\n        !tr.querySelector(\".\".concat(_table[\"default\"]['kd-row-validate-failed-tip'])) && appendTarget.appendChild(_createRowValidateFailedTipNode(rowValidateTipClickHandler(rowKey), height));\n      } else {\n        // 该行不存在，清空\n        var tipEle = tr.querySelector(\".\".concat(_table[\"default\"]['kd-row-validate-failed-tip']));\n        tipEle && tipEle.parentElement.removeChild(tipEle);\n      }\n    }\n  });\n}\nvar _createRowValidateTipClickHandler = function _createRowValidateTipClickHandler(_ref7) {\n  var pageId = _ref7.pageId,\n    tableId = _ref7.tableId,\n    type = _ref7.type,\n    gridType = _ref7.gridType,\n    tableApi = _ref7.tableApi,\n    controller = _ref7.controller,\n    tableConfig = _ref7.tableConfig;\n  return function (rowKey) {\n    return (0, _lodash.throttle)(function (e) {\n      e.stopPropagation();\n      // 提前推出编辑态\n      tableApi.startEditingCell({\n        rowKey: -1\n      });\n      var nextCell = _getNextValidateFailedCell({\n        pageId: pageId,\n        tableId: tableId,\n        rowKey: rowKey,\n        tableApi: tableApi,\n        controller: controller,\n        tableConfig: tableConfig\n      });\n      if (nextCell) {\n        tableApi.ensureColumnVisible(nextCell.column.code);\n        (0, _getColumnEditable.shouldStartEditingCell)(nextCell.column.type) ? tableApi.startEditingCellWithFocus({\n          rowKey: nextCell.rowKey,\n          code: nextCell.column.code\n        }) : tableApi.setFocusedCell({\n          rowKey: nextCell.rowKey,\n          code: nextCell.column.code\n        });\n      }\n      var controlType = (0, _dataService.getGridTrackingType)({\n        type: type,\n        gridType: gridType\n      });\n      (0, _dataService.trackingOfValidateClick)({\n        pageId: pageId,\n        controlId: tableId,\n        controlType: controlType,\n        actionKey: 'left'\n      });\n    }, 100);\n  };\n};\nfunction _getNextValidateFailedCell(_ref8) {\n  var pageId = _ref8.pageId,\n    tableId = _ref8.tableId,\n    rowKey = _ref8.rowKey,\n    controller = _ref8.controller,\n    tableApi = _ref8.tableApi,\n    tableConfig = _ref8.tableConfig;\n  var gridRowValidateData = (0, _appModelFunction.getGridValidateData)(pageId, [tableId, rowKey]);\n  var nextCell;\n  // 该行仅有一个校验失败单元格，直接设置为编辑\n  if (gridRowValidateData && gridRowValidateData.size === 1) {\n    var colKeys = [];\n    gridRowValidateData.map(function (v, k) {\n      return colKeys.push(k);\n    });\n    nextCell = {\n      column: (0, _columns.getColumnByCode)(colKeys[0], tableConfig.getColumns()),\n      rowKey: rowKey\n    };\n  } else {\n    var focusedCell = controller.getFocusedCell();\n    var nextCol;\n    var flatedColumns = (0, _array.flatColumns)(tableConfig.getColumns());\n    if (focusedCell && focusedCell.rowIndex !== -1 && focusedCell.rowKey === rowKey) {\n      var _flatedColumns$;\n      // 1. 从当前焦点往后找， 2.未找到则从头再找一遍\n      nextCol = (0, _validate.getNextValidateFailedCol)(focusedCell.code, flatedColumns, gridRowValidateData) || (0, _validate.getNextValidateFailedCol)((_flatedColumns$ = flatedColumns[0]) === null || _flatedColumns$ === void 0 ? void 0 : _flatedColumns$.code, flatedColumns, gridRowValidateData);\n    } else {\n      var _flatedColumns$2;\n      nextCol = (0, _validate.getNextValidateFailedCol)((_flatedColumns$2 = flatedColumns[0]) === null || _flatedColumns$2 === void 0 ? void 0 : _flatedColumns$2.code, flatedColumns, gridRowValidateData);\n    }\n    if (nextCol) {\n      nextCell = {\n        column: nextCol,\n        rowKey: rowKey\n      };\n    }\n  }\n  return nextCell;\n}\nfunction _createRowValidateFailedTipNode(handleClick, height) {\n  var node = document.createElement('span');\n  node.setAttribute('class', _table[\"default\"]['kd-row-validate-failed-tip']);\n  node.onclick = handleClick;\n  node.style.height = height + 'px'; // 兼容chrome低版本(70+)tr的relative属性失效，导致绝对定位不是相对于tr，需设置固定的高度\n  return node;\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useValidate.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/hooks/useWindowClick.js":
/*!********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/hooks/useWindowClick.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = useWindowClick;\nvar _react = __webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\");\nvar _element = __webpack_require__(/*! ../utils/element */ \"./src/component/web/DataGrid/KDTable/utils/element.js\");\nfunction useWindowClick(_ref) {\n  var readyed = _ref.readyed,\n    getInstance = _ref.getInstance,\n    containerEleRef = _ref.containerEleRef;\n  (0, _react.useEffect)(function () {\n    var handleWindowClick = function handleWindowClick(e) {\n      var _containerEleRef$curr;\n      // 点击iframe时，target是window对象，会引起contains报错\n      if (!(0, _element.isWindow)(e.target) && (!readyed || (_containerEleRef$curr = containerEleRef.current) !== null && _containerEleRef$curr !== void 0 && _containerEleRef$curr.contains(e.target))) {\n        return;\n      }\n      var instance = getInstance();\n      var focusedRow = instance.controller.getFocusedRow();\n\n      // 点击表格外面清除焦点行\n      var isTableHide = containerEleRef.current.offsetWidth === 0 && containerEleRef.current.offsetHeight === 0;\n      if (focusedRow.rowIndex !== -1 && !isTableHide) {\n        instance.controller.setFocusedRow({\n          rowIndex: -1\n        });\n      }\n    };\n    window.addEventListener('click', handleWindowClick, true);\n    return function () {\n      window.removeEventListener('click', handleWindowClick, true);\n    };\n  }, [readyed]);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/hooks/useWindowClick.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/mergeCell/mergeModel.js":
/*!********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/mergeCell/mergeModel.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.find.js */ \"../../node_modules/core-js/modules/es.array.find.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"../../node_modules/core-js/modules/es.array.reduce.js\");\n__webpack_require__(/*! core-js/modules/es.array.reverse.js */ \"../../node_modules/core-js/modules/es.array.reverse.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.object.values.js */ \"../../node_modules/core-js/modules/es.object.values.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _array = __webpack_require__(/*! ../../TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _columns = __webpack_require__(/*! ../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar MergeModel = /*#__PURE__*/function () {\n  // 记录每行各实体对应的rk分组\n  function MergeModel(_entryentities, data, _rk, suppressMergeSelect, _rowDetailType) {\n    var _this = this;\n    var _suppressRowSpan = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    _classCallCheck(this, MergeModel);\n    this._lastRow = null;\n    this.hasMergeRow = false;\n    // 是否存在融合行\n    this.entityRelationInfo = void 0;\n    this.rowOrder = [];\n    // 行的rk\n    this.spanDetails = {};\n    this.mergeRowKey = [];\n    this.groupBorderCol = [];\n    this.columnEntityMap = {};\n    // 记录列对应的entity\n    this.rowEntityGroup = {};\n    this.setSuppressMergeRows = function (suppressRowSpan) {\n      _this.suppressMergeRows = suppressRowSpan;\n    };\n    this.getRowSpan = function (rk, code) {\n      var originCode = (0, _columns.getOriginColumnCode)(code);\n      var entity = _this.columnEntityMap[originCode] || _this.entityRelationInfo.mainEntityKey; // 选择列没有code,默认取mainEntityKey\n      return _this.getRowSpanByEntity(rk, entity);\n    };\n    this._getEntitySpan = function (entity, lastRowData, lastRowSpan, rowData, currentRowSpan) {\n      var pkFieldName = entity.pkFieldName,\n        parentKey = entity.parentKey,\n        key = entity.key,\n        groupIndex = entity.groupIndex;\n      var _this$entityRelationI = _this.entityRelationInfo,\n        entities = _this$entityRelationI.entities,\n        mainEntityKey = _this$entityRelationI.mainEntityKey;\n      var span = 1;\n      if (currentRowSpan[groupIndex]) return currentRowSpan[groupIndex];\n      if (lastRowData && rowData[pkFieldName] && lastRowData[pkFieldName] === rowData[pkFieldName]) {\n        if (key === mainEntityKey) {\n          span = lastRowSpan[groupIndex] + 1;\n        } else {\n          var parentSpan = _this._getEntitySpan(entities[parentKey], lastRowData, lastRowSpan, rowData, currentRowSpan);\n          if (parentSpan > 1) {\n            span = lastRowSpan[groupIndex] + 1;\n          }\n        }\n      }\n      return span;\n    };\n    this._getRowEntityGroup = function () {\n      var lastEntityGroup = {};\n      var lastEntityRowSpan = {};\n      return _this.rowOrder.reduce(function (rowEntityGroup, rk, index) {\n        rowEntityGroup[rk] = Object.keys(_this.entityRelationInfo.entities).reduce(function (entityGroup, entity) {\n          var group = [];\n          var lastGroup = lastEntityGroup[entity] || [];\n          var lastRowSpan = lastEntityRowSpan[entity] || 1;\n          var rowSpan = _this.getRowSpanByEntity(rk, entity);\n          if (lastRowSpan > 1) {\n            // 被融合的行,rk分组直接取上一行的\n            group = lastGroup;\n          } else {\n            // 获取当前行对应的rk分组\n            for (var i = index; i < index + rowSpan; i++) {\n              var _rk2 = _this.rowOrder[i];\n              group.push(_rk2);\n            }\n          }\n          entityGroup[entity] = group;\n          lastEntityGroup[entity] = group;\n          lastEntityRowSpan[entity] = rowSpan;\n          return entityGroup;\n        }, {});\n        return rowEntityGroup;\n      }, {});\n    };\n    this._isEnableMerged = function (entryentities, rowDetailType) {\n      // 满足条件不融合\n      if (rowDetailType) {\n        return false;\n      }\n      // 满足条件融合\n      if (entryentities.length > 1) {\n        return true;\n      }\n      // 默认不融合\n      return false;\n    };\n    this._updateColumnEntityMap = function (columnsMeta, seqKey) {\n      var leafEntityKey = _this.entityRelationInfo.leafEntityKey;\n      function getColumnEntity(columnsMeta) {\n        var initMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        return columnsMeta.reduce(function (map, column) {\n          var _column$get;\n          var entity = column.get('entity');\n          var dataIndex = column.get('dataIndex');\n          // 合并列表字段，所有字段都属于同一个实体才融合单元格内容\n          if (((_column$get = column.get('items')) === null || _column$get === void 0 ? void 0 : _column$get.size) > 0) {\n            var index = 0;\n            var preCol = column.getIn(['items', index++]);\n            var isSameEntity = true;\n            while (index < column.get('items').size && isSameEntity) {\n              var curCol = column.getIn(['items', index++]);\n              isSameEntity = preCol.get('entity') === curCol.get('entity');\n            }\n            if (!isSameEntity) {\n              entity = leafEntityKey;\n            }\n          }\n          // 序号列特殊处理\n          if (dataIndex === seqKey) {\n            entity = leafEntityKey;\n          }\n          map[dataIndex] = entity;\n          if (column.get('children')) {\n            return getColumnEntity(column.get('children'), map);\n          }\n          return map;\n        }, initMap);\n      }\n      _this.columnEntityMap = getColumnEntity(columnsMeta);\n    };\n    // entityRelationInfo信息不会重置\n    this._reset = function () {\n      _this._lastRow = null;\n      _this.hasMergeRow = false; // 是否存在融合行\n      _this.rowOrder = []; // 行的rk\n      _this.spanDetails = {};\n      _this.mergeRowKey = [];\n      _this.groupBorderCol = [];\n      _this.columnEntityMap = {}; // 记录列对应的entity\n      _this.rowEntityGroup = {}; // 记录每行各实体对应的rk分组\n    };\n    this.suppressMergeSelect = suppressMergeSelect;\n    this.suppressMergeRows = _suppressRowSpan;\n    this.updateMergeModel(_entryentities, data, _rk, _rowDetailType);\n  }\n  _createClass(MergeModel, [{\n    key: \"updateMergeModel\",\n    value: function updateMergeModel(entryentities, data, rk, rowDetailType) {\n      /** entityRelationInfo={entities:{},mainEntityKey: ,maxLevel} */\n      // 无论是否有融合行都需要初始化该参数\n      this.entityRelationInfo = this._buildEntityRelation(entryentities);\n      if (!this._isEnableMerged(entryentities, rowDetailType)) {\n        this._reset();\n        return;\n      }\n      var _this$_getMergeInfo = this._getMergeInfo(data, rk),\n        spanDetails = _this$_getMergeInfo.spanDetails,\n        rowOrder = _this$_getMergeInfo.rowOrder;\n      this.spanDetails = spanDetails;\n      this.rowOrder = rowOrder;\n      this.rowEntityGroup = this._getRowEntityGroup();\n    }\n  }, {\n    key: \"setSuppressMergeSelect\",\n    value: function setSuppressMergeSelect(suppressMergeSelect) {\n      this.suppressMergeSelect = suppressMergeSelect;\n    }\n  }, {\n    key: \"getRowSpanByEntity\",\n    value: function getRowSpanByEntity(rk, entity) {\n      if (this.entityRelationInfo.entities[entity]) {\n        var groupIndex = this.entityRelationInfo.entities[entity].groupIndex;\n        var span = this.spanDetails[\"r_\".concat(rk)] || [];\n        return span[groupIndex] || 1;\n      }\n      return 1;\n    }\n  }, {\n    key: \"getRowGroup\",\n    value: function getRowGroup(rk, code) {\n      var _this$rowEntityGroup$;\n      var originCode = (0, _columns.getOriginColumnCode)(code);\n      var entity = this.columnEntityMap[originCode] || this.entityRelationInfo.mainEntityKey; // 选择列没有code,默认取mainEntityKey\n      return ((_this$rowEntityGroup$ = this.rowEntityGroup[rk]) === null || _this$rowEntityGroup$ === void 0 ? void 0 : _this$rowEntityGroup$[entity]) || [rk];\n    }\n  }, {\n    key: \"getMergeRowKey\",\n    value: function getMergeRowKey() {\n      return this.mergeRowKey;\n    }\n  }, {\n    key: \"updateBorderCols\",\n    value: function updateBorderCols(columns, columnsMeta, seqKey) {\n      var _this2 = this;\n      if (!this.hasMergeRow) {\n        return;\n      }\n      this._updateColumnEntityMap(columnsMeta, seqKey);\n      var lastCol;\n      this.groupBorderCol = [];\n      (0, _array.childrenLoop)(columns, function (column) {\n        var code = column.code;\n        if (column.hide) return;\n        var originCode = (0, _columns.getOriginColumnCode)(code);\n        var entity = _this2.columnEntityMap[originCode] || '';\n        if (lastCol && lastCol.entity !== entity) {\n          _this2.groupBorderCol.push(lastCol.code);\n        }\n        lastCol = {\n          code: code,\n          entity: entity\n        };\n      });\n      // 最后一列是不是叶子实体\n      if (lastCol && lastCol.entity !== this.entityRelationInfo.leafEntityKey && this.hasMergeRow) {\n        this.groupBorderCol.push(lastCol.code);\n      }\n    }\n  }, {\n    key: \"_buildEntityRelation\",\n    value: function _buildEntityRelation(entryentities) {\n      var relationInfo = {\n        entities: {},\n        maxLevel: 0\n      };\n      var maxLevel = 0;\n      var lookup = function lookup(entt, level) {\n        if (entt.parentKey === '') return level;\n        var parentEntt = entryentities.find(function (_ref) {\n          var key = _ref.key;\n          return key === entt.parentKey;\n        });\n        if (parentEntt == null) return level;\n        return lookup(parentEntt, level + 1);\n      };\n      entryentities.forEach(function (entt, index) {\n        var level = lookup(entt, 1);\n        if (level >= maxLevel) {\n          relationInfo.leafEntityKey = entt.key;\n          maxLevel = level;\n        }\n        if (entt.parentKey === '') relationInfo.mainEntityKey = entt.key;\n        relationInfo.entities[entt.key] = {\n          key: entt.key,\n          parentKey: entt.parentKey,\n          pkFieldName: entt.pkFieldName,\n          level: level,\n          groupIndex: index\n        };\n      });\n      relationInfo.maxLevel = maxLevel;\n      return relationInfo;\n    }\n  }, {\n    key: \"_getMergeInfo\",\n    value: function _getMergeInfo(data, rk) {\n      var _this3 = this;\n      var spanDetails = {};\n      var rowOrder = [];\n      var lastRowData;\n      var lastRowSpan = [];\n      this.mergeRowKey = [];\n      this.hasMergeRow = false;\n      if (data) {\n        _toConsumableArray(data).reverse().forEach(function (rowData) {\n          var currentRowSpan = [];\n          var rowIndex = rowData[rk];\n          Object.values(_this3.entityRelationInfo.entities).forEach(function (entity) {\n            var groupIndex = entity.groupIndex;\n            var rowSpan = _this3._getEntitySpan(entity, lastRowData, lastRowSpan, rowData, currentRowSpan);\n            currentRowSpan[groupIndex] = rowSpan;\n            if (rowSpan > 1) {\n              _this3.hasMergeRow = true;\n              if (entity.key === _this3.entityRelationInfo.mainEntityKey) {\n                _this3.mergeRowKey.push(rowData[rk]);\n              }\n            }\n          });\n          lastRowData = rowData;\n          lastRowSpan = currentRowSpan;\n          rowOrder.unshift(rowIndex);\n          spanDetails[\"r_\".concat(rowIndex)] = currentRowSpan;\n        });\n      }\n      return {\n        spanDetails: spanDetails,\n        rowOrder: rowOrder\n      };\n    }\n  }]);\n  return MergeModel;\n}();\nvar _default = exports[\"default\"] = MergeModel;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/mergeCell/mergeModel.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/post/tablePoster.js":
/*!****************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/post/tablePoster.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.attachmentClick = attachmentClick;\nexports.dateChangeYear = dateChangeYear;\nexports.dispatchAction = dispatchAction;\nexports.getPlainText = getPlainText;\nexports.handleEditingRowClick = handleEditingRowClick;\nexports.handleEditorRowClick = handleEditorRowClick;\nexports.invokeAction = invokeAction;\nexports.invokeActionDisableDispose = invokeActionDisableDispose;\nexports.invokeActionSingle = invokeActionSingle;\nexports.postAutoAddRow = postAutoAddRow;\nexports.postBaseDataListLookUp = postBaseDataListLookUp;\nexports.postBatchInputClick = postBatchInputClick;\nexports.postBtnClick = postBtnClick;\nexports.postCheckedRowSelection = postCheckedRowSelection;\nexports.postClickTipsLink = void 0;\nexports.postDetailBtnClick = postDetailBtnClick;\nexports.postFilterData = postFilterData;\nexports.postGridInfo = void 0;\nexports.postHyperLinkClick = postHyperLinkClick;\nexports.postImageClick = postImageClick;\nexports.postMultiHyperLinkClick = postMultiHyperLinkClick;\nexports.postOperationItemClick = postOperationItemClick;\nexports.postPersonalizedColumnWidth = postPersonalizedColumnWidth;\nexports.postPreviewInNewTab = void 0;\nexports.postRowClick = postRowClick;\nexports.postRowSelection = postRowSelection;\nexports.postShowFormByTips = void 0;\nexports.sendCustomRequest = sendCustomRequest;\nexports.seqOperationClick = seqOperationClick;\nexports.setColAllChecked = void 0;\nexports.setFilterStatus = setFilterStatus;\nexports.updateCellValue = updateCellValue;\nexports.viewDetailClick = viewDetailClick;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\nvar _global = _interopRequireWildcard(__webpack_require__(/*! @/global */ \"./src/global/index.js\"));\nvar poster = _interopRequireWildcard(__webpack_require__(/*! ./poster */ \"./src/component/web/DataGrid/KDTable/post/poster.js\"));\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nvar _columns = __webpack_require__(/*! ../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _row = __webpack_require__(/*! ../utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nvar _fieldType = _interopRequireDefault(__webpack_require__(/*! @/constant/fieldType */ \"./src/constant/fieldType.js\"));\nvar _tooltipaction = __webpack_require__(/*! @/action/tooltipaction */ \"./src/action/tooltipaction.js\");\nvar _attachmentpanelaction = __webpack_require__(/*! @/action/attachmentpanelaction */ \"./src/action/attachmentpanelaction.js\");\nvar _params = __webpack_require__(/*! ../../TableHelper/util/params */ \"./src/component/web/DataGrid/TableHelper/util/params.js\");\nvar _server = __webpack_require__(/*! @/action/actionname/control/datePicker/server */ \"./src/action/actionname/control/datePicker/server/index.js\");\nvar _ajaxState = __webpack_require__(/*! @/api/ajaxState */ \"./src/api/ajaxState.js\");\nvar proxy = _interopRequireWildcard(__webpack_require__(/*! @/proxy/formproxy */ \"./src/proxy/formproxy.js\"));\nvar _cell = __webpack_require__(/*! ../utils/cell */ \"./src/component/web/DataGrid/KDTable/utils/cell.js\");\nvar _client = __webpack_require__(/*! @/action/actionname/global/custom/client */ \"./src/action/actionname/global/custom/client/index.js\");\nvar _requestParamsUtil = __webpack_require__(/*! @/util/requestParamsUtil */ \"./src/util/requestParamsUtil.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction postClick(getterParams) {\n  var getActionByKey = getterParams.getActionByKey,\n    getTableConfigImmediately = getterParams.getTableConfigImmediately;\n  var config = getTableConfigImmediately();\n  var pageId = config.pageId,\n    parentId = config.parentId,\n    id = config.id;\n  poster.postClick({\n    getActionByKey: getActionByKey,\n    pageId: pageId,\n    parentId: parentId,\n    id: id\n  })();\n}\nfunction postItemClick(getterParams, args) {\n  var getActionByKey = getterParams.getActionByKey,\n    getTableConfigImmediately = getterParams.getTableConfigImmediately;\n  var config = getTableConfigImmediately();\n  var pageId = config.pageId,\n    parentId = config.parentId,\n    id = config.id;\n  poster.postItemClick({\n    getActionByKey: getActionByKey,\n    pageId: pageId,\n    parentId: parentId,\n    id: id\n  })(args);\n}\nfunction postImageClick(getterParams) {\n  postClick(getterParams);\n}\nfunction postOperationItemClick(getterParams, args) {\n  var needSelectRow = args.needSelectRow;\n  needSelectRow && postRowClick(getterParams, args);\n  postItemClick(getterParams, args);\n}\nfunction postHyperLinkClick(getterParams, args) {\n  var getActionByKey = getterParams.getActionByKey,\n    getTableConfigImmediately = getterParams.getTableConfigImmediately;\n  var config = getTableConfigImmediately();\n  var pageId = config.pageId,\n    parentId = config.parentId,\n    id = config.id,\n    rowKey = config.rowKey,\n    entities = config.entities;\n  var record = args.record,\n    column = args.column;\n  var code = column.code,\n    _column$extendParams = column.extendParams,\n    extendParams = _column$extendParams === void 0 ? {} : _column$extendParams;\n  var originColumnCode = (0, _columns.getOriginColumnCode)(code);\n  var pks = (0, _params.getRecordPrimaryKeys)(record, entities);\n  var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n  // todo: 应该考虑其他方式获取子表标识\n  if (!extendParams.isDetailTalbeCol) {\n    postRowClick(getterParams, args);\n    invokeControlMethodOnly({\n      pageId: pageId,\n      key: parentId || id\n    }, 'hyperLinkClick', [originColumnCode, record && record[rowKey]]);\n  } else {\n    // 子表超链接点击传父表id和子表id 2022.12.28\n    invokeControlMethodOnly({\n      pageId: pageId,\n      key: parentId || id\n    }, 'entryHyperLinkClick', [].concat(_toConsumableArray(pks), [originColumnCode]));\n  }\n}\nfunction postPersonalizedColumnWidth(getterParams) {\n  var getTableConfigImmediately = getterParams.getTableConfigImmediately,\n    getTableOptions = getterParams.getTableOptions;\n  var config = getTableConfigImmediately();\n  var pageId = config.pageId,\n    id = config.id;\n  var tableOptions = getTableOptions();\n  var personalizedColumnWidth = tableOptions.getPersonalizedColumnWidth();\n  poster.postPersonalizedColumnWidth(pageId, id)(personalizedColumnWidth);\n}\n\n// 表头tips显示表单\nvar postShowFormByTips = exports.postShowFormByTips = function postShowFormByTips(params, args) {\n  var formId = args.formId,\n    targetCtrlKey = args.targetCtrlKey,\n    triggerType = args.triggerType;\n  var getTableConfigImmediately = params.getTableConfigImmediately,\n    getDispatch = params.getDispatch;\n  var dispatch = getDispatch();\n  var _getTableConfigImmedi = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi.pageId,\n    id = _getTableConfigImmedi.id;\n  dispatch((0, _tooltipaction.showFormByTips)(pageId, id, formId, targetCtrlKey, triggerType));\n};\n\n// 单据体附件预览\nvar postPreviewInNewTab = exports.postPreviewInNewTab = function postPreviewInNewTab(params, args) {\n  var curEntryRow = args.curEntryRow,\n    activedIndex = args.activedIndex,\n    sortedUids = args.sortedUids,\n    code = args.code;\n  var getTableConfigImmediately = params.getTableConfigImmediately,\n    getDispatch = params.getDispatch;\n  var dispatch = getDispatch();\n  var _getTableConfigImmedi2 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi2.pageId;\n  // 将当前附件所在表单的fid，appid等参数传给后端，新页签打开后，后端将该参数传回。用于后端判断新页签预览的附件是否需要显示水印\n  var requestParams = (0, _requestParamsUtil.getRequestParams)({\n    pageId: pageId\n  });\n  dispatch((0, _attachmentpanelaction.previewInNewTab)({\n    pageId: pageId,\n    key: code\n  }, [{\n    curEntryRow: curEntryRow,\n    activedIndex: activedIndex,\n    sortedUids: sortedUids,\n    requestParams: requestParams\n  }]));\n};\n// 表头tips超链接\nvar postClickTipsLink = exports.postClickTipsLink = function postClickTipsLink(params, args) {\n  var code = args.code;\n  var originCode = (0, _columns.getOriginColumnCode)(code);\n  var getTableConfigImmediately = params.getTableConfigImmediately;\n  var _getTableConfigImmedi3 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi3.pageId;\n  _global[\"default\"][_global.INVOKE_CUSTOM_EVENT](pageId, '', [_client.CUSTOM_EVENT_CLICK_TIPS_LINK, '', originCode]);\n};\n// 可选择列头点击\nvar setColAllChecked = exports.setColAllChecked = function setColAllChecked(params, args) {\n  var colId = args.colId,\n    checked = args.checked,\n    getTableApi = args.getTableApi;\n  var getInstance = params.getInstance,\n    getActionByKey = params.getActionByKey,\n    getTableConfigImmediately = params.getTableConfigImmediately;\n  var _getTableConfigImmedi4 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi4.pageId,\n    id = _getTableConfigImmedi4.id;\n  // 当前单据体类型为单据体，才进行操作，否则不操作\n  var instance = getInstance();\n  var curRows = instance.controller.getRows();\n  // 如果没有过滤，则直接使用 setColAllChecked 处理，否则用updatecell\n  if (instance.tableModel.getIsFilterActive()) {\n    var buildPoster = function buildPoster(rows) {\n      var res = [];\n      for (var i = 0; i < rows.length; i++) {\n        var curRow = rows[i];\n        var _isCellLock = getTableApi().isCellLock(colId, curRow);\n        !_isCellLock && res.push({\n          k: colId,\n          r: curRow.rk,\n          v: checked\n        });\n      }\n      return res;\n    };\n    // 只操作当前展示行，旧单据体区分是够过滤，过滤使用updatecellValue,未过滤使用setColAllChecked，新单据体统一使用updatecellValue\n    var addGirdPostData = getActionByKey('addGirdPostData');\n    var invokeUpdateCells = getActionByKey('invokeUpdateCells');\n    var post = buildPoster(curRows);\n    addGirdPostData(pageId, id, post);\n    invokeUpdateCells({\n      pageId: pageId,\n      key: id\n    });\n    // batchInvokeUpdateCells && batchInvokeUpdateCells({ pageId, key: colId }, [args])\n  } else {\n    var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n    invokeControlMethodOnly({\n      pageId: pageId,\n      key: id\n    }, 'setColAllChecked', [colId, checked]);\n  }\n};\nvar postGridInfo = exports.postGridInfo = function postGridInfo(params, args) {\n  var gridInfo = args.gridInfo;\n  var getTableConfigImmediately = params.getTableConfigImmediately,\n    getActionByKey = params.getActionByKey;\n  var _getTableConfigImmedi5 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi5.pageId;\n  var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n  invokeControlMethodOnly({\n    pageId: pageId\n  }, _const.SAVE_SETTING, [gridInfo]);\n};\nfunction getPlainText(params, args) {\n  var getTableConfigImmediately = params.getTableConfigImmediately,\n    getActionByKey = params.getActionByKey;\n  var column = args.column,\n    record = args.record;\n  var code = column.code;\n  var originCode = (0, _columns.getOriginColumnCode)(code);\n  var _getTableConfigImmedi6 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi6.pageId,\n    parentId = _getTableConfigImmedi6.parentId,\n    id = _getTableConfigImmedi6.id,\n    rowKey = _getTableConfigImmedi6.rowKey,\n    gridType = _getTableConfigImmedi6.gridType;\n  var r = record[rowKey];\n  var invokeControlMethodSingle = getActionByKey('invokeControlMethodSingle');\n  if (gridType === _const.GRID_TYPE.listViewGrid || gridType === _const.GRID_TYPE.virtualViewGrid) {\n    var pks = []; // 后端取数变更，无需传实体数据，但格式需保持不变\n    invokeControlMethodSingle({\n      pageId: pageId,\n      key: parentId || id\n    }, 'getPlainText', [r, originCode, pks]);\n  } else {\n    invokeControlMethodSingle({\n      pageId: pageId,\n      key: originCode\n    }, 'getPlainText', [r]);\n  }\n}\nfunction postMultiHyperLinkClick(getterParams, args) {\n  var getTableConfigImmediately = getterParams.getTableConfigImmediately,\n    getActionByKey = getterParams.getActionByKey;\n  var linkKey = args.linkKey,\n    column = args.column,\n    record = args.record;\n  var code = column.code;\n  var originCode = (0, _columns.getOriginColumnCode)(code);\n  var _getTableConfigImmedi7 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi7.pageId,\n    parentId = _getTableConfigImmedi7.parentId,\n    rowKey = _getTableConfigImmedi7.rowKey;\n  var r = record[rowKey];\n  var mulHyperLinkClick = getActionByKey('mulHyperLinkClick');\n  postRowClick(getterParams, args);\n  mulHyperLinkClick({\n    pageId: pageId,\n    key: parentId\n  }, originCode, r, linkKey);\n}\nfunction updateCellValue(getterParams, args) {\n  var getActionByKey = getterParams.getActionByKey,\n    getTableConfigImmediately = getterParams.getTableConfigImmediately,\n    getTableOptions = getterParams.getTableOptions,\n    getInstance = getterParams.getInstance;\n  var config = getTableConfigImmediately();\n  var pageId = config.pageId,\n    parentId = config.parentId,\n    id = config.id,\n    rowKey = config.rowKey;\n  var isListView = getTableOptions().getGridType() === 'VIEWGRID';\n  var cellChange = getActionByKey('cellChange');\n  var updateGridData = getActionByKey('updateGridData');\n  var invokeCellChangeImmediately = getActionByKey('invokeCellChangeImmediately');\n  var column = args.column,\n    record = args.record,\n    v = args.v,\n    storeValue = args.storeValue,\n    _args$fireUpdEvt = args.fireUpdEvt,\n    fireUpdEvt = _args$fireUpdEvt === void 0 ? true : _args$fireUpdEvt;\n  var code = column.code,\n    _column$extendParams2 = column.extendParams,\n    extendParams = _column$extendParams2 === void 0 ? {} : _column$extendParams2;\n  var editor = extendParams.editor;\n  var model = {\n    pageId: pageId,\n    key: parentId || id,\n    fireUpdEvt: fireUpdEvt,\n    isPasswordbox: (editor === null || editor === void 0 ? void 0 : editor.type) === _fieldType[\"default\"].Password\n  };\n  var rowKeyValue = record[rowKey];\n  if (isListView) {\n    var entities = config.entities;\n    var _getInstance = getInstance(),\n      mergeModel = _getInstance.mergeModel;\n    var primaryKeys = (0, _params.getRecordPrimaryKeys)(record, entities);\n    var range = _getMergeCellRange(mergeModel, rowKeyValue, code);\n    invokeCellChangeImmediately(model, [{\n      r: rowKeyValue,\n      k: code,\n      v: v,\n      range: range,\n      pks: primaryKeys\n    }]);\n  } else {\n    var updateGridCellValue = storeValue === undefined ? v : storeValue;\n    var updateGridCellRrgs = (0, _cell.getUpdateGridCellArgs)(record, column, updateGridCellValue, {\n      getTableConfigImmediately: getTableConfigImmediately,\n      getInstance: getInstance\n    });\n    var cellValue = (0, _cell.getPostCellValue)(v, {\n      pageId: pageId,\n      id: id,\n      code: code\n    });\n    var newPostArgs = {\n      r: rowKeyValue,\n      k: code,\n      v: cellValue\n    };\n    updateGridData({\n      pageId: pageId,\n      rowKey: rowKey,\n      key: id\n    }, updateGridCellRrgs);\n    cellChange(model, [newPostArgs]);\n  }\n}\nfunction _getMergeCellRange(mergeModel, rowKeyValue, code) {\n  if (mergeModel) {\n    var currentGroup = mergeModel.getRowGroup(rowKeyValue, code);\n    if (currentGroup.length > 1) {\n      return [currentGroup[0], currentGroup[currentGroup.length - 1]];\n    }\n  }\n}\n\n// 阻止冒泡后主动调用的行点击事件\nfunction _postRowClick(getterParams, args, _ref) {\n  var selectedRowKeys = _ref.selectedRowKeys,\n    _ref$isCheck = _ref.isCheck,\n    isCheck = _ref$isCheck === void 0 ? true : _ref$isCheck;\n  var getInstance = getterParams.getInstance,\n    getTableOptions = getterParams.getTableOptions,\n    getActionByKey = getterParams.getActionByKey,\n    getDispatch = getterParams.getDispatch,\n    getTableConfigImmediately = getterParams.getTableConfigImmediately;\n  var tableConfig = getTableConfigImmediately();\n  var tableOptions = getTableOptions();\n  var postCols = tableOptions.getDataOptionsProperty('postCols');\n  var dispatch = getDispatch();\n  var instance = getInstance();\n  var pageId = tableConfig.pageId,\n    parentId = tableConfig.parentId,\n    id = tableConfig.id,\n    gridType = tableConfig.gridType,\n    isScrollLoad = tableConfig.isScrollLoad;\n  var _args$rowKeyValue = args.rowKeyValue,\n    rowKeyValue = _args$rowKeyValue === void 0 ? -1 : _args$rowKeyValue,\n    column = args.column,\n    isEditingTrigger = args.isEditingTrigger;\n  var selectedRows = instance.controller.getRows(selectedRowKeys);\n  // 发送行点击事件\n  var key = parentId || id;\n\n  // 列表，报表差量选中逻辑\n  var hasSelectAllRow = tableOptions.getSelectAllRow();\n  if (gridType === 'VIEWGRID' && isScrollLoad || hasSelectAllRow) {\n    // 操作项点击都是选中，没有反选\n    var methodName = isCheck ? 'addRowSelection' : 'clearRowSelection';\n    var _instance = getInstance();\n    var pendingSelectedRowKeys = (0, _row.getPendingSelectedRowKeys)({\n      getInstance: getInstance,\n      rowKeyValue: rowKeyValue,\n      column: column\n    });\n    var pendingSelectedRows = _instance.controller.getRows(pendingSelectedRowKeys);\n    poster.postRowSelection({\n      pageId: pageId,\n      key: key,\n      getActionByKey: getActionByKey,\n      postCols: postCols,\n      dispatch: dispatch,\n      gridType: gridType\n    })({\n      methodName: methodName,\n      pendingSelectedRowKeys: pendingSelectedRowKeys,\n      pendingSelectedRows: pendingSelectedRows,\n      rowKeyValue: rowKeyValue,\n      column: column\n    });\n    return;\n  }\n  poster.postRowClick({\n    pageId: pageId,\n    key: key,\n    dispatch: dispatch,\n    getActionByKey: getActionByKey,\n    postCols: postCols,\n    getTableOptions: getTableOptions\n  })({\n    selectedRows: selectedRows,\n    selectedRowKeys: selectedRowKeys,\n    column: column,\n    rowKeyValue: rowKeyValue,\n    isEditingTrigger: isEditingTrigger\n  });\n}\nfunction postRowSelection(getterParams, args) {\n  var getInstance = getterParams.getInstance,\n    getTableOptions = getterParams.getTableOptions,\n    getActionByKey = getterParams.getActionByKey,\n    getDispatch = getterParams.getDispatch,\n    getTableConfigImmediately = getterParams.getTableConfigImmediately;\n  var tableConfig = getTableConfigImmediately();\n  var tableOptions = getTableOptions();\n  var postCols = tableOptions.getDataOptionsProperty('postCols');\n  var dispatch = getDispatch();\n  var instance = getInstance();\n  var pageId = tableConfig.pageId,\n    parentId = tableConfig.parentId,\n    id = tableConfig.id;\n  var _args$rowKeyValue2 = args.rowKeyValue,\n    rowKeyValue = _args$rowKeyValue2 === void 0 ? -1 : _args$rowKeyValue2,\n    column = args.column,\n    selectedRowKeys = args.selectedRowKeys,\n    isDoubleClick = args.isDoubleClick;\n  var selectedRows = instance.controller.getRows(selectedRowKeys);\n  // 发送行点击事件\n  var key = parentId || id;\n  if (isDoubleClick) {\n    poster.postRowDoubleClick({\n      pageId: pageId,\n      key: key,\n      dispatch: dispatch,\n      getActionByKey: getActionByKey,\n      postCols: postCols\n    })({\n      selectedRows: selectedRows,\n      selectedRowKeys: selectedRowKeys,\n      column: column,\n      rowKeyValue: rowKeyValue\n    });\n  } else {\n    poster.postRowClick({\n      pageId: pageId,\n      key: key,\n      dispatch: dispatch,\n      getActionByKey: getActionByKey,\n      postCols: postCols,\n      getTableOptions: getTableOptions\n    })({\n      selectedRows: selectedRows,\n      selectedRowKeys: selectedRowKeys,\n      column: column,\n      rowKeyValue: rowKeyValue\n    });\n  }\n}\nfunction postRowClick(getterParams, args) {\n  var getInstance = getterParams.getInstance,\n    getTableConfigImmediately = getterParams.getTableConfigImmediately;\n  var _args$rowKeyValue3 = args.rowKeyValue,\n    rowKeyValue = _args$rowKeyValue3 === void 0 ? -1 : _args$rowKeyValue3,\n    column = args.column;\n  var instance = getInstance();\n  var selectedRowKeys = (0, _row.getPostSelectedRowKeys)({\n    getInstance: getInstance,\n    getTableConfigImmediately: getTableConfigImmediately,\n    rowKeyValue: rowKeyValue,\n    column: column\n  });\n  instance.controller.setSelectedRows(selectedRowKeys);\n\n  // 这里触发的行点击事件默认都是选中\n  _postRowClick(getterParams, args, {\n    selectedRowKeys: selectedRowKeys,\n    isCheck: true\n  });\n}\n\n// 主动调用允许反选的行点击\nfunction postCheckedRowSelection(getterParams, args) {\n  var selectedRowKeys = args.selectedRowKeys,\n    isCheck = args.isCheck;\n  _postRowClick(getterParams, args, {\n    selectedRowKeys: selectedRowKeys,\n    isCheck: isCheck\n  });\n}\nfunction handleEditorRowClick(getterParams, args) {\n  var getTableOptions = getterParams.getTableOptions;\n  var tableOptions = getTableOptions();\n  // 列表进入行编辑不发送行点击事件\n  if (tableOptions.getGridType() !== _const.GRID_TYPE.listViewGrid) {\n    postRowClick(getterParams, args);\n  }\n}\n\n// 单据体进入编辑态触发的行点击事件\nfunction handleEditingRowClick(getterParams, args) {\n  var getTableOptions = getterParams.getTableOptions;\n  var tableOptions = getTableOptions();\n  // 列表进入行编辑不发送行点击事件\n  if (tableOptions.getGridType() !== _const.GRID_TYPE.listViewGrid) {\n    var _args = _objectSpread(_objectSpread({}, args), {}, {\n      isEditingTrigger: true\n    });\n    postRowClick(getterParams, _args);\n  }\n}\nfunction postBtnClick(getterParams, args) {\n  var code = args.code;\n  var getTableConfigImmediately = getterParams.getTableConfigImmediately,\n    getActionByKey = getterParams.getActionByKey;\n  var _getTableConfigImmedi8 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi8.pageId;\n  var gridBtnClick = getActionByKey('gridBtnClick');\n  gridBtnClick({\n    pageId: pageId,\n    key: code\n  });\n}\nfunction postBatchInputClick(getterParams, args) {\n  var code = args.code;\n  var getTableConfigImmediately = getterParams.getTableConfigImmediately,\n    getActionByKey = getterParams.getActionByKey;\n  var _getTableConfigImmedi9 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi9.pageId;\n  var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n  invokeControlMethodOnly({\n    pageId: pageId,\n    key: code\n  }, 'batchInput', []);\n}\nfunction postDetailBtnClick(getterParams, args) {\n  var code = args.code,\n    editable = args.editable;\n  var getTableConfigImmediately = getterParams.getTableConfigImmediately,\n    getActionByKey = getterParams.getActionByKey;\n  var _getTableConfigImmedi10 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi10.pageId;\n  var gridDetailBtnClick = getActionByKey('gridDetailBtnClick');\n  gridDetailBtnClick({\n    pageId: pageId,\n    key: code\n  }, [{\n    lock: !editable\n  }]);\n}\nfunction dateChangeYear(getterParams, args) {\n  var getTableConfigImmediately = getterParams.getTableConfigImmediately,\n    getActionByKey = getterParams.getActionByKey;\n  var code = args.code,\n    years = args.years;\n  var _getTableConfigImmedi11 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi11.pageId;\n  var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n  invokeControlMethodOnly({\n    pageId: pageId,\n    key: code\n  }, _server.CHANGE_YEAR, years);\n}\nfunction invokeActionSingle(getterParams, args) {\n  var getTableConfigImmediately = getterParams.getTableConfigImmediately,\n    getActionByKey = getterParams.getActionByKey;\n  var code = args.code,\n    actionName = args.actionName,\n    params = args.params;\n  var _getTableConfigImmedi12 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi12.pageId;\n  var invokeControlMethodSingle = getActionByKey('invokeControlMethodSingle');\n  invokeControlMethodSingle({\n    pageId: pageId,\n    key: code\n  }, actionName, params);\n}\nfunction invokeAction(getterParams, args) {\n  var getTableConfigImmediately = getterParams.getTableConfigImmediately,\n    getActionByKey = getterParams.getActionByKey;\n  var code = args.code,\n    actionName = args.actionName,\n    params = args.params;\n  var _getTableConfigImmedi13 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi13.pageId;\n  var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n  invokeControlMethodOnly({\n    pageId: pageId,\n    key: code\n  }, actionName, params);\n}\nfunction invokeActionDisableDispose(getterParams, args) {\n  var getTableConfigImmediately = getterParams.getTableConfigImmediately,\n    getActionByKey = getterParams.getActionByKey;\n  var code = args.code,\n    actionName = args.actionName,\n    params = args.params;\n  var _getTableConfigImmedi14 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi14.pageId;\n  var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n  var requestKey = (0, _ajaxState.makeAjaxKey)(pageId, code, 'uploadResult');\n  proxy.disableDisposeAction(requestKey);\n  invokeControlMethodOnly({\n    pageId: pageId,\n    key: code\n  }, actionName, params);\n  proxy.allowDisposeAction(requestKey);\n}\nfunction dispatchAction(getterParams, args) {\n  var getDispatch = getterParams.getDispatch;\n  var action = args.action;\n  var dispatch = getDispatch();\n  dispatch(action);\n}\nfunction seqOperationClick(getterParams, args) {\n  var getTableConfigImmediately = getterParams.getTableConfigImmediately,\n    getActionByKey = getterParams.getActionByKey;\n  var operationName = args.operationName;\n  var _getTableConfigImmedi15 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi15.pageId,\n    parentId = _getTableConfigImmedi15.parentId,\n    id = _getTableConfigImmedi15.id;\n  var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n  postRowClick(getterParams, args);\n  invokeControlMethodOnly && invokeControlMethodOnly({\n    pageId: pageId,\n    key: parentId || id\n  }, 'seqOperationClick', [operationName]);\n}\nfunction viewDetailClick(getterParams, args) {\n  var code = args.code,\n    rowKey = args.rowKey;\n  var getTableConfigImmediately = getterParams.getTableConfigImmediately,\n    getActionByKey = getterParams.getActionByKey;\n  var _getTableConfigImmedi16 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi16.pageId;\n  var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n  invokeControlMethodOnly && invokeControlMethodOnly({\n    pageId: pageId,\n    key: code\n  }, 'viewDetail', [{\n    rowKey: rowKey\n  }]);\n}\nfunction sendCustomRequest(getterParams, args) {\n  var getTableConfigImmediately = getterParams.getTableConfigImmediately,\n    getActionByKey = getterParams.getActionByKey;\n  var _getTableConfigImmedi17 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi17.pageId;\n  var invokeCustomMethod = getActionByKey('invokeCustomMethod');\n  var method = args.method,\n    postArgs = args.postArgs,\n    isNoClearPostData = args.isNoClearPostData,\n    colId = args.colId;\n  invokeCustomMethod(pageId, colId, method, postArgs, isNoClearPostData);\n}\nfunction postAutoAddRow(params, args) {\n  var getTableConfigImmediately = params.getTableConfigImmediately,\n    getActionByKey = params.getActionByKey;\n  var code = args.code,\n    rowKey = args.rowKey;\n  var _getTableConfigImmedi18 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi18.pageId,\n    id = _getTableConfigImmedi18.id;\n  var invokeAutoAddRow = getActionByKey('handleGotoNextRow');\n  invokeAutoAddRow({\n    pageId: pageId,\n    key: id\n  }, [{\n    r: rowKey,\n    k: code\n  }]);\n}\nfunction postFilterData(params, args) {\n  var getTableConfigImmediately = params.getTableConfigImmediately,\n    getActionByKey = params.getActionByKey;\n  var rowKeys = args.rowKeys,\n    reset = args.reset;\n  var _getTableConfigImmedi19 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi19.pageId,\n    id = _getTableConfigImmedi19.id;\n  var postFilterDataAction = getActionByKey('postFilterData');\n  postFilterDataAction({\n    pageId: pageId,\n    key: id\n  }, [[{\n    rk: rowKeys,\n    reset: reset\n  }]]);\n}\nfunction attachmentClick(params, args) {\n  var getTableConfigImmediately = params.getTableConfigImmediately,\n    getActionByKey = params.getActionByKey;\n  var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n  var _getTableConfigImmedi20 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi20.pageId;\n  var cellLocked = args.cellLocked,\n    id = args.id,\n    column = args.column,\n    rowKey = args.rowKey;\n  invokeControlMethodOnly({\n    pageId: pageId,\n    key: id\n  }, 'attachmentClick', [{\n    c: column.code,\n    r: rowKey,\n    l: cellLocked\n  }]);\n}\nfunction postBaseDataListLookUp(_ref2, _ref3) {\n  var getTableConfigImmediately = _ref2.getTableConfigImmediately,\n    getActionByKey = _ref2.getActionByKey;\n  var colId = _ref3.colId,\n    searchValue = _ref3.searchValue,\n    start = _ref3.start;\n  var _getTableConfigImmedi21 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi21.pageId,\n    parentId = _getTableConfigImmedi21.parentId,\n    id = _getTableConfigImmedi21.id;\n  var getBaseDataLookUpList = getActionByKey('getBaseDataLookUpList');\n  getBaseDataLookUpList === null || getBaseDataLookUpList === void 0 || getBaseDataLookUpList({\n    pageId: pageId,\n    key: parentId !== null && parentId !== void 0 ? parentId : id\n  }, {\n    fieldName: colId,\n    searchValue: searchValue,\n    start: start\n  });\n}\nfunction setFilterStatus(params, args) {\n  var getTableConfigImmediately = params.getTableConfigImmediately,\n    getActionByKey = params.getActionByKey;\n  var hasFilter = args.hasFilter;\n  var _getTableConfigImmedi22 = getTableConfigImmediately(),\n    pageId = _getTableConfigImmedi22.pageId,\n    id = _getTableConfigImmedi22.id;\n  var setFilterStatusAction = getActionByKey('setFilterStatus');\n  setFilterStatusAction({\n    pageId: pageId,\n    key: id\n  }, [[{\n    hasFilter: hasFilter\n  }]]);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/post/tablePoster.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/tableController.js":
/*!***************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/tableController.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = getTableControllerParams;\nexports.getModelOptions = getModelOptions;\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nvar _index = __webpack_require__(/*! ./data/index */ \"./src/component/web/DataGrid/KDTable/data/index.js\");\nvar _meta = __webpack_require__(/*! ./meta */ \"./src/component/web/DataGrid/KDTable/meta/index.js\");\n/*\n * @Author: wqhui\n * @Date: 2021-05-19 17:21:38\n * @Description: 表格控制模型，基础表格所需数据模型,如行数据等\n */\n\nvar getTotalType = _meta.metaHelper.getTotalType;\nvar getDatasource = _index.dataHelper.getDatasource,\n  getAggregateData = _index.dataHelper.getAggregateData,\n  getDataCount = _index.dataHelper.getDataCount;\n\n/**\n * 获得表格控制层的参数\n * @param {*} model\n * @param {*} parentModel\n * @param {*} params  {rowKey}\n */\nfunction getTableControllerParams(model, parentModel, params) {\n  var getTableConfigImmediately = params.getTableConfigImmediately;\n  var initRowData = getDatasource(model, parentModel, {\n    getTableConfigImmediately: getTableConfigImmediately\n  });\n  return {\n    initRowData: initRowData,\n    options: getModelOptions(model, parentModel, params),\n    // 初始无数据，不显示合计行数据，这里使用dataCount判断\n    // TODO 初始化时单据体合计行显示判断,此时列定义(aggregateColumns)还未初始化（数据返回后会重新计算,此处不用处理？）\n    initFooterRowData: getTotalType(model) !== _const.TOTAL_TYPE.sticky && getDataCount(model, parentModel) > 1 ? getAggregateData(model, parentModel) : []\n  };\n}\n\n/**\n * 获得模型的参数\n * @param {*} model\n * @param {*} parentModel\n * @param {*} params  {rowKey}\n */\nfunction getModelOptions(model, parentModel, params) {\n  var rowKey = params.rowKey,\n    mergeModel = params.mergeModel;\n  return {\n    rowKey: rowKey,\n    mergeModel: mergeModel,\n    update: true\n  };\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/tableController.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/utils/copy.js":
/*!**********************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/utils/copy.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.addCellsCopyAnimation = addCellsCopyAnimation;\nexports.addTableCellCopyAnimation = addTableCellCopyAnimation;\nexports.addTableCellRangeCopyAnimation = addTableCellRangeCopyAnimation;\nexports.addTableHeaderCopyAnimation = addTableHeaderCopyAnimation;\nexports.addTableRowsCopyAnimation = addTableRowsCopyAnimation;\nexports.copyCellRangesValue = copyCellRangesValue;\nexports.copyCellValueToClipboard = copyCellValueToClipboard;\nexports.copyRowValue = copyRowValue;\nexports.copyValueToClipboard = copyValueToClipboard;\nexports.getCopyCellValue = getCopyCellValue;\nexports.getCopyHeaderData = getCopyHeaderData;\nexports.getCopyValue = getCopyValue;\nexports.parseCellRangesToRows = parseCellRangesToRows;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.join.js */ \"../../node_modules/core-js/modules/es.array.join.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"../../node_modules/core-js/modules/es.array.reduce.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.map.js */ \"../../node_modules/core-js/modules/es.map.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.set.js */ \"../../node_modules/core-js/modules/es.set.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.string.trim.js */ \"../../node_modules/core-js/modules/es.string.trim.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _serverproperties = __webpack_require__(/*! @/constant/serverproperties */ \"./src/constant/serverproperties.js\");\nvar _clipboardUtil = __webpack_require__(/*! @/util/clipboardUtil */ \"./src/util/clipboardUtil.js\");\nvar _numberUtil = __webpack_require__(/*! @/util/numberUtil */ \"./src/util/numberUtil.js\");\nvar _format = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/format */ \"./src/component/web/DataGrid/TableHelper/util/format.js\");\nvar _cell = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/cell */ \"./src/component/web/DataGrid/TableHelper/util/cell.js\");\nvar _multiHyperLink = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/render/multiHyperLink */ \"./src/component/web/DataGrid/TableHelper/render/multiHyperLink.js\");\nvar _regexp = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/regexp */ \"./src/component/web/DataGrid/TableHelper/util/regexp.js\");\nvar _cell2 = __webpack_require__(/*! ./cell */ \"./src/component/web/DataGrid/KDTable/utils/cell.js\");\nvar _rangeSelection = __webpack_require__(/*! ./rangeSelection */ \"./src/component/web/DataGrid/KDTable/utils/rangeSelection.js\");\nvar _row = __webpack_require__(/*! ../utils/row */ \"./src/component/web/DataGrid/KDTable/utils/row.js\");\nvar _columns = __webpack_require__(/*! ../utils/columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const */ \"./src/component/common/table/const.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction copyCellRangesValue(cellRanges, _ref) {\n  var displayColumns = _ref.displayColumns,\n    rowDatas = _ref.rowDatas,\n    footerDataSource = _ref.footerDataSource,\n    rowKey = _ref.rowKey,\n    localeId = _ref.localeId,\n    defaultLocalId = _ref.defaultLocalId,\n    haederData = _ref.haederData;\n  if (!Array.isArray(cellRanges)) return;\n  var rows = parseCellRangesToRows(cellRanges, {\n    displayColumns: displayColumns,\n    rowDatas: rowDatas,\n    footerDataSource: footerDataSource,\n    rowKey: rowKey,\n    localeId: localeId,\n    defaultLocalId: defaultLocalId\n  });\n  var copyData = rows.map(function (row) {\n    return _toConsumableArray(row).map(function (cell) {\n      var _cell$;\n      return (_cell$ = cell[1]) !== null && _cell$ !== void 0 ? _cell$ : '';\n    }).join('\\t');\n  }).join('\\r\\n');\n  var copyResult = haederData ? haederData + copyData : copyData;\n  (0, _clipboardUtil.copyDataToClipboard)(copyResult);\n}\n\n/**\n * 将范围选中的单元格重新构造行数据数组\n * @param {Array} cellRanges\n * @param {object} param\n * @returns {Map<string,string>[]}\n */\nfunction parseCellRangesToRows(cellRanges, _ref2) {\n  var displayColumns = _ref2.displayColumns,\n    rowDatas = _ref2.rowDatas,\n    footerDataSource = _ref2.footerDataSource,\n    rowKey = _ref2.rowKey,\n    localeId = _ref2.localeId,\n    defaultLocalId = _ref2.defaultLocalId;\n  var bodyRows = [];\n  var footerRows = [];\n\n  // 获取多个范围选中的列，以及范围选中之间未被选中的列\n  // const cellRangeColumnsCodeSet = getCellRangesColumnsCodeSet(cellRanges)\n  var displayColumnsInCellRange = (0, _columns.filterColumnsInAnyColsRanges)(displayColumns, cellRanges);\n\n  // 表体和页脚分别构造行数据\n  var _classifyCellRangesWi = (0, _rangeSelection.classifyCellRangesWithTableRegion)(cellRanges),\n    bodyCellRanges = _classifyCellRangesWi.body,\n    footerCellRanges = _classifyCellRangesWi.footer;\n  if (bodyCellRanges.length) {\n    putBodyRangesCellsToRows(bodyCellRanges, bodyRows, displayColumnsInCellRange);\n  }\n  if (footerCellRanges.length) {\n    putFooterRangesCellToRows(footerCellRanges, footerRows, displayColumnsInCellRange);\n  }\n  return bodyRows.filter(function (row) {\n    return !row.get(_const.ROW_DETAIL_META_KEY);\n  }).concat(footerRows);\n  function putBodyRangesCellsToRows(bodyCellRanges, bodyRows, displayColumnsInCellRange) {\n    // 获取多个范围选中在行数据中的startRowIndex, endRowIndex\n    var _getBodyCellRangesSta = (0, _rangeSelection.getBodyCellRangesStartIndex)(bodyCellRanges),\n      _getBodyCellRangesSta2 = _slicedToArray(_getBodyCellRangesSta, 1),\n      minStartRowIndex = _getBodyCellRangesSta2[0];\n    if ((0, _rangeSelection.isValidCellRangesStartRowIndex)(minStartRowIndex)) {\n      // 将范围选中的单元格，更新到rows中\n      var _iterator = _createForOfIteratorHelper(bodyCellRanges),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var cellRage = _step.value;\n          var startRow = cellRage.startRow,\n            endRow = cellRage.endRow,\n            columns = cellRage.columns;\n          var _getRangeSelectionRow = (0, _rangeSelection.getRangeSelectionRowIndex)(startRow, endRow),\n            startRowIndex = _getRangeSelectionRow.startRowIndex,\n            endRowIndex = _getRangeSelectionRow.endRowIndex;\n          updateCellRangeRows(rowDatas, bodyRows, minStartRowIndex, displayColumnsInCellRange)(startRowIndex, endRowIndex, columns);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n  function putFooterRangesCellToRows(footerCellRanges, footerRows, displayColumnsInCellRange) {\n    if (footerCellRanges.length) {\n      // 获取多个范围选中在行数据中的startRowIndex, endRowIndex\n      var _getFooterCellRangesS = (0, _rangeSelection.getFooterCellRangesStartRowIndex)(footerCellRanges),\n        _getFooterCellRangesS2 = _slicedToArray(_getFooterCellRangesS, 1),\n        minStartRowIndex = _getFooterCellRangesS2[0];\n      if ((0, _rangeSelection.isValidCellRangesStartRowIndex)(minStartRowIndex)) {\n        var _iterator2 = _createForOfIteratorHelper(footerCellRanges),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var cellRange = _step2.value;\n            var footerRowRange = cellRange.footerRowRange,\n              columns = cellRange.columns;\n            var _getFooterRangeSelect = (0, _rangeSelection.getFooterRangeSelectionRowIndex)(footerRowRange),\n              startRowIndex = _getFooterRangeSelect.startRowIndex,\n              endRowIndex = _getFooterRangeSelect.endRowIndex;\n            updateCellRangeRows(footerDataSource, footerRows, minStartRowIndex, displayColumnsInCellRange)(startRowIndex, endRowIndex, columns);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    }\n  }\n  function updateCellRangeRows(allRowDatas, cellRangesRows, minStartRowIndex, displayColumnsInCellRange) {\n    return function (startRowIndex, endRowIndex, columns) {\n      var _loop = function _loop() {\n        var currentRow = allRowDatas[index]; // 原行数据\n        var cellRangesRowsIndex = index - minStartRowIndex; // 以minStartRowIndex为起始索引，新生成的行数据的索引，\n        var cellRangesRowMap = cellRangesRows[cellRangesRowsIndex] || createRowMap(displayColumnsInCellRange); // 范围选中重新构造的行\n        if ((0, _row.isDetailRow)(currentRow)) {\n          cellRangesRowMap.set(_const.ROW_DETAIL_META_KEY, true);\n        } else {\n          // 更新范围选中的单元格值\n          columns.forEach(function (col) {\n            cellRangesRowMap.set(col.code, getCopyCellValue(col, currentRow, {\n              rowKey: rowKey,\n              localeId: localeId,\n              defaultLocalId: defaultLocalId\n            }));\n          });\n        }\n\n        // 更新行数据数组，这一步为帮助我们以minStartRowIndex为起始去构造行范围\n        // 比如 cellRangesRowsIndex为 0、1  和 4、5\n        // 生成的数组为[{},{},undefined,undifined,{},{}]\n        cellRangesRows[cellRangesRowsIndex] = cellRangesRowMap;\n      };\n      for (var index = startRowIndex; index <= endRowIndex; index++) {\n        _loop();\n      }\n    };\n  }\n  function createRowMap(displayColumnsInCellRange) {\n    return displayColumnsInCellRange.reduce(function (map, col) {\n      map.set(col.code, '');\n      return map;\n    }, new Map());\n  }\n}\nfunction copyRowValue(_ref3) {\n  var row = _ref3.row,\n    rowKey = _ref3.rowKey,\n    columns = _ref3.columns,\n    localeId = _ref3.localeId,\n    defaultLocalId = _ref3.defaultLocalId;\n  // let rowData = ''\n  var rowData = columns.reduce(function (acc, curCol, index) {\n    if (curCol && curCol.hide) return acc; // 隐藏列不复制\n    var delimiter = index === 0 ? '' : '\\t';\n    return acc + delimiter + getCopyCellValue(curCol, row, {\n      rowKey: rowKey,\n      localeId: localeId,\n      defaultLocalId: defaultLocalId\n    });\n  }, '');\n  return rowData;\n}\nfunction getCopyCellValue(col, row, _ref4) {\n  var rowKey = _ref4.rowKey,\n    localeId = _ref4.localeId,\n    defaultLocalId = _ref4.defaultLocalId;\n  var type = col.type;\n  var value = col.getValue ? col.getValue(row, row[rowKey]) : (0, _cell2.getCellValue)(row, col);\n  return (0, _row.isRowPinned)({\n    record: row,\n    rowKey: rowKey\n  }) ? getRowPinnedCopyValue(value, type) : getCopyValue({\n    row: row,\n    value: value,\n    type: type,\n    column: col,\n    localeId: localeId,\n    defaultLocalId: defaultLocalId\n  });\n}\nfunction copyCellValueToClipboard(_ref5) {\n  var row = _ref5.row,\n    value = _ref5.value,\n    type = _ref5.type,\n    column = _ref5.column,\n    localeId = _ref5.localeId,\n    defaultLocalId = _ref5.defaultLocalId,\n    rowPinned = _ref5.rowPinned,\n    haederData = _ref5.haederData;\n  var copyValue = rowPinned ? getRowPinnedCopyValue(value, type) : getCopyValue({\n    row: row,\n    value: value,\n    type: type,\n    column: column,\n    localeId: localeId,\n    defaultLocalId: defaultLocalId\n  });\n\n  // 复制的值是空格，undefinded等，execCommand会忽略掉，导致复制后还是上一次的复制结果\n  if (!isValidCopyValue(copyValue)) {\n    copyValue = '\\r';\n  }\n  var copyResult = haederData ? haederData + copyValue : copyValue;\n  (0, _clipboardUtil.copyDataToClipboard)(copyResult);\n}\nfunction copyValueToClipboard(value) {\n  (0, _clipboardUtil.copy2Clipboard)(value);\n}\nfunction isValidCopyValue(value) {\n  var isEmptyArray = Array.isArray(value) && value.length === 0;\n  return value !== '' && value !== undefined && value !== null && !isEmptyArray;\n}\nfunction getCopyValue(_ref6) {\n  var row = _ref6.row,\n    value = _ref6.value,\n    type = _ref6.type,\n    column = _ref6.column,\n    localeId = _ref6.localeId,\n    defaultLocalId = _ref6.defaultLocalId;\n  var copyValue = value;\n  switch (type) {\n    case _serverproperties.Ctrls.KDSelect:\n    case _serverproperties.Ctrls.KDMulSelect:\n    case _serverproperties.Ctrls.KDRadioOptGroup:\n    case _serverproperties.Ctrls.KDCheckBoxGroup:\n      {\n        var text = value.reduce(function (acc, cur) {\n          return acc + \" \".concat(cur.text);\n        }, '');\n        copyValue = text.trim();\n        break;\n      }\n    case _serverproperties.Ctrls.KDDate:\n    case _serverproperties.Ctrls.KDDateTime:\n      copyValue = value || '';\n      break;\n    case _serverproperties.Ctrls.VoucherAmount:\n    case _serverproperties.Ctrls.KDNumber:\n      {\n        var extendParams = column.extendParams;\n        var originValue = (0, _cell2.getCellValue)(row, column);\n        var isFormmatedValue = extendParams.isFormmatedValue;\n        // 格式化的值是字符串的，返回格式化的值，不需要做序列化\n        if (isFormmatedValue && typeof originValue === 'string') {\n          copyValue = value;\n        } else {\n          copyValue = (0, _numberUtil.serializationSymbolNumber)(value);\n        }\n        break;\n      }\n    case 'operate':\n      {\n        var _extendParams = column.extendParams;\n        var editor = _extendParams.editor;\n        var _editor$opr = editor.opr,\n          opr = _editor$opr === void 0 ? [] : _editor$opr;\n        // 合计行value为undefined\n        // if (!value) return ''\n        return (0, _format.getTextesOfOperationItems)(opr, value, {\n          localeId: localeId,\n          defaultLocalId: defaultLocalId\n        }).filter(function (item) {\n          return item !== '';\n        }).join(' ');\n      }\n    case 'combinedField':\n      {\n        var items = column.items;\n        return items.map(function (item, index) {\n          var code = item.code,\n            getValue = item.getValue,\n            _item$type = item.type,\n            type = _item$type === void 0 ? 'other' : _item$type;\n          var itemValue = getValue ? getValue(row) : (0, _cell2.getCellValue)(row, code);\n          return getCopyValue({\n            row: row,\n            value: itemValue,\n            type: type,\n            column: item,\n            localeId: localeId,\n            defaultLocalId: defaultLocalId\n          });\n        }).filter(function (item) {\n          return item !== '';\n        }).join(' ');\n      }\n    case _serverproperties.Ctrls.KDMulHLink:\n      {\n        var _ref7 = value || {},\n          tem = _ref7.tem,\n          data = _ref7.data;\n        if (!tem) return ''; // 如果格式规则不存在，则直接返回null\n        var val = data;\n        val = (0, _multiHyperLink.getMultiHyperLinkContent)(tem, data, {\n          onlyText: true\n        });\n        return Array.isArray(val) ? val.join('') : val;\n      }\n    case _serverproperties.Ctrls.KDAttachmentField:\n      {\n        copyValue = ''; // 附件字段，不处理复制值\n        break;\n      }\n    default:\n      break;\n  }\n  // 单元格内容带换行符的，要加上一个双引号格式，粘贴时才能粘贴到一个单元格中去\n  if (typeof copyValue === 'string' && copyValue.includes('\\n')) {\n    copyValue = \"\\\"\".concat(copyValue, \"\\\"\");\n  }\n  return isValidCopyValue(copyValue) ? copyValue : '';\n}\nfunction getRowPinnedCopyValue(value, type) {\n  if (type === _serverproperties.Ctrls.KDNumber) {\n    return (0, _numberUtil.serializationSymbolNumber)((0, _cell.isMultiCurrencyAmountCell)(value) ? value.val : value);\n  }\n  if (typeof value === 'string' && value.includes('\\n')) {\n    return \"\\\"\".concat(value, \"\\\"\");\n  }\n  return value;\n}\nfunction addTableCellRangeCopyAnimation(_ref8) {\n  var tableDom = _ref8.tableDom,\n    cellRange = _ref8.cellRange;\n  var startRow = cellRange.startRow,\n    endRow = cellRange.endRow,\n    columns = cellRange.columns,\n    footerRowRange = cellRange.footerRowRange;\n  if (startRow !== -1) {\n    var _getRangeSelectionRow2 = (0, _rangeSelection.getRangeSelectionRowIndex)(startRow, endRow),\n      startRowIndex = _getRangeSelectionRow2.startRowIndex,\n      endRowIndex = _getRangeSelectionRow2.endRowIndex;\n    var className = '.kd-table-body';\n    var rowIndexKeys = Array.from({\n      length: endRowIndex - startRowIndex + 1\n    }, function (item, index) {\n      return index + startRowIndex;\n    });\n    addCellsCopyAnimation({\n      rowIndexKeys: rowIndexKeys,\n      className: className,\n      columns: columns,\n      tableDom: tableDom\n    });\n  }\n  if (footerRowRange) {\n    var _getFooterRangeSelect2 = (0, _rangeSelection.getFooterRangeSelectionRowIndex)(footerRowRange),\n      _startRowIndex = _getFooterRangeSelect2.startRowIndex,\n      _endRowIndex = _getFooterRangeSelect2.endRowIndex;\n    var _className = '.kd-table-footer';\n    var _rowIndexKeys = Array.from({\n      length: _endRowIndex - _startRowIndex + 1\n    }, function (item, index) {\n      return index + _startRowIndex;\n    });\n    addCellsCopyAnimation({\n      rowIndexKeys: _rowIndexKeys,\n      className: _className,\n      columns: columns,\n      tableDom: tableDom\n    });\n  }\n}\nfunction addTableHeaderCopyAnimation(_ref9) {\n  var tableDom = _ref9.tableDom,\n    columns = _ref9.columns;\n  var codeSet = new Set();\n  columns.forEach(function (col) {\n    if (!codeSet.has(col.code)) {\n      var _col$getParent;\n      codeSet.add(col.code);\n      var parentColumn = (_col$getParent = col.getParent) === null || _col$getParent === void 0 ? void 0 : _col$getParent.call(col);\n      while (parentColumn) {\n        var _parentColumn$getPare, _parentColumn;\n        codeSet.add(parentColumn.code);\n        parentColumn = (_parentColumn$getPare = (_parentColumn = parentColumn).getParent) === null || _parentColumn$getPare === void 0 ? void 0 : _parentColumn$getPare.call(_parentColumn);\n      }\n    }\n  });\n  var codeArr = Array.from(codeSet);\n  codeArr.forEach(function (code) {\n    var codeMatchStr = (0, _regexp.isIncludeNewlineCharacter)(code) ? \"[data-escap-code=\\\"\".concat((0, _regexp.getMatchEscapeNewlineCharacteStr)(code), \"\\\"]\") : \"[data-code=\\\"\".concat(code, \"\\\"]\");\n    var tableCellSelector = \".kd-table-header .kd-table-header-cell\".concat(codeMatchStr);\n    var cell = tableDom.querySelector(tableCellSelector);\n    addTableCellCopyAnimation(cell);\n  });\n}\nfunction addTableRowsCopyAnimation(_ref10) {\n  var rowIndexKeys = _ref10.rowIndexKeys,\n    tableDom = _ref10.tableDom,\n    columns = _ref10.columns;\n  var className = '.kd-table-body';\n  addCellsCopyAnimation({\n    rowIndexKeys: rowIndexKeys,\n    className: className,\n    columns: columns,\n    tableDom: tableDom\n  });\n}\nfunction addCellsCopyAnimation(_ref11) {\n  var rowIndexKeys = _ref11.rowIndexKeys,\n    className = _ref11.className,\n    columns = _ref11.columns,\n    tableDom = _ref11.tableDom;\n  rowIndexKeys.forEach(function (rowIndex) {\n    columns.forEach(function (col) {\n      var code = col.code;\n      var codeMatchStr = (0, _regexp.isIncludeNewlineCharacter)(code) ? \"[data-escap-code=\\\"\".concat((0, _regexp.getMatchEscapeNewlineCharacteStr)(code), \"\\\"]\") : \"[data-code=\\\"\".concat(code, \"\\\"]\");\n      var tableCellSelector = \"\".concat(className, \" .kd-table-cell[data-rowindex=\\\"\").concat(rowIndex, \"\\\"]\").concat(codeMatchStr);\n      var cell = tableDom.querySelector(tableCellSelector);\n      addTableCellCopyAnimation(cell);\n    });\n  });\n}\nfunction addTableCellCopyAnimation(cell) {\n  cell && cell.classList.add('kd-table-cell-highlight');\n  cell && cell.classList.add('kd-table-highlight-animation');\n  setTimeout(function () {\n    cell && cell.classList.remove('kd-table-cell-highlight');\n    cell && cell.classList.remove('kd-table-highlight-animation');\n  }, 1000);\n}\nfunction getCopyHeaderData(_ref12) {\n  var columns = _ref12.columns,\n    cellRangeColumnsCodeSet = _ref12.cellRangeColumnsCodeSet;\n  // 获取当前框选列中的最大层级\n  var maxLevel = columns.reduce(function (max, col) {\n    var currentLevel = col.level || 1;\n    if (cellRangeColumnsCodeSet.has(col.code) && currentLevel > max) {\n      max = currentLevel;\n    }\n    return max;\n  }, 1);\n  var levelArr = Array.from({\n    length: maxLevel\n  }, function (item, index) {\n    return index + 1;\n  });\n  var hadCopyGroupColumns = [];\n  var headerData = levelArr.map(function (currentLevel) {\n    return columns.map(function (col) {\n      var colLevel = col.level;\n      if (!cellRangeColumnsCodeSet.has(col.code)) return '';\n      var headerCellValue = '';\n      if (colLevel === currentLevel) {\n        // 层级相等直接返回列名称\n        headerCellValue = col.name;\n      } else if (colLevel < currentLevel) {\n        // 列层级小于当前遍历的层级，说明层级小于分组层级，填充空格\n        headerCellValue = '';\n      } else {\n        // 列层级大于当前遍历层级，应该显示分组层级的内容，往上查找到对应层级的分组列显示\n        var targetLevelColumn = findTargetLevelParentColumn(col, currentLevel);\n        // 该层级分组只在第一个单元格显示，已经显示过了的后面就直接用空格填充\n        if (!hadCopyGroupColumns.includes(targetLevelColumn.code)) {\n          hadCopyGroupColumns.push(targetLevelColumn.code);\n          headerCellValue = targetLevelColumn.name;\n        }\n      }\n      return headerCellValue;\n    }).join('\\t');\n  }).join('\\r\\n');\n\n  // 最后一行要加上换行符\n  return headerData + '\\r\\n';\n}\nfunction findTargetLevelParentColumn(column, targetLevel) {\n  var level = column.level;\n  var targetColumn = column;\n  while (level > targetLevel) {\n    var parentColumn = targetColumn.getParent();\n    level = parentColumn.level;\n    targetColumn = parentColumn;\n  }\n  return targetColumn;\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/utils/copy.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/utils/data.js":
/*!**********************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/utils/data.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.largePageRowsTracking = largePageRowsTracking;\nexports.resetScrollLoadOptions = resetScrollLoadOptions;\nexports.setAggregateData = setAggregateData;\nexports.updateInstanceModelWhenDataChanged = updateInstanceModelWhenDataChanged;\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.splice.js */ \"../../node_modules/core-js/modules/es.array.splice.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nvar _trackingExtendCtrlProps = __webpack_require__(/*! @/constant/trackingExtendCtrlProps */ \"./src/constant/trackingExtendCtrlProps.js\");\nvar _dataService = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/dataService.js */ \"./src/component/web/DataGrid/TableHelper/util/dataService.js\");\nvar _merge = __webpack_require__(/*! ./merge */ \"./src/component/web/DataGrid/KDTable/utils/merge.js\");\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\n// 重置滚动加载参数\nfunction resetScrollLoadOptions(_ref) {\n  var getTableOptions = _ref.getTableOptions,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getActionByKey = _ref.getActionByKey,\n    model = _ref.model;\n  var tableOptions = getTableOptions();\n  var tableConfig = getTableConfigImmediately();\n  // dataCount 为0时不发getVirtualData请求\n  var dataCount = model.getDataProperty(['value', 'datacount']);\n  if (dataCount === 0) return;\n  tableOptions.setIsScrollLoadedLastPage(false);\n  tableOptions.setTreeVirtualViewLoadedDataRow([]);\n  if (tableConfig.scrollLoadType === _const.SCROLL_LOAD_TYPE.infinite) {\n    reloadedVirtualViewData({\n      getTableOptions: getTableOptions,\n      getTableConfigImmediately: getTableConfigImmediately,\n      getActionByKey: getActionByKey,\n      model: model\n    });\n    tableOptions.setLoadedPages([]);\n  } else if (tableConfig.gridType === 'VIRTUALVIEWGRID') {\n    // 服务端加载模式在u指令刷新时重新获取报表数据\n    var blockSize = tableConfig.blockSize;\n    var pageId = model.pageId,\n      key = model.key;\n    var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n    invokeControlMethodOnly && invokeControlMethodOnly({\n      pageId: pageId,\n      key: key\n    }, 'getVirtualData', [0, blockSize]);\n  }\n}\n\n// 滚动加载模式下，u指令刷新重新请求数据\nfunction reloadedVirtualViewData(_ref2) {\n  var getTableOptions = _ref2.getTableOptions,\n    getTableConfigImmediately = _ref2.getTableConfigImmediately,\n    getActionByKey = _ref2.getActionByKey,\n    model = _ref2.model;\n  var tableConfig = getTableConfigImmediately();\n  var tableOptions = getTableOptions();\n  var pageId = model.pageId,\n    key = model.key;\n  var invokeControlMethodOnly = getActionByKey('invokeControlMethodOnly');\n  var dataCount = model.getDataProperty(['value', 'datacount']);\n  var loadedPages = tableOptions.getLoadedPages();\n  var blockSize = tableConfig.blockSize;\n  if (loadedPages.length === 0) {\n    invokeControlMethodOnly && invokeControlMethodOnly({\n      pageId: pageId,\n      key: key\n    }, 'getVirtualData', [0, blockSize]);\n  }\n  var reloadedPages = loadedPages.splice(-2);\n  // 如果最后加载的两页数据是相邻的，那么两页数据都需要重新加载，否则只加载最后一页\n  if (reloadedPages.length === 2 && Math.abs(reloadedPages[0] - reloadedPages[1]) !== 1) {\n    reloadedPages.shift();\n  }\n  reloadedPages.forEach(function (reloadedPage) {\n    var startIndex = reloadedPage * blockSize;\n    if (startIndex > dataCount) return;\n    invokeControlMethodOnly && invokeControlMethodOnly({\n      pageId: pageId,\n      key: key\n    }, 'getVirtualData', [startIndex, blockSize]);\n  });\n}\nfunction updateInstanceModelWhenDataChanged(rowDatas, _ref3) {\n  var getInstance = _ref3.getInstance,\n    getTableConfigImmediately = _ref3.getTableConfigImmediately,\n    getTableOptions = _ref3.getTableOptions,\n    model = _ref3.model;\n  var instance = getInstance();\n  var tableConfig = getTableConfigImmediately();\n  instance.tableModel.setRows(rowDatas);\n  instance.mergeModel.updateMergeModel(tableConfig.entities, rowDatas, tableConfig.rowKey, tableConfig.rowDetailOptions.type);\n  instance.mergeModel.updateBorderCols(tableConfig.columns, model.getMetaProperty('columns') || (0, _immutable.List)(), tableConfig.seqKey);\n  // 更新显示右边框线的列,适用于报表融合的场景\n  (0, _merge.setRightBorderCols)({\n    columns: tableConfig.columns,\n    getTableOptions: getTableOptions\n  });\n}\n\n// 分页条数超过10000条埋点\nfunction largePageRowsTracking(_ref4) {\n  var _useModel$getDataValu;\n  var hadTrackingOfLargePageRowsRef = _ref4.hadTrackingOfLargePageRowsRef,\n    getTableOptions = _ref4.getTableOptions,\n    getTableConfigImmediately = _ref4.getTableConfigImmediately,\n    useModel = _ref4.useModel;\n  var tableConfig = getTableConfigImmediately();\n  if (tableConfig.gridType !== 'VIEWGRID') return;\n  var pageRows = useModel === null || useModel === void 0 || (_useModel$getDataValu = useModel.getDataValue()) === null || _useModel$getDataValu === void 0 ? void 0 : _useModel$getDataValu.get('pagerows');\n  if (hadTrackingOfLargePageRowsRef.current === false && pageRows >= 10000) {\n    var _tableConfig = getTableConfigImmediately();\n    var pageId = _tableConfig.pageId,\n      id = _tableConfig.id,\n      parentId = _tableConfig.parentId,\n      type = _tableConfig.type,\n      gridType = _tableConfig.gridType,\n      modelKey = _tableConfig.modelKey;\n    var controlProp = _trackingExtendCtrlProps.trackingExtendCtrlProps.GRID_WITH_LARGE_PAGE_ROWS;\n    var controlValue = true;\n    var controlType = (0, _dataService.getGridTrackingType)({\n      type: type,\n      gridType: gridType\n    });\n    (0, _dataService.trackingOfGridProps)({\n      pageId: pageId,\n      controlId: parentId || modelKey,\n      controlType: controlType,\n      controlProp: controlProp,\n      controlValue: controlValue\n    });\n    hadTrackingOfLargePageRowsRef.current = true;\n  }\n}\nfunction setAggregateData(footerRowData, tableModel, internalEventService, tableOptions) {\n  // 底部固定合计时，不用设置合计行的数据\n  if (tableOptions.getTotalType() !== _const.TOTAL_TYPE.sticky) {\n    tableModel.setFooterRows(footerRowData);\n  }\n  internalEventService.dispatchEvent({\n    type: _eventServiceName.KD_TABLE_EVENT_NAMES.footerRowDataChanged,\n    params: {\n      footerRowData: footerRowData\n    }\n  });\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/utils/data.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/utils/element.js":
/*!*************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/utils/element.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getTableCell = getTableCell;\nexports.getTableFooterElement = getTableFooterElement;\nexports.isWindow = isWindow;\nexports.scrollFooterRowToBottom = scrollFooterRowToBottom;\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.parse-int.js */ \"../../node_modules/core-js/modules/es.parse-int.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n/*\n * @Author: wqhui\n * @Date: 2023-08-03 16:58:18\n * @Description:\n */\n\nfunction getTableFooterElement(containerEleRef) {\n  var _containerEleRef$curr;\n  return (_containerEleRef$curr = containerEleRef.current) === null || _containerEleRef$curr === void 0 ? void 0 : _containerEleRef$curr.querySelector('.kd-table-footer');\n}\nfunction scrollFooterRowToBottom(tableFooterElement) {\n  if (tableFooterElement) {\n    tableFooterElement.scrollTop = tableFooterElement.scrollHeight;\n  }\n}\nfunction getTableCell(target, _ref) {\n  var containerEleRef = _ref.containerEleRef,\n    rowKey = _ref.rowKey,\n    getInstance = _ref.getInstance;\n  while (target && containerEleRef.current.contains(target)) {\n    if (target.getAttribute('data-role') === 'table-cell') {\n      var columnCode = target.getAttribute('data-code');\n      var rowIndex = parseInt(target.getAttribute('data-rowindex'));\n      var instance = getInstance();\n      var row = instance.controller.getRowByIndex(rowIndex);\n      var rowKeyValue = row === null || row === void 0 ? void 0 : row[rowKey];\n      return {\n        rowKeyValue: rowKeyValue,\n        code: columnCode,\n        isFooterCell: isFooterCell(target, {\n          containerEleRef: containerEleRef\n        })\n      };\n    }\n    target = target.parentElement;\n  }\n  return null;\n}\nvar isFooterCell = function isFooterCell(target, _ref2) {\n  var containerEleRef = _ref2.containerEleRef;\n  while (target && containerEleRef.current.contains(target)) {\n    if (target.classList.contains('kd-table-footer')) {\n      return true;\n    }\n    target = target.parentElement;\n  }\n  return false;\n};\nfunction isWindow(target) {\n  return target.toString() === '[object Window]' || target.toString() === '[object global]';\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/utils/element.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/utils/eventServiceController.js":
/*!****************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/utils/eventServiceController.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.dispathThemeChanged = exports.dispatchFooterRowClick = exports.dispatchDoAutoSize = exports.dispatchBodyRowClick = void 0;\nvar _eventServiceName = __webpack_require__(/*! @/component/common/table/eventService/eventServiceName */ \"./src/component/common/table/eventService/eventServiceName.js\");\n/*\n * @Author: wqhui\n * @Date: 2022-09-02 16:46:26\n * @Description:  KDTable内部事件的分发、监听和销毁的工具函数\n */\n\nvar _dispathInternalEvent = function _dispathInternalEvent(internalEventService) {\n  return function (type, params) {\n    internalEventService.dispatchEvent({\n      type: type,\n      params: params\n    });\n  };\n};\nvar dispathThemeChanged = exports.dispathThemeChanged = function dispathThemeChanged(internalEventService) {\n  return function (trigger) {\n    _dispathInternalEvent(internalEventService)(_eventServiceName.KD_TABLE_EVENT_NAMES.themeChanged, {\n      trigger: trigger\n    });\n  };\n};\nvar dispatchBodyRowClick = exports.dispatchBodyRowClick = function dispatchBodyRowClick(internalEventService) {\n  return function (_ref) {\n    var event = _ref.event,\n      record = _ref.record,\n      rowIndex = _ref.rowIndex;\n    _dispathInternalEvent(internalEventService)(_eventServiceName.KD_TABLE_EVENT_NAMES.rowClick, {\n      event: event,\n      record: record,\n      rowIndex: rowIndex\n    });\n  };\n};\nvar dispatchFooterRowClick = exports.dispatchFooterRowClick = function dispatchFooterRowClick(internalEventService) {\n  return function (_ref2) {\n    var event = _ref2.event,\n      record = _ref2.record,\n      rowIndex = _ref2.rowIndex;\n    _dispathInternalEvent(internalEventService)(_eventServiceName.KD_TABLE_EVENT_NAMES.footerRowClick, {\n      event: event,\n      record: record,\n      rowIndex: rowIndex\n    });\n  };\n};\nvar dispatchDoAutoSize = exports.dispatchDoAutoSize = function dispatchDoAutoSize(internalEventService) {\n  return function () {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // todo: 自适应可以考虑都用这接口，可以做到一次待执行的监听可以做到永远只会触发一次\n    _dispathInternalEvent(internalEventService)(_eventServiceName.KD_TABLE_EVENT_NAMES.doAutoSizeColumns, params);\n  };\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/utils/eventServiceController.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/utils/filter.js":
/*!************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/utils/filter.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createResetFilterValue = createResetFilterValue;\nexports.getFilterRequestParams = getFilterRequestParams;\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.find.js */ \"../../node_modules/core-js/modules/es.array.find.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\nvar _array = __webpack_require__(/*! ../../TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _columns = __webpack_require__(/*! ./columns */ \"./src/component/web/DataGrid/KDTable/utils/columns.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; } /*\n * @Author: wqhui\n * @Date: 2023-11-01 16:36:27\n * @Description:\n */\n/**\n * 构造过滤参数\n * @param {Object} currentFilter 过滤：{code:'number',filter:[111],filterCondition:'17'}，重置 {code:'number'}\n * @returns\n */\nfunction getFilterRequestParams() {\n  var currentFilter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var columnsMeta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var enableBaseDataSelectFilter = arguments.length > 2 ? arguments[2] : undefined;\n  var originColumnCode = (0, _columns.getOriginColumnCode)(currentFilter.code);\n  var targetColumn = getFilterColumnMeta(columnsMeta, originColumnCode);\n  if (!targetColumn) {\n    console.warn('没找到过滤目标列');\n    return [];\n  }\n  var isBaseDataSelectEqualFilter = enableBaseDataSelectFilter && targetColumn.enableBasedataEnumFilter && isEqualFilterItem(targetColumn.filterItems, currentFilter.filterCondition);\n  // 是否是多类别过滤，目前只有多类别基础资料有\n  var isMulTypesFilter = targetColumn.otherFilterItems && targetColumn.otherFilterItems.length > 0;\n  var minorFilterFieldName = targetColumn.otherFilterItems && targetColumn.otherFilterItems[0].fieldName;\n  var values = getFilterValues(currentFilter.filter, isBaseDataSelectEqualFilter);\n  var minorFilterArgs = {\n    FieldName: [minorFilterFieldName],\n    Value: [],\n    Compare: []\n  };\n  // 多类别基础资料的次要的过滤条件放在值的最后一个\n  if (isMulTypesFilter && values.length > 0) {\n    var minorValue = values.pop();\n    minorFilterArgs = {\n      FieldName: [minorValue.fieldName],\n      Value: minorValue.value ? [minorValue.value] : [],\n      Compare: minorValue.id ? [minorValue.id] : []\n    };\n  }\n  var filterCode = targetColumn.dataIndex;\n  var filterParams = [[{\n    FieldName: [filterCode],\n    Value: values || [],\n    Compare: currentFilter.filterCondition ? [currentFilter.filterCondition] : []\n  }]];\n  isMulTypesFilter && filterParams[0].push(minorFilterArgs);\n  return filterParams;\n}\nfunction getFilterValues(filterValues, isBaseDataSelectEqualFilter) {\n  // 基础资料下拉类型，返回值的数组\n  if (isBaseDataSelectEqualFilter) {\n    return filterValues ? filterValues.map(function (item) {\n      return item[2];\n    }) : [];\n  }\n  return filterValues ? _toConsumableArray(filterValues) : [];\n}\nfunction isEqualFilterItem(filterItems, filterCondition) {\n  var activeItem = Array.isArray(filterItems) && filterItems.find(function (item) {\n    return item.id === filterCondition;\n  });\n  return activeItem === null || activeItem === void 0 ? void 0 : activeItem.equal;\n}\nfunction getFilterColumnMeta(columnsMeta, filterColumnCode) {\n  var _targetColumn$items;\n  var targetColumn = (0, _array.find)(columnsMeta, function (col) {\n    return col.dataIndex === filterColumnCode;\n  });\n  // 合并列表字段\n  if (targetColumn !== null && targetColumn !== void 0 && (_targetColumn$items = targetColumn.items) !== null && _targetColumn$items !== void 0 && _targetColumn$items.length && targetColumn.sff) {\n    return targetColumn.items.find(function (item) {\n      return item.dataIndex === targetColumn.sff;\n    });\n  }\n  return targetColumn;\n}\nfunction createResetFilterValue(code) {\n  return {\n    code: code\n  };\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/utils/filter.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/utils/index.js":
/*!***********************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/utils/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.eventServiceController = void 0;\nvar eventServiceController = _interopRequireWildcard(__webpack_require__(/*! ./eventServiceController */ \"./src/component/web/DataGrid/KDTable/utils/eventServiceController.js\"));\nexports.eventServiceController = eventServiceController;\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/utils/index.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/utils/merge.js":
/*!***********************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/utils/merge.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getVirtualViewMergeRowSpan = getVirtualViewMergeRowSpan;\nexports.setRightBorderCols = setRightBorderCols;\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"../../node_modules/core-js/modules/es.array.reduce.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n/**\n * 获取报表融合单元格信息\n * @param {*} rows\n * @param {*} param1\n */\nfunction getVirtualViewMergeRowSpan(rows, _ref) {\n  var getTableOptions = _ref.getTableOptions,\n    getTableConfigImmediately = _ref.getTableConfigImmediately;\n  var tableOptions = getTableOptions();\n  var _getTableConfigImmedi = getTableConfigImmediately(),\n    rowKey = _getTableConfigImmedi.rowKey;\n  var mergeColumns = tableOptions.getMetaOptionsProperty('mergeColumns');\n  if (mergeColumns.length > 0) {\n    return mergeColumns.reduce(function (obj, code) {\n      obj[code] = getMergeRowSpan(rows, {\n        rowKey: rowKey,\n        code: code\n      });\n      return obj;\n    }, {});\n  }\n  return {};\n}\nfunction getMergeRowSpan(rows, _ref2) {\n  var rowKey = _ref2.rowKey,\n    code = _ref2.code;\n  var span = 1;\n  var spanDetail = {};\n  var i = 0;\n  var j = 1;\n  while (i < j && i < rows.length) {\n    if (j < rows.length && shouldMergeCell(rows[i], rows[j], code)) {\n      j++;\n      span++;\n    } else {\n      for (var k = i; k < j; k++) {\n        var row = rows[k];\n        var rowKeyValue = row[rowKey];\n        spanDetail[rowKeyValue] = span;\n        span--;\n        i++;\n      }\n      span = 1;\n    }\n    if (i === j) j++;\n  }\n  return spanDetail;\n}\nfunction shouldMergeCell(prevRow, row, code) {\n  var _row$cprop$nomerge;\n  if (!row.cprop) return false;\n  if ((_row$cprop$nomerge = row.cprop.nomerge) !== null && _row$cprop$nomerge !== void 0 && _row$cprop$nomerge.includes(code)) return false;\n  var value = row[code];\n  var prevValue = prevRow[code];\n  if (Array.isArray(value) && Array.isArray(prevValue)) {\n    return value[0] === prevValue[0];\n  }\n  return prevValue === value;\n}\nfunction setRightBorderCols(_ref3) {\n  var columns = _ref3.columns,\n    getTableOptions = _ref3.getTableOptions;\n  var tableOptions = getTableOptions();\n  var mergeColumns = tableOptions.getMetaOptionsProperty('mergeColumns') || [];\n  if (mergeColumns.length > 0) {\n    var rightBorderCols = getRightBorderCols(columns, mergeColumns);\n    tableOptions.setRightBorderCols(rightBorderCols);\n  }\n}\nfunction getRightBorderCols(columns, mergeColumns) {\n  var leftCol = null;\n  return columns.reduce(function (mergeBorderCols, col) {\n    var hide = col.hide,\n      code = col.code;\n    if (hide) return mergeBorderCols;\n    if (!mergeColumns.includes(code)) {\n      leftCol = col;\n      return mergeBorderCols;\n    }\n    if (leftCol !== null) {\n      mergeBorderCols.push(leftCol.code);\n    }\n    mergeBorderCols.push(col.code);\n    leftCol = null;\n    return mergeBorderCols;\n  }, []);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/utils/merge.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/utils/object.js":
/*!************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/utils/object.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.convertToJS = convertToJS;\nexports.deleteObjectProps = deleteObjectProps;\nexports.isObjectEmpty = isObjectEmpty;\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); } /*\n * @Author: wqhui\n * @Date: 2023-04-27 16:00:30\n * @Description: 对象类型的工具函数\n */\nfunction isObjectEmpty(obj) {\n  if (obj == null) return true;\n  if (_immutable.Map.isMap(obj)) {\n    return obj.size === 0;\n  }\n  if (_typeof(obj) === 'object') {\n    return Object.keys(obj).length === 0;\n  } else {\n    // 其他类型统一返回true..\n    return true;\n  }\n}\nfunction convertToJS(obj) {\n  if (_immutable.Map.isMap(obj)) {\n    return obj.toJS();\n  }\n  return obj;\n}\nfunction deleteObjectProps() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var props = arguments.length > 1 ? arguments[1] : undefined;\n  var cloneObject = _objectSpread({}, obj);\n  props.forEach(function (prop) {\n    delete cloneObject[prop];\n  });\n  return cloneObject;\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/utils/object.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/utils/paramsGetter.js":
/*!******************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/utils/paramsGetter.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getRowSelectedParams = getRowSelectedParams;\n/*\n * @Author: wqhui\n * @Date: 2021-11-30 10:03:54\n * @Description: 参数构造获取\n */\n\nfunction getRowSelectedParams(_ref) {\n  var parentModel = _ref.parentModel,\n    model = _ref.model,\n    getInstance = _ref.getInstance,\n    getTableConfigImmediately = _ref.getTableConfigImmediately,\n    getTableOptions = _ref.getTableOptions;\n  var useModel = parentModel || model;\n  var instance = getInstance();\n  var tableConfig = getTableConfigImmediately();\n  var selectedRowKeys = instance.controller.getSelectedRowKeys();\n  var selectedRows = instance.controller.getSelectedRows();\n  var focusedCell = instance.controller.getFocusedCell();\n  var tableOptions = getTableOptions();\n  var postCols = tableOptions.getDataOptionsProperty('postCols');\n  var pageId = useModel.pageId;\n  var rowKey = tableConfig.rowKey,\n    rowSelection = tableConfig.rowSelection,\n    parentId = tableConfig.parentId,\n    id = tableConfig.id;\n  var key = parentId || id;\n  return {\n    pageId: pageId,\n    key: key,\n    rowKey: rowKey,\n    rowSelection: rowSelection,\n    selectedRowKeys: selectedRowKeys,\n    selectedRows: selectedRows,\n    focusedCell: focusedCell,\n    postCols: postCols\n  };\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/utils/paramsGetter.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/utils/personalizedSetting.js":
/*!*************************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/utils/personalizedSetting.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.personalizedColumnWidthGetter = void 0;\nvar _width = __webpack_require__(/*! ../../TableHelper/column/width */ \"./src/component/web/DataGrid/TableHelper/column/width.js\");\nvar personalizedColumnWidthGetter = exports.personalizedColumnWidthGetter = function personalizedColumnWidthGetter(_ref) {\n  var model = _ref.model,\n    getTableOptions = _ref.getTableOptions;\n  return function (colId, type) {\n    return (0, _width.getPersonalizedColumnWidth)({\n      personalizedColumnWidth: getTableOptions().getPersonalizedColumnWidth(),\n      colId: colId,\n      type: type,\n      model: model\n    });\n  };\n};\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/utils/personalizedSetting.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/utils/tracking.js":
/*!**************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/utils/tracking.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.shouldCellRangesSumTracking = shouldCellRangesSumTracking;\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nfunction shouldCellRangesSumTracking(gridType, isCellRangesSum) {\n  if (gridType === _const.GRID_TYPE.listViewGrid) {\n    return isCellRangesSum === true;\n  } else if (gridType === _const.GRID_TYPE.virtualViewGrid || gridType === undefined) {\n    return isCellRangesSum === false;\n  }\n  return false;\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/utils/tracking.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/utils/validate.js":
/*!**************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/utils/validate.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getNextValidateFailedCol = getNextValidateFailedCol;\nexports.updateValidateFailedCellCount = updateValidateFailedCellCount;\n__webpack_require__(/*! core-js/modules/es.array.find-index.js */ \"../../node_modules/core-js/modules/es.array.find-index.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"../../node_modules/core-js/modules/es.array.reduce.js\");\n__webpack_require__(/*! core-js/modules/es.map.js */ \"../../node_modules/core-js/modules/es.map.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _appModelFunction = __webpack_require__(/*! @/model/appModelFunction */ \"./src/model/appModelFunction.js\");\n/*\n * @Author: wqhui\n * @Date: 2023-01-05 19:10:00\n * @Description:\n */\n\nfunction updateValidateFailedCellCount(_ref) {\n  var pageId = _ref.pageId,\n    id = _ref.id,\n    rowKey = _ref.rowKey,\n    tableApi = _ref.tableApi,\n    controller = _ref.controller;\n  (0, _memoryCacher.setPageData)(pageId, [id, _gridConst.VALIDATE_FAILED_COUNT], caculateValidateFailedRowsByFiltered({\n    rowKey: rowKey,\n    tableApi: tableApi,\n    controller: controller,\n    validateFailedCountData: getTableValidateFailedCountData(pageId, id)\n  }));\n}\nfunction caculateValidateFailedRowsByFiltered(_ref2) {\n  var rowKey = _ref2.rowKey,\n    tableApi = _ref2.tableApi,\n    controller = _ref2.controller,\n    validateFailedCountData = _ref2.validateFailedCountData;\n  var validateFailedCellCount = 0;\n  var isColumnFilter = tableApi.hasFilter();\n  var cellCountPerRowMap = validateFailedCountData.cellCountPerRowMap,\n    cellCount = validateFailedCountData.cellCount;\n  if (isColumnFilter && cellCount) {\n    var _controller$getRows;\n    var showErrorCount = 0;\n    (_controller$getRows = controller.getRows()) === null || _controller$getRows === void 0 || _controller$getRows.forEach(function (row) {\n      if (cellCountPerRowMap.has(row[rowKey])) {\n        showErrorCount += cellCountPerRowMap.get(row[rowKey]);\n      }\n    });\n    validateFailedCellCount = cellCount - showErrorCount;\n  }\n  return validateFailedCellCount;\n}\nfunction getTableValidateFailedCountData(pageId, tableId) {\n  var initialResult = {\n    cellCountPerRowMap: new Map(),\n    cellCount: 0\n  };\n  var gridValidateData = (0, _appModelFunction.getGridValidateData)(pageId, [tableId]);\n  if (gridValidateData) {\n    return gridValidateData.reduce(function (result, rowValidateData, rowKey) {\n      result.cellCountPerRowMap.set(rowKey, rowValidateData.size);\n      result.cellCount += rowValidateData.size;\n      return result;\n    }, initialResult);\n  }\n  return initialResult;\n}\nfunction getNextValidateFailedCol(startColId, flatColumns, gridRowValidateData) {\n  var index = flatColumns.findIndex(function (col) {\n    return col.code === startColId;\n  });\n  index++; // 从下一个列查找\n  while (index < flatColumns.length) {\n    var col = flatColumns[index];\n    if (gridRowValidateData.has(col.code)) {\n      return col;\n    }\n    index++;\n  }\n  return null;\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/utils/validate.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/TableHelper/component/BaseGridQuickSearch.js":
/*!*********************************************************************************!*\
  !*** ./src/component/web/DataGrid/TableHelper/component/BaseGridQuickSearch.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = BaseGridQuickSearch;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.find-index.js */ \"../../node_modules/core-js/modules/es.array.find-index.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.reverse.js */ \"../../node_modules/core-js/modules/es.array.reverse.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _componentStyles = _interopRequireDefault(__webpack_require__(/*! ./componentStyles.less */ \"./src/component/web/DataGrid/TableHelper/component/componentStyles.less\"));\nvar _keyCode = __webpack_require__(/*! @/constant/keyCode */ \"./src/constant/keyCode.js\");\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"../../node_modules/classnames/index.js\"));\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction BaseGridQuickSearch(_ref) {\n  var gridContainerEle = _ref.gridContainerEle,\n    getAllDisplayColumns = _ref.getAllDisplayColumns,\n    getRowCount = _ref.getRowCount,\n    getRowByIndex = _ref.getRowByIndex,\n    getNoMatchTips = _ref.getNoMatchTips,\n    getCellDispalyValue = _ref.getCellDispalyValue,\n    getFocusedCell = _ref.getFocusedCell,\n    handleMatchCell = _ref.handleMatchCell,\n    resetNoMatchListFlag = _ref.resetNoMatchListFlag;\n  var _useState = (0, _react.useState)(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    show = _useState2[0],\n    setShow = _useState2[1];\n  var _useState3 = (0, _react.useState)(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchValue = _useState4[0],\n    setSearchValue = _useState4[1];\n  var _useState5 = (0, _react.useState)([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    noMatchList = _useState6[0],\n    setNoMatchList = _useState6[1];\n  var searchInputRef = (0, _react.useRef)();\n  (0, _react.useEffect)(function () {\n    setNoMatchList([]);\n  }, [resetNoMatchListFlag]);\n  (0, _react.useEffect)(function () {\n    if (show) {\n      gridContainerEle === null || gridContainerEle === void 0 || gridContainerEle.classList.add('kd-table-grid-quick-search');\n    } else {\n      gridContainerEle === null || gridContainerEle === void 0 || gridContainerEle.classList.remove('kd-table-grid-quick-search');\n    }\n  }, [show]);\n  (0, _react.useEffect)(function () {\n    gridContainerEle && gridContainerEle.addEventListener('keydown', handleGridContainerKeyDown);\n    document.addEventListener('keydown', handleDocumentKeyDown);\n    return function () {\n      gridContainerEle && gridContainerEle.removeEventListener('keydown', handleGridContainerKeyDown);\n      document.removeEventListener('keydown', handleDocumentKeyDown);\n    };\n  }, []);\n  var handleGridContainerKeyDown = function handleGridContainerKeyDown(e) {\n    var isCtrlKey = e.ctrlKey || e.metaKey;\n    if (isCtrlKey && e.keyCode === _keyCode.KEYS.F) {\n      var _searchInputRef$curre;\n      e.preventDefault();\n      setShow(true);\n      (_searchInputRef$curre = searchInputRef.current) === null || _searchInputRef$curre === void 0 || _searchInputRef$curre.focus();\n    }\n  };\n  var handleDocumentKeyDown = function handleDocumentKeyDown(e) {\n    if (e.keyCode === _keyCode.KEYS.ESC) {\n      handleClose();\n    }\n  };\n\n  // Enter 键控制向前或者向后查找\n  var handleInputKeyDown = function handleInputKeyDown(e) {\n    if (e.keyCode === _keyCode.KEYS.ENTER) {\n      var isShiftKey = e.shiftKey;\n      var isSearchAfter = !isShiftKey;\n      handleSearch(isSearchAfter);\n    }\n  };\n  var handleSearchValueChange = function handleSearchValueChange(e) {\n    var inputValue = e.target.value;\n    setSearchValue(inputValue);\n  };\n  var handleSearch = function handleSearch() {\n    var isSearchAfter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (searchValue === '' || noMatchList.includes(searchValue)) return; // 空值, 已经匹配无数据的值不搜索\n    var focusedCell = getFocusedCell() || {};\n    var columns = getAllDisplayColumns();\n    var rowIndex = focusedCell.rowIndex,\n      code = focusedCell.code;\n    var rowCount = getRowCount();\n    var searchTargetCell = getSearchTargetCell({\n      rowIndex: rowIndex,\n      columns: columns,\n      rowCount: rowCount,\n      code: code,\n      isSearchAfter: isSearchAfter\n    });\n    if (searchTargetCell) {\n      handleMatchCell(searchTargetCell);\n    } else {\n      // 遍历完都找不到则显示没有匹配的提示\n      setNoMatchList([].concat(_toConsumableArray(noMatchList), [searchValue]));\n    }\n  };\n  var getSearchTargetCell = function getSearchTargetCell(_ref2) {\n    var rowIndex = _ref2.rowIndex,\n      columns = _ref2.columns,\n      rowCount = _ref2.rowCount,\n      code = _ref2.code,\n      _ref2$isSearchAfter = _ref2.isSearchAfter,\n      isSearchAfter = _ref2$isSearchAfter === void 0 ? true : _ref2$isSearchAfter;\n    var searchColumns = isSearchAfter ? columns : columns.reverse();\n    var baseRowIndex = Math.max(rowIndex || 0, 0);\n    var baseColumnIndex = Math.max(searchColumns.findIndex(function (col) {\n      return col.code === code;\n    }), 0);\n    for (var i = 0; i <= rowCount; i++) {\n      var offset = isSearchAfter ? i : rowCount - i;\n      // 通过取模的方式控制往前查找或者往后查找\n      var searchRowIndex = (baseRowIndex + offset) % rowCount;\n      for (var j = 0; j < searchColumns.length; j++) {\n        // 第一个搜索行查找时要从焦点单元格开始\n        if (i === 0 && j <= baseColumnIndex) continue;\n        var col = searchColumns[j];\n        var record = getRowByIndex(searchRowIndex);\n        var cellValue = getCellDispalyValue(record, col);\n        if (cellValue !== null && cellValue !== void 0 && cellValue.includes(searchValue)) {\n          return {\n            code: col.code,\n            rowIndex: searchRowIndex,\n            record: record\n          };\n        }\n      }\n    }\n    return null;\n  };\n  var handleClose = function handleClose() {\n    setShow(false);\n  };\n  var inputCls = (0, _classnames[\"default\"])(['hover-theme-border-color1', _componentStyles[\"default\"]['search-input']]);\n  var searchButtonCls = (0, _classnames[\"default\"])(['hover-theme-border-color1', _componentStyles[\"default\"]['search-btn']]);\n  var closeIconCls = (0, _classnames[\"default\"])(['kdfont', 'kdfont-guanbi8', 'kd-hover-color', _componentStyles[\"default\"].icon]);\n  var searchBeforeIconCls = (0, _classnames[\"default\"])(['kdfont', 'kdfont-shangla', 'kd-hover-color', _componentStyles[\"default\"].icon]);\n  var searchAfterIconCls = (0, _classnames[\"default\"])(['kdfont', 'kdfont-xiala', 'kd-hover-color', _componentStyles[\"default\"].icon]);\n  var showNoMatchTips = noMatchList.includes(searchValue);\n  return show ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _componentStyles[\"default\"]['grid-quick-search-container']\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _componentStyles[\"default\"]['search-box']\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _componentStyles[\"default\"]['search-box-content']\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"input\", {\n    ref: searchInputRef,\n    className: inputCls,\n    value: searchValue,\n    onKeyDown: handleInputKeyDown,\n    onChange: handleSearchValueChange\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"button\", {\n    className: searchButtonCls,\n    onClick: function onClick() {\n      return handleSearch();\n    }\n  }, (0, _intlApi.getLangMsg)('gridSearch.key001')), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: searchBeforeIconCls,\n    onClick: function onClick() {\n      return handleSearch(false);\n    }\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: searchAfterIconCls,\n    onClick: function onClick() {\n      return handleSearch();\n    }\n  })), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: closeIconCls,\n    onClick: handleClose\n  })), showNoMatchTips ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _componentStyles[\"default\"]['no-found-box']\n  }, getNoMatchTips()) : null) : null;\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/TableHelper/component/BaseGridQuickSearch.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/TableHelper/component/BaseTileAggregate.js":
/*!*******************************************************************************!*\
  !*** ./src/component/web/DataGrid/TableHelper/component/BaseTileAggregate.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = BaseTileAggregate;\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"../../node_modules/core-js/modules/es.array.reduce.js\");\n__webpack_require__(/*! core-js/modules/es.array.sort.js */ \"../../node_modules/core-js/modules/es.array.sort.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"../../node_modules/classnames/index.js\"));\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nvar _componentStyles = _interopRequireDefault(__webpack_require__(/*! ./componentStyles.less */ \"./src/component/web/DataGrid/TableHelper/component/componentStyles.less\"));\nvar _MultiCurrencyAmounAggregateContent = _interopRequireDefault(__webpack_require__(/*! ./MultiCurrencyAmounAggregateContent */ \"./src/component/web/DataGrid/TableHelper/component/MultiCurrencyAmounAggregateContent.js\"));\nvar _cell = __webpack_require__(/*! ../util/cell */ \"./src/component/web/DataGrid/TableHelper/util/cell.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /*\n * @Author: wqhui\n * @Date: 2023-08-09 10:10:20\n * @Description:\n */\nfunction BaseTileAggregate(_ref) {\n  var className = _ref.className,\n    _ref$dataSource = _ref.dataSource,\n    dataSource = _ref$dataSource === void 0 ? [] : _ref$dataSource,\n    _ref$dataIndex = _ref.dataIndex,\n    dataIndex = _ref$dataIndex === void 0 ? {} : _ref$dataIndex,\n    seqName = _ref.seqName,\n    getColumnMap = _ref.getColumnMap;\n  var renderObject = dataSource.reduce(function (result, record) {\n    var recordKeys = Object.keys(record);\n    recordKeys.forEach(function (key) {\n      if (!result[key]) {\n        result[key] = [];\n      }\n      result[key].push(record[key]);\n    });\n    return result;\n  }, {});\n  var renderKeys = Object.keys(dataIndex).filter(function (key) {\n    return renderObject[key] !== undefined && key !== seqName;\n  }).sort(function (key1, key2) {\n    return dataIndex[key1] - dataIndex[key2];\n  });\n  var columnMap = getColumnMap();\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: (0, _classnames[\"default\"])(_componentStyles[\"default\"]['tile-aggregate-wrapper'], _defineProperty({}, className, !!className))\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _componentStyles[\"default\"]['tile-aggregate-title']\n  }, (0, _intlApi.getLangMsg)('grid.key0019')), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _componentStyles[\"default\"]['tile-aggregate-list']\n  }, renderKeys.map(function (key) {\n    var values = renderObject[key];\n    var column = columnMap.get(key);\n    if (column == null || column.name == null || column.hide) {\n      return null;\n    }\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      className: _componentStyles[\"default\"]['tile-aggregate-list-item'],\n      key: key\n    }, column.name, \"\\uFF1A\", values.map(function (value, index) {\n      return /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n        key: column.name + index,\n        className: _componentStyles[\"default\"]['tile-aggregate-list-item-value']\n      }, (0, _cell.isMultiCurrencyAmountCell)(value) ? /*#__PURE__*/_react[\"default\"].createElement(_MultiCurrencyAmounAggregateContent[\"default\"], {\n        value: value,\n        displayValue: value.val\n      }) : value);\n    }));\n  })));\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/TableHelper/component/BaseTileAggregate.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/TableHelper/component/BaseValidateControlArrow.js":
/*!**************************************************************************************!*\
  !*** ./src/component/web/DataGrid/TableHelper/component/BaseValidateControlArrow.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = BaseValidateControlArrow;\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"../../node_modules/classnames/index.js\"));\nvar _componentStyles = _interopRequireDefault(__webpack_require__(/*! ./componentStyles.less */ \"./src/component/web/DataGrid/TableHelper/component/componentStyles.less\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /*\n * @Author: wqhui\n * @Date: 2022-08-08 16:22:05\n * @Description:\n */\nfunction BaseValidateControlArrow(_ref) {\n  var arrow = _ref.arrow,\n    handleClick = _ref.handleClick,\n    _ref$topStyle = _ref.topStyle,\n    topStyle = _ref$topStyle === void 0 ? {} : _ref$topStyle,\n    _ref$bottomStyle = _ref.bottomStyle,\n    bottomStyle = _ref$bottomStyle === void 0 ? {} : _ref$bottomStyle;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, arrow.top ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    onClick: handleClick,\n    \"data-arrow\": \"top\",\n    className: (0, _classnames[\"default\"])(_componentStyles[\"default\"]['arrow-icon'], 'kdfont kdfont-dingbuyichang'),\n    style: _objectSpread({\n      top: 0\n    }, topStyle)\n  }) : null, arrow.bottom ? /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    onClick: handleClick,\n    \"data-arrow\": \"bottom\",\n    className: (0, _classnames[\"default\"])(_componentStyles[\"default\"]['arrow-icon'], 'kdfont kdfont-dibuyichang'),\n    style: _objectSpread({\n      bottom: 0\n    }, bottomStyle)\n  }) : null);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/TableHelper/component/BaseValidateControlArrow.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/TableHelper/component/BaseValidateTip.js":
/*!*****************************************************************************!*\
  !*** ./src/component/web/DataGrid/TableHelper/component/BaseValidateTip.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = BaseValidateTip;\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"../../node_modules/classnames/index.js\"));\nvar _componentStyles = _interopRequireDefault(__webpack_require__(/*! ./componentStyles.less */ \"./src/component/web/DataGrid/TableHelper/component/componentStyles.less\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /*\n * @Author: wqhui\n * @Date: 2022-07-29 10:34:04\n * @Description:\n */\nfunction BaseValidateTip(_ref) {\n  var errorCount = _ref.errorCount,\n    clearFilter = _ref.clearFilter,\n    className = _ref.className;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: (0, _classnames[\"default\"])(_componentStyles[\"default\"]['validate-tip'], 'kd-cq-table-filtered-valid-tip', _defineProperty({}, className, !!className))\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: \"kdfont kdfont-jinggao-mian\"\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: _componentStyles[\"default\"]['validate-tip-text']\n  }, errorCount, \"\\u4E2A\\u9519\\u8BEF\\u9879\\u88AB\\u9690\\u85CF\"), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    onClick: clearFilter,\n    className: _componentStyles[\"default\"]['validate-tip-btn']\n  }, \"\\u53D6\\u6D88\\u7B5B\\u9009\"));\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/TableHelper/component/BaseValidateTip.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/TableHelper/component/CellRangesSumComponent.js":
/*!************************************************************************************!*\
  !*** ./src/component/web/DataGrid/TableHelper/component/CellRangesSumComponent.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = CellRangesSumComponent;\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.number.to-fixed.js */ \"../../node_modules/core-js/modules/es.number.to-fixed.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.parse-float.js */ \"../../node_modules/core-js/modules/es.parse-float.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _big = _interopRequireDefault(__webpack_require__(/*! big.js */ \"../../node_modules/big.js/big.js\"));\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"../../node_modules/classnames/index.js\"));\nvar _resizeObserve = _interopRequireDefault(__webpack_require__(/*! @/util/resizeObserve */ \"./src/util/resizeObserve.js\"));\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _gridConst = __webpack_require__(/*! @/constant/gridConst */ \"./src/constant/gridConst.js\");\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nvar _formatUtil = __webpack_require__(/*! @/util/formatUtil */ \"./src/util/formatUtil.js\");\nvar _dragService = __webpack_require__(/*! @/service/web/dragService.js */ \"./src/service/web/dragService.js\");\nvar _componentStyles = _interopRequireDefault(__webpack_require__(/*! ./componentStyles.less */ \"./src/component/web/DataGrid/TableHelper/component/componentStyles.less\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar INIT_POSITION = {\n  left: 50,\n  bottom: 50\n};\nfunction CellRangesSumComponent(_ref) {\n  var pageId = _ref.pageId,\n    gridId = _ref.gridId,\n    getParentElement = _ref.getParentElement;\n  var _useState = (0, _react.useState)({\n      plus: new _big[\"default\"](0),\n      average: new _big[\"default\"](0),\n      count: 0,\n      numberCount: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    cellRangesSumResult = _useState2[0],\n    setCellRangesSumResult = _useState2[1];\n  var _useState3 = (0, _react.useState)(_objectSpread({}, INIT_POSITION)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    position = _useState4[0],\n    setPosition = _useState4[1];\n  var updatePosition = function updatePosition(newPosition) {\n    if (newPosition) {\n      setPosition(newPosition);\n    } else {\n      setPosition(_objectSpread({}, INIT_POSITION));\n    }\n  };\n  (0, _react.useEffect)(function () {\n    var cellRangesSumResultChange = function cellRangesSumResultChange(sumResult) {\n      setCellRangesSumResult(sumResult);\n    };\n    var removeDataChangeListener = (0, _memoryCacher.addDataChangeListener)(pageId, [_gridConst.CELL_RANGES_SUM_RESULT, gridId], cellRangesSumResultChange);\n    return function () {\n      removeDataChangeListener();\n    };\n  }, []);\n  if (cellRangesSumResult.numberCount <= 1 || cellRangesSumResult.isValid === false) return null;\n  var getFormatNumber = function getFormatNumber(value) {\n    return (0, _formatUtil.formatNumber)(value, {\n      // mask: '#',\n      zeroShow: true,\n      decimalLength: 10,\n      noDisplayDecimalTailZero: true // 去尾零\n    });\n  };\n\n  // 精度保留十位，去掉尾零\n  var plusString = (0, _intlApi.getLangMsg)('grid.key0047') + '：' + getFormatNumber(cellRangesSumResult.plus.toFixed(10).toString());\n  var averageString = (0, _intlApi.getLangMsg)('grid.key0049') + '：' + getFormatNumber(cellRangesSumResult.average.toFixed(10).toString());\n  // const countString = getLangMsg('grid.key0048') + '：' + cellRangesSumResult.count\n  return /*#__PURE__*/_react[\"default\"].createElement(CellRangesSum, {\n    plusString: plusString,\n    averageString: averageString,\n    getParentElement: getParentElement,\n    position: position,\n    updatePosition: updatePosition\n  });\n}\nfunction CellRangesSum(_ref2) {\n  var plusString = _ref2.plusString,\n    averageString = _ref2.averageString,\n    getParentElement = _ref2.getParentElement,\n    position = _ref2.position,\n    updatePosition = _ref2.updatePosition;\n  var containerRef = (0, _react.useRef)();\n  var startPositionRef = (0, _react.useRef)({\n    left: 0,\n    bottom: 0\n  });\n  var maxRangeRef = (0, _react.useRef)({});\n  var handleMoveStart = (0, _react.useCallback)(function () {\n    startPositionRef.current.left = parseFloat(containerRef.current.style.left);\n    startPositionRef.current.bottom = parseFloat(containerRef.current.style.bottom);\n  }, []);\n  var handleMoving = (0, _react.useCallback)(function (_dragElement, _x, _y, _width, _height, state, x, y) {\n    if (state === 'finished') {\n      updatePosition({\n        left: startPositionRef.current.left + x,\n        bottom: startPositionRef.current.bottom - y\n      });\n    }\n  }, []);\n  (0, _react.useEffect)(function () {\n    (0, _dragService.dragElement)(containerRef.current, {\n      parentElement: getParentElement ? getParentElement() : containerRef.current.parentElement,\n      onStart: handleMoveStart,\n      onMove: handleMoving,\n      dragRegion: {\n        left: 9,\n        width: 22\n      },\n      savePosition: false,\n      moveToBody: true,\n      allIn: true\n    });\n  }, [getParentElement]);\n  (0, _react.useEffect)(function () {\n    var parentElement = getParentElement ? getParentElement() : containerRef.current.parentElement;\n    var handleSizeChanged = function handleSizeChanged(rect) {\n      var width = rect.width,\n        height = rect.height,\n        hide = rect.hide;\n      if (hide) {\n        return;\n      }\n      var _getMaxRange = getMaxRange(width, height),\n        left = _getMaxRange.left,\n        bottom = _getMaxRange.bottom;\n      updateMaxRange(left, bottom);\n      rePositionContainer(parseFloat(containerRef.current.style.left), parseFloat(containerRef.current.style.bottom));\n    };\n    initMaxRange();\n    var resizeObserver = (0, _resizeObserve[\"default\"])(parentElement, handleSizeChanged);\n    return function () {\n      resizeObserver.removeResizeObserve();\n      resizeObserver = null;\n    };\n    function initMaxRange() {\n      if (isUninitMaxRange()) {\n        var _getMaxRange2 = getMaxRange(parentElement.clientWidth, parentElement.clientHeight),\n          left = _getMaxRange2.left,\n          bottom = _getMaxRange2.bottom;\n        updateMaxRange(left, bottom);\n      }\n    }\n  }, [getParentElement]);\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    ref: containerRef,\n    className: _componentStyles[\"default\"]['cell-ranges-sum-container'],\n    style: position\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"i\", {\n    className: (0, _classnames[\"default\"])('kdfont kdfont-tuozhuai kd-hover-color', _componentStyles[\"default\"]['move-icon'])\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _componentStyles[\"default\"]['sum-item-area']\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: _componentStyles[\"default\"]['sum-item']\n  }, plusString), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: _componentStyles[\"default\"]['sum-item']\n  }, averageString)));\n  function getValidLeft(left) {\n    return Math.max(0, Math.min(left, maxRangeRef.current.left));\n  }\n  function getValidBottom(bottom) {\n    return Math.max(0, Math.min(bottom, maxRangeRef.current.bottom));\n  }\n  function rePositionContainer(left, right) {\n    containerRef.current.style.left = getValidLeft(left) + 'px';\n    containerRef.current.style.bottom = getValidBottom(right) + 'px';\n  }\n  function getMaxRange(width, height) {\n    return {\n      left: width - containerRef.current.offsetWidth,\n      bottom: height - containerRef.current.offsetHeight\n    };\n  }\n  function updateMaxRange(left, bottom) {\n    maxRangeRef.current.left = left;\n    maxRangeRef.current.bottom = bottom;\n  }\n  function isUninitMaxRange() {\n    return !maxRangeRef.current.left || !maxRangeRef.current.bottom;\n  }\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/TableHelper/component/CellRangesSumComponent.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/TableHelper/component/toolBar/toolbarModule/VirtualViewToolBar.js":
/*!******************************************************************************************************!*\
  !*** ./src/component/web/DataGrid/TableHelper/component/toolBar/toolbarModule/VirtualViewToolBar.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _VirtualViewToolBar = _interopRequireDefault(__webpack_require__(/*! ./VirtualViewToolBar.less */ \"./src/component/web/DataGrid/TableHelper/component/toolBar/toolbarModule/VirtualViewToolBar.less\"));\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"../../node_modules/classnames/index.js\"));\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _kdesign = __webpack_require__(/*! @kdcloudjs/kdesign */ \"webpack/sharing/consume/default/@kdcloudjs/kdesign/@kdcloudjs/kdesign\");\nvar _SimplePagination = _interopRequireDefault(__webpack_require__(/*! ./SimplePagination */ \"./src/component/web/DataGrid/TableHelper/component/toolBar/toolbarModule/SimplePagination.js\"));\nvar _singleSpa = __webpack_require__(/*! @/api/singleSpa */ \"./src/api/singleSpa.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction VirtualViewToolBar(_ref) {\n  var model = _ref.model,\n    dataCount = _ref.dataCount,\n    pageIndex = _ref.pageIndex,\n    pageRows = _ref.pageRows,\n    hasSelectAllRow = _ref.hasSelectAllRow,\n    handleVirtualViewSelectAll = _ref.handleVirtualViewSelectAll,\n    dataValueTimeStamp = _ref.dataValueTimeStamp,\n    isSingleSelection = _ref.isSingleSelection,\n    showRowCount = _ref.showRowCount,\n    isRealDataCount = _ref.isRealDataCount,\n    handleSetPageIndex = _ref.handleSetPageIndex,\n    handleSetPageSize = _ref.handleSetPageSize,\n    showPagination = _ref.showPagination,\n    rowCount = _ref.rowCount,\n    isLast = _ref.isLast;\n  var _useState = (0, _react.useState)(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedAll = _useState2[0],\n    setSelectedAll = _useState2[1];\n  var _useState3 = (0, _react.useState)(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedCount = _useState4[0],\n    setSelectedCount = _useState4[1];\n  (0, _react.useEffect)(function () {\n    if (isRealDataCount) {\n      if (selectedCount > 0 && selectedCount === dataCount) {\n        setSelectedAll(true);\n      } else {\n        setSelectedAll(false);\n      }\n    } else {\n      setSelectedAll(false);\n    }\n  }, [selectedCount, isRealDataCount, dataValueTimeStamp]);\n  (0, _react.useEffect)(function () {\n    var pageId = model.pageId,\n      key = model.key;\n    var getSelectedDataInfo = function getSelectedDataInfo(data) {\n      var selectedRowsCount = data.get('selectedRowsCount') || 0;\n      setSelectedCount(selectedRowsCount);\n    };\n    var selectedInfo = (0, _memoryCacher.getPageData)(pageId, [key, 'selectedInfo']);\n    if (selectedInfo) {\n      var selectedRowsCount = selectedInfo.get('selectedRowsCount') || 0;\n      setSelectedCount(selectedRowsCount);\n    }\n    var removeListener = (0, _memoryCacher.addDataChangeListener)(pageId, [key, 'selectedInfo'], getSelectedDataInfo);\n    return function () {\n      removeListener();\n    };\n  }, []);\n  var handleSelectedButtonClick = function handleSelectedButtonClick(e) {\n    handleVirtualViewSelectAll(selectedAll);\n    // 只需考虑点击后全选/取消全选的状态，没有手动勾选全部数据之后按钮变成取消全选的逻辑\n    setSelectedAll(!selectedAll);\n  };\n  var handlePageInfoChange = function handlePageInfoChange(_pageIndex, _pageSize) {\n    // 页数改变\n    if (_pageSize !== pageRows) {\n      handleSetPageSize(_pageSize);\n    } else if (pageIndex !== _pageIndex) {\n      handleSetPageIndex(_pageIndex);\n    }\n  };\n  var setAmountOperation = function setAmountOperation(value, operation) {\n    if (operation === 'setPageRows') {\n      handleSetPageSize(value);\n    } else if (operation === 'setPageIndex') {\n      handleSetPageIndex(value);\n    }\n  };\n  var renderPagination = function renderPagination() {\n    var pageSizeOptions = [200, 500, 1000, 2000, 5000];\n    var paginationClass = (0, _classnames[\"default\"])('kd-cq-pagination', _VirtualViewToolBar[\"default\"]['pagination-info']);\n    var dropdownProps = {\n      getPopupContainer: function getPopupContainer() {\n        return (0, _singleSpa.getRootContainter)();\n      },\n      placement: 'bottomRight',\n      scrollHidden: true,\n      popperStyle: {\n        zIndex: 1050,\n        minWidth: 67,\n        display: 'block'\n      },\n      // 处理因ToolBar.less里面针对.toolBar下的div加了样式引起KUI分页下拉菜单样式错乱问题\n      popperClassName: 'kd-cq-dropdown kd-cq-dropdown-select-type kd-cq-pagination-dropdown'\n    };\n    return isRealDataCount ? /*#__PURE__*/_react[\"default\"].createElement(_kdesign.Pagination, {\n      className: paginationClass,\n      total: dataCount,\n      pageType: \"basic\",\n      current: pageIndex,\n      onChange: handlePageInfoChange,\n      showSizeChanger: true,\n      pageSize: pageRows,\n      dropdownProps: dropdownProps,\n      pageSizeOptions: pageSizeOptions\n    }) : /*#__PURE__*/_react[\"default\"].createElement(_SimplePagination[\"default\"], {\n      pageId: model.pageId,\n      current: pageIndex,\n      pageSize: pageRows,\n      isLastPage: isLast,\n      rowcount: rowCount,\n      pageType: \"basic\",\n      pageSizeOptions: pageSizeOptions,\n      dropdownProps: dropdownProps,\n      setAmountOperation: setAmountOperation\n    });\n  };\n  var delimiter = showRowCount ? '，' : '';\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: (0, _classnames[\"default\"])(_VirtualViewToolBar[\"default\"]['virtual-view-toolbar'], 'kd-cq-toolbar')\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _VirtualViewToolBar[\"default\"]['toolbar-content']\n  }, isRealDataCount && dataCount > 0 && /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: _VirtualViewToolBar[\"default\"]['toolbar-content-item']\n  }, selectedCount > 0 && !isSingleSelection ? (0, _intlApi.getLangMsg)({\n    key: 'toolbar.key0007',\n    variables: {\n      count: selectedCount\n    }\n  }) + delimiter : ''), /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    className: _VirtualViewToolBar[\"default\"]['toolbar-content-item']\n  }, showRowCount ? (0, _intlApi.getLangMsg)({\n    key: 'toolbar.key0017',\n    variables: {\n      count: dataCount\n    }\n  }) : '')), hasSelectAllRow && (dataCount > 0 || !isRealDataCount) && /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n    onClick: handleSelectedButtonClick,\n    className: (0, _classnames[\"default\"])('theme-fc', _VirtualViewToolBar[\"default\"]['toolbar-selected-button'])\n  }, selectedAll ? (0, _intlApi.getLangMsg)('toolbar.key0002') : (0, _intlApi.getLangMsg)('toolbar.key0003'))), showPagination && renderPagination());\n}\nvar _default = exports[\"default\"] = VirtualViewToolBar;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/TableHelper/component/toolBar/toolbarModule/VirtualViewToolBar.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/TableHelper/render/viewModel/ViewManager.js":
/*!********************************************************************************!*\
  !*** ./src/component/web/DataGrid/TableHelper/render/viewModel/ViewManager.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = ViewManager;\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _TiledView = _interopRequireDefault(__webpack_require__(/*! ./tiledView/TiledView */ \"./src/component/web/DataGrid/TableHelper/render/viewModel/tiledView/TiledView.js\"));\nvar _array = __webpack_require__(/*! ../../util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction ViewManager(_ref) {\n  var model = _ref.model,\n    pageId = _ref.pageId,\n    id = _ref.id,\n    dispatch = _ref.dispatch,\n    activeView = _ref.activeView,\n    setActiveView = _ref.setActiveView,\n    _activeRowKey = _ref.activeRowKey,\n    viewParams = _ref.viewParams,\n    getRowDatas = _ref.getRowDatas,\n    getRow = _ref.getRow,\n    getFiledVisible = _ref.getFiledVisible,\n    getFieldLocked = _ref.getFieldLocked,\n    getColProperty = _ref.getColProperty,\n    setSelectRows = _ref.setSelectRows,\n    getDataProperty = _ref.getDataProperty,\n    postRowSelection = _ref.postRowSelection,\n    params = _ref.params;\n  // const [activeView, setActiveView] = useState('grid')\n  var _useState = (0, _react.useState)(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeRowKey = _useState2[0],\n    setActiveRowKey = _useState2[1];\n  var activeRowKeyRef = (0, _react.useRef)(_activeRowKey);\n  activeRowKeyRef.current = _activeRowKey;\n  var getColMetaByField = function getColMetaByField(field) {\n    // 列数很多的情况下，直接toJS很慢，这里找到目标列再toJS\n    var cols = model.getMetaProperty('columns') || (0, _immutable.List)();\n    var colMeta = (0, _array.listFind)(cols, function (col) {\n      return col.get('dataIndex') === field;\n    });\n    if (!colMeta) {\n      console.warn(\"\".concat(field, \" column meta not found!\"));\n    }\n    return colMeta === null || colMeta === void 0 ? void 0 : colMeta.toJS();\n  };\n  var handleSwitch = function handleSwitch(viewType) {\n    if (activeView !== viewType) {\n      setActiveView(viewType);\n      (0, _memoryCacher.setPageData)(pageId, [id, 'viewType'], viewType);\n    }\n    if (viewType !== 'grid') {\n      if (activeRowKey !== activeRowKeyRef.current) {\n        setActiveRowKey(activeRowKeyRef.current);\n      }\n    }\n  };\n  var handleSetActiveRowKey = function handleSetActiveRowKey(rowkey) {\n    if (activeRowKey !== rowkey) {\n      setSelectRows([rowkey]);\n      setActiveRowKey(rowkey);\n    }\n  };\n  (0, _react.useEffect)(function () {\n    if (activeView !== 'grid') {\n      // 切换分录视图时要设置选中行\n      // 切换分录视图时已经有一个dispatch，这里发送请求时要异步处理\n      setTimeout(function () {\n        var rowDatas = getRowDatas() || [];\n        rowDatas.length > 0 && postRowSelection && postRowSelection(activeRowKeyRef.current);\n      });\n    }\n  }, [activeView]);\n  (0, _react.useEffect)(function () {\n    // 初始判断是否设置了切换视图，有则执行\n    var curView = (0, _memoryCacher.getPageData)(pageId, [id, 'switchGridView']);\n    curView && handleSwitch(curView);\n  }, []);\n  (0, _react.useEffect)(function () {\n    var activeHandler = (0, _memoryCacher.addDataChangeListener)(pageId, [id, 'setActiveRowKey'], handleSetActiveRowKey);\n    // todo: 视图控制统一在这里处理\n    var setViewHandler = (0, _memoryCacher.addDataChangeListener)(pageId, [id, 'switchGridView'], handleSwitch);\n    return function () {\n      activeHandler();\n      setViewHandler();\n    };\n  }, [activeView, _activeRowKey]);\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: {\n      display: activeView === 'grid' ? 'none' : 'block',\n      height: '100%'\n    }\n  }, viewParams.map(function (view) {\n    if (view.type === 'tiledView') {\n      return /*#__PURE__*/_react[\"default\"].createElement(_react.Suspense, {\n        fallback: /*#__PURE__*/_react[\"default\"].createElement(\"div\", null)\n      }, /*#__PURE__*/_react[\"default\"].createElement(_TiledView[\"default\"], {\n        meta: view.meta,\n        key: view.type,\n        dispatch: dispatch,\n        activeView: activeView,\n        activeRowKey: activeRowKey,\n        setActiveRowKey: handleSetActiveRowKey,\n        getColMetaByField: getColMetaByField,\n        getFiledVisible: getFiledVisible,\n        getFieldLocked: getFieldLocked,\n        getRowDatas: getRowDatas,\n        getRow: getRow,\n        getColProperty: getColProperty,\n        getDataProperty: getDataProperty,\n        postRowSelection: postRowSelection,\n        params: params\n      }));\n    } else {\n      return null;\n    }\n  }));\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/TableHelper/render/viewModel/ViewManager.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/TableHelper/render/viewModel/tiledView/TiledView.js":
/*!****************************************************************************************!*\
  !*** ./src/component/web/DataGrid/TableHelper/render/viewModel/tiledView/TiledView.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OutlineItem = OutlineItem;\nexports.TiledViewContent = TiledViewContent;\nexports.TiledViewOutline = TiledViewOutline;\nexports[\"default\"] = TiledView;\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.object.assign.js */ \"../../node_modules/core-js/modules/es.object.assign.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.includes.js */ \"../../node_modules/core-js/modules/es.string.includes.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"webpack/sharing/consume/default/react/react?dca2\"));\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nvar _classnames3 = _interopRequireDefault(__webpack_require__(/*! classnames */ \"../../node_modules/classnames/index.js\"));\nvar _global = __webpack_require__(/*! @/global */ \"./src/global/index.js\");\nvar _memoryCacher = __webpack_require__(/*! @/model/memoryCacher */ \"./src/model/memoryCacher.js\");\nvar _componentFactory = _interopRequireDefault(__webpack_require__(/*! @/factory/componentFactory */ \"./src/factory/componentFactory.js\"));\nvar _serverproperties = __webpack_require__(/*! @/constant/serverproperties */ \"./src/constant/serverproperties.js\");\nvar _GridUtils = __webpack_require__(/*! ../../../../AgDataGrid/GridUtils */ \"./src/component/web/DataGrid/AgDataGrid/GridUtils.js\");\nvar _commonUtils = _interopRequireDefault(__webpack_require__(/*! @/component/common/commonUtils */ \"./src/component/common/commonUtils.js\"));\nvar _defaultPropsUtil = __webpack_require__(/*! @/util/defaultPropsUtil */ \"./src/util/defaultPropsUtil.js\");\nvar _emotionalConst = __webpack_require__(/*! @/constant/emotionalConst */ \"./src/constant/emotionalConst.js\");\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nvar _index = _interopRequireDefault(__webpack_require__(/*! ../style/index.less */ \"./src/component/web/DataGrid/TableHelper/render/viewModel/style/index.less\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction TiledView(_ref) {\n  var meta = _ref.meta,\n    dispatch = _ref.dispatch,\n    key = _ref.key,\n    activeView = _ref.activeView,\n    activeRowKey = _ref.activeRowKey,\n    getColMetaByField = _ref.getColMetaByField,\n    getFiledVisible = _ref.getFiledVisible,\n    getFieldLocked = _ref.getFieldLocked,\n    getRowDatas = _ref.getRowDatas,\n    getRow = _ref.getRow,\n    getColProperty = _ref.getColProperty,\n    getDataProperty = _ref.getDataProperty,\n    setActiveRowKey = _ref.setActiveRowKey,\n    postRowSelection = _ref.postRowSelection,\n    params = _ref.params;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _index[\"default\"]['view-container']\n  }, /*#__PURE__*/_react[\"default\"].createElement(TiledViewContent, {\n    meta: meta,\n    key: key,\n    dispatch: dispatch,\n    activeView: activeView,\n    activeRowKey: activeRowKey,\n    getColMetaByField: getColMetaByField,\n    getFiledVisible: getFiledVisible,\n    getFieldLocked: getFieldLocked,\n    getRowDatas: getRowDatas,\n    getRow: getRow,\n    getColProperty: getColProperty,\n    getDataProperty: getDataProperty,\n    setActiveRowKey: setActiveRowKey,\n    postRowSelection: postRowSelection,\n    params: params\n  }));\n}\nfunction TiledViewContent(_ref2) {\n  var meta = _ref2.meta,\n    dispatch = _ref2.dispatch,\n    key = _ref2.key,\n    activeView = _ref2.activeView,\n    activeRowKey = _ref2.activeRowKey,\n    getColMetaByField = _ref2.getColMetaByField,\n    getFiledVisible = _ref2.getFiledVisible,\n    getFieldLocked = _ref2.getFieldLocked,\n    getRowDatas = _ref2.getRowDatas,\n    getRow = _ref2.getRow,\n    getColProperty = _ref2.getColProperty,\n    getDataProperty = _ref2.getDataProperty,\n    setActiveRowKey = _ref2.setActiveRowKey,\n    postRowSelection = _ref2.postRowSelection,\n    params = _ref2.params;\n  var _useReducer = (0, _react.useReducer)(function (x) {\n      return x + 1;\n    }, 0),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    refresh = _useReducer2[0],\n    forceUpdate = _useReducer2[1]; // 强制刷新\n  (0, _react.useEffect)(function () {\n    var pid = params.pid,\n      id = params.id;\n    // 单行刷新需要使用addDataChangeListener来通讯\n    var refreshHandler = (0, _memoryCacher.addDataChangeListener)(pid, [id, 'refreshTiledView'], forceUpdate);\n    return function () {\n      refreshHandler();\n    };\n  }, []);\n  var _getFieldLocked = function _getFieldLocked(colMeta) {\n    return getFieldLocked(colMeta, activeRowKey);\n  };\n  var renderItems = function renderItems() {\n    var pid = params.pid;\n    var items = meta.get('items');\n    var rowData = getRow(activeRowKey) || {};\n    var dataKeys = Object.keys(rowData);\n    if (items && dataKeys.length > 0) {\n      // rowDate为{}表示没值\n      return items.map(function (meta) {\n        return (0, _componentFactory[\"default\"])(pid, meta, (0, _global.getGlobalState)(), undefined, {\n          params: params,\n          rowData: rowData,\n          getFiledVisible: getFiledVisible,\n          getFieldLocked: _getFieldLocked,\n          activeRowKey: activeRowKey,\n          getColMetaByField: getColMetaByField,\n          // mergeState: mergeState,\n          // comfirmDelete: comfirmDelete,\n          getColProperty: getColProperty,\n          getDataProperty: getDataProperty,\n          dispatch: dispatch\n        });\n      });\n    }\n    return null;\n  };\n  var _getSelfCommonClass = (0, _GridUtils.getSelfCommonClass)(meta),\n    Wrap = _getSelfCommonClass.Wrap,\n    Direction = _getSelfCommonClass.Direction,\n    AlignItems = _getSelfCommonClass.AlignItems,\n    AlignContent = _getSelfCommonClass.AlignContent,\n    JustifyContent = _getSelfCommonClass.JustifyContent;\n  var styleMeta = meta.get(_serverproperties.STYLE);\n  var style = (0, _GridUtils.getStyleInObj)(params.config, styleMeta && styleMeta.toJS(), [], true);\n  // 紧凑主题下取容器内边距，目前只处理right 和left\n  var _getDefaultPadding = (0, _defaultPropsUtil.getDefaultPadding)(),\n    paddingRight = _getDefaultPadding.paddingRight,\n    paddingLeft = _getDefaultPadding.paddingLeft;\n  var _style = Object.assign({}, {\n    paddingRight: paddingRight,\n    paddingLeft: paddingLeft\n  }, style);\n  var className = (0, _classnames3[\"default\"])(_defineProperty({}, _index[\"default\"]['tile-content'], true), (0, _commonUtils[\"default\"])({\n    Wrap: Wrap,\n    Direction: Direction,\n    AlignItems: AlignItems,\n    AlignContent: AlignContent,\n    JustifyContent: JustifyContent\n  }));\n  var datas = getRowDatas() || [];\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, datas.length === 0 ? /*#__PURE__*/_react[\"default\"].createElement(NotDataOverlay, null) : /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(TiledViewOutline, {\n    meta: meta,\n    getRowDatas: getRowDatas,\n    getColMetaByField: getColMetaByField,\n    params: params,\n    activeRowKey: activeRowKey,\n    setActiveRowKey: setActiveRowKey,\n    postRowSelection: postRowSelection,\n    columnDefs: null\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: _style,\n    className: className\n  }, renderItems())));\n}\nfunction TiledViewOutline(_ref3) {\n  var meta = _ref3.meta,\n    getRowDatas = _ref3.getRowDatas,\n    getColMetaByField = _ref3.getColMetaByField,\n    params = _ref3.params,\n    activeRowKey = _ref3.activeRowKey,\n    setActiveRowKey = _ref3.setActiveRowKey,\n    postRowSelection = _ref3.postRowSelection,\n    columnDefs = _ref3.columnDefs;\n  var getOutlineFieldData = function getOutlineFieldData(outlineField, rowKey, relatedField) {\n    var datas = getRowDatas() || [];\n    return datas.map(function (row) {\n      var keyData = {};\n      keyData.rk = row.rk;\n      outlineField.forEach(function (key) {\n        keyData[key] = row[key];\n      });\n      relatedField.forEach(function (key) {\n        keyData[key] = row[key];\n      });\n      return keyData;\n    });\n  };\n  var getRelatedField = function getRelatedField(outlineField, rowKey, seq) {\n    var relatedField = [];\n    outlineField.forEach(function (field) {\n      if (field === rowKey || field === seq || field === '') return;\n      var colMeta = getColMetaByField(field);\n      if (!colMeta) return;\n      var editor = colMeta.editor;\n      var sf = editor && editor[_serverproperties.SOURCE_FIELD];\n      if (sf) {\n        relatedField.push(sf);\n      }\n    });\n    return relatedField;\n  };\n  var renderItems = function renderItems(hasSummary) {\n    var rowKey = params.rowKey,\n      seq = params.seq;\n    var outlineField = meta.get('outlineField', (0, _immutable.List)());\n    // let outlineField = fromJS(['seq', 'textfield'])\n    var relatedField = getRelatedField(outlineField, rowKey, seq);\n    var outlineFieldData = getOutlineFieldData(outlineField, rowKey, relatedField);\n    return outlineFieldData.map(function (data) {\n      return /*#__PURE__*/_react[\"default\"].createElement(OutlineItem, {\n        key: data[rowKey],\n        rowKey: rowKey,\n        data: data,\n        params: params,\n        outlineField: outlineField,\n        postRowSelection: postRowSelection,\n        activeRowKey: activeRowKey,\n        setActiveRowKey: setActiveRowKey,\n        hasSummary: hasSummary,\n        seq: seq,\n        columnDefs: columnDefs\n      });\n    });\n  };\n  var hasSummary = true;\n  var outlineField = meta.get('outlineField', (0, _immutable.List)());\n  var style;\n  if (outlineField.get(1, '') === '') {\n    style = {\n      width: 50\n    };\n    hasSummary = false;\n  }\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _index[\"default\"].outline,\n    style: style\n  }, renderItems(hasSummary));\n}\nfunction OutlineItem(_ref4) {\n  var params = _ref4.params,\n    rowKey = _ref4.rowKey,\n    data = _ref4.data,\n    seq = _ref4.seq,\n    outlineField = _ref4.outlineField,\n    activeRowKey = _ref4.activeRowKey,\n    setActiveRowKey = _ref4.setActiveRowKey,\n    postRowSelection = _ref4.postRowSelection,\n    hasSummary = _ref4.hasSummary;\n  var handleClick = function handleClick() {\n    var activeRowKey = data[rowKey];\n    setActiveRowKey(activeRowKey);\n    postRowSelection(activeRowKey);\n  };\n\n  // todo:取格式化值\n  var getCellDisplayValue = function getCellDisplayValue(colId, value, rowData) {\n    return value;\n  };\n  var getOutlineDisplayValue = function getOutlineDisplayValue(key, data) {\n    // const formmatFun = this.props.getGridDisplayFun(key)\n    var v = getCellDisplayValue(key, data[key], data);\n    if (_typeof(v) === 'object') {\n      console.warn('tiled field outline title type is not String!');\n      v = '';\n    }\n    return v;\n  };\n  var renderItems = function renderItems() {\n    return Object.keys(data).map(function (key) {\n      if (!outlineField.includes(key) || key === '') return null;\n      var style = {};\n      var v = data[key];\n      if (key !== seq) {\n        style = Object.assign({\n          marginLeft: '8px',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          overflow: 'hidden'\n        }, style);\n        v = getOutlineDisplayValue(key, data);\n      }\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        key: key,\n        className: _index[\"default\"].item,\n        style: style\n      }, v);\n    });\n  };\n  var rkv = data[rowKey];\n  var className = (0, _classnames3[\"default\"])(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, _index[\"default\"]['outline-item'], true), 'kd-hover-bgcolor', true), 'hover-bg', rkv === activeRowKey), _index[\"default\"]['outline-item-select'], rkv === activeRowKey));\n  var style = {};\n  if (hasSummary === false) {\n    style.justifyContent = 'center';\n  }\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: className,\n    onClick: handleClick,\n    style: style\n  }, renderItems());\n}\nfunction NotDataOverlay() {\n  // 获取情感化\n  var _getCommonEmotionalIn = (0, _defaultPropsUtil.getCommonEmotionalInfo)(_emotionalConst.EMOTIONAL_TYPE_NO_DATA),\n    imagePath = _getCommonEmotionalIn.imagePath,\n    description = _getCommonEmotionalIn.description;\n  // 动态生成image样式\n  var imgStyle = imagePath ? {\n    'background-image': \"url(\".concat(imagePath, \")\")\n  } : {};\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: (0, _classnames3[\"default\"])('kd-cq-empty', _index[\"default\"]['norow-overlay'])\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: _index[\"default\"]['norow-overlay-img'],\n    style: imgStyle\n  }), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"kd-cq-empty-description\"\n  }, description || (0, _intlApi.getLangMsg)({\n    key: 'tiledview.key0001'\n  })));\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/TableHelper/render/viewModel/tiledView/TiledView.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/TableHelper/util/calculateColumnWidth.js":
/*!*****************************************************************************!*\
  !*** ./src/component/web/DataGrid/TableHelper/util/calculateColumnWidth.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.calculatePreferredColumnsWidth = calculatePreferredColumnsWidth;\nexports.getPreferredWidthForColumn = getPreferredWidthForColumn;\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.map.js */ \"../../node_modules/core-js/modules/es.array.map.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _const = __webpack_require__(/*! @/component/common/table/const.js */ \"./src/component/common/table/const.js\");\nvar _width = __webpack_require__(/*! ../../TableHelper/column/width */ \"./src/component/web/DataGrid/TableHelper/column/width.js\");\nvar _array = __webpack_require__(/*! @/component/web/DataGrid/TableHelper/util/array */ \"./src/component/web/DataGrid/TableHelper/util/array.js\");\n/**\n * 自定义的自适应列宽方法\n * @param {Array} columns [{colId,maxWidth}]\n * @param {Object} selector 查找各个单元格的css选择器路径函数 {headerCell:()=>'',bodyCell:()=>''}\n * @param {HTML Node} eGridContainer 表格容器元素\n */\nfunction calculatePreferredColumnsWidth(_ref) {\n  var columns = _ref.columns,\n    selector = _ref.selector,\n    eGridContainer = _ref.eGridContainer,\n    ignoreMaxWidth = _ref.ignoreMaxWidth;\n  if (!Array.isArray(columns)) {\n    columns = [columns];\n  }\n  var preferredWidthsArr = [];\n  var tableFakeContainer = createTableFakeContainer({\n    columns: columns,\n    selector: selector,\n    eGridContainer: eGridContainer\n  });\n  var appendContainer = selector.appendContainer;\n  var appendEle = getAppenedEle(eGridContainer, appendContainer);\n  appendEle.appendChild(tableFakeContainer);\n  var addPreferredWidth = function addPreferredWidth(column) {\n    var colId = column.colId;\n    // 找到每列对应的计算元素\n    var eFakeContainer = tableFakeContainer.querySelector(\"[data-fake-code=\\\"\".concat(colId, \"\\\"]\"));\n    var preferredWidth = getPreferredWidthForColumn({\n      eFakeContainer: eFakeContainer,\n      column: column,\n      ignoreMaxWidth: ignoreMaxWidth\n    });\n    if (preferredWidth > 0) {\n      var _colId = column.colId,\n        _column$minWidth = column.minWidth,\n        minWidth = _column$minWidth === void 0 ? 0 : _column$minWidth;\n      preferredWidthsArr.push({\n        width: Math.max(preferredWidth, minWidth),\n        colId: _colId\n      });\n    }\n  };\n  columns.forEach(addPreferredWidth);\n  appendEle.removeChild(tableFakeContainer);\n  return preferredWidthsArr;\n}\nfunction createTableFakeContainer(_ref2) {\n  var columns = _ref2.columns,\n    selector = _ref2.selector,\n    eGridContainer = _ref2.eGridContainer;\n  var tableFakeContainer = document.createElement('div');\n  tableFakeContainer.className = 'grid-auto-size-table-fake-container';\n\n  // 获取所有列布局完成后的元素\n  var columnFakeContainers = columns.map(function (column) {\n    return getColumnFakeContainer({\n      column: column,\n      selector: selector,\n      eGridContainer: eGridContainer\n    });\n  }).filter(function (item) {\n    return !!item;\n  });\n  // 统一append\n  columnFakeContainers.forEach(function (item) {\n    tableFakeContainer.appendChild(item);\n  });\n  return tableFakeContainer;\n}\nfunction getColumnFakeContainer(_ref3) {\n  var column = _ref3.column,\n    selector = _ref3.selector,\n    eGridContainer = _ref3.eGridContainer;\n  var colId = column.colId;\n  var headerCell = selector.headerCell,\n    bodyCell = selector.bodyCell;\n  var eHeaderCell = getHeaderCellForColumn(colId, eGridContainer, headerCell);\n  if (!eHeaderCell) {\n    return;\n  }\n  var eFakeContainer = document.createElement('span');\n  eFakeContainer.className = 'grid-auto-size-column-fake-container';\n  eFakeContainer.setAttribute('data-fake-code', colId);\n  cloneItemIntoFakeContainer(eHeaderCell, eFakeContainer);\n  var eCells = getAllCellsForColumn(colId, eGridContainer, bodyCell);\n  eCells.forEach(function (eCell) {\n    return cloneItemIntoFakeContainer(eCell, eFakeContainer);\n  });\n  return eFakeContainer;\n}\nfunction getPreferredWidthForColumn(_ref4) {\n  var eFakeContainer = _ref4.eFakeContainer,\n    column = _ref4.column,\n    ignoreMaxWidth = _ref4.ignoreMaxWidth;\n  var colId = column.colId,\n    maxWidth = column.maxWidth,\n    metaColWidth = column.metaColWidth,\n    isIgnoreMaxWidth = column.isIgnoreMaxWidth;\n  var autoSizePadding = 1;\n  var defaultMaxWidth = (0, _width.getMaxAutoWidth)({\n    metaColWidth: metaColWidth\n  });\n  var _maxWidth = maxWidth != null ? maxWidth : defaultMaxWidth;\n  var eFakeContainerWidth = eFakeContainer && eFakeContainer.offsetWidth;\n\n  // 计算出宽度为0只能为隐藏的情况，此时不处理\n  if (!eFakeContainer || eFakeContainerWidth == null || eFakeContainerWidth === 0) {\n    return -1;\n  }\n  var expectWidth = eFakeContainerWidth + autoSizePadding;\n  // 不限制宽度，则无限撑宽\n  if (ignoreMaxWidth || isIgnoreMaxWidth) {\n    return Math.ceil(expectWidth);\n  }\n  return Math.ceil(expectWidth > _maxWidth ? _maxWidth : expectWidth);\n}\nfunction getHeaderCellForColumn(colId, eGridContainer, headerCell) {\n  return eGridContainer.querySelector(headerCell(colId));\n}\nfunction getAllCellsForColumn(colId, eGridContainer, bodyCell) {\n  return eGridContainer.querySelectorAll(bodyCell(colId));\n}\nfunction getAppenedEle(eGridContainer, appendContainer) {\n  return eGridContainer.querySelector(appendContainer()) || eGridContainer;\n}\nfunction cloneItemIntoFakeContainer(eCell, eFakeContainer) {\n  var eCellClone = eCell.cloneNode(true);\n  eCellClone.classList.add('grid-auto-size-column-fake-cell'); // className += 'grid-auto-size-column-fake-cell'\n  // todo: 存在td的融合 这里高度还要乘以rowspan\n  eCellClone.setAttribute('rowspan', '');\n  var eCloneParent = document.createElement('div');\n  eCloneParent.className = 'grid-auto-size-column-fake-row';\n  eCloneParent.appendChild(eCellClone);\n  eFakeContainer.appendChild(eCloneParent);\n}\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/TableHelper/util/calculateColumnWidth.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/TableHelper/util/elementEvent.js":
/*!*********************************************************************!*\
  !*** ./src/component/web/DataGrid/TableHelper/util/elementEvent.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getEventPath = getEventPath;\n/*\n * @Author: wqhui\n * @Date: 2023-10-09 16:06:16\n * @Description:\n */\nfunction getEventPath(event) {\n  if (event.deepPath) {\n    // IE\n    return event.deepPath;\n  } else if (event.path) {\n    // Chrome\n    return event.path;\n  } else if (event.composedPath) {\n    // Firfox/Safari\n    return event.composedPath();\n  }\n  return createEventPath(event);\n}\nfunction createEventPath(event) {\n  var res = [];\n  var pointer = event.target;\n  while (pointer) {\n    res.push(pointer);\n    pointer = pointer.parentElement;\n  }\n  return res;\n}\n;\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/TableHelper/util/elementEvent.js?");

/***/ }),

/***/ "./src/pagescope/controlBizEvent/bizEventMapData.js":
/*!**********************************************************!*\
  !*** ./src/pagescope/controlBizEvent/bizEventMapData.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _controlBizEventConst = __webpack_require__(/*! ./controlBizEventConst */ \"./src/pagescope/controlBizEvent/controlBizEventConst.js\");\n// 因为内部现有事件名称可能不是我们想要的（命名不是那么规范），所以我们最新要暴露出去的事件名称会重新命名，这里是内部事件与扩展脚本暴露的事件的一个映射\n\nvar table = {\n  check: _controlBizEventConst.SELECT,\n  uncheck: _controlBizEventConst.UN_SELECT,\n  'check-all': _controlBizEventConst.SELECT_ALL,\n  'uncheck-all': _controlBizEventConst.UN_SELECT_ALL\n};\nvar _default = exports[\"default\"] = table;\n\n//# sourceURL=webpack://bos-platform/./src/pagescope/controlBizEvent/bizEventMapData.js?");

/***/ }),

/***/ "./src/pagescope/utils/setCellValue.js":
/*!*********************************************!*\
  !*** ./src/pagescope/utils/setCellValue.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.index-of.js */ \"../../node_modules/core-js/modules/es.array.index-of.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.map.js */ \"../../node_modules/core-js/modules/es.map.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.promise.js */ \"../../node_modules/core-js/modules/es.promise.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nvar _convertFieldValue = _interopRequireDefault(__webpack_require__(/*! @/util/convertFieldValue */ \"./src/util/convertFieldValue.js\"));\nvar _notifyValueChange = __webpack_require__(/*! @/pagescope/notifyValueChange */ \"./src/pagescope/notifyValueChange.js\");\nvar _appModelFunction = __webpack_require__(/*! @/model/appModelFunction */ \"./src/model/appModelFunction.js\");\nvar _global = __webpack_require__(/*! @/global */ \"./src/global/index.js\");\nvar _excluded = [\"getUserLocale\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n// [\n//   {\n//       \"k\": \"kdtest_textfield\",\n//       \"r\": 0,\n//       \"v\": \"val\"\n//   }\n// ]\nvar setCellsValue = function setCellsValue(cellValuesData, _ref) {\n  var getUserLocale = _ref.getUserLocale,\n    other = _objectWithoutProperties(_ref, _excluded);\n  var lang = getUserLocale();\n  for (var i = 0; i < cellValuesData.length; i++) {\n    var fireUpdate = i === cellValuesData.length - 1;\n    _setCellValue(cellValuesData[i], _objectSpread({\n      lang: lang,\n      fireUpdate: fireUpdate\n    }, other));\n  }\n};\nvar _setCellValue = function _setCellValue() {\n  var cellValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _ref2 = arguments.length > 1 ? arguments[1] : undefined,\n    pageId = _ref2.pageId,\n    key = _ref2.key,\n    isCellLock = _ref2.isCellLock,\n    updateCellValue = _ref2.updateCellValue,\n    getColMetaByField = _ref2.getColMetaByField,\n    lang = _ref2.lang,\n    getColumnByCode = _ref2.getColumnByCode,\n    getRow = _ref2.getRow,\n    fireUpdate = _ref2.fireUpdate;\n  // 判断是否锁定\n  // 进行格式修改、校验\n  // 调用表格updateCellValue\n  if (Object.prototype.toString.call(cellValue) !== '[object Object]') return;\n  var k = cellValue.k,\n    r = cellValue.r,\n    v = cellValue.v;\n  var isCellLocked = isCellLock(k, r);\n  if (isCellLocked) return;\n  var colMeta = getColMetaByField(k) || (0, _immutable.Map)({});\n  var config = colMeta.get('editor');\n  var type = config.get('type');\n  var newValue = (0, _convertFieldValue[\"default\"])(v, type, config, {\n    lang: lang\n  });\n  if (newValue === null) return;\n  var args = {\n    record: getRow(r),\n    column: getColumnByCode(k),\n    v: newValue,\n    oldV: (0, _appModelFunction.getGridCellsValue)(pageId, key, r, k)((0, _global.getGlobalState)()),\n    fireUpdEvt: fireUpdate\n  };\n  addBatchUpdate(\"\".concat(pageId, \"_\").concat(key), args, updateCellValue);\n};\nvar _batchUpdateCellValue = function _batchUpdateCellValue(_ref3) {\n  var data = _ref3.data,\n    updateCellValue = _ref3.updateCellValue;\n  (0, _notifyValueChange.setEditByJs)();\n  data.forEach(function (item) {\n    updateCellValue(item);\n  });\n};\nvar batchUpdateMap = new Map();\nvar addBatchUpdate = function addBatchUpdate(updateId, item, updateCellValue) {\n  var items = batchUpdateMap.get(updateId) || [];\n  items.push(item);\n  batchUpdateMap.set(updateId, items);\n  if (batchUpdateMap.size === 1) {\n    Promise.resolve().then(function () {\n      batchUpdateMap.forEach(function (data) {\n        _batchUpdateCellValue({\n          data: data,\n          updateCellValue: updateCellValue\n        });\n      });\n      batchUpdateMap.clear();\n    });\n  }\n};\nvar _default = exports[\"default\"] = setCellsValue;\n\n//# sourceURL=webpack://bos-platform/./src/pagescope/utils/setCellValue.js?");

/***/ }),

/***/ "./src/util/compose.js":
/*!*****************************!*\
  !*** ./src/util/compose.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.compose = compose;\nexports.pipe = pipe;\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.reduce-right.js */ \"../../node_modules/core-js/modules/es.array.reduce-right.js\");\n__webpack_require__(/*! core-js/modules/es.array.reverse.js */ \"../../node_modules/core-js/modules/es.array.reverse.js\");\n/*\n * @Author: wqhui\n * @Date: 2023-09-12 15:30:20\n * @Description\n */\n\n/**\n * 组装函数并从后往前调用，上一个函数调用结果是下一个函数的入参\n * @param {*} funcs 预期执行的函数数组\n * @returns 返回一个执行函数\n */\nfunction compose(funcs) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    // 如果函数参数数组为空，直接返回第一个参数\n    if (funcs.length === 0) {\n      return args[0];\n    }\n    // 如果函数参数数组只有一个元素，直接调用该元素并返回结果\n    if (funcs.length === 1) {\n      return funcs[0].apply(funcs, args);\n    }\n    // 如果函数参数数组有多个元素，从右往左依次调用，并将上一次的结果作为下一次的参数\n    return funcs.reduceRight.apply(funcs, [function (prev, curr) {\n      return curr(prev);\n    }].concat(args));\n  };\n}\n\n/**\n * 组装函数并从后往前调用，上一个函数调用结果是下一个函数的入参\n * @param {*} funcs 预期执行的函数数组\n * @returns 返回一个执行函数\n */\nfunction pipe() {\n  var funcs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return compose(funcs.reverse());\n}\n\n//# sourceURL=webpack://bos-platform/./src/util/compose.js?");

/***/ }),

/***/ "./src/util/delayInvoke.js":
/*!*********************************!*\
  !*** ./src/util/delayInvoke.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = delayInvoke;\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/**\n * 构造一个事件队列，定时发送请求\n * by kechuang\n */\n\nfunction delayInvoke(timing) {\n  var actionQueue = [];\n  var timer = null;\n  return function (methodName) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (actionQueue.length === 0 && !timer) {\n      actionQueue.push({\n        methodName: methodName,\n        args: args\n      });\n      timer = setInterval(function () {\n        var action = actionQueue.shift();\n        action && action['methodName'].apply(action, _toConsumableArray(action['args']));\n        if (actionQueue.length === 0) {\n          clearInterval(timer);\n          timer = null;\n        }\n      }, timing);\n    } else {\n      actionQueue.push({\n        methodName: methodName,\n        args: args\n      });\n    }\n  };\n}\n\n//# sourceURL=webpack://bos-platform/./src/util/delayInvoke.js?");

/***/ }),

/***/ "./src/component/web/DataGrid/AgDataGrid/quickSearchModal/GridQuickSearch.less":
/*!*************************************************************************************!*\
  !*** ./src/component/web/DataGrid/AgDataGrid/quickSearchModal/GridQuickSearch.less ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"grid-filter-modal\":\"GridQuickSearch_grid-filter-modal_2mNg\",\"icon\":\"GridQuickSearch_icon_2wgL\",\"search-headr\":\"GridQuickSearch_search-headr_2jGc\",\"search-box\":\"GridQuickSearch_search-box_1Q67\",\"search-input\":\"GridQuickSearch_search-input_1ZLC\",\"splite\":\"GridQuickSearch_splite_1zye\",\"search-btn\":\"GridQuickSearch_search-btn_L9pD\",\"no-found-box\":\"GridQuickSearch_no-found-box_3PF2\"});\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/AgDataGrid/quickSearchModal/GridQuickSearch.less?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/aggregate/style/index.less":
/*!***********************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/aggregate/style/index.less ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"agregate-row-overlay\":\"index_agregate-row-overlay_2nvA\",\"agregate-row-fold-content\":\"index_agregate-row-fold-content_3mGf\",\"kdfont\":\"index_kdfont_33Wd\",\"tile-aggregate\":\"index_tile-aggregate_2OMu\"});\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/aggregate/style/index.less?");

/***/ }),

/***/ "./src/component/web/DataGrid/KDTable/style/toolbar.less":
/*!***************************************************************!*\
  !*** ./src/component/web/DataGrid/KDTable/style/toolbar.less ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"toolbar-bottom\":\"toolbar_toolbar-bottom_AAht\"});\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/KDTable/style/toolbar.less?");

/***/ }),

/***/ "./src/component/web/DataGrid/TableHelper/component/toolBar/toolbarModule/VirtualViewToolBar.less":
/*!********************************************************************************************************!*\
  !*** ./src/component/web/DataGrid/TableHelper/component/toolBar/toolbarModule/VirtualViewToolBar.less ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"virtual-view-toolbar\":\"VirtualViewToolBar_virtual-view-toolbar_3t4l\",\"toolbar-content\":\"VirtualViewToolBar_toolbar-content_6Vj4\",\"toolbar-selected-button\":\"VirtualViewToolBar_toolbar-selected-button_32XG\",\"pagination-info\":\"VirtualViewToolBar_pagination-info_1psv\"});\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/TableHelper/component/toolBar/toolbarModule/VirtualViewToolBar.less?");

/***/ }),

/***/ "./src/component/web/DataGrid/TableHelper/render/viewModel/style/index.less":
/*!**********************************************************************************!*\
  !*** ./src/component/web/DataGrid/TableHelper/render/viewModel/style/index.less ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"view-container\":\"index_view-container_3rfk\",\"tile-content\":\"index_tile-content_1JH3\",\"outline\":\"index_outline_1GkL\",\"outline-item\":\"index_outline-item_2XNK\",\"norow-overlay\":\"index_norow-overlay_1NhK\",\"norow-overlay-img\":\"index_norow-overlay-img_1Wg7\",\"outline-item-select\":\"index_outline-item-select_3JlX\"});\n\n//# sourceURL=webpack://bos-platform/./src/component/web/DataGrid/TableHelper/render/viewModel/style/index.less?");

/***/ }),

/***/ "./src/style/ag-grid.less":
/*!********************************!*\
  !*** ./src/style/ag-grid.less ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"ag-shake-left-to-right\":\"ag-grid_ag-shake-left-to-right_3kTH\"});\n\n//# sourceURL=webpack://bos-platform/./src/style/ag-grid.less?");

/***/ }),

/***/ "./src/style/theme-material-kd.less":
/*!******************************************!*\
  !*** ./src/style/theme-material-kd.less ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://bos-platform/./src/style/theme-material-kd.less?");

/***/ }),

/***/ "./src/control lazy recursive ^.*$":
/*!*************************************************!*\
  !*** ./src/control/ lazy ^.*$ namespace object ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var map = {\n\t\"./__test__/proxy/gridProxy.test\": [\n\t\t\"./src/control/__test__/proxy/gridProxy.test.js\",\n\t\t7,\n\t\t4074,\n\t\t3308,\n\t\t8440,\n\t\t4260,\n\t\t6076\n\t],\n\t\"./__test__/proxy/gridProxy.test.js\": [\n\t\t\"./src/control/__test__/proxy/gridProxy.test.js\",\n\t\t7,\n\t\t4074,\n\t\t3308,\n\t\t8440,\n\t\t4260,\n\t\t6076\n\t],\n\t\"./__test__/proxy/listquerypanelProxy.test\": [\n\t\t\"./src/control/__test__/proxy/listquerypanelProxy.test.js\",\n\t\t7,\n\t\t3308,\n\t\t8440,\n\t\t4260,\n\t\t8520\n\t],\n\t\"./__test__/proxy/listquerypanelProxy.test.js\": [\n\t\t\"./src/control/__test__/proxy/listquerypanelProxy.test.js\",\n\t\t7,\n\t\t3308,\n\t\t8440,\n\t\t4260,\n\t\t8520\n\t],\n\t\"./instance\": [\n\t\t\"./src/control/instance.js\",\n\t\t9\n\t],\n\t\"./instance.js\": [\n\t\t\"./src/control/instance.js\",\n\t\t9\n\t],\n\t\"./middleware\": [\n\t\t\"./src/control/middleware/index.js\",\n\t\t9,\n\t\t4260\n\t],\n\t\"./middleware/\": [\n\t\t\"./src/control/middleware/index.js\",\n\t\t9,\n\t\t4260\n\t],\n\t\"./middleware/checkMiddleware\": [\n\t\t\"./src/control/middleware/checkMiddleware.js\",\n\t\t9,\n\t\t4260\n\t],\n\t\"./middleware/checkMiddleware.js\": [\n\t\t\"./src/control/middleware/checkMiddleware.js\",\n\t\t9,\n\t\t4260\n\t],\n\t\"./middleware/compose\": [\n\t\t\"./src/control/middleware/compose.js\",\n\t\t9,\n\t\t4260\n\t],\n\t\"./middleware/compose.js\": [\n\t\t\"./src/control/middleware/compose.js\",\n\t\t9,\n\t\t4260\n\t],\n\t\"./middleware/index\": [\n\t\t\"./src/control/middleware/index.js\",\n\t\t9,\n\t\t4260\n\t],\n\t\"./middleware/index.js\": [\n\t\t\"./src/control/middleware/index.js\",\n\t\t9,\n\t\t4260\n\t],\n\t\"./middleware/styleMiddleware\": [\n\t\t\"./src/control/middleware/styleMiddleware.js\",\n\t\t9,\n\t\t4260\n\t],\n\t\"./middleware/styleMiddleware.js\": [\n\t\t\"./src/control/middleware/styleMiddleware.js\",\n\t\t9,\n\t\t4260\n\t],\n\t\"./proxy/gridProxy\": [\n\t\t\"./src/control/proxy/gridProxy.js\",\n\t\t9,\n\t\t4074,\n\t\t3308,\n\t\t8440,\n\t\t4260,\n\t\t5520\n\t],\n\t\"./proxy/gridProxy.js\": [\n\t\t\"./src/control/proxy/gridProxy.js\",\n\t\t9,\n\t\t4074,\n\t\t3308,\n\t\t8440,\n\t\t4260,\n\t\t5520\n\t],\n\t\"./proxy/listquerypanelProxy\": [\n\t\t\"./src/control/proxy/listquerypanelProxy.js\",\n\t\t9,\n\t\t3308,\n\t\t8440,\n\t\t4260\n\t],\n\t\"./proxy/listquerypanelProxy.js\": [\n\t\t\"./src/control/proxy/listquerypanelProxy.js\",\n\t\t9,\n\t\t3308,\n\t\t8440,\n\t\t4260\n\t],\n\t\"./utils\": [\n\t\t\"./src/control/utils/index.js\",\n\t\t9\n\t],\n\t\"./utils/\": [\n\t\t\"./src/control/utils/index.js\",\n\t\t9\n\t],\n\t\"./utils/console\": [\n\t\t\"./src/control/utils/console.js\",\n\t\t9\n\t],\n\t\"./utils/console.js\": [\n\t\t\"./src/control/utils/console.js\",\n\t\t9\n\t],\n\t\"./utils/convertString\": [\n\t\t\"./src/control/utils/convertString.js\",\n\t\t9\n\t],\n\t\"./utils/convertString.js\": [\n\t\t\"./src/control/utils/convertString.js\",\n\t\t9\n\t],\n\t\"./utils/exception\": [\n\t\t\"./src/control/utils/exception.js\",\n\t\t9\n\t],\n\t\"./utils/exception.js\": [\n\t\t\"./src/control/utils/exception.js\",\n\t\t9\n\t],\n\t\"./utils/index\": [\n\t\t\"./src/control/utils/index.js\",\n\t\t9\n\t],\n\t\"./utils/index.js\": [\n\t\t\"./src/control/utils/index.js\",\n\t\t9\n\t],\n\t\"./utils/supportedProppertyNames\": [\n\t\t\"./src/control/utils/supportedProppertyNames.js\",\n\t\t9\n\t],\n\t\"./utils/supportedProppertyNames.js\": [\n\t\t\"./src/control/utils/supportedProppertyNames.js\",\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1] | 16)\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = \"./src/control lazy recursive ^.*$\";\nmodule.exports = webpackAsyncContext;\n\n//# sourceURL=webpack://bos-platform/./src/control/_lazy_^.*$_namespace_object?");

/***/ }),

/***/ "./src/reducer/registerReducer sync recursive ^(?%21\\.\\/index).*\\.js$":
/*!*******************************************************************!*\
  !*** ./src/reducer/registerReducer/ sync ^(?%21\.\/index).*\.js$ ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var map = {\n\t\"./actionReducer.js\": \"./src/reducer/registerReducer/actionReducer.js\",\n\t\"./admindivisionReducer.js\": \"./src/reducer/registerReducer/admindivisionReducer.js\",\n\t\"./approvalProcessingReducer.js\": \"./src/reducer/registerReducer/approvalProcessingReducer.js\",\n\t\"./approvalRecordReducer.js\": \"./src/reducer/registerReducer/approvalRecordReducer.js\",\n\t\"./appstartReducer.js\": \"./src/reducer/registerReducer/appstartReducer.js\",\n\t\"./attachmentpanelReducer.js\": \"./src/reducer/registerReducer/attachmentpanelReducer.js\",\n\t\"./baseCardFieldReducer.js\": \"./src/reducer/registerReducer/baseCardFieldReducer.js\",\n\t\"./billReducer.js\": \"./src/reducer/registerReducer/billReducer.js\",\n\t\"./buttonReducer.js\": \"./src/reducer/registerReducer/buttonReducer.js\",\n\t\"./commonFilterReducer.js\": \"./src/reducer/registerReducer/commonFilterReducer.js\",\n\t\"./commonFunctionPanelReducer.js\": \"./src/reducer/registerReducer/commonFunctionPanelReducer.js\",\n\t\"./dateselectReducer.js\": \"./src/reducer/registerReducer/dateselectReducer.js\",\n\t\"./entitydesignerReducer.js\": \"./src/reducer/registerReducer/entitydesignerReducer.js\",\n\t\"./f7Reducer.js\": \"./src/reducer/registerReducer/f7Reducer.js\",\n\t\"./fieldReducer.js\": \"./src/reducer/registerReducer/fieldReducer.js\",\n\t\"./generalf7Reducer.js\": \"./src/reducer/registerReducer/generalf7Reducer.js\",\n\t\"./generaltreef7Reducer.js\": \"./src/reducer/registerReducer/generaltreef7Reducer.js\",\n\t\"./gridReducer.js\": \"./src/reducer/registerReducer/gridReducer.js\",\n\t\"./gridcontainerReducer.js\": \"./src/reducer/registerReducer/gridcontainerReducer.js\",\n\t\"./guideReducer.js\": \"./src/reducer/registerReducer/guideReducer.js\",\n\t\"./homePageTabReducer.js\": \"./src/reducer/registerReducer/homePageTabReducer.js\",\n\t\"./htmlReducer.js\": \"./src/reducer/registerReducer/htmlReducer.js\",\n\t\"./hyperLinkReducer.js\": \"./src/reducer/registerReducer/hyperLinkReducer.js\",\n\t\"./iconReducer.js\": \"./src/reducer/registerReducer/iconReducer.js\",\n\t\"./iframeReducer.js\": \"./src/reducer/registerReducer/iframeReducer.js\",\n\t\"./littlekReducer.js\": \"./src/reducer/registerReducer/littlekReducer.js\",\n\t\"./mapReducer.js\": \"./src/reducer/registerReducer/mapReducer.js\",\n\t\"./mobilefilterReducer.js\": \"./src/reducer/registerReducer/mobilefilterReducer.js\",\n\t\"./myApplicationReducer.js\": \"./src/reducer/registerReducer/myApplicationReducer.js\",\n\t\"./qingReducer.js\": \"./src/reducer/registerReducer/qingReducer.js\",\n\t\"./qrcodeReducer.js\": \"./src/reducer/registerReducer/qrcodeReducer.js\",\n\t\"./querypanelReducer.js\": \"./src/reducer/registerReducer/querypanelReducer.js\",\n\t\"./reportfilterReducer.js\": \"./src/reducer/registerReducer/reportfilterReducer.js\",\n\t\"./searchReducer.js\": \"./src/reducer/registerReducer/searchReducer.js\",\n\t\"./splitcontainerReducer.js\": \"./src/reducer/registerReducer/splitcontainerReducer.js\",\n\t\"./subGridReducer.js\": \"./src/reducer/registerReducer/subGridReducer.js\",\n\t\"./tabReducer.js\": \"./src/reducer/registerReducer/tabReducer.js\",\n\t\"./tilePanelReducer.js\": \"./src/reducer/registerReducer/tilePanelReducer.js\",\n\t\"./transferContainerReducer.js\": \"./src/reducer/registerReducer/transferContainerReducer.js\",\n\t\"./treeReducer.js\": \"./src/reducer/registerReducer/treeReducer.js\",\n\t\"./wFNavigationBarReducer.js\": \"./src/reducer/registerReducer/wFNavigationBarReducer.js\",\n\t\"./wfConditionReducer.js\": \"./src/reducer/registerReducer/wfConditionReducer.js\",\n\t\"./workcalendarReducer.js\": \"./src/reducer/registerReducer/workcalendarReducer.js\",\n\t\"./yzjChatReducer.js\": \"./src/reducer/registerReducer/yzjChatReducer.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/reducer/registerReducer sync recursive ^(?%21\\\\.\\\\/index).*\\\\.js$\";\n\n//# sourceURL=webpack://bos-platform/./src/reducer/registerReducer/_sync_^(?");

/***/ }),

/***/ "../../node_modules/xss-filters/src/xss-filters.js":
/*!******************************************************************************************!*\
  !*** delegated ../../node_modules/xss-filters/src/xss-filters.js from dll-reference lib ***!
  \******************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference lib */ \"dll-reference lib\"))(8375);\n\n//# sourceURL=webpack://bos-platform/delegated_../../node_modules/xss-filters/src/xss-filters.js_from_dll-reference_lib?");

/***/ }),

/***/ "../../node_modules/redux/es/index.js":
/*!*****************************************************************************!*\
  !*** delegated ../../node_modules/redux/es/index.js from dll-reference lib ***!
  \*****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference lib */ \"dll-reference lib\"))(9249);\n\n//# sourceURL=webpack://bos-platform/delegated_../../node_modules/redux/es/index.js_from_dll-reference_lib?");

/***/ })

}]);