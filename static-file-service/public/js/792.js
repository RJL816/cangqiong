"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackJsonp_bos-platform"] = self["webpackJsonp_bos-platform"] || []).push([[792],{

/***/ "./src/webworker/const.js":
/*!********************************!*\
  !*** ./src/webworker/const.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar config = {\n  ce: '7d80644e27da0ac29d855cc9145e1195',\n  ci: 204830\n};\nvar _default = exports[\"default\"] = config;\n\n//# sourceURL=webpack://bos-platform/./src/webworker/const.js?");

/***/ }),

/***/ "./src/webworker/userAction.worker.js":
/*!********************************************!*\
  !*** ./src/webworker/userAction.worker.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.from.js */ \"../../node_modules/core-js/modules/es.array.from.js\");\n__webpack_require__(/*! core-js/modules/es.array.is-array.js */ \"../../node_modules/core-js/modules/es.array.is-array.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.slice.js */ \"../../node_modules/core-js/modules/es.array.slice.js\");\n__webpack_require__(/*! core-js/modules/es.function.name.js */ \"../../node_modules/core-js/modules/es.function.name.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"../../node_modules/core-js/modules/es.regexp.exec.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.array.concat.js */ \"../../node_modules/core-js/modules/es.array.concat.js\");\n__webpack_require__(/*! core-js/modules/es.array.find-index.js */ \"../../node_modules/core-js/modules/es.array.find-index.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.index-of.js */ \"../../node_modules/core-js/modules/es.array.index-of.js\");\n__webpack_require__(/*! core-js/modules/es.array.splice.js */ \"../../node_modules/core-js/modules/es.array.splice.js\");\n__webpack_require__(/*! core-js/modules/es.date.now.js */ \"../../node_modules/core-js/modules/es.date.now.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.promise.js */ \"../../node_modules/core-js/modules/es.promise.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\n__webpack_require__(/*! core-js/modules/web.timers.js */ \"../../node_modules/core-js/modules/web.timers.js\");\nvar _immutable = __webpack_require__(/*! immutable */ \"webpack/sharing/consume/default/immutable/immutable?f2ca\");\nvar _const = _interopRequireDefault(__webpack_require__(/*! @/webworker/const */ \"./src/webworker/const.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; } /*\n * @Author: daosheng_chen / chenxiaofeng\n * @Email: daosheng_chen@kingdee.com\n * @Date: 2022-03-3 16:33:56\n * @Last Modified by: daosheng_chen\n * @Last Modified time: 2024-08-19 15:53:27\n * @Description: webworker模块\n */\nvar uiDataList = (0, _immutable.List)(); // 数据缓存\nvar protocol = 'https:'; // 请求协议\n// let apiHost = '' // 业务数据发送结果请求地址\nvar isSendFirstUserAction = false; // 发送第一条用户事件\nvar webBeaconStore = ['user_login', 'load_data', 'click']; // 包含这三个事件的内容放入web_beacon库，其它放入log_beacon\n// const url = `//bj2-api.kingdee.com/kdcs/userlog/log/json?client_secret=${config.ce}&client_id=${config.ci}`\nvar url = '//bj2-api.kingdee.com/laddercs/ladderlog'; // 日志上报地址\nvar reSendList = {}; // 重新发送计数列表\nvar cacherItems = []; //待发送的数据（等主线程加密数据返回后执行）\nvar port2;\n/**\n * 事件监听\n * @param key String 监听的事件，固定为'message'\n * @param callback Function 回调函数\n */\nself.addEventListener('message', function (event) {\n  var _event$data = event.data,\n    action = _event$data.action,\n    payload = _event$data.payload;\n  // react-devtools将进入此worker事件，需要排除\n  if (!action) return;\n  switch (action) {\n    case 'login':\n      {\n        // send logininfo\n        protocol = event.data.protocol;\n        payload[0].ctime = Date.now();\n        var _ref = payload[0] || {},\n          productType = _ref.product_type,\n          envType = _ref.env_type;\n        var project = envType === 'test' ? 'cosmic_test' : 'cosmic';\n        var _getStore = getStore(productType),\n          _getStore2 = _slicedToArray(_getStore, 1),\n          webStore = _getStore2[0];\n        sendDataInfo({\n          data: payload,\n          project: project,\n          store: webStore\n        });\n      }\n      break;\n    case 'bussinessData':\n      // 后台运营数据\n      // apiHost = payload.host\n      reSendList[payload.groupid] = 0;\n      sendDataInfo({\n        id: payload.groupid,\n        project: payload.project,\n        store: payload.store,\n        data: payload.data\n      });\n      break;\n    case 'connect':\n      port2 = event.ports[0];\n      port2.onmessage = onEncrypt;\n      break;\n    default:\n      // 用户行为数据\n      addUiData(payload);\n      break;\n  }\n});\nfunction onEncrypt(event) {\n  var _event$data2 = event.data,\n    data = _event$data2.data,\n    key = _event$data2.key;\n  var index = cacherItems.findIndex(function (item) {\n    return item.id === key;\n  });\n  if (index !== -1) {\n    var item = cacherItems[index];\n    cacherItems.splice(index, 1);\n    _sendDataInfo(data, item.params);\n  }\n}\nvar index = 0;\n/**\n * 发送数据\n * @param data Array 发送的内容本体\n * @descraption 为兼容IE使用普通XHR，增加了X-Api-TimeStamp、X-Api-Nonce、X-Api-SignHeaders，X-Api-ClientID，X-Api-Auth-Version，X-Api-Signature头信息\n */\n\nfunction sendDataInfo(_ref2) {\n  var data = _ref2.data,\n    id = _ref2.id,\n    _ref2$project = _ref2.project,\n    project = _ref2$project === void 0 ? 'cosmic' : _ref2$project,\n    store = _ref2.store;\n  var key = String(index++);\n  var time = Date.now(); // 时间戳\n  var nonce = Math.round(Math.random() * 10000000); // 随机数\n  cacherItems.push({\n    id: key,\n    params: {\n      data: data,\n      id: id,\n      time: time,\n      nonce: nonce,\n      project: project,\n      store: store\n    }\n  });\n  port2.postMessage({\n    key: key,\n    time: time,\n    nonce: nonce,\n    project: project,\n    store: store,\n    ce: _const[\"default\"].ce\n  });\n}\nfunction _sendDataInfo(encrypt, _ref3) {\n  var data = _ref3.data,\n    id = _ref3.id,\n    time = _ref3.time,\n    nonce = _ref3.nonce,\n    _ref3$project = _ref3.project,\n    project = _ref3$project === void 0 ? 'cosmic' : _ref3$project,\n    store = _ref3.store;\n  var xhr = new self.XMLHttpRequest();\n  // const time = Date.now() // 时间戳\n  // const nonce = Math.round(Math.random() * 10000000) // 随机数\n  // 使用HTTP POST请求与服务器交互数据\n  xhr.open('POST', \"\".concat(protocol + url, \"?project=\").concat(project, \"&store=\").concat(store), true);\n  xhr.setRequestHeader('content-type', 'application/json');\n  xhr.setRequestHeader('X-Api-TimeStamp', time);\n  xhr.setRequestHeader('X-Api-Nonce', nonce);\n  xhr.setRequestHeader('X-Api-SignHeaders', 'X-Api-TimeStamp,X-Api-Nonce');\n  xhr.setRequestHeader('X-Api-ClientID', \"\".concat(_const[\"default\"].ci));\n  xhr.setRequestHeader('X-Api-Auth-Version', '2.0');\n  xhr.setRequestHeader('X-Api-Signature', encrypt);\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      // 根据服务器的响应内容格式处理响应结果\n      if (xhr.getResponseHeader('content-type') && xhr.getResponseHeader('content-type').indexOf('application/json') !== -1) {\n        var result = JSON.parse(xhr.responseText);\n        console.log('sendDataInfo:', result);\n        // sendSuccess(id)\n      } else {\n        console.log('sendDataInfo err:', xhr.responseText);\n        sendFailed({\n          data: data,\n          id: id,\n          project: project,\n          store: store\n        });\n      }\n    }\n  };\n  // 将用户输入值序列化成字符串\n  xhr.send(JSON.stringify(data));\n}\n/**\n * 存储数据\n * @param data {Object} 单条消息体\n * 满20条自动发送\n */\nvar SEND_DATA_SIZE = 20;\nfunction addUiData(data) {\n  uiDataList = uiDataList.push(data);\n  if (uiDataList.size > SEND_DATA_SIZE || !isSendFirstUserAction) {\n    isSendFirstUserAction = true;\n    sendUiData();\n  }\n}\n\n/**\n * 缓存数据管理，发送数据\n * @param null\n * @returns null\n * @description 不同的事件需要放到不同的store库，同时给数据加上统一时间戳\n */\nfunction sendUiData() {\n  var data = uiDataList.take(SEND_DATA_SIZE);\n  uiDataList = uiDataList.skip(SEND_DATA_SIZE);\n  var product = '';\n  var project = '';\n  if (data.size > 0) {\n    // 不再需要包一层\n    // const sendInfo = Map({ logtype: 'kdcloud_cosmic_model', data })\n    var webData = (0, _immutable.List)();\n    var logData = (0, _immutable.List)();\n    var now = Date.now();\n    data.forEach(function (item) {\n      item.ctime = now;\n      if (!product && item.product_type) {\n        product = \"\".concat(item.product_type);\n      }\n      if (!project) {\n        project = item.env_type === 'test' ? 'cosmic_test' : 'cosmic';\n      }\n      delete item.product_type;\n      delete item.env_type;\n      if (webBeaconStore.includes(item.event_name)) {\n        webData = webData.push(item);\n      } else {\n        logData = logData.push(item);\n      }\n    });\n    // console.log(webData.size,logData.size)\n    // const webData = data.filter(item => webBeaconStore.indexOf(item.event_name) > -1)\n    // const logData = data.filter(item => webBeaconStore.indexOf(item.event_name) == -1)\n    var _getStore3 = getStore(product),\n      _getStore4 = _slicedToArray(_getStore3, 2),\n      webStore = _getStore4[0],\n      logStore = _getStore4[1];\n    webData.size > 0 && sendDataInfo({\n      data: webData,\n      project: project,\n      store: webStore\n    });\n    logData.size > 0 && sendDataInfo({\n      data: logData,\n      project: project,\n      store: logStore\n    });\n  }\n}\n\n/**\n * 数据发送成功\n * 新需求，不再需要上报状态至服务器\n * @param {*} id 发送的Group Id\n */\n// function sendSuccess (id) {\n//   if (!id) return\n//   delete reSendList[id]\n//   const xhr = new self.XMLHttpRequest()\n//   // 使用HTTP POST请求与服务器交互数据\n//   xhr.open('POST', `${apiHost}/portal/submitKDData.do`, true)\n//   xhr.setRequestHeader('content-type', 'application/json')\n//   xhr.onreadystatechange = function () {\n//     if (xhr.readyState === 4) {\n//       // 根据服务器的响应内容格式处理响应结果\n//       if (xhr.getResponseHeader('content-type') && xhr.getResponseHeader('content-type').indexOf('application/json') !== -1) {\n//         const result = JSON.parse(xhr.responseText)\n//         console.log('send bussiness data success', result)\n//       }\n//     }\n//   }\n//   // 将用户输入值序列化成字符串\n//   xhr.send(JSON.stringify({ data: [id] }))\n// }\n\n/**\n * 数据发送失败，业务数据需要重发3次\n * @param {{data: Object, id: string, project: string, store: string}} param\n * @returns null\n */\nfunction sendFailed(_ref4) {\n  var data = _ref4.data,\n    id = _ref4.id,\n    project = _ref4.project,\n    store = _ref4.store;\n  if (!id) return;\n  if (reSendList[id] < 4) {\n    // 业务数据重发3次\n    reSendList[id]++;\n    sendDataInfo({\n      data: data,\n      id: id,\n      project: project,\n      store: store\n    });\n  } else if (reSendList[id] > 3) {\n    delete reSendList[id];\n  }\n}\nfunction getStore(productType) {\n  var webStore = 'web_beacon';\n  var logStore = 'log_beacon';\n  if (productType === 'xk') {\n    webStore = \"\".concat(webStore, \"_\").concat(productType);\n    logStore = \"\".concat(logStore, \"_\").concat(productType);\n  }\n  return [webStore, logStore];\n}\n\n/**\n * 轮循发送数据,每5分钟发送一次\n * @param null\n *\n * */\n(function sendUiDataLoop() {\n  setTimeout(function () {\n    sendUiData();\n    sendUiDataLoop();\n  }, 5 * 60 * 1000);\n})();\n// sendUiDataLoop()\n\n//# sourceURL=webpack://bos-platform/./src/webworker/userAction.worker.js?");

/***/ })

}]);