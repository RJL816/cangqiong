"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackJsonp_bos-platform"] = self["webpackJsonp_bos-platform"] || []).push([[2080],{

/***/ "./src/plugin/mobile/yzj/plugin.js":
/*!*****************************************!*\
  !*** ./src/plugin/mobile/yzj/plugin.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n\n__webpack_require__(/*! core-js/modules/es.symbol.js */ \"../../node_modules/core-js/modules/es.symbol.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"../../node_modules/core-js/modules/es.symbol.description.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ \"../../node_modules/core-js/modules/es.symbol.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ \"../../node_modules/core-js/modules/es.symbol.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"../../node_modules/core-js/modules/es.array.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ \"../../node_modules/core-js/modules/es.date.to-primitive.js\");\n__webpack_require__(/*! core-js/modules/es.number.constructor.js */ \"../../node_modules/core-js/modules/es.number.constructor.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-properties.js */ \"../../node_modules/core-js/modules/es.object.define-properties.js\");\n__webpack_require__(/*! core-js/modules/es.object.define-property.js */ \"../../node_modules/core-js/modules/es.object.define-property.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js\");\n__webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ \"../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js\");\n__webpack_require__(/*! core-js/modules/es.object.keys.js */ \"../../node_modules/core-js/modules/es.object.keys.js\");\n__webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"../../node_modules/core-js/modules/es.string.iterator.js\");\n__webpack_require__(/*! core-js/modules/es.weak-map.js */ \"../../node_modules/core-js/modules/es.weak-map.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"../../node_modules/core-js/modules/web.dom-collections.iterator.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = main;\n__webpack_require__(/*! core-js/modules/es.array.filter.js */ \"../../node_modules/core-js/modules/es.array.filter.js\");\n__webpack_require__(/*! core-js/modules/es.array.find.js */ \"../../node_modules/core-js/modules/es.array.find.js\");\n__webpack_require__(/*! core-js/modules/es.array.for-each.js */ \"../../node_modules/core-js/modules/es.array.for-each.js\");\n__webpack_require__(/*! core-js/modules/es.array.includes.js */ \"../../node_modules/core-js/modules/es.array.includes.js\");\n__webpack_require__(/*! core-js/modules/es.array.index-of.js */ \"../../node_modules/core-js/modules/es.array.index-of.js\");\n__webpack_require__(/*! core-js/modules/es.date.to-string.js */ \"../../node_modules/core-js/modules/es.date.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"../../node_modules/core-js/modules/es.object.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.promise.js */ \"../../node_modules/core-js/modules/es.promise.js\");\n__webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ \"../../node_modules/core-js/modules/es.regexp.to-string.js\");\n__webpack_require__(/*! core-js/modules/es.string.starts-with.js */ \"../../node_modules/core-js/modules/es.string.starts-with.js\");\n__webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"../../node_modules/core-js/modules/web.dom-collections.for-each.js\");\nvar _global = _interopRequireWildcard(__webpack_require__(/*! @/global */ \"./src/global/index.js\"));\nvar _console = _interopRequireDefault(__webpack_require__(/*! ../../../api/console */ \"./src/api/console.js\"));\nvar _PluginManager = __webpack_require__(/*! ../../PluginManager */ \"./src/plugin/PluginManager.js\");\nvar _intlApi = __webpack_require__(/*! @/i18n/intlApi */ \"./src/i18n/intlApi.js\");\nvar _PluginManager2 = __webpack_require__(/*! @/plugin/PluginManager */ \"./src/plugin/PluginManager.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /**\n *  云之家移动端插件\n * @author daosheng_chen\n */\n/**\n *插件入口函数\n *\n * @param {*} loadjs:加载服务器文件api,\n * @param {m} releaseResource:关闭轻应用前，释放对应服务器资源(后台用于性能优化),移动端用\n * @param {*} callback 插件安装后，回调 ,callback必须调用，否则程序无法继续和加载运行\n */\nfunction main(_ref, callback) {\n  var loadjs = _ref.loadjs,\n    releaseResource = _ref.releaseResource,\n    getRootConfigPromise = _ref.getRootConfigPromise;\n  _console[\"default\"].warn('云之家插件已经加载');\n  var completeResolve;\n  (0, _PluginManager.setWaitPluninCompletePromise)(new Promise(function (resolve) {\n    completeResolve = resolve;\n  }));\n\n  // getconfig信息统一获取\n  getRootConfigPromise().then(function (data) {\n    var _data$yzjUrl = data.yzjUrl,\n      yzjUrl = _data$yzjUrl === void 0 ? 'https://static.yunzhijia.com' : _data$yzjUrl;\n    var BASE_QINGURL = _global[\"default\"][_global.EXTEND_YZJ_URL]; // 可以通过扩展JS指定JS桥路径，优先加载\n    if (_global[\"default\"][_global.EXTEND_YZJ_URL] === undefined) {\n      // 本地的云之家JS桥文件名不能是qingjs.js，因为会被安卓版本的云之家拦截，返回的JS不支持qing.call的调用方式\n      BASE_QINGURL = yzjUrl + '/public/js/qing/latest/qing.js';\n    }\n    _console[\"default\"].error('qing.js版本为：', BASE_QINGURL);\n    loadjs(BASE_QINGURL, {\n      success: function success() {\n        completeResolve();\n      },\n      error: function error() {\n        _console[\"default\"].error('load qingjs.js fail');\n        completeResolve();\n      }\n    });\n  });\n\n  /**\n  * 插件提供的调用客户端api的集合\n  */\n  var plugin = {\n    /**\n     * 每个客户端api的定义\n     * 设置页面标题\n     * @param {*} title  string 调用参数，任意类型的数据\n     * @param {?} callback 可选，如果不需要调用者后续处理，可以不回调\n     */\n    setWebViewTitle: function setWebViewTitle(title) {\n      window.qing.call('setWebViewTitle', {\n        title: title\n      });\n    },\n    // 隐藏页面标题\n    hideWebViewTitle: function hideWebViewTitle() {\n      window.qing.call('hideWebViewTitle');\n    },\n    // 显示或隐藏轻应用标题头(该api暂未发布在yunzhijia开发文档中)\n    setAppTitleBarVisible: function setAppTitleBarVisible(isShow) {\n      window.qing.call('setWebViewTitleBar', {\n        isShow: isShow === undefined || isShow\n      });\n    },\n    // 关闭轻应用界面\n    closeWebView: function closeWebView() {\n      try {\n        releaseResource(); // 通知释放服务器页面资源\n      } catch (error) {\n        _console[\"default\"].error('releaseResource', error);\n      }\n      window.qing.call('closeWebView');\n    },\n    // 自定义右上角菜单\n    createPop: function createPop(_ref2, callback) {\n      var poptitle = _ref2.poptitle,\n        items = _ref2.items;\n      var data = {};\n      if (items && items.length > 0) {\n        if (items.length === 1) {\n          data.popTitle = items[0].title;\n          data.popTitleCallBackId = items[0].callbackId;\n        } else {\n          data.popTitle = poptitle || '...';\n          data.popTitleCallBackId = 'callbackId';\n          items.forEach(function (item) {\n            var title = item.title;\n            var callbackId = item.callbackId;\n            if (callbackId === 'forward' || callbackId === 'refresh' || callbackId === 'openWithBrowser') {\n              data.menuList = data.menuList ? data.menuList : [];\n              data.menuList.push(callbackId);\n            } else {\n              data.items = data.items ? data.items : [];\n              data.items.push({\n                text: title,\n                callBackId: callbackId\n              });\n            }\n          });\n        }\n        window.qing.call('createPop', _objectSpread(_objectSpread({}, data), {}, {\n          success: function success(result) {\n            callback(result);\n          }\n        }));\n      } else {\n        _console[\"default\"].error('items不存在');\n      }\n    },\n    // 关闭右上角菜单\n    closePop: function closePop() {\n      window.qing.call('closePop');\n    },\n    // 旋转界面\n    rotateUI: function rotateUI(data, callbackToServer) {\n      // callYZJApi的参数是简单类型\n      // callAPPApi的参数是对象\n      var direction = Object.prototype.toString.call(data) === '[object Object]' ? data.direction : data;\n      var directions = ['portrait', 'landscape'];\n      window.qing.call('rotateUI', {\n        orientation: directions[direction]\n      });\n    },\n    personInfo: function personInfo() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      var openId = data.openId;\n      if (openId) {\n        window.qing.call('personInfo', _objectSpread(_objectSpread({}, data), {}, {\n          success: function success(result) {\n            // callback(result) // 后端不处理返回结果\n          }\n        }));\n      } else {\n        _console[\"default\"].error('openId为空');\n      }\n    },\n    // 获取用户网络状态\n    getNetworkType: function getNetworkType() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('getNetworkType', {\n        success: function success(result) {\n          callback(result);\n        }\n      });\n    },\n    // 获取图片\n    selectPic: function selectPic() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('selectPic', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    // 选择多张图片\n    selectPhoto: function selectPhoto() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('selectPhoto', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    // 预览图片\n    previewImage: function previewImage() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var current = data.current,\n        urls = data.urls;\n      current && urls && window.qing.call('previewImage', data);\n    },\n    // 保存图片到相册\n    savePic: function savePic() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('savePic', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    // 拍照或从手机相册中选图\n    chooseImage: function chooseImage() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('chooseImage', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    // 附件不再集成云之家的相册和相机api，如果要重新集成请改名字\n    // 拍照选图\n    // chooseCameraImage: function (data = {}, callback) {\n    //   window.qing.call('chooseImage', {\n    //     ...data,\n    //     success: (result) => {\n    //       callback(result)\n    //     }\n    //   })\n    // },\n    // 手机相册中选图\n    // choosePhotoImage: function (data = {}, callback) {\n    //   window.qing.call('chooseImage', {\n    //     ...data,\n    //     success: (result) => {\n    //       callback(result)\n    //     }\n    //   })\n    // },\n    // 上传图片\n    uploadImage: function uploadImage() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('uploadImage', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    getLocalImgData: function getLocalImgData() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('getLocalImgData', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          _console[\"default\"].log('云之家缓存图片', result);\n          callback(result);\n        }\n      }));\n    },\n    // 下载图片\n    downloadImage: function downloadImage() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('downloadImage', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    // 使用默认浏览器打开\n    openDefBrowser: function openDefBrowser(_ref3) {\n      var url = _ref3.url;\n      window.qing.call('localFunction', {\n        name: 'openExtBrowser',\n        param: {\n          url: url\n        }\n      });\n    },\n    // 定位\n    getLocation: function getLocation() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('getLocation', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n      // 接口返回:数据格式\n      // {\n      //   success: true or false 是否成功(String)\n      //   error: 错误信息(String)\n      //   errorCode: 错误码(int)\n      //   data:{'latitude'：22.2748379,                         //维度\n      //         'longitude':133.2324334,                        //经度\n      //         'province':'广东省',                            //省\n      //         'city':'深圳市',                                //市\n      //         'district':'南山区',                            //区\n      //         'name':'金蝶软件园',                            //名称\n      //         'address':'科技南十二道',                       //地址\n      //         'addressdetail':广东省深圳市南山区科技南十二道'   //详细地址\n      //       }\n      //   }\n    },\n    // 选取周边位置\n    selectLocation: function selectLocation() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('selectLocation', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    // 选择文件\n    selectFile: function selectFile() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('selectFile', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    // 选择文件\n    selectAttachmentFile: function selectAttachmentFile() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('selectFile', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    // 文件预览\n    showFile: function showFile(data) {\n      window.qing.call('showFile', data);\n    },\n    // 打开群聊\n    chat: function chat() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      var openId = data.openId,\n        groupId = data.groupId;\n      if (openId || groupId) {\n        window.qing.call('chat', _objectSpread(_objectSpread({}, data), {}, {\n          success: function success(result) {\n            // callback(result)\n          }\n        }));\n      } else {\n        _console[\"default\"].error('openId和groupId都不存在');\n      }\n    },\n    // 转发、分享\n    share: function share() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      data.shareType = '4';\n      var appId = data.appId,\n        appName = data.appName,\n        title = data.title,\n        content = data.content,\n        webpageUrl = data.webpageUrl,\n        cellContent = data.cellContent,\n        sharedObject = data.sharedObject;\n      if (appId && appName && title && content && webpageUrl && cellContent && sharedObject) {\n        window.qing.call('share', _objectSpread(_objectSpread({}, data), {}, {\n          success: function success(result) {\n            // callback(result)\n          }\n        }));\n      } else {\n        _console[\"default\"].error('appId, appName, title, content, webpageUrl, cellContent, sharedObject存在某个值为空');\n      }\n    },\n    // 社会化分享\n    socialShare: function socialShare() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('socialShare', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          // callback(result)\n        }\n      }));\n    },\n    /** **************************组织与人员********************************/\n\n    switchCompany: function switchCompany() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('switchCompany', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          // callback(result)\n        }\n      }));\n    },\n    // 选择人员(支持yunzhijia移动端和pc客户端)\n    selectPersons: function selectPersons() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('selectPersons', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    // 选择部门 2017/05/17(支持yunzhijia移动端和pc客户端)\n    selectOrgs: function selectOrgs() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      // 因云之家支持在其pc客户端里调用‘组织选择’界面，故去掉这里的‘beforeCall’ 判断\n      window.qing.call('selectOrgs', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    scanQRCode: function scanQRCode() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('scanQRCode', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    // 语音输入\n    voiceInput: function voiceInput() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      var key = false; // 防止云之家一次调用，返回了两次的错误\n      window.qing.call('voiceRecognize', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          if (key) return;\n          callback(result);\n          key = true;\n        }\n      }));\n    },\n    // 设置手机日历事件\n    addCalendarEvent: function addCalendarEvent() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('addCalendarEvent', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    /**\n     *轻应用关闭前，释放服务器对应的资源\n    * @param {*}  shouldCLoseWebView function 是否需要改变轻应用窗口\n    * @param{*} callback  app运行结果返回，({success*:boolean,data?:any,error?,errorCode?})=>{}\n    *  error\tstring\t接口调用失败的详细信息。用于控制台输出日志\n    *  errorCode\tint\t接口调用失败的错误码。用于控制台输出日志\n    */\n    releasePageBeforeClose: function releasePageBeforeClose(data) {\n      // 和云之家确认，如果在iframe中，则不注册监听，重复注册监听会导致监听失效，且云之家无法向iframe发送事件\n      if (window.top !== window.self) return;\n      window.qing.call('defback', {\n        success: function success() {\n          // 如果是page，并且page的config设置需要发送关闭请求到后端\n          var shouldCLoseWebView = data.shouldCLoseWebView;\n          var requestClosePage = data.requestClosePage;\n          if (requestClosePage()) {\n            // 请求服务器关闭页面\n            return;\n          }\n          if (shouldCLoseWebView && shouldCLoseWebView()) {\n            try {\n              releaseResource(); // 通知释放服务器页面资源\n            } catch (error) {\n              _console[\"default\"].error(error);\n            }\n            window.qing.call('closeWebView');\n            return;\n          }\n          if (window.history.length <= 1) {\n            window.qing.call('closeWebView');\n          } else {\n            window.history.back();\n          }\n        }\n      });\n      window.qing.call('defClose', {\n        intercept: true,\n        success: function success() {\n          try {\n            releaseResource(); // 通知释放服务器页面资源\n          } catch (error) {\n            _console[\"default\"].error('releaseResource', error);\n          }\n          window.qing.call('closeWebView');\n        }\n      });\n    },\n    /*\n    录制视频(最新版qing.js调用成功,老版本不支持. xunTong/qing.call调用方式都支持)\n     result.data:\n    {\n      \"localId\":\"\\/storage\\/emulated\\/0\\/DCIM\\/Camera\\/VID_20180706_143315.mp4\",//视频本地id\n      \"duration\":6014,//视频时长（毫秒）\n      \"size\":8433001,//视频大小（字节）\n      \"thumbnailId\":\"\\/storage\\/emulated\\/0\\/DCIM\\/.thumbnails\\/1530858796054.jpg\"//缩略图id\n    }\n    */\n    video_startRecord: function video_startRecord() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('video.startRecord', {\n        success: function success(result) {\n          callback(result);\n        }\n      });\n    },\n    /*\n    上传视频(最新版qing.js调用成功,老版本不支持)\n     data:\n    \"localId\": \"VID_20180706_143315.mp4\",\n    \"compress\": false, //0.9.75新增\n    \"success\": function (result) {console.info(result.data)}\n     result.data:\n    {\n        \"fileName\":\"VID_20180706_143315.mp4\",//文件名\n        \"serverId\":\"VID_20180706_143315.mp4\",//服务端文件id\n    }\n    */\n    video_upload: function video_upload(data, callback) {\n      window.qing.call('video.upload', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    /*\n    下载视频(最新版qing.js调用成功,老版本不支持)\n     data:\n    serverId\": \"1\",\n    \"success\": function (result) {console.info(result.data)}\n     result.data:\n    {\n        \"localId\":\"\\/storage\\/emulated\\/0\\/DCIM\\/Camera\\/VID_20180706_143315.mp4\",//视频本地id\n        \"duration\":6014,//视频时长（毫秒）\n        \"size\":8433001,//视频大小（字节）\n        \"thumbnailId\":\"\\/storage\\/emulated\\/0\\/DCIM\\/.thumbnails\\/1530858796054.jpg\"//缩略图id\n    }\n    */\n    video_download: function video_download(data, callback) {\n      window.qing.call('video.download', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    /*\n    播放视频(最新版qing.js调用成功,老版本不支持)\n     data:\n    localId\": \"1\",\n    \"success\": function (result) {}\n    */\n    video_play: function video_play(data, callback) {\n      window.qing.call('video.play', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    /*\n    从手机相册中选择视频(最新版qing.js调用成功,老版本不支持.实测需要高版本云之家app支持,比如10.1.7)\n     data:\n    \"miniDuration\": 10000,//最小时长（毫秒）可以不传\n    \"maxDuration\": 30000,  //最大时长（毫秒）可以不传\n    \"maxCount\": 1, //非必需，默认1，最大取值 1 到 9\n    \"success\": function (result) {console.info(result.data)}\n     result.data:\n    {\n        \"videos\": [\n            {\n                \"localId\":\"\\/storage\\/emulated\\/0\\/DCIM\\/Camera\\/VID_20180706_143315.mp4\",//视频本地id\n                \"duration\":6014,//视频时长（毫秒）\n                \"size\":8433001,//视频大小（字节）\n                \"thumbnailId\":\"\\/storage\\/emulated\\/0\\/DCIM\\/.thumbnails\\/1530858796054.jpg\"//缩略图id\n            }\n        ]\n    }\n    */\n    video_select: function video_select(data, callback) {\n      window.qing.call('video.select', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          callback(result);\n        }\n      }));\n    },\n    // 打开第三方应用\n    gotoApp: function gotoApp() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      window.qing.call('gotoApp', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success(result) {\n          // callback(result)\n        }\n      }));\n    },\n    /** *************************其他*******************************************/\n    // 统一用插件调用方式书写\n    getQingVersion: function getQingVersion() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      var va = window.navigator.userAgent;\n      // 非云之家打开返回‘000’\n      if (!va.startsWith('Qing/')) {\n        callback({\n          success: true,\n          data: '000'\n        });\n      } else {\n        var index = va.indexOf(';');\n        callback({\n          success: true,\n          data: va.substring(7, index)\n        });\n      }\n    },\n    // 文件下载(云之家桌面端)\n    downloadFile: function downloadFile(data) {\n      try {\n        window.qing.call('downloadFile', data);\n      } catch (error) {\n        _console[\"default\"].error('downloadFile', error);\n      }\n    },\n    // 获取设备信息\n    getDevicedMsg: function getDevicedMsg(data, callback) {\n      var qingUserAgent = window.navigator.userAgent;\n      var msg = qingUserAgent.split(';').filter(function (item) {\n        return item.startsWith('deviceId:') || item.startsWith('deviceName:') || item.startsWith('os:') || item.startsWith('brand:') || item.startsWith('model:') || item.startsWith('clientId:');\n      });\n      var devicedMsg = {};\n      msg && msg.forEach(function (item) {\n        var items = item.split(':');\n        devicedMsg[items[0]] = items[1];\n      });\n      callback({\n        success: true,\n        data: devicedMsg\n      });\n    },\n    // 获取设备语言信息\n    // 云之家不支持繁体中文\n    getDevicedLang: function getDevicedLang(data, callback) {\n      var qingUserAgent = window.navigator.userAgent;\n      var langMsg = qingUserAgent.split(';').find(function (item) {\n        return item.startsWith('lang:');\n      }) || 'lang:zh-KR';\n      var lang = langMsg.indexOf('zh') > -1 ? 'zh_CN' : (0, _intlApi.getLanguage)(langMsg);\n      var callbackData = {\n        success: true,\n        data: lang\n      };\n      callback(callbackData);\n    },\n    // {\n    //   errorCode: 0,\n    //   success: 'true',\n    //   data: {\n    //       status:1(2,3,4,5),   // 1-录音开始，2-录音结束（只要有开始，就一定会有结束，就算有错误最后也会回调结束），3-音量变化，4-识别出错，5-识别结果\n    //       percent:0.23,        // 音量大小，只有当status=3的时候才有此字段\n    //       result:'然后',        // 当前句的识别结果，只有当status=5的时候才有此字段\n    //       isLast:false,        // 语音是否已经识别结束，只有当status=5的时候才有此字段\n    //       allResult:'首先 然后',// 从一开始录音到当前所识别出来的所有句子，只有当status=5的时候才有此字段\n    //       errorCode:'1',       // 讯飞识别错误码，只有当status=4的时候才有此字段，且当前只会返回1\n    //       errorMessage:'can not recognize',  // 讯飞识别错误描述，只有当status=4的时候才有此字段\n    //   }\n    // }\n    isVoiceComplete: false,\n    // 开始录音\n    startVoice: function startVoice() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      plugin.isVoiceComplete = false;\n      window.qing.call('startSpeechRecognize', _objectSpread(_objectSpread({}, data), {}, {\n        success: function success() {\n          var res = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          var errorCode = res.errorCode,\n            success = res.success,\n            data = res.data;\n          if (['true', true].includes(success)) {\n            var _data$status = data.status,\n              status = _data$status === void 0 ? 5 : _data$status,\n              _data$allResult = data.allResult,\n              allResult = _data$allResult === void 0 ? '' : _data$allResult;\n            if (status === 5 && plugin.isVoiceComplete) {\n              _console[\"default\"].log('语音识别已结束, 识别结果为：');\n              _console[\"default\"].log(allResult);\n              var args = {\n                success: true,\n                data: allResult\n              };\n              callback(args);\n            } else {\n              // console.warning('语音识别还未结束')\n            }\n          } else {\n            _console[\"default\"].error('调用云之家语音识别失败: ', errorCode, data);\n          }\n        }\n      }));\n    },\n    // 结束录音\n    stopVoice: function stopVoice() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      plugin.isVoiceComplete = true;\n      window.qing.call('stopSpeechRecognize', {\n        success: function success(res) {}\n      });\n    },\n    // 设置粘贴板内容\n    setClipboardData: function setClipboardData(data) {\n      window.qing.call('clipBoard', {\n        type: 'setString',\n        string: data,\n        success: function success(res) {\n          _console[\"default\"].log('setClipboardData:', res.error);\n        }\n      });\n    }\n  };\n  (0, _PluginManager2.loadDynamicPlugin)(plugin); // 把插件api挂载在全局指定的插件名上\n  callback && callback(true); // 插件安装完，回调\n}\n\n/**\n * 云之家轻应用中获取设备ID\n */\n// const _getDevicedId = () => {\n//   try {\n//     const qingUserAgent = window.navigator.userAgent\n//     const result = qingUserAgent.split(';').find(item => item && item.startsWith('deviceId')) || ''\n//     return result.replace('deviceId:', '')\n//   } catch (error) {\n//     console.error('获取云之家移动端设备ID异常', error)\n//     return ''\n//   }\n// }\n\n// const devicedId = _getDevicedId()\n\n//# sourceURL=webpack://bos-platform/./src/plugin/mobile/yzj/plugin.js?");

/***/ })

}]);