var MuHybrid =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 84);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

;(function (win, lib) {
  var Promise = win.Promise;
  var doc = win.document;
  var ua = win.navigator.userAgent;
  var isWin = /Windows\sPhone\s(?:OS\s)?[\d\.]+/i.test(ua) || /Windows\sNT\s[\d\.]+/i.test(ua);
  var isWinWV = isWin && win['WindVane_Win_Private'] && win['WindVane_Win_Private'].call;
  var isIOS = /iPhone|iPad|iPod/i.test(ua);
  var isAndroid = /Android/i.test(ua);
  var wvVersion = ua.match(/WindVane[\/\s](\d+[._]\d+[._]\d+)/);
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var WindVane = lib.windvane = win.WindVane || (win.WindVane = {});
  var sidBase = Math.floor(Math.random() * (1 << 16)),
      inc = 1,
      iframePool = [],
      iframeLimit = 3;

  var LOCAL_PROTOCOL = 'hybrid';
  var WV_PROTOCOL = 'wv_hybrid';
  var IFRAME_PREFIX = 'iframe_';
  var PARAM_PREFIX = 'param_';
  var CALL_GC_TIME = 60 * 1000 * 10;
  var PARAM_GC_TIME = 60 * 1000;
  function compareVersion(v1, v2) {
    v1 = v1.toString().split('.');
    v2 = v2.toString().split('.');

    for (var i = 0; i < v1.length || i < v2.length; i++) {
      var n1 = parseInt(v1[i], 10),
          n2 = parseInt(v2[i], 10);

      if (window.isNaN(n1)) {
        n1 = 0;
      }
      if (window.isNaN(n2)) {
        n2 = 0;
      }
      if (n1 < n2) {
        return -1;
      } else if (n1 > n2) {
        return 1;
      }
    }
    return 0;
  }

  if (wvVersion) {
    wvVersion = (wvVersion[1] || '0.0.0').replace(/\_/g, '.');
  } else {
    wvVersion = '0.0.0';
  }

  /**
   * @namespace  lib
   */

  /**
   * @namespace windvane
   * @memberOf lib
   */

  var WV_Core = {
    isAvailable: compareVersion(wvVersion, '0') === 1,

    /**
     * @method  call
     * @memberOf lib.windvane
     * @param  {String} obj       瑕佽皟鐢ㄧ殑瀹㈡埛绔被鍚�
     * @param  {String} method    瑕佽皟鐢ㄧ殑瀹㈡埛绔柟娉曞悕
     * @param  {Object} params    瑕佷紶閫掔粰瀹㈡埛绔殑鍙傛暟
     * @param  {Function} [success] 鎵ц鎴愬姛鍚庣殑鍥炶皟
     * @param  {Function} [failure] 鎵ц澶辫触鍚庣殑鍥炶皟
     * @param  {Number} [timeout]   鎵ц瓒呮椂锛岃秴鏃跺悗鑷姩浠� {ret:['HY_TIMEOUT']}
     * @return {Promise}          濡傛灉褰撳墠杩愯鐜鏀寔Promise锛屽垯杩斿洖涓€涓狿romise瀹炰緥銆�
     */
    call: function call(obj, method, params, success, failure, timeout) {
      var sid, promise;

      if (typeof arguments[arguments.length - 1] === 'number') {
        timeout = arguments[arguments.length - 1];
      }

      if (typeof success !== 'function') {
        success = null;
      }

      if (typeof failure !== 'function') {
        failure = null;
      }

      if (Promise && !success && !failure) {
        promise = new Promise(function (resolve, reject) {
          success = function success(data) {
            resolve(data);
          };
          failure = function failure(data) {
            reject(data);
          };
        });
      }

      if (win.__windvane__ && win.__windvane__.call) {
        win.__windvane__.call(obj + '.' + method, params, success, failure, timeout);
        return promise;
      }

      sid = WV_Private.getSid();
      var callInfo = {
        success: success,
        failure: failure
      };
      if (timeout > 0) {
        callInfo.timeout = setTimeout(function () {
          WV_Core.onFailure(sid, { ret: 'HY_TIMEOUT' });
        }, timeout);
      }

      WV_Private.registerCall(sid, callInfo);
      WV_Private.registerGC(sid, timeout);
      if (!WV_Core.isAvailable) {
        WV_Core.onFailure(sid, { ret: 'HY_NOT_IN_WINDVANE' });
      } else {
        WV_Private.callMethod(obj, method, params, sid);
      }

      return promise;
    },

    fireEvent: function fireEvent(eventname, eventdata, sid) {
      // 褰搉ative闇€瑕侀€氱煡js鐨勬椂鍊欙紙閫氫俊锛夛紝鐢ㄨЕ鍙戜簨浠剁殑鏂瑰紡杩涜
      var ev = doc.createEvent('HTMLEvents');
      ev.initEvent(eventname, false, true);
      ev.param = WV_Private.parseData(eventdata);

      doc.dispatchEvent(ev);
    },

    getParam: function getParam(sid) {
      return WV_Private.getParam(sid);
    },

    setData: function setData(sid, chunk) {},

    find: function find(reqId, keepAlive) {
      if (!keepAlive) {
        WV_Private.unregisterCall(reqId, false);
      }
    },
    onSuccess: function onSuccess(sid, data, keepAlive) {
      // native浠ｇ爜澶勭悊鎴愬姛鍚庯紝璋冪敤璇ユ柟娉曟潵閫氱煡js
      WV_Private.onComplete(sid, data, 'success', keepAlive);
    },

    onFailure: function onFailure(sid, data) {
      // native浠ｇ爜澶勭悊澶辫触鍚庯紝璋冪敤璇ユ柟娉曟潵閫氱煡js
      WV_Private.onComplete(sid, data, 'failure');
    }
  };

  var WV_Private = {
    params: {},
    calls: {},

    getSid: function getSid() {
      // iOS 10.3 鍚庣鍙ｅ彿涓嶈兘瓒呰繃 65536銆�
      return (sidBase + inc++) % 65536 + '';
    },

    buildParam: function buildParam(obj) {
      if (obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
        return JSON.stringify(obj);
      } else {
        return obj || '';
      }
    },

    getParam: function getParam(sid) {
      // 鍥犱负ios涓媔frame鍗忚锛屽浜巙rl闀垮害鏈夐檺鍒讹紝鎵€浠ュ鍔犱竴涓弬鏁扮殑map銆�
      return this.params[PARAM_PREFIX + sid] || '';
    },

    setParam: function setParam(sid, params) {
      this.params[PARAM_PREFIX + sid] = params;
    },

    parseData: function parseData(str) {
      var rst;
      if (str && typeof str === 'string') {
        try {
          rst = JSON.parse(str);
        } catch (e) {
          rst = { ret: ['HY_RESULT_PARSE_ERROR'] };
        }
      } else {
        rst = str || {};
      }

      return rst;
    },

    registerCall: function registerCall(sid, callInfo) {
      this.calls[sid] = callInfo;
    },

    unregisterCall: function unregisterCall(sid, keepAlive) {
      var callInfo = this.calls[sid] || {};

      var timeout = callInfo.timeout;
      if (timeout) {
        clearTimeout(timeout);
      }

      if (!keepAlive) {
        delete this.calls[sid];
      }

      return callInfo;
    },

    useIframe: function useIframe(sid, url) {
      var iframeid = IFRAME_PREFIX + sid;
      var iframe = iframePool.pop();

      if (!iframe) {
        iframe = doc.createElement('iframe');
        iframe.setAttribute('frameborder', '0');
        iframe.style.cssText = 'width:0;height:0;border:0;display:none;';
      }

      iframe.setAttribute('id', iframeid);
      iframe.setAttribute('src', url);

      if (!iframe.parentNode) {
        setTimeout(function () {
          doc.body.appendChild(iframe);
        }, 5);
      }
    },

    retrieveIframe: function retrieveIframe(sid) {
      var iframeid = IFRAME_PREFIX + sid;
      var iframe = doc.querySelector('#' + iframeid);

      if (iframe) {
        if (iframePool.length >= iframeLimit) {
          try {
            doc.body.removeChild(iframe);
          } catch (e) {
            // 鏈夋椂 iframe 鐨� parent 骞朵笉鏄� body锛屾垨鑰呯姸鎬佷笉姝ｇ‘锛屼細瀵艰嚧鎶涘紓甯�
          }
        } else {
          // 閬垮厤鍚屼竴涓� iframe 閲嶅鎻掑叆涓ゆ iframePoll
          if (iframePool.indexOf(iframe) < 0) {
            iframePool.push(iframe);
          }
        }
      }
    },

    callMethod: function callMethod(obj, method, params, sid) {
      // hybrid://objectName:sid/methodName?params
      params = WV_Private.buildParam(params);

      if (isWin) {
        if (isWinWV) {
          win['WindVane_Win_Private'].call(obj, method, sid, params);
        } else {
          this.onComplete(sid, { ret: 'HY_NO_HANDLER_ON_WP' }, 'failure');
        }
      } else {
        if (isIOS) {
          // iOS涓嬬敤iframe璋冪敤
          this.setParam(sid, params);
          var uri = LOCAL_PROTOCOL + '://' + obj + ':' + sid + '/' + method + '?' + encodeURIComponent(params);
          this.useIframe(sid, uri);
        } else if (isAndroid) {
          // Android涓嬬敤window.prompt璋冪敤璋冪敤
          var uri = LOCAL_PROTOCOL + '://' + obj + ':' + sid + '/' + method + '?' + params;
          var value = WV_PROTOCOL + ':';
          window.prompt(uri, value);
        } else {
          this.onComplete(sid, { ret: 'HY_NOT_SUPPORT_DEVICE' }, 'failure');
        }
      }
    },

    registerGC: function registerGC(sid, timeout) {
      // 鍨冨溇鍥炴敹
      var that = this;
      var callGCTime = Math.max(timeout || 0, CALL_GC_TIME);
      var paramGCTime = Math.max(timeout || 0, PARAM_GC_TIME);

      setTimeout(function () {
        that.unregisterCall(sid);
      }, callGCTime);

      if (isIOS) {
        // ios涓嬪鐞唒arams鐨勫洖鏀�
        setTimeout(function () {
          if (that.params[PARAM_PREFIX + sid]) {
            delete that.params[PARAM_PREFIX + sid];
          }
        }, paramGCTime);
      }
    },

    onComplete: function onComplete(sid, data, type, keepAlive) {
      var call = this.unregisterCall(sid, keepAlive);
      var success = call.success;
      var failure = call.failure;

      data = this.parseData(data);

      var ret = data.ret;
      if (typeof ret === 'string') {
        data = data.value || data;
        if (!data.ret) {
          data.ret = [ret];
        }
      }

      if (type === 'success') {
        success && success(data);
      } else if (type === 'failure') {
        failure && failure(data);
      }

      if (isIOS) {
        // iOS涓嬪洖鏀秈frame
        this.retrieveIframe(sid);
        if (this.params[PARAM_PREFIX + sid]) {
          delete this.params[PARAM_PREFIX + sid];
        }
      }
    }
  };

  for (var key in WV_Core) {
    if (!hasOwnProperty.call(WindVane, key)) {
      WindVane[key] = WV_Core[key];
    }
  }
})(window, window['lib'] || (window['lib'] = {}));

exports.default = window;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.noop = noop;
exports.isDef = isDef;
exports.isFunction = isFunction;
exports.isObject = isObject;
exports.isPromise = isPromise;
exports.get = get;
exports.isEmpty = isEmpty;
exports.isServer = exports.inBrowser = exports.addUnit = exports.createNamespace = void 0;

var _vue = _interopRequireDefault(__webpack_require__(13));

var _create = __webpack_require__(141);

exports.createNamespace = _create.createNamespace;

var _unit = __webpack_require__(25);

exports.addUnit = _unit.addUnit;
var inBrowser = typeof window !== 'undefined';
exports.inBrowser = inBrowser;
var isServer = _vue.default.prototype.$isServer; // eslint-disable-next-line @typescript-eslint/no-empty-function

exports.isServer = isServer;

function noop() {}

function isDef(val) {
  return val !== undefined && val !== null;
}

function isFunction(val) {
  return typeof val === 'function';
}

function isObject(val) {
  return val !== null && typeof val === 'object';
}

function isPromise(val) {
  return isObject(val) && isFunction(val.then) && isFunction(val.catch);
}

function get(object, path) {
  var keys = path.split('.');
  var result = object;
  keys.forEach(function (key) {
    var _result$key;

    result = (_result$key = result[key]) != null ? _result$key : '';
  });
  return result;
}
/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @function isEmpty
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */


function isEmpty(value) {
  if (value == null) {
    return true;
  }

  if (typeof value !== 'object') {
    return true;
  }

  return Object.keys(value).length === 0;
}

/***/ }),
/* 2 */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target, parent) {
  if (parent){
    return parent.querySelector(target);
  }
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target, parent);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(130);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertAt.before, target);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	if(options.attrs.nonce === undefined) {
		var nonce = getNonce();
		if (nonce) {
			options.attrs.nonce = nonce;
		}
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function getNonce() {
	if (false) {
		return null;
	}

	return __webpack_require__.nc;
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = typeof options.transform === 'function'
		 ? options.transform(obj.css) 
		 : options.transform.default(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 5 */
/***/ (function(module, exports) {

function _extends() {
  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _extends.apply(this, arguments);
}
module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(64);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Function equal to merge with the difference being that no reference
 * to original objects is kept.
 *
 * @see merge
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function deepMerge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = deepMerge(result[key], val);
    } else if (typeof val === 'object') {
      result[key] = deepMerge({}, val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  deepMerge: deepMerge,
  extend: extend,
  trim: trim
};


/***/ }),
/* 7 */
/***/ (function(module, exports) {

/* globals __VUE_SSR_CONTEXT__ */

// this module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = injectStyles
  }

  if (hook) {
    var functional = options.functional
    var existing = functional
      ? options.render
      : options.beforeCreate
    if (!functional) {
      // inject component registration as beforeCreate hook
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    } else {
      // register for functioal component in vue file
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return existing(h, context)
      }
    }
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
function _extends(){return _extends=Object.assign?Object.assign.bind():function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var normalMerge=["attrs","props","domProps"],toArrayMerge=["class","style","directives"],functionalMerge=["on","nativeOn"],mergeJsxProps=function(a){return a.reduce(function(c,a){for(var b in a)if(!c[b])c[b]=a[b];else if(-1!==normalMerge.indexOf(b))c[b]=_extends({},c[b],a[b]);else if(-1!==toArrayMerge.indexOf(b)){var d=c[b]instanceof Array?c[b]:[c[b]],e=a[b]instanceof Array?a[b]:[a[b]];c[b]=[].concat(d,e)}else if(-1!==functionalMerge.indexOf(b)){for(var f in a[b])if(c[b][f]){var g=c[b][f]instanceof Array?c[b][f]:[c[b][f]],h=a[b][f]instanceof Array?a[b][f]:[a[b][f]];c[b][f]=[].concat(g,h)}else c[b][f]=a[b][f];}else if("hook"===b)for(var i in a[b])c[b][i]=c[b][i]?mergeFn(c[b][i],a[b][i]):a[b][i];else c[b]=a[b];return c},{})},mergeFn=function(a,b){return function(){a&&a.apply(this,arguments),b&&b.apply(this,arguments)}};module.exports=mergeJsxProps;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.on = on;
exports.off = off;
exports.stopPropagation = stopPropagation;
exports.preventDefault = preventDefault;
exports.supportsPassive = void 0;

var _ = __webpack_require__(1);

// eslint-disable-next-line import/no-mutable-exports
var supportsPassive = false;
exports.supportsPassive = supportsPassive;

if (!_.isServer) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', {
      // eslint-disable-next-line getter-return
      get: function get() {
        /* istanbul ignore next */
        exports.supportsPassive = supportsPassive = true;
      }
    });
    window.addEventListener('test-passive', null, opts); // eslint-disable-next-line no-empty
  } catch (e) {}
}

function on(target, event, handler, passive) {
  if (passive === void 0) {
    passive = false;
  }

  if (!_.isServer) {
    target.addEventListener(event, handler, supportsPassive ? {
      capture: false,
      passive: passive
    } : false);
  }
}

function off(target, event, handler) {
  if (!_.isServer) {
    target.removeEventListener(event, handler);
  }
}

function stopPropagation(event) {
  event.stopPropagation();
}

function preventDefault(event, isStopPropagation) {
  /* istanbul ignore else */
  if (typeof event.cancelable !== 'boolean' || event.cancelable) {
    event.preventDefault();
  }

  if (isStopPropagation) {
    stopPropagation(event);
  }
}

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.p2c = p2c;
exports.timeFormat = timeFormat;
exports.isDateStr = isDateStr;
exports.getElement = getElement;
/*
 * @Author: wangjie59 wangjie59@ceair.com
 * @Date: 2023-01-13 12:51:40
 * @LastEditors: wangjie59 wangjie59@ceair.com
 * @LastEditTime: 2023-01-17 10:47:36
 * @FilePath: /mu-hybrid/mu-hybrid/utils.js
 * @Description:
 * @version: 1.0.0
 */

/**
 * @author: wangjie59
 * @description: 传入promise，使其支持callback调用
 * @param {Promise} p promise
 * @return {*} function
 * @example
 * ```js
 * p2c(function(x) {return Promise.resolve(x)})
 * ```
 */
function p2c(p) {
  if (typeof p !== 'function') {
    throw new Error('缺少必要参数');
  }
  return function () {
    var _this = this;

    // 简单模拟重载，很怪异的写法
    var options = void 0,
        success = void 0,
        fail = void 0;
    // 为什么会有这种写法，因为有些接口没有传参，只传了 callback

    // args数组的最后一项是 function

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (typeof args[args.length - 1] === 'function') {
      // 且args数组的倒数第二项是 function
      if (typeof args[args.length - 2] === 'function') {
        // 则认为是 success 和 fail 的 callback
        success = args[args.length - 2];
        fail = args[args.length - 1];
        options = args.slice(0, args.length - 2);
      } else {
        // 否则认为是 success 的 callback
        success = args[args.length - 1];
        options = args.slice(0, args.length - 1);
      }
    } else {
      // 否则认为是没有 callback
      options = args;
    }

    return p.apply(this, options).then(function (res) {
      if (typeof success === 'function') {
        success.call(_this, res);
      }
      return res;
    }).catch(function (err) {
      if (typeof fail === 'function') {
        fail.call(_this, err);
        return err;
      }
      return Promise.reject(err);
    });
  };
}

/**
 * @description: 格式化时间
 * @param {*} date 时间
 * @return {*} formateTime
 * @author: wangjie59
 */
var format = exports.format = function format(date) {
  var dateString = new Date(date);
  var month = dateString.getMonth() + 1 < 10 ? '0' + (dateString.getMonth() + 1) : dateString.getMonth() + 1;
  var day = dateString.getDate() < 10 ? '0' + dateString.getDate() : dateString.getDate();
  return dateString.getFullYear() + '-' + month + '-' + day;
};

/**
 * @author: wangjie59
 * @description: 按照传入的格式格式化时间
 * @param {*} dateTime time
 * @param {*} fmt format
 * @return {*} formateTime
 * @example
 * ```js
 * timeFormat(1547488000000, 'yyyy-mm-dd hh:MM:ss')
 * ```
 */
function timeFormat() {
  var dateTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
  var fmt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'yyyy-mm-dd';

  // 如果为null,则格式化当前时间
  if (!dateTime) dateTime = Number(new Date());
  // 如果dateTime长度为10或者13，则为秒和毫秒的时间戳，如果超过13位，则为其他的时间格式
  if (dateTime.toString().length === 10) dateTime *= 1000;
  var date = new Date(dateTime);
  var ret = void 0;
  var opt = {
    'y+': date.getFullYear().toString(), // 年
    'm+': (date.getMonth() + 1).toString(), // 月
    'd+': date.getDate().toString(), // 日
    'h+': date.getHours().toString(), // 时
    'M+': date.getMinutes().toString(), // 分
    's+': date.getSeconds().toString() // 秒
    // 有其他格式化字符需求可以继续添加，必须转化成字符串
  };
  for (var k in opt) {
    ret = new RegExp('(' + k + ')').exec(fmt);
    if (ret) {
      fmt = fmt.replace(ret[1], ret[1].length === 1 ? opt[k] : opt[k].padStart(ret[1].length, '0'));
    };
  };
  return fmt;
}

/**
 * @author: wangjie59
 * @description: 通过正则判断传入的字符串是不是一个合法的日期格式
 * @param {*} str 传入的字符串
 * @return {*} { validate: false, content: {...}, date: null } validate: boolean true or false
 * @example
 * ```js
 * isDateStr('2023-01-01'); // { validate: true, content: {year: 2023, month: 1, day: 1}, date: {} } validate: boolean true or false
 * isDateStr('2023-01-32'); // { validate: false, content: null, date: null }
 * ```
 */
function isDateStr() {
  var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

  var content = {
    validate: false,
    content: {}
  };
  if (typeof str !== 'string') {
    return content;
  }
  var result = str.match(/^(\d{4})-(0[1-9]|1[0-2])-(0[1-9]|(1|2)[0-9]|30|31)$/);
  if (!result) return content;
  var d = new Date(result[1], result[2] - 1, result[3]);
  var validate = d.getFullYear() === +result[1] && d.getMonth() + 1 === +result[2] && d.getDate() === +result[3];
  content.validate = validate;
  content.date = d;
  content.content = {
    year: d.getFullYear(),
    month: d.getMonth() + 1,
    day: d.getDate()
  };

  return content;
}

/**
 * @author: wangjie59
 * @description: 获取element元素
 * @param {string | () => Element} selector
 * @return {Element} element
 * @example
 * ```js
 * getElement('#app')
 * ```
 */
function getElement(selector) {
  if (typeof selector === 'string') {
    return document.querySelector(selector);
  }

  return selector();
}

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/

var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

var listToStyles = __webpack_require__(124)

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

module.exports = function (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(129);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./base.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./base.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!
 * Vue.js v2.6.11
 * (c) 2014-2019 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var SSR_ATTR = 'data-server-rendered';

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "production" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "production" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;

var supportsPassive = false;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (false) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if (false) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
Dep.target = null;
var targetStack = [];

function pushTarget (target) {
  targetStack.push(target);
  Dep.target = target;
}

function popTarget () {
  targetStack.pop();
  Dep.target = targetStack[targetStack.length - 1];
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      protoAugment(value, arrayMethods);
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if (false) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if (false
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "production" !== 'production' && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if (false
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    "production" !== 'production' && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (false) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
      "production" !== 'production' && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
    "production" !== 'production' && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (false) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "production" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (false) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (false) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (false) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (false) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if (false) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    false
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if (false) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (false) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var isUsingMicroTask = false;

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
  isUsingMicroTask = true;
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
  isUsingMicroTask = true;
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (false) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (false) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
      "production" !== 'production' && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

function mergeVNodeHook (def, hookKey, hook) {
  if (def instanceof VNode) {
    def = def.data.hook || (def.data.hook = {});
  }
  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook () {
    hook.apply(this, arguments);
    // important: remove merged hook to ensure it's called only once
    // and prevent memory leak
    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}

/*  */

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (false) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  return res
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (false) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {
        defineReactive$$1(vm, key, result[key]);
      }
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (false) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      (slots.default || (slots.default = [])).push(child);
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length));
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i);
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if (false) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    nodes = scopedSlotFn(props) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
      "production" !== 'production' && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
      "production" !== 'production' && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if (false) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (false) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (false) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
    "production" !== 'production' && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if (false
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if (false) {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (false) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);
  }
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if (false) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if (false) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
      "production" !== 'production' && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 false
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : null
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (false) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function mountComponent (
  vm,
  el,
  hydrating
) {
  vm.$el = el;
  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;
    if (false) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  callHook(vm, 'beforeMount');

  var updateComponent;
  /* istanbul ignore if */
  if (false) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;

      mark(startTag);
      var vnode = vm._render();
      mark(endTag);
      measure(("vue " + name + " render"), startTag, endTag);

      mark(startTag);
      vm._update(vnode, hydrating);
      mark(endTag);
      measure(("vue " + name + " patch"), startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  }

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before () {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;

  // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook
  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }
  return vm
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (false) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }

  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (false) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (false) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if (false) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if (false) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  false
    ? expOrFn.toString()
    : '';
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
      "production" !== 'production' && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (false) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {
      defineReactive$$1(props, key, value);
    }
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
    "production" !== 'production' && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (false) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
      "production" !== 'production' && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if (false) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (false) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if (false) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (false) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (false) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if (false) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (false) {
      initProxy(vm);
    } else {
      vm._renderProxy = vm;
    }
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props
    initState(vm);
    initProvide(vm); // resolve provide after data/props
    callHook(vm, 'created');

    /* istanbul ignore if */
    if (false) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if (false
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if (false) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if (false) {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (false) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.11';

/*  */

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select,progress');
var mustUseProp = function (tag, type, attr) {
  return (
    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
    (attr === 'selected' && tag === 'option') ||
    (attr === 'checked' && tag === 'input') ||
    (attr === 'muted' && tag === 'video')
  )
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

var isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');

var convertEnumeratedValue = function (key, value) {
  return isFalsyAttrValue(value) || value === 'false'
    ? 'false'
    // allow arbitrary string value for contenteditable
    : key === 'contenteditable' && isValidContentEditableValue(value)
      ? value
      : 'true'
};

var isBooleanAttr = makeMap(
  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
  'required,reversed,scoped,seamless,selected,sortable,translate,' +
  'truespeed,typemustmatch,visible'
);

var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : ''
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false
};

/*  */

function genClassForVnode (vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;
  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;
    if (childNode && childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }
  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode && parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }
  return renderClass(data.staticClass, data.class)
}

function mergeClassData (child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class)
      ? [child.class, parent.class]
      : parent.class
  }
}

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};

var isHTMLTag = makeMap(
  'html,body,base,head,link,meta,style,title,' +
  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
  'embed,object,param,source,canvas,script,noscript,del,ins,' +
  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
  'output,progress,select,textarea,' +
  'details,dialog,menu,menuitem,summary,' +
  'content,element,shadow,template,blockquote,iframe,tfoot'
);

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap(
  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
  true
);

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag)
};

function getTagNamespace (tag) {
  if (isSVG(tag)) {
    return 'svg'
  }
  // basic support for MathML
  // note it doesn't support other MathML elements being component roots
  if (tag === 'math') {
    return 'math'
  }
}

var unknownElementCache = Object.create(null);
function isUnknownElement (tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true
  }
  if (isReservedTag(tag)) {
    return false
  }
  tag = tag.toLowerCase();
  /* istanbul ignore if */
  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag]
  }
  var el = document.createElement(tag);
  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return (unknownElementCache[tag] = (
      el.constructor === window.HTMLUnknownElement ||
      el.constructor === window.HTMLElement
    ))
  } else {
    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
  }
}

var isTextInputType = makeMap('text,number,password,search,email,tel,url');

/*  */

/**
 * Query an element selector if it's not an element already.
 */
function query (el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);
    if (!selected) {
      "production" !== 'production' && warn(
        'Cannot find element: ' + el
      );
      return document.createElement('div')
    }
    return selected
  } else {
    return el
  }
}

/*  */

function createElement$1 (tagName, vnode) {
  var elm = document.createElement(tagName);
  if (tagName !== 'select') {
    return elm
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }
  return elm
}

function createElementNS (namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName)
}

function createTextNode (text) {
  return document.createTextNode(text)
}

function createComment (text) {
  return document.createComment(text)
}

function insertBefore (parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild (node, child) {
  node.removeChild(child);
}

function appendChild (node, child) {
  node.appendChild(child);
}

function parentNode (node) {
  return node.parentNode
}

function nextSibling (node) {
  return node.nextSibling
}

function tagName (node) {
  return node.tagName
}

function setTextContent (node, text) {
  node.textContent = text;
}

function setStyleScope (node, scopeId) {
  node.setAttribute(scopeId, '');
}

var nodeOps = /*#__PURE__*/Object.freeze({
  createElement: createElement$1,
  createElementNS: createElementNS,
  createTextNode: createTextNode,
  createComment: createComment,
  insertBefore: insertBefore,
  removeChild: removeChild,
  appendChild: appendChild,
  parentNode: parentNode,
  nextSibling: nextSibling,
  tagName: tagName,
  setTextContent: setTextContent,
  setStyleScope: setStyleScope
});

/*  */

var ref = {
  create: function create (_, vnode) {
    registerRef(vnode);
  },
  update: function update (oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy (vnode) {
    registerRef(vnode, true);
  }
};

function registerRef (vnode, isRemoval) {
  var key = vnode.data.ref;
  if (!isDef(key)) { return }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;
  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */

var emptyNode = new VNode('', {}, []);

var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode (a, b) {
  return (
    a.key === b.key && (
      (
        a.tag === b.tag &&
        a.isComment === b.isComment &&
        isDef(a.data) === isDef(b.data) &&
        sameInputType(a, b)
      ) || (
        isTrue(a.isAsyncPlaceholder) &&
        a.asyncFactory === b.asyncFactory &&
        isUndef(b.asyncFactory.error)
      )
    )
  )
}

function sameInputType (a, b) {
  if (a.tag !== 'input') { return true }
  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
}

function createKeyToOldIdx (children, beginIdx, endIdx) {
  var i, key;
  var map = {};
  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;
    if (isDef(key)) { map[key] = i; }
  }
  return map
}

function createPatchFunction (backend) {
  var i, j;
  var cbs = {};

  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];
    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt (elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
  }

  function createRmCb (childElm, listeners) {
    function remove$$1 () {
      if (--remove$$1.listeners === 0) {
        removeNode(childElm);
      }
    }
    remove$$1.listeners = listeners;
    return remove$$1
  }

  function removeNode (el) {
    var parent = nodeOps.parentNode(el);
    // element may have already been removed due to v-html / v-text
    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  function isUnknownElement$$1 (vnode, inVPre) {
    return (
      !inVPre &&
      !vnode.ns &&
      !(
        config.ignoredElements.length &&
        config.ignoredElements.some(function (ignore) {
          return isRegExp(ignore)
            ? ignore.test(vnode.tag)
            : ignore === vnode.tag
        })
      ) &&
      config.isUnknownElement(vnode.tag)
    )
  }

  var creatingElmInVPre = 0;

  function createElm (
    vnode,
    insertedVnodeQueue,
    parentElm,
    refElm,
    nested,
    ownerArray,
    index
  ) {
    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // This vnode was used in a previous render!
      // now it's used as a new node, overwriting its elm would cause
      // potential patch errors down the road when it's used as an insertion
      // reference node. Instead, we clone the node on-demand before creating
      // associated DOM element for it.
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    vnode.isRootInsert = !nested; // for transition enter check
    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;
    if (isDef(tag)) {
      if (false) {
        if (data && data.pre) {
          creatingElmInVPre++;
        }
        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
          warn(
            'Unknown custom element: <' + tag + '> - did you ' +
            'register the component correctly? For recursive components, ' +
            'make sure to provide the "name" option.',
            vnode.context
          );
        }
      }

      vnode.elm = vnode.ns
        ? nodeOps.createElementNS(vnode.ns, tag)
        : nodeOps.createElement(tag, vnode);
      setScope(vnode);

      /* istanbul ignore if */
      {
        createChildren(vnode, children, insertedVnodeQueue);
        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }
        insert(parentElm, vnode.elm, refElm);
      }

      if (false) {
        creatingElmInVPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;
    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false /* hydrating */);
      }
      // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.
      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        insert(parentElm, vnode.elm, refElm);
        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }
        return true
      }
    }
  }

  function initComponent (vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }
    vnode.elm = vnode.componentInstance.$el;
    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode);
      // make sure to invoke the insert hook
      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i;
    // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.
    var innerNode = vnode;
    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;
      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }
        insertedVnodeQueue.push(innerNode);
        break
      }
    }
    // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself
    insert(parentElm, vnode.elm, refElm);
  }

  function insert (parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (nodeOps.parentNode(ref$$1) === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren (vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      if (false) {
        checkDuplicateKeys(children);
      }
      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
    }
  }

  function isPatchable (vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }
    return isDef(vnode.tag)
  }

  function invokeCreateHooks (vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }
    i = vnode.data.hook; // Reuse variable
    if (isDef(i)) {
      if (isDef(i.create)) { i.create(emptyNode, vnode); }
      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
    }
  }

  // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.
  function setScope (vnode) {
    var i;
    if (isDef(i = vnode.fnScopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    } else {
      var ancestor = vnode;
      while (ancestor) {
        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
          nodeOps.setStyleScope(vnode.elm, i);
        }
        ancestor = ancestor.parent;
      }
    }
    // for slot content they should also get the scopeId from the host instance.
    if (isDef(i = activeInstance) &&
      i !== vnode.context &&
      i !== vnode.fnContext &&
      isDef(i = i.$options._scopeId)
    ) {
      nodeOps.setStyleScope(vnode.elm, i);
    }
  }

  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
    }
  }

  function invokeDestroyHook (vnode) {
    var i, j;
    var data = vnode.data;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
    }
    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes (vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];
      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else { // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook (vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;
      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      }
      // recursively invoke hooks on child component root node
      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }
      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }
      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;

    // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions
    var canMove = !removeOnly;

    if (false) {
      checkDuplicateKeys(newCh);
    }

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
        idxInOld = isDef(newStartVnode.key)
          ? oldKeyToIdx[newStartVnode.key]
          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
        if (isUndef(idxInOld)) { // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
        } else {
          vnodeToMove = oldCh[idxInOld];
          if (sameVnode(vnodeToMove, newStartVnode)) {
            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
          }
        }
        newStartVnode = newCh[++newStartIdx];
      }
    }
    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function checkDuplicateKeys (children) {
    var seenKeys = {};
    for (var i = 0; i < children.length; i++) {
      var vnode = children[i];
      var key = vnode.key;
      if (isDef(key)) {
        if (seenKeys[key]) {
          warn(
            ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
            vnode.context
          );
        } else {
          seenKeys[key] = true;
        }
      }
    }
  }

  function findIdxInOld (node, oldCh, start, end) {
    for (var i = start; i < end; i++) {
      var c = oldCh[i];
      if (isDef(c) && sameVnode(node, c)) { return i }
    }
  }

  function patchVnode (
    oldVnode,
    vnode,
    insertedVnodeQueue,
    ownerArray,
    index,
    removeOnly
  ) {
    if (oldVnode === vnode) {
      return
    }

    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // clone reused vnode
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }
      return
    }

    // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.
    if (isTrue(vnode.isStatic) &&
      isTrue(oldVnode.isStatic) &&
      vnode.key === oldVnode.key &&
      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
    ) {
      vnode.componentInstance = oldVnode.componentInstance;
      return
    }

    var i;
    var data = vnode.data;
    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;
    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
    }
    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
      } else if (isDef(ch)) {
        if (false) {
          checkDuplicateKeys(ch);
        }
        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
    }
  }

  function invokeInsertHook (vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var hydrationBailed = false;
  // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  // Note: style is excluded because it relies on initial clone for future
  // deep updates (#7063).
  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');

  // Note: this is a browser-only function so we can assume elms are DOM nodes.
  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {
    var i;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    inVPre = inVPre || (data && data.pre);
    vnode.elm = elm;

    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.isAsyncPlaceholder = true;
      return true
    }
    // assert node match
    if (false) {
      if (!assertNodeMatch(elm, vnode, inVPre)) {
        return false
      }
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true
      }
    }
    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          // v-html and domProps: innerHTML
          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
            if (i !== elm.innerHTML) {
              /* istanbul ignore if */
              if (false
              ) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('server innerHTML: ', i);
                console.warn('client innerHTML: ', elm.innerHTML);
              }
              return false
            }
          } else {
            // iterate and compare children lists
            var childrenMatch = true;
            var childNode = elm.firstChild;
            for (var i$1 = 0; i$1 < children.length; i$1++) {
              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                childrenMatch = false;
                break
              }
              childNode = childNode.nextSibling;
            }
            // if childNode is not null, it means the actual childNodes list is
            // longer than the virtual children list.
            if (!childrenMatch || childNode) {
              /* istanbul ignore if */
              if (false
              ) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
              }
              return false
            }
          }
        }
      }
      if (isDef(data)) {
        var fullInvoke = false;
        for (var key in data) {
          if (!isRenderedModule(key)) {
            fullInvoke = true;
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break
          }
        }
        if (!fullInvoke && data['class']) {
          // ensure collecting deps for deep class bindings for future updates
          traverse(data['class']);
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }
    return true
  }

  function assertNodeMatch (node, vnode, inVPre) {
    if (isDef(vnode.tag)) {
      return vnode.tag.indexOf('vue-component') === 0 || (
        !isUnknownElement$$1(vnode, inVPre) &&
        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
      )
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3)
    }
  }

  return function patch (oldVnode, vnode, hydrating, removeOnly) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
      return
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);
      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }
          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode
            } else if (false) {
              warn(
                'The client-side rendered virtual DOM tree is not matching ' +
                'server-rendered content. This is likely caused by incorrect ' +
                'HTML markup, for example nesting block-level elements inside ' +
                '<p>, or missing <tbody>. Bailing hydration and performing ' +
                'full client-side render.'
              );
            }
          }
          // either not server-rendered, or hydration failed.
          // create an empty node and replace it
          oldVnode = emptyNodeAt(oldVnode);
        }

        // replacing existing element
        var oldElm = oldVnode.elm;
        var parentElm = nodeOps.parentNode(oldElm);

        // create new node
        createElm(
          vnode,
          insertedVnodeQueue,
          // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm,
          nodeOps.nextSibling(oldElm)
        );

        // update parent placeholder node element, recursively
        if (isDef(vnode.parent)) {
          var ancestor = vnode.parent;
          var patchable = isPatchable(vnode);
          while (ancestor) {
            for (var i = 0; i < cbs.destroy.length; ++i) {
              cbs.destroy[i](ancestor);
            }
            ancestor.elm = vnode.elm;
            if (patchable) {
              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                cbs.create[i$1](emptyNode, ancestor);
              }
              // #6513
              // invoke insert hooks that may have been merged by create hooks.
              // e.g. for directives that uses the "inserted" hook.
              var insert = ancestor.data.hook.insert;
              if (insert.merged) {
                // start at index 1 to avoid re-invoking component mounted hook
                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                  insert.fns[i$2]();
                }
              }
            } else {
              registerRef(ancestor);
            }
            ancestor = ancestor.parent;
          }
        }

        // destroy old node
        if (isDef(parentElm)) {
          removeVnodes([oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm
  }
}

/*  */

var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives (vnode) {
    updateDirectives(vnode, emptyNode);
  }
};

function updateDirectives (oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update (oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

  var dirsWithInsert = [];
  var dirsWithPostpatch = [];

  var key, oldDir, dir;
  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];
    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);
      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      dir.oldArg = oldDir.arg;
      callHook$1(dir, 'update', vnode, oldVnode);
      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };
    if (isCreate) {
      mergeVNodeHook(vnode, 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode, 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1 (
  dirs,
  vm
) {
  var res = Object.create(null);
  if (!dirs) {
    // $flow-disable-line
    return res
  }
  var i, dir;
  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];
    if (!dir.modifiers) {
      // $flow-disable-line
      dir.modifiers = emptyModifiers;
    }
    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  }
  // $flow-disable-line
  return res
}

function getRawDirName (dir) {
  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
}

function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];
  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
    }
  }
}

var baseModules = [
  ref,
  directives
];

/*  */

function updateAttrs (oldVnode, vnode) {
  var opts = vnode.componentOptions;
  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return
  }
  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return
  }
  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];
    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  }
  // #4391: in IE9, setting type can reset value for input[type=radio]
  // #6666: IE/Edge forces progress value down to 1 before setting a max
  /* istanbul ignore if */
  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }
  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr (el, key, value) {
  if (el.tagName.indexOf('-') > -1) {
    baseSetAttr(el, key, value);
  } else if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      // technically allowfullscreen is a boolean attribute for <iframe>,
      // but Flash expects a value of "true" when used on <embed> tag
      value = key === 'allowfullscreen' && el.tagName === 'EMBED'
        ? 'true'
        : key;
      el.setAttribute(key, value);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, convertEnumeratedValue(key, value));
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    baseSetAttr(el, key, value);
  }
}

function baseSetAttr (el, key, value) {
  if (isFalsyAttrValue(value)) {
    el.removeAttribute(key);
  } else {
    // #7138: IE10 & 11 fires input event when setting placeholder on
    // <textarea>... block the first input event and remove the blocker
    // immediately.
    /* istanbul ignore if */
    if (
      isIE && !isIE9 &&
      el.tagName === 'TEXTAREA' &&
      key === 'placeholder' && value !== '' && !el.__ieph
    ) {
      var blocker = function (e) {
        e.stopImmediatePropagation();
        el.removeEventListener('input', blocker);
      };
      el.addEventListener('input', blocker);
      // $flow-disable-line
      el.__ieph = true; /* IE placeholder patched */
    }
    el.setAttribute(key, value);
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
};

/*  */

function updateClass (oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;
  if (
    isUndef(data.staticClass) &&
    isUndef(data.class) && (
      isUndef(oldData) || (
        isUndef(oldData.staticClass) &&
        isUndef(oldData.class)
      )
    )
  ) {
    return
  }

  var cls = genClassForVnode(vnode);

  // handle transition classes
  var transitionClass = el._transitionClasses;
  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  }

  // set the class
  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
};

/*  */

/*  */

/*  */

/*  */

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

/*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents (on) {
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    var event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  }
  // This was originally intended to fix #4521 but no longer necessary
  // after 2.5. Keeping it for backwards compat with generated code from < 2.4
  /* istanbul ignore if */
  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function createOnceHandler$1 (event, handler, capture) {
  var _target = target$1; // save current target element in closure
  return function onceHandler () {
    var res = handler.apply(null, arguments);
    if (res !== null) {
      remove$2(event, onceHandler, capture, _target);
    }
  }
}

// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
// implementation and does not fire microtasks in between event propagation, so
// safe to exclude.
var useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);

function add$1 (
  name,
  handler,
  capture,
  passive
) {
  // async edge case #6566: inner click event triggers patch, event handler
  // attached to outer element during patch, and triggered again. This
  // happens because browsers fire microtask ticks between event propagation.
  // the solution is simple: we save the timestamp when a handler is attached,
  // and the handler would only fire if the event passed to it was fired
  // AFTER it was attached.
  if (useMicrotaskFix) {
    var attachedTimestamp = currentFlushTimestamp;
    var original = handler;
    handler = original._wrapper = function (e) {
      if (
        // no bubbling, should always fire.
        // this is just a safety net in case event.timeStamp is unreliable in
        // certain weird environments...
        e.target === e.currentTarget ||
        // event is fired after handler attachment
        e.timeStamp >= attachedTimestamp ||
        // bail for environments that have buggy event.timeStamp implementations
        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
        // #9681 QtWebEngine event.timeStamp is negative value
        e.timeStamp <= 0 ||
        // #9448 bail if event is fired in another document in a multi-page
        // electron/nw.js app, since event.timeStamp will be using a different
        // starting reference
        e.target.ownerDocument !== document
      ) {
        return original.apply(this, arguments)
      }
    };
  }
  target$1.addEventListener(
    name,
    handler,
    supportsPassive
      ? { capture: capture, passive: passive }
      : capture
  );
}

function remove$2 (
  name,
  handler,
  capture,
  _target
) {
  (_target || target$1).removeEventListener(
    name,
    handler._wrapper || handler,
    capture
  );
}

function updateDOMListeners (oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return
  }
  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);
  target$1 = undefined;
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
};

/*  */

var svgContainer;

function updateDOMProps (oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return
  }
  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (!(key in props)) {
      elm[key] = '';
    }
  }

  for (key in props) {
    cur = props[key];
    // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)
    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) { vnode.children.length = 0; }
      if (cur === oldProps[key]) { continue }
      // #6601 work around Chrome version <= 55 bug where single textNode
      // replaced by innerHTML/textContent retains its parentNode property
      if (elm.childNodes.length === 1) {
        elm.removeChild(elm.childNodes[0]);
      }
    }

    if (key === 'value' && elm.tagName !== 'PROGRESS') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur;
      // avoid resetting cursor position when value is the same
      var strCur = isUndef(cur) ? '' : String(cur);
      if (shouldUpdateValue(elm, strCur)) {
        elm.value = strCur;
      }
    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {
      // IE doesn't support innerHTML for SVG elements
      svgContainer = svgContainer || document.createElement('div');
      svgContainer.innerHTML = "<svg>" + cur + "</svg>";
      var svg = svgContainer.firstChild;
      while (elm.firstChild) {
        elm.removeChild(elm.firstChild);
      }
      while (svg.firstChild) {
        elm.appendChild(svg.firstChild);
      }
    } else if (
      // skip the update if old and new VDOM state is the same.
      // `value` is handled separately because the DOM value may be temporarily
      // out of sync with VDOM state due to focus, composition and modifiers.
      // This  #4521 by skipping the unnecesarry `checked` update.
      cur !== oldProps[key]
    ) {
      // some property updates can throw
      // e.g. `value` on <progress> w/ non-finite value
      try {
        elm[key] = cur;
      } catch (e) {}
    }
  }
}

// check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue (elm, checkVal) {
  return (!elm.composing && (
    elm.tagName === 'OPTION' ||
    isNotInFocusAndDirty(elm, checkVal) ||
    isDirtyWithModifiers(elm, checkVal)
  ))
}

function isNotInFocusAndDirty (elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true;
  // #6157
  // work around IE bug when accessing document.activeElement in an iframe
  try { notInFocus = document.activeElement !== elm; } catch (e) {}
  return notInFocus && elm.value !== checkVal
}

function isDirtyWithModifiers (elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime
  if (isDef(modifiers)) {
    if (modifiers.number) {
      return toNumber(value) !== toNumber(newVal)
    }
    if (modifiers.trim) {
      return value.trim() !== newVal.trim()
    }
  }
  return value !== newVal
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
};

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// merge static and dynamic style data on the same vnode
function normalizeStyleData (data) {
  var style = normalizeStyleBinding(data.style);
  // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it
  return data.staticStyle
    ? extend(data.staticStyle, style)
    : style
}

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle (vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;
    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;
      if (
        childNode && childNode.data &&
        (styleData = normalizeStyleData(childNode.data))
      ) {
        extend(res, styleData);
      }
    }
  }

  if ((styleData = normalizeStyleData(vnode.data))) {
    extend(res, styleData);
  }

  var parentNode = vnode;
  while ((parentNode = parentNode.parent)) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }
  return res
}

/*  */

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);
    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];

var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);
  if (prop !== 'filter' && (prop in emptyStyle)) {
    return prop
  }
  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;
    if (name in emptyStyle) {
      return name
    }
  }
});

function updateStyle (oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) &&
    isUndef(oldData.staticStyle) && isUndef(oldData.style)
  ) {
    return
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
  var oldStyle = oldStaticStyle || oldStyleBinding;

  var style = normalizeStyleBinding(vnode.data.style) || {};

  // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likely wants
  // to mutate it.
  vnode.data.normalizedStyle = isDef(style.__ob__)
    ? extend({}, style)
    : style;

  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }
  for (name in newStyle) {
    cur = newStyle[name];
    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
};

/*  */

var whitespaceRE = /\s+/;

/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function addClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}

/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });
    } else {
      el.classList.remove(cls);
    }
    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';
    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }
    cur = cur.trim();
    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}

/*  */

function resolveTransition (def$$1) {
  if (!def$$1) {
    return
  }
  /* istanbul ignore else */
  if (typeof def$$1 === 'object') {
    var res = {};
    if (def$$1.css !== false) {
      extend(res, autoCssTransition(def$$1.name || 'v'));
    }
    extend(res, def$$1);
    return res
  } else if (typeof def$$1 === 'string') {
    return autoCssTransition(def$$1)
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: (name + "-enter"),
    enterToClass: (name + "-enter-to"),
    enterActiveClass: (name + "-enter-active"),
    leaveClass: (name + "-leave"),
    leaveToClass: (name + "-leave-to"),
    leaveActiveClass: (name + "-leave-active")
  }
});

var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';

// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined &&
    window.onwebkittransitionend !== undefined
  ) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }
  if (window.onanimationend === undefined &&
    window.onwebkitanimationend !== undefined
  ) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
}

// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser
  ? window.requestAnimationFrame
    ? window.requestAnimationFrame.bind(window)
    : setTimeout
  : /* istanbul ignore next */ function (fn) { return fn(); };

function nextFrame (fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass (el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass (el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }
  removeClass(el, cls);
}

function whenTransitionEnds (
  el,
  expectedType,
  cb
) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;
  if (!type) { return cb() }
  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;
  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };
  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };
  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo (el, expectedType) {
  var styles = window.getComputedStyle(el);
  // JSDOM may return undefined for transition properties
  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');
  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');
  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);

  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0
      ? transitionTimeout > animationTimeout
        ? TRANSITION
        : ANIMATION
      : null;
    propCount = type
      ? type === TRANSITION
        ? transitionDurations.length
        : animationDurations.length
      : 0;
  }
  var hasTransform =
    type === TRANSITION &&
    transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  }
}

function getTimeout (delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i])
  }))
}

// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
// in a locale-dependent way, using a comma instead of a dot.
// If comma is not replaced with a dot, the input will be rounded down (i.e. acting
// as a floor function) causing unexpected behaviors
function toMs (s) {
  return Number(s.slice(0, -1).replace(',', '.')) * 1000
}

/*  */

function enter (vnode, toggleDisplay) {
  var el = vnode.elm;

  // call leave callback now
  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;
    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return
  }

  /* istanbul ignore if */
  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration;

  // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.
  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;
  while (transitionNode && transitionNode.parent) {
    context = transitionNode.context;
    transitionNode = transitionNode.parent;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return
  }

  var startClass = isAppear && appearClass
    ? appearClass
    : enterClass;
  var activeClass = isAppear && appearActiveClass
    ? appearActiveClass
    : enterActiveClass;
  var toClass = isAppear && appearToClass
    ? appearToClass
    : enterToClass;

  var beforeEnterHook = isAppear
    ? (beforeAppear || beforeEnter)
    : beforeEnter;
  var enterHook = isAppear
    ? (typeof appear === 'function' ? appear : enter)
    : enter;
  var afterEnterHook = isAppear
    ? (afterAppear || afterEnter)
    : afterEnter;
  var enterCancelledHook = isAppear
    ? (appearCancelled || enterCancelled)
    : enterCancelled;

  var explicitEnterDuration = toNumber(
    isObject(duration)
      ? duration.enter
      : duration
  );

  if (false) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);

  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }
      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }
    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode, 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
      if (pendingNode &&
        pendingNode.tag === vnode.tag &&
        pendingNode.elm._leaveCb
      ) {
        pendingNode.elm._leaveCb();
      }
      enterHook && enterHook(el, cb);
    });
  }

  // start enter transition
  beforeEnterHook && beforeEnterHook(el);
  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      removeTransitionClass(el, startClass);
      if (!cb.cancelled) {
        addTransitionClass(el, toClass);
        if (!userWantsControl) {
          if (isValidDuration(explicitEnterDuration)) {
            setTimeout(cb, explicitEnterDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave (vnode, rm) {
  var el = vnode.elm;

  // call enter callback now
  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;
    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data) || el.nodeType !== 1) {
    return rm()
  }

  /* istanbul ignore if */
  if (isDef(el._leaveCb)) {
    return
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);

  var explicitLeaveDuration = toNumber(
    isObject(duration)
      ? duration.leave
      : duration
  );

  if (false) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }
    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }
      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }
    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave () {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return
    }
    // record leaving element
    if (!vnode.data.show && el.parentNode) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
    }
    beforeLeave && beforeLeave(el);
    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        removeTransitionClass(el, leaveClass);
        if (!cb.cancelled) {
          addTransitionClass(el, leaveToClass);
          if (!userWantsControl) {
            if (isValidDuration(explicitLeaveDuration)) {
              setTimeout(cb, explicitLeaveDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        }
      });
    }
    leave && leave(el, cb);
    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
}

// only used in dev mode
function checkDuration (val, name, vnode) {
  if (typeof val !== 'number') {
    warn(
      "<transition> explicit " + name + " duration is not a valid number - " +
      "got " + (JSON.stringify(val)) + ".",
      vnode.context
    );
  } else if (isNaN(val)) {
    warn(
      "<transition> explicit " + name + " duration is NaN - " +
      'the duration expression might be incorrect.',
      vnode.context
    );
  }
}

function isValidDuration (val) {
  return typeof val === 'number' && !isNaN(val)
}

/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength (fn) {
  if (isUndef(fn)) {
    return false
  }
  var invokerFns = fn.fns;
  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(
      Array.isArray(invokerFns)
        ? invokerFns[0]
        : invokerFns
    )
  } else {
    return (fn._length || fn.length) > 1
  }
}

function _enter (_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1 (vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {};

var platformModules = [
  attrs,
  klass,
  events,
  domProps,
  style,
  transition
];

/*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);

var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

/* istanbul ignore if */
if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var directive = {
  inserted: function inserted (el, binding, vnode, oldVnode) {
    if (vnode.tag === 'select') {
      // #6903
      if (oldVnode.elm && !oldVnode.elm._vOptions) {
        mergeVNodeHook(vnode, 'postpatch', function () {
          directive.componentUpdated(el, binding, vnode);
        });
      } else {
        setSelected(el, binding, vnode.context);
      }
      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;
      if (!binding.modifiers.lazy) {
        el.addEventListener('compositionstart', onCompositionStart);
        el.addEventListener('compositionend', onCompositionEnd);
        // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.
        el.addEventListener('change', onCompositionEnd);
        /* istanbul ignore if */
        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },

  componentUpdated: function componentUpdated (el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context);
      // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.
      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);
      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
        // trigger change event if
        // no matching option found for at least one value
        var needReset = el.multiple
          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })
          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
        if (needReset) {
          trigger(el, 'change');
        }
      }
    }
  }
};

function setSelected (el, binding, vm) {
  actuallySetSelected(el, binding, vm);
  /* istanbul ignore if */
  if (isIE || isEdge) {
    setTimeout(function () {
      actuallySetSelected(el, binding, vm);
    }, 0);
  }
}

function actuallySetSelected (el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;
  if (isMultiple && !Array.isArray(value)) {
    "production" !== 'production' && warn(
      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
      vm
    );
    return
  }
  var selected, option;
  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];
    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;
      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }
        return
      }
    }
  }
  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function hasNoMatchingOption (value, options) {
  return options.every(function (o) { return !looseEqual(o, value); })
}

function getValue (option) {
  return '_value' in option
    ? option._value
    : option.value
}

function onCompositionStart (e) {
  e.target.composing = true;
}

function onCompositionEnd (e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) { return }
  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger (el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}

/*  */

// recursively search for possible transition defined inside the component root
function locateNode (vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
    ? locateNode(vnode.componentInstance._vnode)
    : vnode
}

var show = {
  bind: function bind (el, ref, vnode) {
    var value = ref.value;

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay =
      el.style.display === 'none' ? '' : el.style.display;
    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },

  update: function update (el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;

    /* istanbul ignore if */
    if (!value === !oldValue) { return }
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    if (transition$$1) {
      vnode.data.show = true;
      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },

  unbind: function unbind (
    el,
    binding,
    vnode,
    oldVnode,
    isDestroy
  ) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
};

var platformDirectives = {
  model: directive,
  show: show
};

/*  */

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
};

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild (vnode) {
  var compOptions = vnode && vnode.componentOptions;
  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children))
  } else {
    return vnode
  }
}

function extractTransitionData (comp) {
  var data = {};
  var options = comp.$options;
  // props
  for (var key in options.propsData) {
    data[key] = comp[key];
  }
  // events.
  // extract listeners and pass them directly to the transition methods
  var listeners = options._parentListeners;
  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }
  return data
}

function placeholder (h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    })
  }
}

function hasParentTransition (vnode) {
  while ((vnode = vnode.parent)) {
    if (vnode.data.transition) {
      return true
    }
  }
}

function isSameChild (child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag
}

var isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };

var isVShowDirective = function (d) { return d.name === 'show'; };

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,

  render: function render (h) {
    var this$1 = this;

    var children = this.$slots.default;
    if (!children) {
      return
    }

    // filter out text nodes (possible whitespaces)
    children = children.filter(isNotTextNode);
    /* istanbul ignore if */
    if (!children.length) {
      return
    }

    // warn multiple elements
    if (false) {
      warn(
        '<transition> can only be used on a single element. Use ' +
        '<transition-group> for lists.',
        this.$parent
      );
    }

    var mode = this.mode;

    // warn invalid mode
    if (false
    ) {
      warn(
        'invalid <transition> mode: ' + mode,
        this.$parent
      );
    }

    var rawChild = children[0];

    // if this is a component root node and the component's
    // parent container node also has transition, skip.
    if (hasParentTransition(this.$vnode)) {
      return rawChild
    }

    // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive
    var child = getRealChild(rawChild);
    /* istanbul ignore if */
    if (!child) {
      return rawChild
    }

    if (this._leaving) {
      return placeholder(h, rawChild)
    }

    // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.
    var id = "__transition-" + (this._uid) + "-";
    child.key = child.key == null
      ? child.isComment
        ? id + 'comment'
        : id + child.tag
      : isPrimitive(child.key)
        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
        : child.key;

    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild);

    // mark v-show
    // so that the transition module can hand over the control to the directive
    if (child.data.directives && child.data.directives.some(isVShowDirective)) {
      child.data.show = true;
    }

    if (
      oldChild &&
      oldChild.data &&
      !isSameChild(child, oldChild) &&
      !isAsyncPlaceholder(oldChild) &&
      // #6687 component root is a comment node
      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
    ) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild.data.transition = extend({}, data);
      // handle transition mode
      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild)
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild
        }
        var delayedLeave;
        var performLeave = function () { delayedLeave(); };
        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
      }
    }

    return rawChild
  }
};

/*  */

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);

delete props.mode;

var TransitionGroup = {
  props: props,

  beforeMount: function beforeMount () {
    var this$1 = this;

    var update = this._update;
    this._update = function (vnode, hydrating) {
      var restoreActiveInstance = setActiveInstance(this$1);
      // force removing pass
      this$1.__patch__(
        this$1._vnode,
        this$1.kept,
        false, // hydrating
        true // removeOnly (!important, avoids unnecessary moves)
      );
      this$1._vnode = this$1.kept;
      restoreActiveInstance();
      update.call(this$1, vnode, hydrating);
    };
  },

  render: function render (h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];
      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c
          ;(c.data || (c.data = {})).transition = transitionData;
        } else if (false) {
          var opts = c.componentOptions;
          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
          warn(("<transition-group> children must be keyed: <" + name + ">"));
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];
      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();
        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }
      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children)
  },

  updated: function updated () {
    var children = this.prevChildren;
    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return
    }

    // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.
    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation);

    // force reflow to put everything in position
    // assign to this to avoid being removed in tree-shaking
    // $flow-disable-line
    this._reflow = document.body.offsetHeight;

    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
          if (e && e.target !== el) {
            return
          }
          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },

  methods: {
    hasMove: function hasMove (el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false
      }
      /* istanbul ignore if */
      if (this._hasMove) {
        return this._hasMove
      }
      // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.
      var clone = el.cloneNode();
      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
      }
      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return (this._hasMove = info.hasTransform)
    }
  }
};

function callPendingCbs (c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */
  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition (c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation (c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;
  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
};

/*  */

// install platform specific utils
Vue.config.mustUseProp = mustUseProp;
Vue.config.isReservedTag = isReservedTag;
Vue.config.isReservedAttr = isReservedAttr;
Vue.config.getTagNamespace = getTagNamespace;
Vue.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
extend(Vue.options.directives, platformDirectives);
extend(Vue.options.components, platformComponents);

// install platform patch function
Vue.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
Vue.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating)
};

// devtools global hook
/* istanbul ignore next */
if (inBrowser) {
  setTimeout(function () {
    if (config.devtools) {
      if (devtools) {
        devtools.emit('init', Vue);
      } else if (
        false
      ) {
        console[console.info ? 'info' : 'log'](
          'Download the Vue Devtools extension for a better development experience:\n' +
          'https://github.com/vuejs/vue-devtools'
        );
      }
    }
    if (false
    ) {
      console[console.info ? 'info' : 'log'](
        "You are running Vue in development mode.\n" +
        "Make sure to turn on production mode when deploying for production.\n" +
        "See more tips at https://vuejs.org/guide/deployment.html"
      );
    }
  }, 0);
}

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(16), __webpack_require__(42).setImmediate))

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.inherit = inherit;
exports.emit = emit;
exports.mount = mount;

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _vue = _interopRequireDefault(__webpack_require__(13));

var inheritKey = ['ref', 'key', 'style', 'class', 'attrs', 'refInFor', 'nativeOn', 'directives', 'staticClass', 'staticStyle'];
var mapInheritKey = {
  nativeOn: 'on'
}; // inherit partial context, map nativeOn to on

function inherit(context, inheritListeners) {
  var result = inheritKey.reduce(function (obj, key) {
    if (context.data[key]) {
      obj[mapInheritKey[key] || key] = context.data[key];
    }

    return obj;
  }, {});

  if (inheritListeners) {
    result.on = result.on || {};
    (0, _extends2.default)(result.on, context.data.on);
  }

  return result;
} // emit event


function emit(context, eventName) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var listeners = context.listeners[eventName];

  if (listeners) {
    if (Array.isArray(listeners)) {
      listeners.forEach(function (listener) {
        listener.apply(void 0, args);
      });
    } else {
      listeners.apply(void 0, args);
    }
  }
} // mount functional component


function mount(Component, data) {
  var instance = new _vue.default({
    el: document.createElement('div'),
    props: Component.props,
    render: function render(h) {
      return h(Component, (0, _extends2.default)({
        props: this.$props
      }, data));
    }
  });
  document.body.appendChild(instance.$el);
  return instance;
}

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!
 * Vue.js v2.6.11
 * (c) 2014-2019 Evan You
 * Released under the MIT License.
 */
(function (global, factory) {
   true ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = global || self, global.Vue = factory());
}(this, function () { 'use strict';

  /*  */

  var emptyObject = Object.freeze({});

  // These helpers produce better VM code in JS engines due to their
  // explicitness and function inlining.
  function isUndef (v) {
    return v === undefined || v === null
  }

  function isDef (v) {
    return v !== undefined && v !== null
  }

  function isTrue (v) {
    return v === true
  }

  function isFalse (v) {
    return v === false
  }

  /**
   * Check if value is primitive.
   */
  function isPrimitive (value) {
    return (
      typeof value === 'string' ||
      typeof value === 'number' ||
      // $flow-disable-line
      typeof value === 'symbol' ||
      typeof value === 'boolean'
    )
  }

  /**
   * Quick object check - this is primarily used to tell
   * Objects from primitive values when we know the value
   * is a JSON-compliant type.
   */
  function isObject (obj) {
    return obj !== null && typeof obj === 'object'
  }

  /**
   * Get the raw type string of a value, e.g., [object Object].
   */
  var _toString = Object.prototype.toString;

  function toRawType (value) {
    return _toString.call(value).slice(8, -1)
  }

  /**
   * Strict object type check. Only returns true
   * for plain JavaScript objects.
   */
  function isPlainObject (obj) {
    return _toString.call(obj) === '[object Object]'
  }

  function isRegExp (v) {
    return _toString.call(v) === '[object RegExp]'
  }

  /**
   * Check if val is a valid array index.
   */
  function isValidArrayIndex (val) {
    var n = parseFloat(String(val));
    return n >= 0 && Math.floor(n) === n && isFinite(val)
  }

  function isPromise (val) {
    return (
      isDef(val) &&
      typeof val.then === 'function' &&
      typeof val.catch === 'function'
    )
  }

  /**
   * Convert a value to a string that is actually rendered.
   */
  function toString (val) {
    return val == null
      ? ''
      : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
        ? JSON.stringify(val, null, 2)
        : String(val)
  }

  /**
   * Convert an input value to a number for persistence.
   * If the conversion fails, return original string.
   */
  function toNumber (val) {
    var n = parseFloat(val);
    return isNaN(n) ? val : n
  }

  /**
   * Make a map and return a function for checking if a key
   * is in that map.
   */
  function makeMap (
    str,
    expectsLowerCase
  ) {
    var map = Object.create(null);
    var list = str.split(',');
    for (var i = 0; i < list.length; i++) {
      map[list[i]] = true;
    }
    return expectsLowerCase
      ? function (val) { return map[val.toLowerCase()]; }
      : function (val) { return map[val]; }
  }

  /**
   * Check if a tag is a built-in tag.
   */
  var isBuiltInTag = makeMap('slot,component', true);

  /**
   * Check if an attribute is a reserved attribute.
   */
  var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

  /**
   * Remove an item from an array.
   */
  function remove (arr, item) {
    if (arr.length) {
      var index = arr.indexOf(item);
      if (index > -1) {
        return arr.splice(index, 1)
      }
    }
  }

  /**
   * Check whether an object has the property.
   */
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  function hasOwn (obj, key) {
    return hasOwnProperty.call(obj, key)
  }

  /**
   * Create a cached version of a pure function.
   */
  function cached (fn) {
    var cache = Object.create(null);
    return (function cachedFn (str) {
      var hit = cache[str];
      return hit || (cache[str] = fn(str))
    })
  }

  /**
   * Camelize a hyphen-delimited string.
   */
  var camelizeRE = /-(\w)/g;
  var camelize = cached(function (str) {
    return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
  });

  /**
   * Capitalize a string.
   */
  var capitalize = cached(function (str) {
    return str.charAt(0).toUpperCase() + str.slice(1)
  });

  /**
   * Hyphenate a camelCase string.
   */
  var hyphenateRE = /\B([A-Z])/g;
  var hyphenate = cached(function (str) {
    return str.replace(hyphenateRE, '-$1').toLowerCase()
  });

  /**
   * Simple bind polyfill for environments that do not support it,
   * e.g., PhantomJS 1.x. Technically, we don't need this anymore
   * since native bind is now performant enough in most browsers.
   * But removing it would mean breaking code that was able to run in
   * PhantomJS 1.x, so this must be kept for backward compatibility.
   */

  /* istanbul ignore next */
  function polyfillBind (fn, ctx) {
    function boundFn (a) {
      var l = arguments.length;
      return l
        ? l > 1
          ? fn.apply(ctx, arguments)
          : fn.call(ctx, a)
        : fn.call(ctx)
    }

    boundFn._length = fn.length;
    return boundFn
  }

  function nativeBind (fn, ctx) {
    return fn.bind(ctx)
  }

  var bind = Function.prototype.bind
    ? nativeBind
    : polyfillBind;

  /**
   * Convert an Array-like object to a real Array.
   */
  function toArray (list, start) {
    start = start || 0;
    var i = list.length - start;
    var ret = new Array(i);
    while (i--) {
      ret[i] = list[i + start];
    }
    return ret
  }

  /**
   * Mix properties into target object.
   */
  function extend (to, _from) {
    for (var key in _from) {
      to[key] = _from[key];
    }
    return to
  }

  /**
   * Merge an Array of Objects into a single Object.
   */
  function toObject (arr) {
    var res = {};
    for (var i = 0; i < arr.length; i++) {
      if (arr[i]) {
        extend(res, arr[i]);
      }
    }
    return res
  }

  /* eslint-disable no-unused-vars */

  /**
   * Perform no operation.
   * Stubbing args to make Flow happy without leaving useless transpiled code
   * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
   */
  function noop (a, b, c) {}

  /**
   * Always return false.
   */
  var no = function (a, b, c) { return false; };

  /* eslint-enable no-unused-vars */

  /**
   * Return the same value.
   */
  var identity = function (_) { return _; };

  /**
   * Generate a string containing static keys from compiler modules.
   */
  function genStaticKeys (modules) {
    return modules.reduce(function (keys, m) {
      return keys.concat(m.staticKeys || [])
    }, []).join(',')
  }

  /**
   * Check if two values are loosely equal - that is,
   * if they are plain objects, do they have the same shape?
   */
  function looseEqual (a, b) {
    if (a === b) { return true }
    var isObjectA = isObject(a);
    var isObjectB = isObject(b);
    if (isObjectA && isObjectB) {
      try {
        var isArrayA = Array.isArray(a);
        var isArrayB = Array.isArray(b);
        if (isArrayA && isArrayB) {
          return a.length === b.length && a.every(function (e, i) {
            return looseEqual(e, b[i])
          })
        } else if (a instanceof Date && b instanceof Date) {
          return a.getTime() === b.getTime()
        } else if (!isArrayA && !isArrayB) {
          var keysA = Object.keys(a);
          var keysB = Object.keys(b);
          return keysA.length === keysB.length && keysA.every(function (key) {
            return looseEqual(a[key], b[key])
          })
        } else {
          /* istanbul ignore next */
          return false
        }
      } catch (e) {
        /* istanbul ignore next */
        return false
      }
    } else if (!isObjectA && !isObjectB) {
      return String(a) === String(b)
    } else {
      return false
    }
  }

  /**
   * Return the first index at which a loosely equal value can be
   * found in the array (if value is a plain object, the array must
   * contain an object of the same shape), or -1 if it is not present.
   */
  function looseIndexOf (arr, val) {
    for (var i = 0; i < arr.length; i++) {
      if (looseEqual(arr[i], val)) { return i }
    }
    return -1
  }

  /**
   * Ensure a function is called only once.
   */
  function once (fn) {
    var called = false;
    return function () {
      if (!called) {
        called = true;
        fn.apply(this, arguments);
      }
    }
  }

  var SSR_ATTR = 'data-server-rendered';

  var ASSET_TYPES = [
    'component',
    'directive',
    'filter'
  ];

  var LIFECYCLE_HOOKS = [
    'beforeCreate',
    'created',
    'beforeMount',
    'mounted',
    'beforeUpdate',
    'updated',
    'beforeDestroy',
    'destroyed',
    'activated',
    'deactivated',
    'errorCaptured',
    'serverPrefetch'
  ];

  /*  */



  var config = ({
    /**
     * Option merge strategies (used in core/util/options)
     */
    // $flow-disable-line
    optionMergeStrategies: Object.create(null),

    /**
     * Whether to suppress warnings.
     */
    silent: false,

    /**
     * Show production mode tip message on boot?
     */
    productionTip: "development" !== 'production',

    /**
     * Whether to enable devtools
     */
    devtools: "development" !== 'production',

    /**
     * Whether to record perf
     */
    performance: false,

    /**
     * Error handler for watcher errors
     */
    errorHandler: null,

    /**
     * Warn handler for watcher warns
     */
    warnHandler: null,

    /**
     * Ignore certain custom elements
     */
    ignoredElements: [],

    /**
     * Custom user key aliases for v-on
     */
    // $flow-disable-line
    keyCodes: Object.create(null),

    /**
     * Check if a tag is reserved so that it cannot be registered as a
     * component. This is platform-dependent and may be overwritten.
     */
    isReservedTag: no,

    /**
     * Check if an attribute is reserved so that it cannot be used as a component
     * prop. This is platform-dependent and may be overwritten.
     */
    isReservedAttr: no,

    /**
     * Check if a tag is an unknown element.
     * Platform-dependent.
     */
    isUnknownElement: no,

    /**
     * Get the namespace of an element
     */
    getTagNamespace: noop,

    /**
     * Parse the real tag name for the specific platform.
     */
    parsePlatformTagName: identity,

    /**
     * Check if an attribute must be bound using property, e.g. value
     * Platform-dependent.
     */
    mustUseProp: no,

    /**
     * Perform updates asynchronously. Intended to be used by Vue Test Utils
     * This will significantly reduce performance if set to false.
     */
    async: true,

    /**
     * Exposed for legacy reasons
     */
    _lifecycleHooks: LIFECYCLE_HOOKS
  });

  /*  */

  /**
   * unicode letters used for parsing html tags, component names and property paths.
   * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
   * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
   */
  var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

  /**
   * Check if a string starts with $ or _
   */
  function isReserved (str) {
    var c = (str + '').charCodeAt(0);
    return c === 0x24 || c === 0x5F
  }

  /**
   * Define a property.
   */
  function def (obj, key, val, enumerable) {
    Object.defineProperty(obj, key, {
      value: val,
      enumerable: !!enumerable,
      writable: true,
      configurable: true
    });
  }

  /**
   * Parse simple path.
   */
  var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
  function parsePath (path) {
    if (bailRE.test(path)) {
      return
    }
    var segments = path.split('.');
    return function (obj) {
      for (var i = 0; i < segments.length; i++) {
        if (!obj) { return }
        obj = obj[segments[i]];
      }
      return obj
    }
  }

  /*  */

  // can we use __proto__?
  var hasProto = '__proto__' in {};

  // Browser environment sniffing
  var inBrowser = typeof window !== 'undefined';
  var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
  var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
  var UA = inBrowser && window.navigator.userAgent.toLowerCase();
  var isIE = UA && /msie|trident/.test(UA);
  var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
  var isEdge = UA && UA.indexOf('edge/') > 0;
  var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
  var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
  var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
  var isPhantomJS = UA && /phantomjs/.test(UA);
  var isFF = UA && UA.match(/firefox\/(\d+)/);

  // Firefox has a "watch" function on Object.prototype...
  var nativeWatch = ({}).watch;

  var supportsPassive = false;
  if (inBrowser) {
    try {
      var opts = {};
      Object.defineProperty(opts, 'passive', ({
        get: function get () {
          /* istanbul ignore next */
          supportsPassive = true;
        }
      })); // https://github.com/facebook/flow/issues/285
      window.addEventListener('test-passive', null, opts);
    } catch (e) {}
  }

  // this needs to be lazy-evaled because vue may be required before
  // vue-server-renderer can set VUE_ENV
  var _isServer;
  var isServerRendering = function () {
    if (_isServer === undefined) {
      /* istanbul ignore if */
      if (!inBrowser && !inWeex && typeof global !== 'undefined') {
        // detect presence of vue-server-renderer and avoid
        // Webpack shimming the process
        _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
      } else {
        _isServer = false;
      }
    }
    return _isServer
  };

  // detect devtools
  var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

  /* istanbul ignore next */
  function isNative (Ctor) {
    return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
  }

  var hasSymbol =
    typeof Symbol !== 'undefined' && isNative(Symbol) &&
    typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

  var _Set;
  /* istanbul ignore if */ // $flow-disable-line
  if (typeof Set !== 'undefined' && isNative(Set)) {
    // use native Set when available.
    _Set = Set;
  } else {
    // a non-standard Set polyfill that only works with primitive keys.
    _Set = /*@__PURE__*/(function () {
      function Set () {
        this.set = Object.create(null);
      }
      Set.prototype.has = function has (key) {
        return this.set[key] === true
      };
      Set.prototype.add = function add (key) {
        this.set[key] = true;
      };
      Set.prototype.clear = function clear () {
        this.set = Object.create(null);
      };

      return Set;
    }());
  }

  /*  */

  var warn = noop;
  var tip = noop;
  var generateComponentTrace = (noop); // work around flow check
  var formatComponentName = (noop);

  {
    var hasConsole = typeof console !== 'undefined';
    var classifyRE = /(?:^|[-_])(\w)/g;
    var classify = function (str) { return str
      .replace(classifyRE, function (c) { return c.toUpperCase(); })
      .replace(/[-_]/g, ''); };

    warn = function (msg, vm) {
      var trace = vm ? generateComponentTrace(vm) : '';

      if (config.warnHandler) {
        config.warnHandler.call(null, msg, vm, trace);
      } else if (hasConsole && (!config.silent)) {
        console.error(("[Vue warn]: " + msg + trace));
      }
    };

    tip = function (msg, vm) {
      if (hasConsole && (!config.silent)) {
        console.warn("[Vue tip]: " + msg + (
          vm ? generateComponentTrace(vm) : ''
        ));
      }
    };

    formatComponentName = function (vm, includeFile) {
      if (vm.$root === vm) {
        return '<Root>'
      }
      var options = typeof vm === 'function' && vm.cid != null
        ? vm.options
        : vm._isVue
          ? vm.$options || vm.constructor.options
          : vm;
      var name = options.name || options._componentTag;
      var file = options.__file;
      if (!name && file) {
        var match = file.match(/([^/\\]+)\.vue$/);
        name = match && match[1];
      }

      return (
        (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
        (file && includeFile !== false ? (" at " + file) : '')
      )
    };

    var repeat = function (str, n) {
      var res = '';
      while (n) {
        if (n % 2 === 1) { res += str; }
        if (n > 1) { str += str; }
        n >>= 1;
      }
      return res
    };

    generateComponentTrace = function (vm) {
      if (vm._isVue && vm.$parent) {
        var tree = [];
        var currentRecursiveSequence = 0;
        while (vm) {
          if (tree.length > 0) {
            var last = tree[tree.length - 1];
            if (last.constructor === vm.constructor) {
              currentRecursiveSequence++;
              vm = vm.$parent;
              continue
            } else if (currentRecursiveSequence > 0) {
              tree[tree.length - 1] = [last, currentRecursiveSequence];
              currentRecursiveSequence = 0;
            }
          }
          tree.push(vm);
          vm = vm.$parent;
        }
        return '\n\nfound in\n\n' + tree
          .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
              ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
              : formatComponentName(vm))); })
          .join('\n')
      } else {
        return ("\n\n(found in " + (formatComponentName(vm)) + ")")
      }
    };
  }

  /*  */

  var uid = 0;

  /**
   * A dep is an observable that can have multiple
   * directives subscribing to it.
   */
  var Dep = function Dep () {
    this.id = uid++;
    this.subs = [];
  };

  Dep.prototype.addSub = function addSub (sub) {
    this.subs.push(sub);
  };

  Dep.prototype.removeSub = function removeSub (sub) {
    remove(this.subs, sub);
  };

  Dep.prototype.depend = function depend () {
    if (Dep.target) {
      Dep.target.addDep(this);
    }
  };

  Dep.prototype.notify = function notify () {
    // stabilize the subscriber list first
    var subs = this.subs.slice();
    if (!config.async) {
      // subs aren't sorted in scheduler if not running async
      // we need to sort them now to make sure they fire in correct
      // order
      subs.sort(function (a, b) { return a.id - b.id; });
    }
    for (var i = 0, l = subs.length; i < l; i++) {
      subs[i].update();
    }
  };

  // The current target watcher being evaluated.
  // This is globally unique because only one watcher
  // can be evaluated at a time.
  Dep.target = null;
  var targetStack = [];

  function pushTarget (target) {
    targetStack.push(target);
    Dep.target = target;
  }

  function popTarget () {
    targetStack.pop();
    Dep.target = targetStack[targetStack.length - 1];
  }

  /*  */

  var VNode = function VNode (
    tag,
    data,
    children,
    text,
    elm,
    context,
    componentOptions,
    asyncFactory
  ) {
    this.tag = tag;
    this.data = data;
    this.children = children;
    this.text = text;
    this.elm = elm;
    this.ns = undefined;
    this.context = context;
    this.fnContext = undefined;
    this.fnOptions = undefined;
    this.fnScopeId = undefined;
    this.key = data && data.key;
    this.componentOptions = componentOptions;
    this.componentInstance = undefined;
    this.parent = undefined;
    this.raw = false;
    this.isStatic = false;
    this.isRootInsert = true;
    this.isComment = false;
    this.isCloned = false;
    this.isOnce = false;
    this.asyncFactory = asyncFactory;
    this.asyncMeta = undefined;
    this.isAsyncPlaceholder = false;
  };

  var prototypeAccessors = { child: { configurable: true } };

  // DEPRECATED: alias for componentInstance for backwards compat.
  /* istanbul ignore next */
  prototypeAccessors.child.get = function () {
    return this.componentInstance
  };

  Object.defineProperties( VNode.prototype, prototypeAccessors );

  var createEmptyVNode = function (text) {
    if ( text === void 0 ) text = '';

    var node = new VNode();
    node.text = text;
    node.isComment = true;
    return node
  };

  function createTextVNode (val) {
    return new VNode(undefined, undefined, undefined, String(val))
  }

  // optimized shallow clone
  // used for static nodes and slot nodes because they may be reused across
  // multiple renders, cloning them avoids errors when DOM manipulations rely
  // on their elm reference.
  function cloneVNode (vnode) {
    var cloned = new VNode(
      vnode.tag,
      vnode.data,
      // #7975
      // clone children array to avoid mutating original in case of cloning
      // a child.
      vnode.children && vnode.children.slice(),
      vnode.text,
      vnode.elm,
      vnode.context,
      vnode.componentOptions,
      vnode.asyncFactory
    );
    cloned.ns = vnode.ns;
    cloned.isStatic = vnode.isStatic;
    cloned.key = vnode.key;
    cloned.isComment = vnode.isComment;
    cloned.fnContext = vnode.fnContext;
    cloned.fnOptions = vnode.fnOptions;
    cloned.fnScopeId = vnode.fnScopeId;
    cloned.asyncMeta = vnode.asyncMeta;
    cloned.isCloned = true;
    return cloned
  }

  /*
   * not type checking this file because flow doesn't play well with
   * dynamically accessing methods on Array prototype
   */

  var arrayProto = Array.prototype;
  var arrayMethods = Object.create(arrayProto);

  var methodsToPatch = [
    'push',
    'pop',
    'shift',
    'unshift',
    'splice',
    'sort',
    'reverse'
  ];

  /**
   * Intercept mutating methods and emit events
   */
  methodsToPatch.forEach(function (method) {
    // cache original method
    var original = arrayProto[method];
    def(arrayMethods, method, function mutator () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      var result = original.apply(this, args);
      var ob = this.__ob__;
      var inserted;
      switch (method) {
        case 'push':
        case 'unshift':
          inserted = args;
          break
        case 'splice':
          inserted = args.slice(2);
          break
      }
      if (inserted) { ob.observeArray(inserted); }
      // notify change
      ob.dep.notify();
      return result
    });
  });

  /*  */

  var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

  /**
   * In some cases we may want to disable observation inside a component's
   * update computation.
   */
  var shouldObserve = true;

  function toggleObserving (value) {
    shouldObserve = value;
  }

  /**
   * Observer class that is attached to each observed
   * object. Once attached, the observer converts the target
   * object's property keys into getter/setters that
   * collect dependencies and dispatch updates.
   */
  var Observer = function Observer (value) {
    this.value = value;
    this.dep = new Dep();
    this.vmCount = 0;
    def(value, '__ob__', this);
    if (Array.isArray(value)) {
      if (hasProto) {
        protoAugment(value, arrayMethods);
      } else {
        copyAugment(value, arrayMethods, arrayKeys);
      }
      this.observeArray(value);
    } else {
      this.walk(value);
    }
  };

  /**
   * Walk through all properties and convert them into
   * getter/setters. This method should only be called when
   * value type is Object.
   */
  Observer.prototype.walk = function walk (obj) {
    var keys = Object.keys(obj);
    for (var i = 0; i < keys.length; i++) {
      defineReactive$$1(obj, keys[i]);
    }
  };

  /**
   * Observe a list of Array items.
   */
  Observer.prototype.observeArray = function observeArray (items) {
    for (var i = 0, l = items.length; i < l; i++) {
      observe(items[i]);
    }
  };

  // helpers

  /**
   * Augment a target Object or Array by intercepting
   * the prototype chain using __proto__
   */
  function protoAugment (target, src) {
    /* eslint-disable no-proto */
    target.__proto__ = src;
    /* eslint-enable no-proto */
  }

  /**
   * Augment a target Object or Array by defining
   * hidden properties.
   */
  /* istanbul ignore next */
  function copyAugment (target, src, keys) {
    for (var i = 0, l = keys.length; i < l; i++) {
      var key = keys[i];
      def(target, key, src[key]);
    }
  }

  /**
   * Attempt to create an observer instance for a value,
   * returns the new observer if successfully observed,
   * or the existing observer if the value already has one.
   */
  function observe (value, asRootData) {
    if (!isObject(value) || value instanceof VNode) {
      return
    }
    var ob;
    if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
      ob = value.__ob__;
    } else if (
      shouldObserve &&
      !isServerRendering() &&
      (Array.isArray(value) || isPlainObject(value)) &&
      Object.isExtensible(value) &&
      !value._isVue
    ) {
      ob = new Observer(value);
    }
    if (asRootData && ob) {
      ob.vmCount++;
    }
    return ob
  }

  /**
   * Define a reactive property on an Object.
   */
  function defineReactive$$1 (
    obj,
    key,
    val,
    customSetter,
    shallow
  ) {
    var dep = new Dep();

    var property = Object.getOwnPropertyDescriptor(obj, key);
    if (property && property.configurable === false) {
      return
    }

    // cater for pre-defined getter/setters
    var getter = property && property.get;
    var setter = property && property.set;
    if ((!getter || setter) && arguments.length === 2) {
      val = obj[key];
    }

    var childOb = !shallow && observe(val);
    Object.defineProperty(obj, key, {
      enumerable: true,
      configurable: true,
      get: function reactiveGetter () {
        var value = getter ? getter.call(obj) : val;
        if (Dep.target) {
          dep.depend();
          if (childOb) {
            childOb.dep.depend();
            if (Array.isArray(value)) {
              dependArray(value);
            }
          }
        }
        return value
      },
      set: function reactiveSetter (newVal) {
        var value = getter ? getter.call(obj) : val;
        /* eslint-disable no-self-compare */
        if (newVal === value || (newVal !== newVal && value !== value)) {
          return
        }
        /* eslint-enable no-self-compare */
        if (customSetter) {
          customSetter();
        }
        // #7981: for accessor properties without setter
        if (getter && !setter) { return }
        if (setter) {
          setter.call(obj, newVal);
        } else {
          val = newVal;
        }
        childOb = !shallow && observe(newVal);
        dep.notify();
      }
    });
  }

  /**
   * Set a property on an object. Adds the new property and
   * triggers change notification if the property doesn't
   * already exist.
   */
  function set (target, key, val) {
    if (isUndef(target) || isPrimitive(target)
    ) {
      warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
    }
    if (Array.isArray(target) && isValidArrayIndex(key)) {
      target.length = Math.max(target.length, key);
      target.splice(key, 1, val);
      return val
    }
    if (key in target && !(key in Object.prototype)) {
      target[key] = val;
      return val
    }
    var ob = (target).__ob__;
    if (target._isVue || (ob && ob.vmCount)) {
      warn(
        'Avoid adding reactive properties to a Vue instance or its root $data ' +
        'at runtime - declare it upfront in the data option.'
      );
      return val
    }
    if (!ob) {
      target[key] = val;
      return val
    }
    defineReactive$$1(ob.value, key, val);
    ob.dep.notify();
    return val
  }

  /**
   * Delete a property and trigger change if necessary.
   */
  function del (target, key) {
    if (isUndef(target) || isPrimitive(target)
    ) {
      warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
    }
    if (Array.isArray(target) && isValidArrayIndex(key)) {
      target.splice(key, 1);
      return
    }
    var ob = (target).__ob__;
    if (target._isVue || (ob && ob.vmCount)) {
      warn(
        'Avoid deleting properties on a Vue instance or its root $data ' +
        '- just set it to null.'
      );
      return
    }
    if (!hasOwn(target, key)) {
      return
    }
    delete target[key];
    if (!ob) {
      return
    }
    ob.dep.notify();
  }

  /**
   * Collect dependencies on array elements when the array is touched, since
   * we cannot intercept array element access like property getters.
   */
  function dependArray (value) {
    for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
      e = value[i];
      e && e.__ob__ && e.__ob__.dep.depend();
      if (Array.isArray(e)) {
        dependArray(e);
      }
    }
  }

  /*  */

  /**
   * Option overwriting strategies are functions that handle
   * how to merge a parent option value and a child option
   * value into the final value.
   */
  var strats = config.optionMergeStrategies;

  /**
   * Options with restrictions
   */
  {
    strats.el = strats.propsData = function (parent, child, vm, key) {
      if (!vm) {
        warn(
          "option \"" + key + "\" can only be used during instance " +
          'creation with the `new` keyword.'
        );
      }
      return defaultStrat(parent, child)
    };
  }

  /**
   * Helper that recursively merges two data objects together.
   */
  function mergeData (to, from) {
    if (!from) { return to }
    var key, toVal, fromVal;

    var keys = hasSymbol
      ? Reflect.ownKeys(from)
      : Object.keys(from);

    for (var i = 0; i < keys.length; i++) {
      key = keys[i];
      // in case the object is already observed...
      if (key === '__ob__') { continue }
      toVal = to[key];
      fromVal = from[key];
      if (!hasOwn(to, key)) {
        set(to, key, fromVal);
      } else if (
        toVal !== fromVal &&
        isPlainObject(toVal) &&
        isPlainObject(fromVal)
      ) {
        mergeData(toVal, fromVal);
      }
    }
    return to
  }

  /**
   * Data
   */
  function mergeDataOrFn (
    parentVal,
    childVal,
    vm
  ) {
    if (!vm) {
      // in a Vue.extend merge, both should be functions
      if (!childVal) {
        return parentVal
      }
      if (!parentVal) {
        return childVal
      }
      // when parentVal & childVal are both present,
      // we need to return a function that returns the
      // merged result of both functions... no need to
      // check if parentVal is a function here because
      // it has to be a function to pass previous merges.
      return function mergedDataFn () {
        return mergeData(
          typeof childVal === 'function' ? childVal.call(this, this) : childVal,
          typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
        )
      }
    } else {
      return function mergedInstanceDataFn () {
        // instance merge
        var instanceData = typeof childVal === 'function'
          ? childVal.call(vm, vm)
          : childVal;
        var defaultData = typeof parentVal === 'function'
          ? parentVal.call(vm, vm)
          : parentVal;
        if (instanceData) {
          return mergeData(instanceData, defaultData)
        } else {
          return defaultData
        }
      }
    }
  }

  strats.data = function (
    parentVal,
    childVal,
    vm
  ) {
    if (!vm) {
      if (childVal && typeof childVal !== 'function') {
        warn(
          'The "data" option should be a function ' +
          'that returns a per-instance value in component ' +
          'definitions.',
          vm
        );

        return parentVal
      }
      return mergeDataOrFn(parentVal, childVal)
    }

    return mergeDataOrFn(parentVal, childVal, vm)
  };

  /**
   * Hooks and props are merged as arrays.
   */
  function mergeHook (
    parentVal,
    childVal
  ) {
    var res = childVal
      ? parentVal
        ? parentVal.concat(childVal)
        : Array.isArray(childVal)
          ? childVal
          : [childVal]
      : parentVal;
    return res
      ? dedupeHooks(res)
      : res
  }

  function dedupeHooks (hooks) {
    var res = [];
    for (var i = 0; i < hooks.length; i++) {
      if (res.indexOf(hooks[i]) === -1) {
        res.push(hooks[i]);
      }
    }
    return res
  }

  LIFECYCLE_HOOKS.forEach(function (hook) {
    strats[hook] = mergeHook;
  });

  /**
   * Assets
   *
   * When a vm is present (instance creation), we need to do
   * a three-way merge between constructor options, instance
   * options and parent options.
   */
  function mergeAssets (
    parentVal,
    childVal,
    vm,
    key
  ) {
    var res = Object.create(parentVal || null);
    if (childVal) {
      assertObjectType(key, childVal, vm);
      return extend(res, childVal)
    } else {
      return res
    }
  }

  ASSET_TYPES.forEach(function (type) {
    strats[type + 's'] = mergeAssets;
  });

  /**
   * Watchers.
   *
   * Watchers hashes should not overwrite one
   * another, so we merge them as arrays.
   */
  strats.watch = function (
    parentVal,
    childVal,
    vm,
    key
  ) {
    // work around Firefox's Object.prototype.watch...
    if (parentVal === nativeWatch) { parentVal = undefined; }
    if (childVal === nativeWatch) { childVal = undefined; }
    /* istanbul ignore if */
    if (!childVal) { return Object.create(parentVal || null) }
    {
      assertObjectType(key, childVal, vm);
    }
    if (!parentVal) { return childVal }
    var ret = {};
    extend(ret, parentVal);
    for (var key$1 in childVal) {
      var parent = ret[key$1];
      var child = childVal[key$1];
      if (parent && !Array.isArray(parent)) {
        parent = [parent];
      }
      ret[key$1] = parent
        ? parent.concat(child)
        : Array.isArray(child) ? child : [child];
    }
    return ret
  };

  /**
   * Other object hashes.
   */
  strats.props =
  strats.methods =
  strats.inject =
  strats.computed = function (
    parentVal,
    childVal,
    vm,
    key
  ) {
    if (childVal && "development" !== 'production') {
      assertObjectType(key, childVal, vm);
    }
    if (!parentVal) { return childVal }
    var ret = Object.create(null);
    extend(ret, parentVal);
    if (childVal) { extend(ret, childVal); }
    return ret
  };
  strats.provide = mergeDataOrFn;

  /**
   * Default strategy.
   */
  var defaultStrat = function (parentVal, childVal) {
    return childVal === undefined
      ? parentVal
      : childVal
  };

  /**
   * Validate component names
   */
  function checkComponents (options) {
    for (var key in options.components) {
      validateComponentName(key);
    }
  }

  function validateComponentName (name) {
    if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
      warn(
        'Invalid component name: "' + name + '". Component names ' +
        'should conform to valid custom element name in html5 specification.'
      );
    }
    if (isBuiltInTag(name) || config.isReservedTag(name)) {
      warn(
        'Do not use built-in or reserved HTML elements as component ' +
        'id: ' + name
      );
    }
  }

  /**
   * Ensure all props option syntax are normalized into the
   * Object-based format.
   */
  function normalizeProps (options, vm) {
    var props = options.props;
    if (!props) { return }
    var res = {};
    var i, val, name;
    if (Array.isArray(props)) {
      i = props.length;
      while (i--) {
        val = props[i];
        if (typeof val === 'string') {
          name = camelize(val);
          res[name] = { type: null };
        } else {
          warn('props must be strings when using array syntax.');
        }
      }
    } else if (isPlainObject(props)) {
      for (var key in props) {
        val = props[key];
        name = camelize(key);
        res[name] = isPlainObject(val)
          ? val
          : { type: val };
      }
    } else {
      warn(
        "Invalid value for option \"props\": expected an Array or an Object, " +
        "but got " + (toRawType(props)) + ".",
        vm
      );
    }
    options.props = res;
  }

  /**
   * Normalize all injections into Object-based format
   */
  function normalizeInject (options, vm) {
    var inject = options.inject;
    if (!inject) { return }
    var normalized = options.inject = {};
    if (Array.isArray(inject)) {
      for (var i = 0; i < inject.length; i++) {
        normalized[inject[i]] = { from: inject[i] };
      }
    } else if (isPlainObject(inject)) {
      for (var key in inject) {
        var val = inject[key];
        normalized[key] = isPlainObject(val)
          ? extend({ from: key }, val)
          : { from: val };
      }
    } else {
      warn(
        "Invalid value for option \"inject\": expected an Array or an Object, " +
        "but got " + (toRawType(inject)) + ".",
        vm
      );
    }
  }

  /**
   * Normalize raw function directives into object format.
   */
  function normalizeDirectives (options) {
    var dirs = options.directives;
    if (dirs) {
      for (var key in dirs) {
        var def$$1 = dirs[key];
        if (typeof def$$1 === 'function') {
          dirs[key] = { bind: def$$1, update: def$$1 };
        }
      }
    }
  }

  function assertObjectType (name, value, vm) {
    if (!isPlainObject(value)) {
      warn(
        "Invalid value for option \"" + name + "\": expected an Object, " +
        "but got " + (toRawType(value)) + ".",
        vm
      );
    }
  }

  /**
   * Merge two option objects into a new one.
   * Core utility used in both instantiation and inheritance.
   */
  function mergeOptions (
    parent,
    child,
    vm
  ) {
    {
      checkComponents(child);
    }

    if (typeof child === 'function') {
      child = child.options;
    }

    normalizeProps(child, vm);
    normalizeInject(child, vm);
    normalizeDirectives(child);

    // Apply extends and mixins on the child options,
    // but only if it is a raw options object that isn't
    // the result of another mergeOptions call.
    // Only merged options has the _base property.
    if (!child._base) {
      if (child.extends) {
        parent = mergeOptions(parent, child.extends, vm);
      }
      if (child.mixins) {
        for (var i = 0, l = child.mixins.length; i < l; i++) {
          parent = mergeOptions(parent, child.mixins[i], vm);
        }
      }
    }

    var options = {};
    var key;
    for (key in parent) {
      mergeField(key);
    }
    for (key in child) {
      if (!hasOwn(parent, key)) {
        mergeField(key);
      }
    }
    function mergeField (key) {
      var strat = strats[key] || defaultStrat;
      options[key] = strat(parent[key], child[key], vm, key);
    }
    return options
  }

  /**
   * Resolve an asset.
   * This function is used because child instances need access
   * to assets defined in its ancestor chain.
   */
  function resolveAsset (
    options,
    type,
    id,
    warnMissing
  ) {
    /* istanbul ignore if */
    if (typeof id !== 'string') {
      return
    }
    var assets = options[type];
    // check local registration variations first
    if (hasOwn(assets, id)) { return assets[id] }
    var camelizedId = camelize(id);
    if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
    var PascalCaseId = capitalize(camelizedId);
    if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
    // fallback to prototype chain
    var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
    if (warnMissing && !res) {
      warn(
        'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
        options
      );
    }
    return res
  }

  /*  */



  function validateProp (
    key,
    propOptions,
    propsData,
    vm
  ) {
    var prop = propOptions[key];
    var absent = !hasOwn(propsData, key);
    var value = propsData[key];
    // boolean casting
    var booleanIndex = getTypeIndex(Boolean, prop.type);
    if (booleanIndex > -1) {
      if (absent && !hasOwn(prop, 'default')) {
        value = false;
      } else if (value === '' || value === hyphenate(key)) {
        // only cast empty string / same name to boolean if
        // boolean has higher priority
        var stringIndex = getTypeIndex(String, prop.type);
        if (stringIndex < 0 || booleanIndex < stringIndex) {
          value = true;
        }
      }
    }
    // check default value
    if (value === undefined) {
      value = getPropDefaultValue(vm, prop, key);
      // since the default value is a fresh copy,
      // make sure to observe it.
      var prevShouldObserve = shouldObserve;
      toggleObserving(true);
      observe(value);
      toggleObserving(prevShouldObserve);
    }
    {
      assertProp(prop, key, value, vm, absent);
    }
    return value
  }

  /**
   * Get the default value of a prop.
   */
  function getPropDefaultValue (vm, prop, key) {
    // no default, return undefined
    if (!hasOwn(prop, 'default')) {
      return undefined
    }
    var def = prop.default;
    // warn against non-factory defaults for Object & Array
    if (isObject(def)) {
      warn(
        'Invalid default value for prop "' + key + '": ' +
        'Props with type Object/Array must use a factory function ' +
        'to return the default value.',
        vm
      );
    }
    // the raw prop value was also undefined from previous render,
    // return previous default value to avoid unnecessary watcher trigger
    if (vm && vm.$options.propsData &&
      vm.$options.propsData[key] === undefined &&
      vm._props[key] !== undefined
    ) {
      return vm._props[key]
    }
    // call factory function for non-Function types
    // a value is Function if its prototype is function even across different execution context
    return typeof def === 'function' && getType(prop.type) !== 'Function'
      ? def.call(vm)
      : def
  }

  /**
   * Assert whether a prop is valid.
   */
  function assertProp (
    prop,
    name,
    value,
    vm,
    absent
  ) {
    if (prop.required && absent) {
      warn(
        'Missing required prop: "' + name + '"',
        vm
      );
      return
    }
    if (value == null && !prop.required) {
      return
    }
    var type = prop.type;
    var valid = !type || type === true;
    var expectedTypes = [];
    if (type) {
      if (!Array.isArray(type)) {
        type = [type];
      }
      for (var i = 0; i < type.length && !valid; i++) {
        var assertedType = assertType(value, type[i]);
        expectedTypes.push(assertedType.expectedType || '');
        valid = assertedType.valid;
      }
    }

    if (!valid) {
      warn(
        getInvalidTypeMessage(name, value, expectedTypes),
        vm
      );
      return
    }
    var validator = prop.validator;
    if (validator) {
      if (!validator(value)) {
        warn(
          'Invalid prop: custom validator check failed for prop "' + name + '".',
          vm
        );
      }
    }
  }

  var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

  function assertType (value, type) {
    var valid;
    var expectedType = getType(type);
    if (simpleCheckRE.test(expectedType)) {
      var t = typeof value;
      valid = t === expectedType.toLowerCase();
      // for primitive wrapper objects
      if (!valid && t === 'object') {
        valid = value instanceof type;
      }
    } else if (expectedType === 'Object') {
      valid = isPlainObject(value);
    } else if (expectedType === 'Array') {
      valid = Array.isArray(value);
    } else {
      valid = value instanceof type;
    }
    return {
      valid: valid,
      expectedType: expectedType
    }
  }

  /**
   * Use function string name to check built-in types,
   * because a simple equality check will fail when running
   * across different vms / iframes.
   */
  function getType (fn) {
    var match = fn && fn.toString().match(/^\s*function (\w+)/);
    return match ? match[1] : ''
  }

  function isSameType (a, b) {
    return getType(a) === getType(b)
  }

  function getTypeIndex (type, expectedTypes) {
    if (!Array.isArray(expectedTypes)) {
      return isSameType(expectedTypes, type) ? 0 : -1
    }
    for (var i = 0, len = expectedTypes.length; i < len; i++) {
      if (isSameType(expectedTypes[i], type)) {
        return i
      }
    }
    return -1
  }

  function getInvalidTypeMessage (name, value, expectedTypes) {
    var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
      " Expected " + (expectedTypes.map(capitalize).join(', '));
    var expectedType = expectedTypes[0];
    var receivedType = toRawType(value);
    var expectedValue = styleValue(value, expectedType);
    var receivedValue = styleValue(value, receivedType);
    // check if we need to specify expected value
    if (expectedTypes.length === 1 &&
        isExplicable(expectedType) &&
        !isBoolean(expectedType, receivedType)) {
      message += " with value " + expectedValue;
    }
    message += ", got " + receivedType + " ";
    // check if we need to specify received value
    if (isExplicable(receivedType)) {
      message += "with value " + receivedValue + ".";
    }
    return message
  }

  function styleValue (value, type) {
    if (type === 'String') {
      return ("\"" + value + "\"")
    } else if (type === 'Number') {
      return ("" + (Number(value)))
    } else {
      return ("" + value)
    }
  }

  function isExplicable (value) {
    var explicitTypes = ['string', 'number', 'boolean'];
    return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
  }

  function isBoolean () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
  }

  /*  */

  function handleError (err, vm, info) {
    // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
    // See: https://github.com/vuejs/vuex/issues/1505
    pushTarget();
    try {
      if (vm) {
        var cur = vm;
        while ((cur = cur.$parent)) {
          var hooks = cur.$options.errorCaptured;
          if (hooks) {
            for (var i = 0; i < hooks.length; i++) {
              try {
                var capture = hooks[i].call(cur, err, vm, info) === false;
                if (capture) { return }
              } catch (e) {
                globalHandleError(e, cur, 'errorCaptured hook');
              }
            }
          }
        }
      }
      globalHandleError(err, vm, info);
    } finally {
      popTarget();
    }
  }

  function invokeWithErrorHandling (
    handler,
    context,
    args,
    vm,
    info
  ) {
    var res;
    try {
      res = args ? handler.apply(context, args) : handler.call(context);
      if (res && !res._isVue && isPromise(res) && !res._handled) {
        res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
        // issue #9511
        // avoid catch triggering multiple times when nested calls
        res._handled = true;
      }
    } catch (e) {
      handleError(e, vm, info);
    }
    return res
  }

  function globalHandleError (err, vm, info) {
    if (config.errorHandler) {
      try {
        return config.errorHandler.call(null, err, vm, info)
      } catch (e) {
        // if the user intentionally throws the original error in the handler,
        // do not log it twice
        if (e !== err) {
          logError(e, null, 'config.errorHandler');
        }
      }
    }
    logError(err, vm, info);
  }

  function logError (err, vm, info) {
    {
      warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    }
    /* istanbul ignore else */
    if ((inBrowser || inWeex) && typeof console !== 'undefined') {
      console.error(err);
    } else {
      throw err
    }
  }

  /*  */

  var isUsingMicroTask = false;

  var callbacks = [];
  var pending = false;

  function flushCallbacks () {
    pending = false;
    var copies = callbacks.slice(0);
    callbacks.length = 0;
    for (var i = 0; i < copies.length; i++) {
      copies[i]();
    }
  }

  // Here we have async deferring wrappers using microtasks.
  // In 2.5 we used (macro) tasks (in combination with microtasks).
  // However, it has subtle problems when state is changed right before repaint
  // (e.g. #6813, out-in transitions).
  // Also, using (macro) tasks in event handler would cause some weird behaviors
  // that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
  // So we now use microtasks everywhere, again.
  // A major drawback of this tradeoff is that there are some scenarios
  // where microtasks have too high a priority and fire in between supposedly
  // sequential events (e.g. #4521, #6690, which have workarounds)
  // or even between bubbling of the same event (#6566).
  var timerFunc;

  // The nextTick behavior leverages the microtask queue, which can be accessed
  // via either native Promise.then or MutationObserver.
  // MutationObserver has wider support, however it is seriously bugged in
  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
  // completely stops working after triggering a few times... so, if native
  // Promise is available, we will use it:
  /* istanbul ignore next, $flow-disable-line */
  if (typeof Promise !== 'undefined' && isNative(Promise)) {
    var p = Promise.resolve();
    timerFunc = function () {
      p.then(flushCallbacks);
      // In problematic UIWebViews, Promise.then doesn't completely break, but
      // it can get stuck in a weird state where callbacks are pushed into the
      // microtask queue but the queue isn't being flushed, until the browser
      // needs to do some other work, e.g. handle a timer. Therefore we can
      // "force" the microtask queue to be flushed by adding an empty timer.
      if (isIOS) { setTimeout(noop); }
    };
    isUsingMicroTask = true;
  } else if (!isIE && typeof MutationObserver !== 'undefined' && (
    isNative(MutationObserver) ||
    // PhantomJS and iOS 7.x
    MutationObserver.toString() === '[object MutationObserverConstructor]'
  )) {
    // Use MutationObserver where native Promise is not available,
    // e.g. PhantomJS, iOS7, Android 4.4
    // (#6466 MutationObserver is unreliable in IE11)
    var counter = 1;
    var observer = new MutationObserver(flushCallbacks);
    var textNode = document.createTextNode(String(counter));
    observer.observe(textNode, {
      characterData: true
    });
    timerFunc = function () {
      counter = (counter + 1) % 2;
      textNode.data = String(counter);
    };
    isUsingMicroTask = true;
  } else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
    // Fallback to setImmediate.
    // Technically it leverages the (macro) task queue,
    // but it is still a better choice than setTimeout.
    timerFunc = function () {
      setImmediate(flushCallbacks);
    };
  } else {
    // Fallback to setTimeout.
    timerFunc = function () {
      setTimeout(flushCallbacks, 0);
    };
  }

  function nextTick (cb, ctx) {
    var _resolve;
    callbacks.push(function () {
      if (cb) {
        try {
          cb.call(ctx);
        } catch (e) {
          handleError(e, ctx, 'nextTick');
        }
      } else if (_resolve) {
        _resolve(ctx);
      }
    });
    if (!pending) {
      pending = true;
      timerFunc();
    }
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
      return new Promise(function (resolve) {
        _resolve = resolve;
      })
    }
  }

  /*  */

  var mark;
  var measure;

  {
    var perf = inBrowser && window.performance;
    /* istanbul ignore if */
    if (
      perf &&
      perf.mark &&
      perf.measure &&
      perf.clearMarks &&
      perf.clearMeasures
    ) {
      mark = function (tag) { return perf.mark(tag); };
      measure = function (name, startTag, endTag) {
        perf.measure(name, startTag, endTag);
        perf.clearMarks(startTag);
        perf.clearMarks(endTag);
        // perf.clearMeasures(name)
      };
    }
  }

  /* not type checking this file because flow doesn't play well with Proxy */

  var initProxy;

  {
    var allowedGlobals = makeMap(
      'Infinity,undefined,NaN,isFinite,isNaN,' +
      'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
      'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
      'require' // for Webpack/Browserify
    );

    var warnNonPresent = function (target, key) {
      warn(
        "Property or method \"" + key + "\" is not defined on the instance but " +
        'referenced during render. Make sure that this property is reactive, ' +
        'either in the data option, or for class-based components, by ' +
        'initializing the property. ' +
        'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
        target
      );
    };

    var warnReservedPrefix = function (target, key) {
      warn(
        "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
        'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
        'prevent conflicts with Vue internals. ' +
        'See: https://vuejs.org/v2/api/#data',
        target
      );
    };

    var hasProxy =
      typeof Proxy !== 'undefined' && isNative(Proxy);

    if (hasProxy) {
      var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
      config.keyCodes = new Proxy(config.keyCodes, {
        set: function set (target, key, value) {
          if (isBuiltInModifier(key)) {
            warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
            return false
          } else {
            target[key] = value;
            return true
          }
        }
      });
    }

    var hasHandler = {
      has: function has (target, key) {
        var has = key in target;
        var isAllowed = allowedGlobals(key) ||
          (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
        if (!has && !isAllowed) {
          if (key in target.$data) { warnReservedPrefix(target, key); }
          else { warnNonPresent(target, key); }
        }
        return has || !isAllowed
      }
    };

    var getHandler = {
      get: function get (target, key) {
        if (typeof key === 'string' && !(key in target)) {
          if (key in target.$data) { warnReservedPrefix(target, key); }
          else { warnNonPresent(target, key); }
        }
        return target[key]
      }
    };

    initProxy = function initProxy (vm) {
      if (hasProxy) {
        // determine which proxy handler to use
        var options = vm.$options;
        var handlers = options.render && options.render._withStripped
          ? getHandler
          : hasHandler;
        vm._renderProxy = new Proxy(vm, handlers);
      } else {
        vm._renderProxy = vm;
      }
    };
  }

  /*  */

  var seenObjects = new _Set();

  /**
   * Recursively traverse an object to evoke all converted
   * getters, so that every nested property inside the object
   * is collected as a "deep" dependency.
   */
  function traverse (val) {
    _traverse(val, seenObjects);
    seenObjects.clear();
  }

  function _traverse (val, seen) {
    var i, keys;
    var isA = Array.isArray(val);
    if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
      return
    }
    if (val.__ob__) {
      var depId = val.__ob__.dep.id;
      if (seen.has(depId)) {
        return
      }
      seen.add(depId);
    }
    if (isA) {
      i = val.length;
      while (i--) { _traverse(val[i], seen); }
    } else {
      keys = Object.keys(val);
      i = keys.length;
      while (i--) { _traverse(val[keys[i]], seen); }
    }
  }

  /*  */

  var normalizeEvent = cached(function (name) {
    var passive = name.charAt(0) === '&';
    name = passive ? name.slice(1) : name;
    var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
    name = once$$1 ? name.slice(1) : name;
    var capture = name.charAt(0) === '!';
    name = capture ? name.slice(1) : name;
    return {
      name: name,
      once: once$$1,
      capture: capture,
      passive: passive
    }
  });

  function createFnInvoker (fns, vm) {
    function invoker () {
      var arguments$1 = arguments;

      var fns = invoker.fns;
      if (Array.isArray(fns)) {
        var cloned = fns.slice();
        for (var i = 0; i < cloned.length; i++) {
          invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
        }
      } else {
        // return handler return value for single handlers
        return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
      }
    }
    invoker.fns = fns;
    return invoker
  }

  function updateListeners (
    on,
    oldOn,
    add,
    remove$$1,
    createOnceHandler,
    vm
  ) {
    var name, def$$1, cur, old, event;
    for (name in on) {
      def$$1 = cur = on[name];
      old = oldOn[name];
      event = normalizeEvent(name);
      if (isUndef(cur)) {
        warn(
          "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
          vm
        );
      } else if (isUndef(old)) {
        if (isUndef(cur.fns)) {
          cur = on[name] = createFnInvoker(cur, vm);
        }
        if (isTrue(event.once)) {
          cur = on[name] = createOnceHandler(event.name, cur, event.capture);
        }
        add(event.name, cur, event.capture, event.passive, event.params);
      } else if (cur !== old) {
        old.fns = cur;
        on[name] = old;
      }
    }
    for (name in oldOn) {
      if (isUndef(on[name])) {
        event = normalizeEvent(name);
        remove$$1(event.name, oldOn[name], event.capture);
      }
    }
  }

  /*  */

  function mergeVNodeHook (def, hookKey, hook) {
    if (def instanceof VNode) {
      def = def.data.hook || (def.data.hook = {});
    }
    var invoker;
    var oldHook = def[hookKey];

    function wrappedHook () {
      hook.apply(this, arguments);
      // important: remove merged hook to ensure it's called only once
      // and prevent memory leak
      remove(invoker.fns, wrappedHook);
    }

    if (isUndef(oldHook)) {
      // no existing hook
      invoker = createFnInvoker([wrappedHook]);
    } else {
      /* istanbul ignore if */
      if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
        // already a merged invoker
        invoker = oldHook;
        invoker.fns.push(wrappedHook);
      } else {
        // existing plain hook
        invoker = createFnInvoker([oldHook, wrappedHook]);
      }
    }

    invoker.merged = true;
    def[hookKey] = invoker;
  }

  /*  */

  function extractPropsFromVNodeData (
    data,
    Ctor,
    tag
  ) {
    // we are only extracting raw values here.
    // validation and default values are handled in the child
    // component itself.
    var propOptions = Ctor.options.props;
    if (isUndef(propOptions)) {
      return
    }
    var res = {};
    var attrs = data.attrs;
    var props = data.props;
    if (isDef(attrs) || isDef(props)) {
      for (var key in propOptions) {
        var altKey = hyphenate(key);
        {
          var keyInLowerCase = key.toLowerCase();
          if (
            key !== keyInLowerCase &&
            attrs && hasOwn(attrs, keyInLowerCase)
          ) {
            tip(
              "Prop \"" + keyInLowerCase + "\" is passed to component " +
              (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
              " \"" + key + "\". " +
              "Note that HTML attributes are case-insensitive and camelCased " +
              "props need to use their kebab-case equivalents when using in-DOM " +
              "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
            );
          }
        }
        checkProp(res, props, key, altKey, true) ||
        checkProp(res, attrs, key, altKey, false);
      }
    }
    return res
  }

  function checkProp (
    res,
    hash,
    key,
    altKey,
    preserve
  ) {
    if (isDef(hash)) {
      if (hasOwn(hash, key)) {
        res[key] = hash[key];
        if (!preserve) {
          delete hash[key];
        }
        return true
      } else if (hasOwn(hash, altKey)) {
        res[key] = hash[altKey];
        if (!preserve) {
          delete hash[altKey];
        }
        return true
      }
    }
    return false
  }

  /*  */

  // The template compiler attempts to minimize the need for normalization by
  // statically analyzing the template at compile time.
  //
  // For plain HTML markup, normalization can be completely skipped because the
  // generated render function is guaranteed to return Array<VNode>. There are
  // two cases where extra normalization is needed:

  // 1. When the children contains components - because a functional component
  // may return an Array instead of a single root. In this case, just a simple
  // normalization is needed - if any child is an Array, we flatten the whole
  // thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
  // because functional components already normalize their own children.
  function simpleNormalizeChildren (children) {
    for (var i = 0; i < children.length; i++) {
      if (Array.isArray(children[i])) {
        return Array.prototype.concat.apply([], children)
      }
    }
    return children
  }

  // 2. When the children contains constructs that always generated nested Arrays,
  // e.g. <template>, <slot>, v-for, or when the children is provided by user
  // with hand-written render functions / JSX. In such cases a full normalization
  // is needed to cater to all possible types of children values.
  function normalizeChildren (children) {
    return isPrimitive(children)
      ? [createTextVNode(children)]
      : Array.isArray(children)
        ? normalizeArrayChildren(children)
        : undefined
  }

  function isTextNode (node) {
    return isDef(node) && isDef(node.text) && isFalse(node.isComment)
  }

  function normalizeArrayChildren (children, nestedIndex) {
    var res = [];
    var i, c, lastIndex, last;
    for (i = 0; i < children.length; i++) {
      c = children[i];
      if (isUndef(c) || typeof c === 'boolean') { continue }
      lastIndex = res.length - 1;
      last = res[lastIndex];
      //  nested
      if (Array.isArray(c)) {
        if (c.length > 0) {
          c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
          // merge adjacent text nodes
          if (isTextNode(c[0]) && isTextNode(last)) {
            res[lastIndex] = createTextVNode(last.text + (c[0]).text);
            c.shift();
          }
          res.push.apply(res, c);
        }
      } else if (isPrimitive(c)) {
        if (isTextNode(last)) {
          // merge adjacent text nodes
          // this is necessary for SSR hydration because text nodes are
          // essentially merged when rendered to HTML strings
          res[lastIndex] = createTextVNode(last.text + c);
        } else if (c !== '') {
          // convert primitive to vnode
          res.push(createTextVNode(c));
        }
      } else {
        if (isTextNode(c) && isTextNode(last)) {
          // merge adjacent text nodes
          res[lastIndex] = createTextVNode(last.text + c.text);
        } else {
          // default key for nested array children (likely generated by v-for)
          if (isTrue(children._isVList) &&
            isDef(c.tag) &&
            isUndef(c.key) &&
            isDef(nestedIndex)) {
            c.key = "__vlist" + nestedIndex + "_" + i + "__";
          }
          res.push(c);
        }
      }
    }
    return res
  }

  /*  */

  function initProvide (vm) {
    var provide = vm.$options.provide;
    if (provide) {
      vm._provided = typeof provide === 'function'
        ? provide.call(vm)
        : provide;
    }
  }

  function initInjections (vm) {
    var result = resolveInject(vm.$options.inject, vm);
    if (result) {
      toggleObserving(false);
      Object.keys(result).forEach(function (key) {
        /* istanbul ignore else */
        {
          defineReactive$$1(vm, key, result[key], function () {
            warn(
              "Avoid mutating an injected value directly since the changes will be " +
              "overwritten whenever the provided component re-renders. " +
              "injection being mutated: \"" + key + "\"",
              vm
            );
          });
        }
      });
      toggleObserving(true);
    }
  }

  function resolveInject (inject, vm) {
    if (inject) {
      // inject is :any because flow is not smart enough to figure out cached
      var result = Object.create(null);
      var keys = hasSymbol
        ? Reflect.ownKeys(inject)
        : Object.keys(inject);

      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        // #6574 in case the inject object is observed...
        if (key === '__ob__') { continue }
        var provideKey = inject[key].from;
        var source = vm;
        while (source) {
          if (source._provided && hasOwn(source._provided, provideKey)) {
            result[key] = source._provided[provideKey];
            break
          }
          source = source.$parent;
        }
        if (!source) {
          if ('default' in inject[key]) {
            var provideDefault = inject[key].default;
            result[key] = typeof provideDefault === 'function'
              ? provideDefault.call(vm)
              : provideDefault;
          } else {
            warn(("Injection \"" + key + "\" not found"), vm);
          }
        }
      }
      return result
    }
  }

  /*  */



  /**
   * Runtime helper for resolving raw children VNodes into a slot object.
   */
  function resolveSlots (
    children,
    context
  ) {
    if (!children || !children.length) {
      return {}
    }
    var slots = {};
    for (var i = 0, l = children.length; i < l; i++) {
      var child = children[i];
      var data = child.data;
      // remove slot attribute if the node is resolved as a Vue slot node
      if (data && data.attrs && data.attrs.slot) {
        delete data.attrs.slot;
      }
      // named slots should only be respected if the vnode was rendered in the
      // same context.
      if ((child.context === context || child.fnContext === context) &&
        data && data.slot != null
      ) {
        var name = data.slot;
        var slot = (slots[name] || (slots[name] = []));
        if (child.tag === 'template') {
          slot.push.apply(slot, child.children || []);
        } else {
          slot.push(child);
        }
      } else {
        (slots.default || (slots.default = [])).push(child);
      }
    }
    // ignore slots that contains only whitespace
    for (var name$1 in slots) {
      if (slots[name$1].every(isWhitespace)) {
        delete slots[name$1];
      }
    }
    return slots
  }

  function isWhitespace (node) {
    return (node.isComment && !node.asyncFactory) || node.text === ' '
  }

  /*  */

  function normalizeScopedSlots (
    slots,
    normalSlots,
    prevSlots
  ) {
    var res;
    var hasNormalSlots = Object.keys(normalSlots).length > 0;
    var isStable = slots ? !!slots.$stable : !hasNormalSlots;
    var key = slots && slots.$key;
    if (!slots) {
      res = {};
    } else if (slots._normalized) {
      // fast path 1: child component re-render only, parent did not change
      return slots._normalized
    } else if (
      isStable &&
      prevSlots &&
      prevSlots !== emptyObject &&
      key === prevSlots.$key &&
      !hasNormalSlots &&
      !prevSlots.$hasNormal
    ) {
      // fast path 2: stable scoped slots w/ no normal slots to proxy,
      // only need to normalize once
      return prevSlots
    } else {
      res = {};
      for (var key$1 in slots) {
        if (slots[key$1] && key$1[0] !== '$') {
          res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
        }
      }
    }
    // expose normal slots on scopedSlots
    for (var key$2 in normalSlots) {
      if (!(key$2 in res)) {
        res[key$2] = proxyNormalSlot(normalSlots, key$2);
      }
    }
    // avoriaz seems to mock a non-extensible $scopedSlots object
    // and when that is passed down this would cause an error
    if (slots && Object.isExtensible(slots)) {
      (slots)._normalized = res;
    }
    def(res, '$stable', isStable);
    def(res, '$key', key);
    def(res, '$hasNormal', hasNormalSlots);
    return res
  }

  function normalizeScopedSlot(normalSlots, key, fn) {
    var normalized = function () {
      var res = arguments.length ? fn.apply(null, arguments) : fn({});
      res = res && typeof res === 'object' && !Array.isArray(res)
        ? [res] // single vnode
        : normalizeChildren(res);
      return res && (
        res.length === 0 ||
        (res.length === 1 && res[0].isComment) // #9658
      ) ? undefined
        : res
    };
    // this is a slot using the new v-slot syntax without scope. although it is
    // compiled as a scoped slot, render fn users would expect it to be present
    // on this.$slots because the usage is semantically a normal slot.
    if (fn.proxy) {
      Object.defineProperty(normalSlots, key, {
        get: normalized,
        enumerable: true,
        configurable: true
      });
    }
    return normalized
  }

  function proxyNormalSlot(slots, key) {
    return function () { return slots[key]; }
  }

  /*  */

  /**
   * Runtime helper for rendering v-for lists.
   */
  function renderList (
    val,
    render
  ) {
    var ret, i, l, keys, key;
    if (Array.isArray(val) || typeof val === 'string') {
      ret = new Array(val.length);
      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = render(val[i], i);
      }
    } else if (typeof val === 'number') {
      ret = new Array(val);
      for (i = 0; i < val; i++) {
        ret[i] = render(i + 1, i);
      }
    } else if (isObject(val)) {
      if (hasSymbol && val[Symbol.iterator]) {
        ret = [];
        var iterator = val[Symbol.iterator]();
        var result = iterator.next();
        while (!result.done) {
          ret.push(render(result.value, ret.length));
          result = iterator.next();
        }
      } else {
        keys = Object.keys(val);
        ret = new Array(keys.length);
        for (i = 0, l = keys.length; i < l; i++) {
          key = keys[i];
          ret[i] = render(val[key], key, i);
        }
      }
    }
    if (!isDef(ret)) {
      ret = [];
    }
    (ret)._isVList = true;
    return ret
  }

  /*  */

  /**
   * Runtime helper for rendering <slot>
   */
  function renderSlot (
    name,
    fallback,
    props,
    bindObject
  ) {
    var scopedSlotFn = this.$scopedSlots[name];
    var nodes;
    if (scopedSlotFn) { // scoped slot
      props = props || {};
      if (bindObject) {
        if (!isObject(bindObject)) {
          warn(
            'slot v-bind without argument expects an Object',
            this
          );
        }
        props = extend(extend({}, bindObject), props);
      }
      nodes = scopedSlotFn(props) || fallback;
    } else {
      nodes = this.$slots[name] || fallback;
    }

    var target = props && props.slot;
    if (target) {
      return this.$createElement('template', { slot: target }, nodes)
    } else {
      return nodes
    }
  }

  /*  */

  /**
   * Runtime helper for resolving filters
   */
  function resolveFilter (id) {
    return resolveAsset(this.$options, 'filters', id, true) || identity
  }

  /*  */

  function isKeyNotMatch (expect, actual) {
    if (Array.isArray(expect)) {
      return expect.indexOf(actual) === -1
    } else {
      return expect !== actual
    }
  }

  /**
   * Runtime helper for checking keyCodes from config.
   * exposed as Vue.prototype._k
   * passing in eventKeyName as last argument separately for backwards compat
   */
  function checkKeyCodes (
    eventKeyCode,
    key,
    builtInKeyCode,
    eventKeyName,
    builtInKeyName
  ) {
    var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
    if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
      return isKeyNotMatch(builtInKeyName, eventKeyName)
    } else if (mappedKeyCode) {
      return isKeyNotMatch(mappedKeyCode, eventKeyCode)
    } else if (eventKeyName) {
      return hyphenate(eventKeyName) !== key
    }
  }

  /*  */

  /**
   * Runtime helper for merging v-bind="object" into a VNode's data.
   */
  function bindObjectProps (
    data,
    tag,
    value,
    asProp,
    isSync
  ) {
    if (value) {
      if (!isObject(value)) {
        warn(
          'v-bind without argument expects an Object or Array value',
          this
        );
      } else {
        if (Array.isArray(value)) {
          value = toObject(value);
        }
        var hash;
        var loop = function ( key ) {
          if (
            key === 'class' ||
            key === 'style' ||
            isReservedAttribute(key)
          ) {
            hash = data;
          } else {
            var type = data.attrs && data.attrs.type;
            hash = asProp || config.mustUseProp(tag, type, key)
              ? data.domProps || (data.domProps = {})
              : data.attrs || (data.attrs = {});
          }
          var camelizedKey = camelize(key);
          var hyphenatedKey = hyphenate(key);
          if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
            hash[key] = value[key];

            if (isSync) {
              var on = data.on || (data.on = {});
              on[("update:" + key)] = function ($event) {
                value[key] = $event;
              };
            }
          }
        };

        for (var key in value) loop( key );
      }
    }
    return data
  }

  /*  */

  /**
   * Runtime helper for rendering static trees.
   */
  function renderStatic (
    index,
    isInFor
  ) {
    var cached = this._staticTrees || (this._staticTrees = []);
    var tree = cached[index];
    // if has already-rendered static tree and not inside v-for,
    // we can reuse the same tree.
    if (tree && !isInFor) {
      return tree
    }
    // otherwise, render a fresh tree.
    tree = cached[index] = this.$options.staticRenderFns[index].call(
      this._renderProxy,
      null,
      this // for render fns generated for functional component templates
    );
    markStatic(tree, ("__static__" + index), false);
    return tree
  }

  /**
   * Runtime helper for v-once.
   * Effectively it means marking the node as static with a unique key.
   */
  function markOnce (
    tree,
    index,
    key
  ) {
    markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
    return tree
  }

  function markStatic (
    tree,
    key,
    isOnce
  ) {
    if (Array.isArray(tree)) {
      for (var i = 0; i < tree.length; i++) {
        if (tree[i] && typeof tree[i] !== 'string') {
          markStaticNode(tree[i], (key + "_" + i), isOnce);
        }
      }
    } else {
      markStaticNode(tree, key, isOnce);
    }
  }

  function markStaticNode (node, key, isOnce) {
    node.isStatic = true;
    node.key = key;
    node.isOnce = isOnce;
  }

  /*  */

  function bindObjectListeners (data, value) {
    if (value) {
      if (!isPlainObject(value)) {
        warn(
          'v-on without argument expects an Object value',
          this
        );
      } else {
        var on = data.on = data.on ? extend({}, data.on) : {};
        for (var key in value) {
          var existing = on[key];
          var ours = value[key];
          on[key] = existing ? [].concat(existing, ours) : ours;
        }
      }
    }
    return data
  }

  /*  */

  function resolveScopedSlots (
    fns, // see flow/vnode
    res,
    // the following are added in 2.6
    hasDynamicKeys,
    contentHashKey
  ) {
    res = res || { $stable: !hasDynamicKeys };
    for (var i = 0; i < fns.length; i++) {
      var slot = fns[i];
      if (Array.isArray(slot)) {
        resolveScopedSlots(slot, res, hasDynamicKeys);
      } else if (slot) {
        // marker for reverse proxying v-slot without scope on this.$slots
        if (slot.proxy) {
          slot.fn.proxy = true;
        }
        res[slot.key] = slot.fn;
      }
    }
    if (contentHashKey) {
      (res).$key = contentHashKey;
    }
    return res
  }

  /*  */

  function bindDynamicKeys (baseObj, values) {
    for (var i = 0; i < values.length; i += 2) {
      var key = values[i];
      if (typeof key === 'string' && key) {
        baseObj[values[i]] = values[i + 1];
      } else if (key !== '' && key !== null) {
        // null is a special value for explicitly removing a binding
        warn(
          ("Invalid value for dynamic directive argument (expected string or null): " + key),
          this
        );
      }
    }
    return baseObj
  }

  // helper to dynamically append modifier runtime markers to event names.
  // ensure only append when value is already string, otherwise it will be cast
  // to string and cause the type check to miss.
  function prependModifier (value, symbol) {
    return typeof value === 'string' ? symbol + value : value
  }

  /*  */

  function installRenderHelpers (target) {
    target._o = markOnce;
    target._n = toNumber;
    target._s = toString;
    target._l = renderList;
    target._t = renderSlot;
    target._q = looseEqual;
    target._i = looseIndexOf;
    target._m = renderStatic;
    target._f = resolveFilter;
    target._k = checkKeyCodes;
    target._b = bindObjectProps;
    target._v = createTextVNode;
    target._e = createEmptyVNode;
    target._u = resolveScopedSlots;
    target._g = bindObjectListeners;
    target._d = bindDynamicKeys;
    target._p = prependModifier;
  }

  /*  */

  function FunctionalRenderContext (
    data,
    props,
    children,
    parent,
    Ctor
  ) {
    var this$1 = this;

    var options = Ctor.options;
    // ensure the createElement function in functional components
    // gets a unique context - this is necessary for correct named slot check
    var contextVm;
    if (hasOwn(parent, '_uid')) {
      contextVm = Object.create(parent);
      // $flow-disable-line
      contextVm._original = parent;
    } else {
      // the context vm passed in is a functional context as well.
      // in this case we want to make sure we are able to get a hold to the
      // real context instance.
      contextVm = parent;
      // $flow-disable-line
      parent = parent._original;
    }
    var isCompiled = isTrue(options._compiled);
    var needNormalization = !isCompiled;

    this.data = data;
    this.props = props;
    this.children = children;
    this.parent = parent;
    this.listeners = data.on || emptyObject;
    this.injections = resolveInject(options.inject, parent);
    this.slots = function () {
      if (!this$1.$slots) {
        normalizeScopedSlots(
          data.scopedSlots,
          this$1.$slots = resolveSlots(children, parent)
        );
      }
      return this$1.$slots
    };

    Object.defineProperty(this, 'scopedSlots', ({
      enumerable: true,
      get: function get () {
        return normalizeScopedSlots(data.scopedSlots, this.slots())
      }
    }));

    // support for compiled functional template
    if (isCompiled) {
      // exposing $options for renderStatic()
      this.$options = options;
      // pre-resolve slots for renderSlot()
      this.$slots = this.slots();
      this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
    }

    if (options._scopeId) {
      this._c = function (a, b, c, d) {
        var vnode = createElement(contextVm, a, b, c, d, needNormalization);
        if (vnode && !Array.isArray(vnode)) {
          vnode.fnScopeId = options._scopeId;
          vnode.fnContext = parent;
        }
        return vnode
      };
    } else {
      this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
    }
  }

  installRenderHelpers(FunctionalRenderContext.prototype);

  function createFunctionalComponent (
    Ctor,
    propsData,
    data,
    contextVm,
    children
  ) {
    var options = Ctor.options;
    var props = {};
    var propOptions = options.props;
    if (isDef(propOptions)) {
      for (var key in propOptions) {
        props[key] = validateProp(key, propOptions, propsData || emptyObject);
      }
    } else {
      if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
      if (isDef(data.props)) { mergeProps(props, data.props); }
    }

    var renderContext = new FunctionalRenderContext(
      data,
      props,
      children,
      contextVm,
      Ctor
    );

    var vnode = options.render.call(null, renderContext._c, renderContext);

    if (vnode instanceof VNode) {
      return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
    } else if (Array.isArray(vnode)) {
      var vnodes = normalizeChildren(vnode) || [];
      var res = new Array(vnodes.length);
      for (var i = 0; i < vnodes.length; i++) {
        res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
      }
      return res
    }
  }

  function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
    // #7817 clone node before setting fnContext, otherwise if the node is reused
    // (e.g. it was from a cached normal slot) the fnContext causes named slots
    // that should not be matched to match.
    var clone = cloneVNode(vnode);
    clone.fnContext = contextVm;
    clone.fnOptions = options;
    {
      (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
    }
    if (data.slot) {
      (clone.data || (clone.data = {})).slot = data.slot;
    }
    return clone
  }

  function mergeProps (to, from) {
    for (var key in from) {
      to[camelize(key)] = from[key];
    }
  }

  /*  */

  /*  */

  /*  */

  /*  */

  // inline hooks to be invoked on component VNodes during patch
  var componentVNodeHooks = {
    init: function init (vnode, hydrating) {
      if (
        vnode.componentInstance &&
        !vnode.componentInstance._isDestroyed &&
        vnode.data.keepAlive
      ) {
        // kept-alive components, treat as a patch
        var mountedNode = vnode; // work around flow
        componentVNodeHooks.prepatch(mountedNode, mountedNode);
      } else {
        var child = vnode.componentInstance = createComponentInstanceForVnode(
          vnode,
          activeInstance
        );
        child.$mount(hydrating ? vnode.elm : undefined, hydrating);
      }
    },

    prepatch: function prepatch (oldVnode, vnode) {
      var options = vnode.componentOptions;
      var child = vnode.componentInstance = oldVnode.componentInstance;
      updateChildComponent(
        child,
        options.propsData, // updated props
        options.listeners, // updated listeners
        vnode, // new parent vnode
        options.children // new children
      );
    },

    insert: function insert (vnode) {
      var context = vnode.context;
      var componentInstance = vnode.componentInstance;
      if (!componentInstance._isMounted) {
        componentInstance._isMounted = true;
        callHook(componentInstance, 'mounted');
      }
      if (vnode.data.keepAlive) {
        if (context._isMounted) {
          // vue-router#1212
          // During updates, a kept-alive component's child components may
          // change, so directly walking the tree here may call activated hooks
          // on incorrect children. Instead we push them into a queue which will
          // be processed after the whole patch process ended.
          queueActivatedComponent(componentInstance);
        } else {
          activateChildComponent(componentInstance, true /* direct */);
        }
      }
    },

    destroy: function destroy (vnode) {
      var componentInstance = vnode.componentInstance;
      if (!componentInstance._isDestroyed) {
        if (!vnode.data.keepAlive) {
          componentInstance.$destroy();
        } else {
          deactivateChildComponent(componentInstance, true /* direct */);
        }
      }
    }
  };

  var hooksToMerge = Object.keys(componentVNodeHooks);

  function createComponent (
    Ctor,
    data,
    context,
    children,
    tag
  ) {
    if (isUndef(Ctor)) {
      return
    }

    var baseCtor = context.$options._base;

    // plain options object: turn it into a constructor
    if (isObject(Ctor)) {
      Ctor = baseCtor.extend(Ctor);
    }

    // if at this stage it's not a constructor or an async component factory,
    // reject.
    if (typeof Ctor !== 'function') {
      {
        warn(("Invalid Component definition: " + (String(Ctor))), context);
      }
      return
    }

    // async component
    var asyncFactory;
    if (isUndef(Ctor.cid)) {
      asyncFactory = Ctor;
      Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
      if (Ctor === undefined) {
        // return a placeholder node for async component, which is rendered
        // as a comment node but preserves all the raw information for the node.
        // the information will be used for async server-rendering and hydration.
        return createAsyncPlaceholder(
          asyncFactory,
          data,
          context,
          children,
          tag
        )
      }
    }

    data = data || {};

    // resolve constructor options in case global mixins are applied after
    // component constructor creation
    resolveConstructorOptions(Ctor);

    // transform component v-model data into props & events
    if (isDef(data.model)) {
      transformModel(Ctor.options, data);
    }

    // extract props
    var propsData = extractPropsFromVNodeData(data, Ctor, tag);

    // functional component
    if (isTrue(Ctor.options.functional)) {
      return createFunctionalComponent(Ctor, propsData, data, context, children)
    }

    // extract listeners, since these needs to be treated as
    // child component listeners instead of DOM listeners
    var listeners = data.on;
    // replace with listeners with .native modifier
    // so it gets processed during parent component patch.
    data.on = data.nativeOn;

    if (isTrue(Ctor.options.abstract)) {
      // abstract components do not keep anything
      // other than props & listeners & slot

      // work around flow
      var slot = data.slot;
      data = {};
      if (slot) {
        data.slot = slot;
      }
    }

    // install component management hooks onto the placeholder node
    installComponentHooks(data);

    // return a placeholder vnode
    var name = Ctor.options.name || tag;
    var vnode = new VNode(
      ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
      data, undefined, undefined, undefined, context,
      { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
      asyncFactory
    );

    return vnode
  }

  function createComponentInstanceForVnode (
    vnode, // we know it's MountedComponentVNode but flow doesn't
    parent // activeInstance in lifecycle state
  ) {
    var options = {
      _isComponent: true,
      _parentVnode: vnode,
      parent: parent
    };
    // check inline-template render functions
    var inlineTemplate = vnode.data.inlineTemplate;
    if (isDef(inlineTemplate)) {
      options.render = inlineTemplate.render;
      options.staticRenderFns = inlineTemplate.staticRenderFns;
    }
    return new vnode.componentOptions.Ctor(options)
  }

  function installComponentHooks (data) {
    var hooks = data.hook || (data.hook = {});
    for (var i = 0; i < hooksToMerge.length; i++) {
      var key = hooksToMerge[i];
      var existing = hooks[key];
      var toMerge = componentVNodeHooks[key];
      if (existing !== toMerge && !(existing && existing._merged)) {
        hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
      }
    }
  }

  function mergeHook$1 (f1, f2) {
    var merged = function (a, b) {
      // flow complains about extra args which is why we use any
      f1(a, b);
      f2(a, b);
    };
    merged._merged = true;
    return merged
  }

  // transform component v-model info (value and callback) into
  // prop and event handler respectively.
  function transformModel (options, data) {
    var prop = (options.model && options.model.prop) || 'value';
    var event = (options.model && options.model.event) || 'input'
    ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
    var on = data.on || (data.on = {});
    var existing = on[event];
    var callback = data.model.callback;
    if (isDef(existing)) {
      if (
        Array.isArray(existing)
          ? existing.indexOf(callback) === -1
          : existing !== callback
      ) {
        on[event] = [callback].concat(existing);
      }
    } else {
      on[event] = callback;
    }
  }

  /*  */

  var SIMPLE_NORMALIZE = 1;
  var ALWAYS_NORMALIZE = 2;

  // wrapper function for providing a more flexible interface
  // without getting yelled at by flow
  function createElement (
    context,
    tag,
    data,
    children,
    normalizationType,
    alwaysNormalize
  ) {
    if (Array.isArray(data) || isPrimitive(data)) {
      normalizationType = children;
      children = data;
      data = undefined;
    }
    if (isTrue(alwaysNormalize)) {
      normalizationType = ALWAYS_NORMALIZE;
    }
    return _createElement(context, tag, data, children, normalizationType)
  }

  function _createElement (
    context,
    tag,
    data,
    children,
    normalizationType
  ) {
    if (isDef(data) && isDef((data).__ob__)) {
      warn(
        "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
        'Always create fresh vnode data objects in each render!',
        context
      );
      return createEmptyVNode()
    }
    // object syntax in v-bind
    if (isDef(data) && isDef(data.is)) {
      tag = data.is;
    }
    if (!tag) {
      // in case of component :is set to falsy value
      return createEmptyVNode()
    }
    // warn against non-primitive key
    if (isDef(data) && isDef(data.key) && !isPrimitive(data.key)
    ) {
      {
        warn(
          'Avoid using non-primitive value as key, ' +
          'use string/number value instead.',
          context
        );
      }
    }
    // support single function children as default scoped slot
    if (Array.isArray(children) &&
      typeof children[0] === 'function'
    ) {
      data = data || {};
      data.scopedSlots = { default: children[0] };
      children.length = 0;
    }
    if (normalizationType === ALWAYS_NORMALIZE) {
      children = normalizeChildren(children);
    } else if (normalizationType === SIMPLE_NORMALIZE) {
      children = simpleNormalizeChildren(children);
    }
    var vnode, ns;
    if (typeof tag === 'string') {
      var Ctor;
      ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
      if (config.isReservedTag(tag)) {
        // platform built-in elements
        if (isDef(data) && isDef(data.nativeOn)) {
          warn(
            ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
            context
          );
        }
        vnode = new VNode(
          config.parsePlatformTagName(tag), data, children,
          undefined, undefined, context
        );
      } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
        // component
        vnode = createComponent(Ctor, data, context, children, tag);
      } else {
        // unknown or unlisted namespaced elements
        // check at runtime because it may get assigned a namespace when its
        // parent normalizes children
        vnode = new VNode(
          tag, data, children,
          undefined, undefined, context
        );
      }
    } else {
      // direct component options / constructor
      vnode = createComponent(tag, data, context, children);
    }
    if (Array.isArray(vnode)) {
      return vnode
    } else if (isDef(vnode)) {
      if (isDef(ns)) { applyNS(vnode, ns); }
      if (isDef(data)) { registerDeepBindings(data); }
      return vnode
    } else {
      return createEmptyVNode()
    }
  }

  function applyNS (vnode, ns, force) {
    vnode.ns = ns;
    if (vnode.tag === 'foreignObject') {
      // use default namespace inside foreignObject
      ns = undefined;
      force = true;
    }
    if (isDef(vnode.children)) {
      for (var i = 0, l = vnode.children.length; i < l; i++) {
        var child = vnode.children[i];
        if (isDef(child.tag) && (
          isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
          applyNS(child, ns, force);
        }
      }
    }
  }

  // ref #5318
  // necessary to ensure parent re-render when deep bindings like :style and
  // :class are used on slot nodes
  function registerDeepBindings (data) {
    if (isObject(data.style)) {
      traverse(data.style);
    }
    if (isObject(data.class)) {
      traverse(data.class);
    }
  }

  /*  */

  function initRender (vm) {
    vm._vnode = null; // the root of the child tree
    vm._staticTrees = null; // v-once cached trees
    var options = vm.$options;
    var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
    var renderContext = parentVnode && parentVnode.context;
    vm.$slots = resolveSlots(options._renderChildren, renderContext);
    vm.$scopedSlots = emptyObject;
    // bind the createElement fn to this instance
    // so that we get proper render context inside it.
    // args order: tag, data, children, normalizationType, alwaysNormalize
    // internal version is used by render functions compiled from templates
    vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
    // normalization is always applied for the public version, used in
    // user-written render functions.
    vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

    // $attrs & $listeners are exposed for easier HOC creation.
    // they need to be reactive so that HOCs using them are always updated
    var parentData = parentVnode && parentVnode.data;

    /* istanbul ignore else */
    {
      defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
        !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
      }, true);
      defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
        !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
      }, true);
    }
  }

  var currentRenderingInstance = null;

  function renderMixin (Vue) {
    // install runtime convenience helpers
    installRenderHelpers(Vue.prototype);

    Vue.prototype.$nextTick = function (fn) {
      return nextTick(fn, this)
    };

    Vue.prototype._render = function () {
      var vm = this;
      var ref = vm.$options;
      var render = ref.render;
      var _parentVnode = ref._parentVnode;

      if (_parentVnode) {
        vm.$scopedSlots = normalizeScopedSlots(
          _parentVnode.data.scopedSlots,
          vm.$slots,
          vm.$scopedSlots
        );
      }

      // set parent vnode. this allows render functions to have access
      // to the data on the placeholder node.
      vm.$vnode = _parentVnode;
      // render self
      var vnode;
      try {
        // There's no need to maintain a stack because all render fns are called
        // separately from one another. Nested component's render fns are called
        // when parent component is patched.
        currentRenderingInstance = vm;
        vnode = render.call(vm._renderProxy, vm.$createElement);
      } catch (e) {
        handleError(e, vm, "render");
        // return error render result,
        // or previous vnode to prevent render error causing blank component
        /* istanbul ignore else */
        if (vm.$options.renderError) {
          try {
            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
          } catch (e) {
            handleError(e, vm, "renderError");
            vnode = vm._vnode;
          }
        } else {
          vnode = vm._vnode;
        }
      } finally {
        currentRenderingInstance = null;
      }
      // if the returned array contains only a single node, allow it
      if (Array.isArray(vnode) && vnode.length === 1) {
        vnode = vnode[0];
      }
      // return empty vnode in case the render function errored out
      if (!(vnode instanceof VNode)) {
        if (Array.isArray(vnode)) {
          warn(
            'Multiple root nodes returned from render function. Render function ' +
            'should return a single root node.',
            vm
          );
        }
        vnode = createEmptyVNode();
      }
      // set parent
      vnode.parent = _parentVnode;
      return vnode
    };
  }

  /*  */

  function ensureCtor (comp, base) {
    if (
      comp.__esModule ||
      (hasSymbol && comp[Symbol.toStringTag] === 'Module')
    ) {
      comp = comp.default;
    }
    return isObject(comp)
      ? base.extend(comp)
      : comp
  }

  function createAsyncPlaceholder (
    factory,
    data,
    context,
    children,
    tag
  ) {
    var node = createEmptyVNode();
    node.asyncFactory = factory;
    node.asyncMeta = { data: data, context: context, children: children, tag: tag };
    return node
  }

  function resolveAsyncComponent (
    factory,
    baseCtor
  ) {
    if (isTrue(factory.error) && isDef(factory.errorComp)) {
      return factory.errorComp
    }

    if (isDef(factory.resolved)) {
      return factory.resolved
    }

    var owner = currentRenderingInstance;
    if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
      // already pending
      factory.owners.push(owner);
    }

    if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
      return factory.loadingComp
    }

    if (owner && !isDef(factory.owners)) {
      var owners = factory.owners = [owner];
      var sync = true;
      var timerLoading = null;
      var timerTimeout = null

      ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

      var forceRender = function (renderCompleted) {
        for (var i = 0, l = owners.length; i < l; i++) {
          (owners[i]).$forceUpdate();
        }

        if (renderCompleted) {
          owners.length = 0;
          if (timerLoading !== null) {
            clearTimeout(timerLoading);
            timerLoading = null;
          }
          if (timerTimeout !== null) {
            clearTimeout(timerTimeout);
            timerTimeout = null;
          }
        }
      };

      var resolve = once(function (res) {
        // cache resolved
        factory.resolved = ensureCtor(res, baseCtor);
        // invoke callbacks only if this is not a synchronous resolve
        // (async resolves are shimmed as synchronous during SSR)
        if (!sync) {
          forceRender(true);
        } else {
          owners.length = 0;
        }
      });

      var reject = once(function (reason) {
        warn(
          "Failed to resolve async component: " + (String(factory)) +
          (reason ? ("\nReason: " + reason) : '')
        );
        if (isDef(factory.errorComp)) {
          factory.error = true;
          forceRender(true);
        }
      });

      var res = factory(resolve, reject);

      if (isObject(res)) {
        if (isPromise(res)) {
          // () => Promise
          if (isUndef(factory.resolved)) {
            res.then(resolve, reject);
          }
        } else if (isPromise(res.component)) {
          res.component.then(resolve, reject);

          if (isDef(res.error)) {
            factory.errorComp = ensureCtor(res.error, baseCtor);
          }

          if (isDef(res.loading)) {
            factory.loadingComp = ensureCtor(res.loading, baseCtor);
            if (res.delay === 0) {
              factory.loading = true;
            } else {
              timerLoading = setTimeout(function () {
                timerLoading = null;
                if (isUndef(factory.resolved) && isUndef(factory.error)) {
                  factory.loading = true;
                  forceRender(false);
                }
              }, res.delay || 200);
            }
          }

          if (isDef(res.timeout)) {
            timerTimeout = setTimeout(function () {
              timerTimeout = null;
              if (isUndef(factory.resolved)) {
                reject(
                  "timeout (" + (res.timeout) + "ms)"
                );
              }
            }, res.timeout);
          }
        }
      }

      sync = false;
      // return in case resolved synchronously
      return factory.loading
        ? factory.loadingComp
        : factory.resolved
    }
  }

  /*  */

  function isAsyncPlaceholder (node) {
    return node.isComment && node.asyncFactory
  }

  /*  */

  function getFirstComponentChild (children) {
    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; i++) {
        var c = children[i];
        if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
          return c
        }
      }
    }
  }

  /*  */

  /*  */

  function initEvents (vm) {
    vm._events = Object.create(null);
    vm._hasHookEvent = false;
    // init parent attached events
    var listeners = vm.$options._parentListeners;
    if (listeners) {
      updateComponentListeners(vm, listeners);
    }
  }

  var target;

  function add (event, fn) {
    target.$on(event, fn);
  }

  function remove$1 (event, fn) {
    target.$off(event, fn);
  }

  function createOnceHandler (event, fn) {
    var _target = target;
    return function onceHandler () {
      var res = fn.apply(null, arguments);
      if (res !== null) {
        _target.$off(event, onceHandler);
      }
    }
  }

  function updateComponentListeners (
    vm,
    listeners,
    oldListeners
  ) {
    target = vm;
    updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
    target = undefined;
  }

  function eventsMixin (Vue) {
    var hookRE = /^hook:/;
    Vue.prototype.$on = function (event, fn) {
      var vm = this;
      if (Array.isArray(event)) {
        for (var i = 0, l = event.length; i < l; i++) {
          vm.$on(event[i], fn);
        }
      } else {
        (vm._events[event] || (vm._events[event] = [])).push(fn);
        // optimize hook:event cost by using a boolean flag marked at registration
        // instead of a hash lookup
        if (hookRE.test(event)) {
          vm._hasHookEvent = true;
        }
      }
      return vm
    };

    Vue.prototype.$once = function (event, fn) {
      var vm = this;
      function on () {
        vm.$off(event, on);
        fn.apply(vm, arguments);
      }
      on.fn = fn;
      vm.$on(event, on);
      return vm
    };

    Vue.prototype.$off = function (event, fn) {
      var vm = this;
      // all
      if (!arguments.length) {
        vm._events = Object.create(null);
        return vm
      }
      // array of events
      if (Array.isArray(event)) {
        for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
          vm.$off(event[i$1], fn);
        }
        return vm
      }
      // specific event
      var cbs = vm._events[event];
      if (!cbs) {
        return vm
      }
      if (!fn) {
        vm._events[event] = null;
        return vm
      }
      // specific handler
      var cb;
      var i = cbs.length;
      while (i--) {
        cb = cbs[i];
        if (cb === fn || cb.fn === fn) {
          cbs.splice(i, 1);
          break
        }
      }
      return vm
    };

    Vue.prototype.$emit = function (event) {
      var vm = this;
      {
        var lowerCaseEvent = event.toLowerCase();
        if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
          tip(
            "Event \"" + lowerCaseEvent + "\" is emitted in component " +
            (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
            "Note that HTML attributes are case-insensitive and you cannot use " +
            "v-on to listen to camelCase events when using in-DOM templates. " +
            "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
          );
        }
      }
      var cbs = vm._events[event];
      if (cbs) {
        cbs = cbs.length > 1 ? toArray(cbs) : cbs;
        var args = toArray(arguments, 1);
        var info = "event handler for \"" + event + "\"";
        for (var i = 0, l = cbs.length; i < l; i++) {
          invokeWithErrorHandling(cbs[i], vm, args, vm, info);
        }
      }
      return vm
    };
  }

  /*  */

  var activeInstance = null;
  var isUpdatingChildComponent = false;

  function setActiveInstance(vm) {
    var prevActiveInstance = activeInstance;
    activeInstance = vm;
    return function () {
      activeInstance = prevActiveInstance;
    }
  }

  function initLifecycle (vm) {
    var options = vm.$options;

    // locate first non-abstract parent
    var parent = options.parent;
    if (parent && !options.abstract) {
      while (parent.$options.abstract && parent.$parent) {
        parent = parent.$parent;
      }
      parent.$children.push(vm);
    }

    vm.$parent = parent;
    vm.$root = parent ? parent.$root : vm;

    vm.$children = [];
    vm.$refs = {};

    vm._watcher = null;
    vm._inactive = null;
    vm._directInactive = false;
    vm._isMounted = false;
    vm._isDestroyed = false;
    vm._isBeingDestroyed = false;
  }

  function lifecycleMixin (Vue) {
    Vue.prototype._update = function (vnode, hydrating) {
      var vm = this;
      var prevEl = vm.$el;
      var prevVnode = vm._vnode;
      var restoreActiveInstance = setActiveInstance(vm);
      vm._vnode = vnode;
      // Vue.prototype.__patch__ is injected in entry points
      // based on the rendering backend used.
      if (!prevVnode) {
        // initial render
        vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
      } else {
        // updates
        vm.$el = vm.__patch__(prevVnode, vnode);
      }
      restoreActiveInstance();
      // update __vue__ reference
      if (prevEl) {
        prevEl.__vue__ = null;
      }
      if (vm.$el) {
        vm.$el.__vue__ = vm;
      }
      // if parent is an HOC, update its $el as well
      if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
        vm.$parent.$el = vm.$el;
      }
      // updated hook is called by the scheduler to ensure that children are
      // updated in a parent's updated hook.
    };

    Vue.prototype.$forceUpdate = function () {
      var vm = this;
      if (vm._watcher) {
        vm._watcher.update();
      }
    };

    Vue.prototype.$destroy = function () {
      var vm = this;
      if (vm._isBeingDestroyed) {
        return
      }
      callHook(vm, 'beforeDestroy');
      vm._isBeingDestroyed = true;
      // remove self from parent
      var parent = vm.$parent;
      if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
        remove(parent.$children, vm);
      }
      // teardown watchers
      if (vm._watcher) {
        vm._watcher.teardown();
      }
      var i = vm._watchers.length;
      while (i--) {
        vm._watchers[i].teardown();
      }
      // remove reference from data ob
      // frozen object may not have observer.
      if (vm._data.__ob__) {
        vm._data.__ob__.vmCount--;
      }
      // call the last hook...
      vm._isDestroyed = true;
      // invoke destroy hooks on current rendered tree
      vm.__patch__(vm._vnode, null);
      // fire destroyed hook
      callHook(vm, 'destroyed');
      // turn off all instance listeners.
      vm.$off();
      // remove __vue__ reference
      if (vm.$el) {
        vm.$el.__vue__ = null;
      }
      // release circular reference (#6759)
      if (vm.$vnode) {
        vm.$vnode.parent = null;
      }
    };
  }

  function mountComponent (
    vm,
    el,
    hydrating
  ) {
    vm.$el = el;
    if (!vm.$options.render) {
      vm.$options.render = createEmptyVNode;
      {
        /* istanbul ignore if */
        if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
          vm.$options.el || el) {
          warn(
            'You are using the runtime-only build of Vue where the template ' +
            'compiler is not available. Either pre-compile the templates into ' +
            'render functions, or use the compiler-included build.',
            vm
          );
        } else {
          warn(
            'Failed to mount component: template or render function not defined.',
            vm
          );
        }
      }
    }
    callHook(vm, 'beforeMount');

    var updateComponent;
    /* istanbul ignore if */
    if (config.performance && mark) {
      updateComponent = function () {
        var name = vm._name;
        var id = vm._uid;
        var startTag = "vue-perf-start:" + id;
        var endTag = "vue-perf-end:" + id;

        mark(startTag);
        var vnode = vm._render();
        mark(endTag);
        measure(("vue " + name + " render"), startTag, endTag);

        mark(startTag);
        vm._update(vnode, hydrating);
        mark(endTag);
        measure(("vue " + name + " patch"), startTag, endTag);
      };
    } else {
      updateComponent = function () {
        vm._update(vm._render(), hydrating);
      };
    }

    // we set this to vm._watcher inside the watcher's constructor
    // since the watcher's initial patch may call $forceUpdate (e.g. inside child
    // component's mounted hook), which relies on vm._watcher being already defined
    new Watcher(vm, updateComponent, noop, {
      before: function before () {
        if (vm._isMounted && !vm._isDestroyed) {
          callHook(vm, 'beforeUpdate');
        }
      }
    }, true /* isRenderWatcher */);
    hydrating = false;

    // manually mounted instance, call mounted on self
    // mounted is called for render-created child components in its inserted hook
    if (vm.$vnode == null) {
      vm._isMounted = true;
      callHook(vm, 'mounted');
    }
    return vm
  }

  function updateChildComponent (
    vm,
    propsData,
    listeners,
    parentVnode,
    renderChildren
  ) {
    {
      isUpdatingChildComponent = true;
    }

    // determine whether component has slot children
    // we need to do this before overwriting $options._renderChildren.

    // check if there are dynamic scopedSlots (hand-written or compiled but with
    // dynamic slot names). Static scoped slots compiled from template has the
    // "$stable" marker.
    var newScopedSlots = parentVnode.data.scopedSlots;
    var oldScopedSlots = vm.$scopedSlots;
    var hasDynamicScopedSlot = !!(
      (newScopedSlots && !newScopedSlots.$stable) ||
      (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
      (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
    );

    // Any static slot children from the parent may have changed during parent's
    // update. Dynamic scoped slots may also have changed. In such cases, a forced
    // update is necessary to ensure correctness.
    var needsForceUpdate = !!(
      renderChildren ||               // has new static slots
      vm.$options._renderChildren ||  // has old static slots
      hasDynamicScopedSlot
    );

    vm.$options._parentVnode = parentVnode;
    vm.$vnode = parentVnode; // update vm's placeholder node without re-render

    if (vm._vnode) { // update child tree's parent
      vm._vnode.parent = parentVnode;
    }
    vm.$options._renderChildren = renderChildren;

    // update $attrs and $listeners hash
    // these are also reactive so they may trigger child update if the child
    // used them during render
    vm.$attrs = parentVnode.data.attrs || emptyObject;
    vm.$listeners = listeners || emptyObject;

    // update props
    if (propsData && vm.$options.props) {
      toggleObserving(false);
      var props = vm._props;
      var propKeys = vm.$options._propKeys || [];
      for (var i = 0; i < propKeys.length; i++) {
        var key = propKeys[i];
        var propOptions = vm.$options.props; // wtf flow?
        props[key] = validateProp(key, propOptions, propsData, vm);
      }
      toggleObserving(true);
      // keep a copy of raw propsData
      vm.$options.propsData = propsData;
    }

    // update listeners
    listeners = listeners || emptyObject;
    var oldListeners = vm.$options._parentListeners;
    vm.$options._parentListeners = listeners;
    updateComponentListeners(vm, listeners, oldListeners);

    // resolve slots + force update if has children
    if (needsForceUpdate) {
      vm.$slots = resolveSlots(renderChildren, parentVnode.context);
      vm.$forceUpdate();
    }

    {
      isUpdatingChildComponent = false;
    }
  }

  function isInInactiveTree (vm) {
    while (vm && (vm = vm.$parent)) {
      if (vm._inactive) { return true }
    }
    return false
  }

  function activateChildComponent (vm, direct) {
    if (direct) {
      vm._directInactive = false;
      if (isInInactiveTree(vm)) {
        return
      }
    } else if (vm._directInactive) {
      return
    }
    if (vm._inactive || vm._inactive === null) {
      vm._inactive = false;
      for (var i = 0; i < vm.$children.length; i++) {
        activateChildComponent(vm.$children[i]);
      }
      callHook(vm, 'activated');
    }
  }

  function deactivateChildComponent (vm, direct) {
    if (direct) {
      vm._directInactive = true;
      if (isInInactiveTree(vm)) {
        return
      }
    }
    if (!vm._inactive) {
      vm._inactive = true;
      for (var i = 0; i < vm.$children.length; i++) {
        deactivateChildComponent(vm.$children[i]);
      }
      callHook(vm, 'deactivated');
    }
  }

  function callHook (vm, hook) {
    // #7573 disable dep collection when invoking lifecycle hooks
    pushTarget();
    var handlers = vm.$options[hook];
    var info = hook + " hook";
    if (handlers) {
      for (var i = 0, j = handlers.length; i < j; i++) {
        invokeWithErrorHandling(handlers[i], vm, null, vm, info);
      }
    }
    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook);
    }
    popTarget();
  }

  /*  */

  var MAX_UPDATE_COUNT = 100;

  var queue = [];
  var activatedChildren = [];
  var has = {};
  var circular = {};
  var waiting = false;
  var flushing = false;
  var index = 0;

  /**
   * Reset the scheduler's state.
   */
  function resetSchedulerState () {
    index = queue.length = activatedChildren.length = 0;
    has = {};
    {
      circular = {};
    }
    waiting = flushing = false;
  }

  // Async edge case #6566 requires saving the timestamp when event listeners are
  // attached. However, calling performance.now() has a perf overhead especially
  // if the page has thousands of event listeners. Instead, we take a timestamp
  // every time the scheduler flushes and use that for all event listeners
  // attached during that flush.
  var currentFlushTimestamp = 0;

  // Async edge case fix requires storing an event listener's attach timestamp.
  var getNow = Date.now;

  // Determine what event timestamp the browser is using. Annoyingly, the
  // timestamp can either be hi-res (relative to page load) or low-res
  // (relative to UNIX epoch), so in order to compare time we have to use the
  // same timestamp type when saving the flush timestamp.
  // All IE versions use low-res event timestamps, and have problematic clock
  // implementations (#9632)
  if (inBrowser && !isIE) {
    var performance = window.performance;
    if (
      performance &&
      typeof performance.now === 'function' &&
      getNow() > document.createEvent('Event').timeStamp
    ) {
      // if the event timestamp, although evaluated AFTER the Date.now(), is
      // smaller than it, it means the event is using a hi-res timestamp,
      // and we need to use the hi-res version for event listener timestamps as
      // well.
      getNow = function () { return performance.now(); };
    }
  }

  /**
   * Flush both queues and run the watchers.
   */
  function flushSchedulerQueue () {
    currentFlushTimestamp = getNow();
    flushing = true;
    var watcher, id;

    // Sort queue before flush.
    // This ensures that:
    // 1. Components are updated from parent to child. (because parent is always
    //    created before the child)
    // 2. A component's user watchers are run before its render watcher (because
    //    user watchers are created before the render watcher)
    // 3. If a component is destroyed during a parent component's watcher run,
    //    its watchers can be skipped.
    queue.sort(function (a, b) { return a.id - b.id; });

    // do not cache length because more watchers might be pushed
    // as we run existing watchers
    for (index = 0; index < queue.length; index++) {
      watcher = queue[index];
      if (watcher.before) {
        watcher.before();
      }
      id = watcher.id;
      has[id] = null;
      watcher.run();
      // in dev build, check and stop circular updates.
      if (has[id] != null) {
        circular[id] = (circular[id] || 0) + 1;
        if (circular[id] > MAX_UPDATE_COUNT) {
          warn(
            'You may have an infinite update loop ' + (
              watcher.user
                ? ("in watcher with expression \"" + (watcher.expression) + "\"")
                : "in a component render function."
            ),
            watcher.vm
          );
          break
        }
      }
    }

    // keep copies of post queues before resetting state
    var activatedQueue = activatedChildren.slice();
    var updatedQueue = queue.slice();

    resetSchedulerState();

    // call component updated and activated hooks
    callActivatedHooks(activatedQueue);
    callUpdatedHooks(updatedQueue);

    // devtool hook
    /* istanbul ignore if */
    if (devtools && config.devtools) {
      devtools.emit('flush');
    }
  }

  function callUpdatedHooks (queue) {
    var i = queue.length;
    while (i--) {
      var watcher = queue[i];
      var vm = watcher.vm;
      if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'updated');
      }
    }
  }

  /**
   * Queue a kept-alive component that was activated during patch.
   * The queue will be processed after the entire tree has been patched.
   */
  function queueActivatedComponent (vm) {
    // setting _inactive to false here so that a render function can
    // rely on checking whether it's in an inactive tree (e.g. router-view)
    vm._inactive = false;
    activatedChildren.push(vm);
  }

  function callActivatedHooks (queue) {
    for (var i = 0; i < queue.length; i++) {
      queue[i]._inactive = true;
      activateChildComponent(queue[i], true /* true */);
    }
  }

  /**
   * Push a watcher into the watcher queue.
   * Jobs with duplicate IDs will be skipped unless it's
   * pushed when the queue is being flushed.
   */
  function queueWatcher (watcher) {
    var id = watcher.id;
    if (has[id] == null) {
      has[id] = true;
      if (!flushing) {
        queue.push(watcher);
      } else {
        // if already flushing, splice the watcher based on its id
        // if already past its id, it will be run next immediately.
        var i = queue.length - 1;
        while (i > index && queue[i].id > watcher.id) {
          i--;
        }
        queue.splice(i + 1, 0, watcher);
      }
      // queue the flush
      if (!waiting) {
        waiting = true;

        if (!config.async) {
          flushSchedulerQueue();
          return
        }
        nextTick(flushSchedulerQueue);
      }
    }
  }

  /*  */



  var uid$2 = 0;

  /**
   * A watcher parses an expression, collects dependencies,
   * and fires callback when the expression value changes.
   * This is used for both the $watch() api and directives.
   */
  var Watcher = function Watcher (
    vm,
    expOrFn,
    cb,
    options,
    isRenderWatcher
  ) {
    this.vm = vm;
    if (isRenderWatcher) {
      vm._watcher = this;
    }
    vm._watchers.push(this);
    // options
    if (options) {
      this.deep = !!options.deep;
      this.user = !!options.user;
      this.lazy = !!options.lazy;
      this.sync = !!options.sync;
      this.before = options.before;
    } else {
      this.deep = this.user = this.lazy = this.sync = false;
    }
    this.cb = cb;
    this.id = ++uid$2; // uid for batching
    this.active = true;
    this.dirty = this.lazy; // for lazy watchers
    this.deps = [];
    this.newDeps = [];
    this.depIds = new _Set();
    this.newDepIds = new _Set();
    this.expression = expOrFn.toString();
    // parse expression for getter
    if (typeof expOrFn === 'function') {
      this.getter = expOrFn;
    } else {
      this.getter = parsePath(expOrFn);
      if (!this.getter) {
        this.getter = noop;
        warn(
          "Failed watching path: \"" + expOrFn + "\" " +
          'Watcher only accepts simple dot-delimited paths. ' +
          'For full control, use a function instead.',
          vm
        );
      }
    }
    this.value = this.lazy
      ? undefined
      : this.get();
  };

  /**
   * Evaluate the getter, and re-collect dependencies.
   */
  Watcher.prototype.get = function get () {
    pushTarget(this);
    var value;
    var vm = this.vm;
    try {
      value = this.getter.call(vm, vm);
    } catch (e) {
      if (this.user) {
        handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
      } else {
        throw e
      }
    } finally {
      // "touch" every property so they are all tracked as
      // dependencies for deep watching
      if (this.deep) {
        traverse(value);
      }
      popTarget();
      this.cleanupDeps();
    }
    return value
  };

  /**
   * Add a dependency to this directive.
   */
  Watcher.prototype.addDep = function addDep (dep) {
    var id = dep.id;
    if (!this.newDepIds.has(id)) {
      this.newDepIds.add(id);
      this.newDeps.push(dep);
      if (!this.depIds.has(id)) {
        dep.addSub(this);
      }
    }
  };

  /**
   * Clean up for dependency collection.
   */
  Watcher.prototype.cleanupDeps = function cleanupDeps () {
    var i = this.deps.length;
    while (i--) {
      var dep = this.deps[i];
      if (!this.newDepIds.has(dep.id)) {
        dep.removeSub(this);
      }
    }
    var tmp = this.depIds;
    this.depIds = this.newDepIds;
    this.newDepIds = tmp;
    this.newDepIds.clear();
    tmp = this.deps;
    this.deps = this.newDeps;
    this.newDeps = tmp;
    this.newDeps.length = 0;
  };

  /**
   * Subscriber interface.
   * Will be called when a dependency changes.
   */
  Watcher.prototype.update = function update () {
    /* istanbul ignore else */
    if (this.lazy) {
      this.dirty = true;
    } else if (this.sync) {
      this.run();
    } else {
      queueWatcher(this);
    }
  };

  /**
   * Scheduler job interface.
   * Will be called by the scheduler.
   */
  Watcher.prototype.run = function run () {
    if (this.active) {
      var value = this.get();
      if (
        value !== this.value ||
        // Deep watchers and watchers on Object/Arrays should fire even
        // when the value is the same, because the value may
        // have mutated.
        isObject(value) ||
        this.deep
      ) {
        // set new value
        var oldValue = this.value;
        this.value = value;
        if (this.user) {
          try {
            this.cb.call(this.vm, value, oldValue);
          } catch (e) {
            handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
          }
        } else {
          this.cb.call(this.vm, value, oldValue);
        }
      }
    }
  };

  /**
   * Evaluate the value of the watcher.
   * This only gets called for lazy watchers.
   */
  Watcher.prototype.evaluate = function evaluate () {
    this.value = this.get();
    this.dirty = false;
  };

  /**
   * Depend on all deps collected by this watcher.
   */
  Watcher.prototype.depend = function depend () {
    var i = this.deps.length;
    while (i--) {
      this.deps[i].depend();
    }
  };

  /**
   * Remove self from all dependencies' subscriber list.
   */
  Watcher.prototype.teardown = function teardown () {
    if (this.active) {
      // remove self from vm's watcher list
      // this is a somewhat expensive operation so we skip it
      // if the vm is being destroyed.
      if (!this.vm._isBeingDestroyed) {
        remove(this.vm._watchers, this);
      }
      var i = this.deps.length;
      while (i--) {
        this.deps[i].removeSub(this);
      }
      this.active = false;
    }
  };

  /*  */

  var sharedPropertyDefinition = {
    enumerable: true,
    configurable: true,
    get: noop,
    set: noop
  };

  function proxy (target, sourceKey, key) {
    sharedPropertyDefinition.get = function proxyGetter () {
      return this[sourceKey][key]
    };
    sharedPropertyDefinition.set = function proxySetter (val) {
      this[sourceKey][key] = val;
    };
    Object.defineProperty(target, key, sharedPropertyDefinition);
  }

  function initState (vm) {
    vm._watchers = [];
    var opts = vm.$options;
    if (opts.props) { initProps(vm, opts.props); }
    if (opts.methods) { initMethods(vm, opts.methods); }
    if (opts.data) {
      initData(vm);
    } else {
      observe(vm._data = {}, true /* asRootData */);
    }
    if (opts.computed) { initComputed(vm, opts.computed); }
    if (opts.watch && opts.watch !== nativeWatch) {
      initWatch(vm, opts.watch);
    }
  }

  function initProps (vm, propsOptions) {
    var propsData = vm.$options.propsData || {};
    var props = vm._props = {};
    // cache prop keys so that future props updates can iterate using Array
    // instead of dynamic object key enumeration.
    var keys = vm.$options._propKeys = [];
    var isRoot = !vm.$parent;
    // root instance props should be converted
    if (!isRoot) {
      toggleObserving(false);
    }
    var loop = function ( key ) {
      keys.push(key);
      var value = validateProp(key, propsOptions, propsData, vm);
      /* istanbul ignore else */
      {
        var hyphenatedKey = hyphenate(key);
        if (isReservedAttribute(hyphenatedKey) ||
            config.isReservedAttr(hyphenatedKey)) {
          warn(
            ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
            vm
          );
        }
        defineReactive$$1(props, key, value, function () {
          if (!isRoot && !isUpdatingChildComponent) {
            warn(
              "Avoid mutating a prop directly since the value will be " +
              "overwritten whenever the parent component re-renders. " +
              "Instead, use a data or computed property based on the prop's " +
              "value. Prop being mutated: \"" + key + "\"",
              vm
            );
          }
        });
      }
      // static props are already proxied on the component's prototype
      // during Vue.extend(). We only need to proxy props defined at
      // instantiation here.
      if (!(key in vm)) {
        proxy(vm, "_props", key);
      }
    };

    for (var key in propsOptions) loop( key );
    toggleObserving(true);
  }

  function initData (vm) {
    var data = vm.$options.data;
    data = vm._data = typeof data === 'function'
      ? getData(data, vm)
      : data || {};
    if (!isPlainObject(data)) {
      data = {};
      warn(
        'data functions should return an object:\n' +
        'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
        vm
      );
    }
    // proxy data on instance
    var keys = Object.keys(data);
    var props = vm.$options.props;
    var methods = vm.$options.methods;
    var i = keys.length;
    while (i--) {
      var key = keys[i];
      {
        if (methods && hasOwn(methods, key)) {
          warn(
            ("Method \"" + key + "\" has already been defined as a data property."),
            vm
          );
        }
      }
      if (props && hasOwn(props, key)) {
        warn(
          "The data property \"" + key + "\" is already declared as a prop. " +
          "Use prop default value instead.",
          vm
        );
      } else if (!isReserved(key)) {
        proxy(vm, "_data", key);
      }
    }
    // observe data
    observe(data, true /* asRootData */);
  }

  function getData (data, vm) {
    // #7573 disable dep collection when invoking data getters
    pushTarget();
    try {
      return data.call(vm, vm)
    } catch (e) {
      handleError(e, vm, "data()");
      return {}
    } finally {
      popTarget();
    }
  }

  var computedWatcherOptions = { lazy: true };

  function initComputed (vm, computed) {
    // $flow-disable-line
    var watchers = vm._computedWatchers = Object.create(null);
    // computed properties are just getters during SSR
    var isSSR = isServerRendering();

    for (var key in computed) {
      var userDef = computed[key];
      var getter = typeof userDef === 'function' ? userDef : userDef.get;
      if (getter == null) {
        warn(
          ("Getter is missing for computed property \"" + key + "\"."),
          vm
        );
      }

      if (!isSSR) {
        // create internal watcher for the computed property.
        watchers[key] = new Watcher(
          vm,
          getter || noop,
          noop,
          computedWatcherOptions
        );
      }

      // component-defined computed properties are already defined on the
      // component prototype. We only need to define computed properties defined
      // at instantiation here.
      if (!(key in vm)) {
        defineComputed(vm, key, userDef);
      } else {
        if (key in vm.$data) {
          warn(("The computed property \"" + key + "\" is already defined in data."), vm);
        } else if (vm.$options.props && key in vm.$options.props) {
          warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
        }
      }
    }
  }

  function defineComputed (
    target,
    key,
    userDef
  ) {
    var shouldCache = !isServerRendering();
    if (typeof userDef === 'function') {
      sharedPropertyDefinition.get = shouldCache
        ? createComputedGetter(key)
        : createGetterInvoker(userDef);
      sharedPropertyDefinition.set = noop;
    } else {
      sharedPropertyDefinition.get = userDef.get
        ? shouldCache && userDef.cache !== false
          ? createComputedGetter(key)
          : createGetterInvoker(userDef.get)
        : noop;
      sharedPropertyDefinition.set = userDef.set || noop;
    }
    if (sharedPropertyDefinition.set === noop) {
      sharedPropertyDefinition.set = function () {
        warn(
          ("Computed property \"" + key + "\" was assigned to but it has no setter."),
          this
        );
      };
    }
    Object.defineProperty(target, key, sharedPropertyDefinition);
  }

  function createComputedGetter (key) {
    return function computedGetter () {
      var watcher = this._computedWatchers && this._computedWatchers[key];
      if (watcher) {
        if (watcher.dirty) {
          watcher.evaluate();
        }
        if (Dep.target) {
          watcher.depend();
        }
        return watcher.value
      }
    }
  }

  function createGetterInvoker(fn) {
    return function computedGetter () {
      return fn.call(this, this)
    }
  }

  function initMethods (vm, methods) {
    var props = vm.$options.props;
    for (var key in methods) {
      {
        if (typeof methods[key] !== 'function') {
          warn(
            "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
            "Did you reference the function correctly?",
            vm
          );
        }
        if (props && hasOwn(props, key)) {
          warn(
            ("Method \"" + key + "\" has already been defined as a prop."),
            vm
          );
        }
        if ((key in vm) && isReserved(key)) {
          warn(
            "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
            "Avoid defining component methods that start with _ or $."
          );
        }
      }
      vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
    }
  }

  function initWatch (vm, watch) {
    for (var key in watch) {
      var handler = watch[key];
      if (Array.isArray(handler)) {
        for (var i = 0; i < handler.length; i++) {
          createWatcher(vm, key, handler[i]);
        }
      } else {
        createWatcher(vm, key, handler);
      }
    }
  }

  function createWatcher (
    vm,
    expOrFn,
    handler,
    options
  ) {
    if (isPlainObject(handler)) {
      options = handler;
      handler = handler.handler;
    }
    if (typeof handler === 'string') {
      handler = vm[handler];
    }
    return vm.$watch(expOrFn, handler, options)
  }

  function stateMixin (Vue) {
    // flow somehow has problems with directly declared definition object
    // when using Object.defineProperty, so we have to procedurally build up
    // the object here.
    var dataDef = {};
    dataDef.get = function () { return this._data };
    var propsDef = {};
    propsDef.get = function () { return this._props };
    {
      dataDef.set = function () {
        warn(
          'Avoid replacing instance root $data. ' +
          'Use nested data properties instead.',
          this
        );
      };
      propsDef.set = function () {
        warn("$props is readonly.", this);
      };
    }
    Object.defineProperty(Vue.prototype, '$data', dataDef);
    Object.defineProperty(Vue.prototype, '$props', propsDef);

    Vue.prototype.$set = set;
    Vue.prototype.$delete = del;

    Vue.prototype.$watch = function (
      expOrFn,
      cb,
      options
    ) {
      var vm = this;
      if (isPlainObject(cb)) {
        return createWatcher(vm, expOrFn, cb, options)
      }
      options = options || {};
      options.user = true;
      var watcher = new Watcher(vm, expOrFn, cb, options);
      if (options.immediate) {
        try {
          cb.call(vm, watcher.value);
        } catch (error) {
          handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
        }
      }
      return function unwatchFn () {
        watcher.teardown();
      }
    };
  }

  /*  */

  var uid$3 = 0;

  function initMixin (Vue) {
    Vue.prototype._init = function (options) {
      var vm = this;
      // a uid
      vm._uid = uid$3++;

      var startTag, endTag;
      /* istanbul ignore if */
      if (config.performance && mark) {
        startTag = "vue-perf-start:" + (vm._uid);
        endTag = "vue-perf-end:" + (vm._uid);
        mark(startTag);
      }

      // a flag to avoid this being observed
      vm._isVue = true;
      // merge options
      if (options && options._isComponent) {
        // optimize internal component instantiation
        // since dynamic options merging is pretty slow, and none of the
        // internal component options needs special treatment.
        initInternalComponent(vm, options);
      } else {
        vm.$options = mergeOptions(
          resolveConstructorOptions(vm.constructor),
          options || {},
          vm
        );
      }
      /* istanbul ignore else */
      {
        initProxy(vm);
      }
      // expose real self
      vm._self = vm;
      initLifecycle(vm);
      initEvents(vm);
      initRender(vm);
      callHook(vm, 'beforeCreate');
      initInjections(vm); // resolve injections before data/props
      initState(vm);
      initProvide(vm); // resolve provide after data/props
      callHook(vm, 'created');

      /* istanbul ignore if */
      if (config.performance && mark) {
        vm._name = formatComponentName(vm, false);
        mark(endTag);
        measure(("vue " + (vm._name) + " init"), startTag, endTag);
      }

      if (vm.$options.el) {
        vm.$mount(vm.$options.el);
      }
    };
  }

  function initInternalComponent (vm, options) {
    var opts = vm.$options = Object.create(vm.constructor.options);
    // doing this because it's faster than dynamic enumeration.
    var parentVnode = options._parentVnode;
    opts.parent = options.parent;
    opts._parentVnode = parentVnode;

    var vnodeComponentOptions = parentVnode.componentOptions;
    opts.propsData = vnodeComponentOptions.propsData;
    opts._parentListeners = vnodeComponentOptions.listeners;
    opts._renderChildren = vnodeComponentOptions.children;
    opts._componentTag = vnodeComponentOptions.tag;

    if (options.render) {
      opts.render = options.render;
      opts.staticRenderFns = options.staticRenderFns;
    }
  }

  function resolveConstructorOptions (Ctor) {
    var options = Ctor.options;
    if (Ctor.super) {
      var superOptions = resolveConstructorOptions(Ctor.super);
      var cachedSuperOptions = Ctor.superOptions;
      if (superOptions !== cachedSuperOptions) {
        // super option changed,
        // need to resolve new options.
        Ctor.superOptions = superOptions;
        // check if there are any late-modified/attached options (#4976)
        var modifiedOptions = resolveModifiedOptions(Ctor);
        // update base extend options
        if (modifiedOptions) {
          extend(Ctor.extendOptions, modifiedOptions);
        }
        options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
        if (options.name) {
          options.components[options.name] = Ctor;
        }
      }
    }
    return options
  }

  function resolveModifiedOptions (Ctor) {
    var modified;
    var latest = Ctor.options;
    var sealed = Ctor.sealedOptions;
    for (var key in latest) {
      if (latest[key] !== sealed[key]) {
        if (!modified) { modified = {}; }
        modified[key] = latest[key];
      }
    }
    return modified
  }

  function Vue (options) {
    if (!(this instanceof Vue)
    ) {
      warn('Vue is a constructor and should be called with the `new` keyword');
    }
    this._init(options);
  }

  initMixin(Vue);
  stateMixin(Vue);
  eventsMixin(Vue);
  lifecycleMixin(Vue);
  renderMixin(Vue);

  /*  */

  function initUse (Vue) {
    Vue.use = function (plugin) {
      var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
      if (installedPlugins.indexOf(plugin) > -1) {
        return this
      }

      // additional parameters
      var args = toArray(arguments, 1);
      args.unshift(this);
      if (typeof plugin.install === 'function') {
        plugin.install.apply(plugin, args);
      } else if (typeof plugin === 'function') {
        plugin.apply(null, args);
      }
      installedPlugins.push(plugin);
      return this
    };
  }

  /*  */

  function initMixin$1 (Vue) {
    Vue.mixin = function (mixin) {
      this.options = mergeOptions(this.options, mixin);
      return this
    };
  }

  /*  */

  function initExtend (Vue) {
    /**
     * Each instance constructor, including Vue, has a unique
     * cid. This enables us to create wrapped "child
     * constructors" for prototypal inheritance and cache them.
     */
    Vue.cid = 0;
    var cid = 1;

    /**
     * Class inheritance
     */
    Vue.extend = function (extendOptions) {
      extendOptions = extendOptions || {};
      var Super = this;
      var SuperId = Super.cid;
      var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
      if (cachedCtors[SuperId]) {
        return cachedCtors[SuperId]
      }

      var name = extendOptions.name || Super.options.name;
      if (name) {
        validateComponentName(name);
      }

      var Sub = function VueComponent (options) {
        this._init(options);
      };
      Sub.prototype = Object.create(Super.prototype);
      Sub.prototype.constructor = Sub;
      Sub.cid = cid++;
      Sub.options = mergeOptions(
        Super.options,
        extendOptions
      );
      Sub['super'] = Super;

      // For props and computed properties, we define the proxy getters on
      // the Vue instances at extension time, on the extended prototype. This
      // avoids Object.defineProperty calls for each instance created.
      if (Sub.options.props) {
        initProps$1(Sub);
      }
      if (Sub.options.computed) {
        initComputed$1(Sub);
      }

      // allow further extension/mixin/plugin usage
      Sub.extend = Super.extend;
      Sub.mixin = Super.mixin;
      Sub.use = Super.use;

      // create asset registers, so extended classes
      // can have their private assets too.
      ASSET_TYPES.forEach(function (type) {
        Sub[type] = Super[type];
      });
      // enable recursive self-lookup
      if (name) {
        Sub.options.components[name] = Sub;
      }

      // keep a reference to the super options at extension time.
      // later at instantiation we can check if Super's options have
      // been updated.
      Sub.superOptions = Super.options;
      Sub.extendOptions = extendOptions;
      Sub.sealedOptions = extend({}, Sub.options);

      // cache constructor
      cachedCtors[SuperId] = Sub;
      return Sub
    };
  }

  function initProps$1 (Comp) {
    var props = Comp.options.props;
    for (var key in props) {
      proxy(Comp.prototype, "_props", key);
    }
  }

  function initComputed$1 (Comp) {
    var computed = Comp.options.computed;
    for (var key in computed) {
      defineComputed(Comp.prototype, key, computed[key]);
    }
  }

  /*  */

  function initAssetRegisters (Vue) {
    /**
     * Create asset registration methods.
     */
    ASSET_TYPES.forEach(function (type) {
      Vue[type] = function (
        id,
        definition
      ) {
        if (!definition) {
          return this.options[type + 's'][id]
        } else {
          /* istanbul ignore if */
          if (type === 'component') {
            validateComponentName(id);
          }
          if (type === 'component' && isPlainObject(definition)) {
            definition.name = definition.name || id;
            definition = this.options._base.extend(definition);
          }
          if (type === 'directive' && typeof definition === 'function') {
            definition = { bind: definition, update: definition };
          }
          this.options[type + 's'][id] = definition;
          return definition
        }
      };
    });
  }

  /*  */



  function getComponentName (opts) {
    return opts && (opts.Ctor.options.name || opts.tag)
  }

  function matches (pattern, name) {
    if (Array.isArray(pattern)) {
      return pattern.indexOf(name) > -1
    } else if (typeof pattern === 'string') {
      return pattern.split(',').indexOf(name) > -1
    } else if (isRegExp(pattern)) {
      return pattern.test(name)
    }
    /* istanbul ignore next */
    return false
  }

  function pruneCache (keepAliveInstance, filter) {
    var cache = keepAliveInstance.cache;
    var keys = keepAliveInstance.keys;
    var _vnode = keepAliveInstance._vnode;
    for (var key in cache) {
      var cachedNode = cache[key];
      if (cachedNode) {
        var name = getComponentName(cachedNode.componentOptions);
        if (name && !filter(name)) {
          pruneCacheEntry(cache, key, keys, _vnode);
        }
      }
    }
  }

  function pruneCacheEntry (
    cache,
    key,
    keys,
    current
  ) {
    var cached$$1 = cache[key];
    if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
      cached$$1.componentInstance.$destroy();
    }
    cache[key] = null;
    remove(keys, key);
  }

  var patternTypes = [String, RegExp, Array];

  var KeepAlive = {
    name: 'keep-alive',
    abstract: true,

    props: {
      include: patternTypes,
      exclude: patternTypes,
      max: [String, Number]
    },

    created: function created () {
      this.cache = Object.create(null);
      this.keys = [];
    },

    destroyed: function destroyed () {
      for (var key in this.cache) {
        pruneCacheEntry(this.cache, key, this.keys);
      }
    },

    mounted: function mounted () {
      var this$1 = this;

      this.$watch('include', function (val) {
        pruneCache(this$1, function (name) { return matches(val, name); });
      });
      this.$watch('exclude', function (val) {
        pruneCache(this$1, function (name) { return !matches(val, name); });
      });
    },

    render: function render () {
      var slot = this.$slots.default;
      var vnode = getFirstComponentChild(slot);
      var componentOptions = vnode && vnode.componentOptions;
      if (componentOptions) {
        // check pattern
        var name = getComponentName(componentOptions);
        var ref = this;
        var include = ref.include;
        var exclude = ref.exclude;
        if (
          // not included
          (include && (!name || !matches(include, name))) ||
          // excluded
          (exclude && name && matches(exclude, name))
        ) {
          return vnode
        }

        var ref$1 = this;
        var cache = ref$1.cache;
        var keys = ref$1.keys;
        var key = vnode.key == null
          // same constructor may get registered as different local components
          // so cid alone is not enough (#3269)
          ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
          : vnode.key;
        if (cache[key]) {
          vnode.componentInstance = cache[key].componentInstance;
          // make current key freshest
          remove(keys, key);
          keys.push(key);
        } else {
          cache[key] = vnode;
          keys.push(key);
          // prune oldest entry
          if (this.max && keys.length > parseInt(this.max)) {
            pruneCacheEntry(cache, keys[0], keys, this._vnode);
          }
        }

        vnode.data.keepAlive = true;
      }
      return vnode || (slot && slot[0])
    }
  };

  var builtInComponents = {
    KeepAlive: KeepAlive
  };

  /*  */

  function initGlobalAPI (Vue) {
    // config
    var configDef = {};
    configDef.get = function () { return config; };
    {
      configDef.set = function () {
        warn(
          'Do not replace the Vue.config object, set individual fields instead.'
        );
      };
    }
    Object.defineProperty(Vue, 'config', configDef);

    // exposed util methods.
    // NOTE: these are not considered part of the public API - avoid relying on
    // them unless you are aware of the risk.
    Vue.util = {
      warn: warn,
      extend: extend,
      mergeOptions: mergeOptions,
      defineReactive: defineReactive$$1
    };

    Vue.set = set;
    Vue.delete = del;
    Vue.nextTick = nextTick;

    // 2.6 explicit observable API
    Vue.observable = function (obj) {
      observe(obj);
      return obj
    };

    Vue.options = Object.create(null);
    ASSET_TYPES.forEach(function (type) {
      Vue.options[type + 's'] = Object.create(null);
    });

    // this is used to identify the "base" constructor to extend all plain-object
    // components with in Weex's multi-instance scenarios.
    Vue.options._base = Vue;

    extend(Vue.options.components, builtInComponents);

    initUse(Vue);
    initMixin$1(Vue);
    initExtend(Vue);
    initAssetRegisters(Vue);
  }

  initGlobalAPI(Vue);

  Object.defineProperty(Vue.prototype, '$isServer', {
    get: isServerRendering
  });

  Object.defineProperty(Vue.prototype, '$ssrContext', {
    get: function get () {
      /* istanbul ignore next */
      return this.$vnode && this.$vnode.ssrContext
    }
  });

  // expose FunctionalRenderContext for ssr runtime helper installation
  Object.defineProperty(Vue, 'FunctionalRenderContext', {
    value: FunctionalRenderContext
  });

  Vue.version = '2.6.11';

  /*  */

  // these are reserved for web because they are directly compiled away
  // during template compilation
  var isReservedAttr = makeMap('style,class');

  // attributes that should be using props for binding
  var acceptValue = makeMap('input,textarea,option,select,progress');
  var mustUseProp = function (tag, type, attr) {
    return (
      (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
      (attr === 'selected' && tag === 'option') ||
      (attr === 'checked' && tag === 'input') ||
      (attr === 'muted' && tag === 'video')
    )
  };

  var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

  var isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');

  var convertEnumeratedValue = function (key, value) {
    return isFalsyAttrValue(value) || value === 'false'
      ? 'false'
      // allow arbitrary string value for contenteditable
      : key === 'contenteditable' && isValidContentEditableValue(value)
        ? value
        : 'true'
  };

  var isBooleanAttr = makeMap(
    'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
    'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
    'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
    'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
    'required,reversed,scoped,seamless,selected,sortable,translate,' +
    'truespeed,typemustmatch,visible'
  );

  var xlinkNS = 'http://www.w3.org/1999/xlink';

  var isXlink = function (name) {
    return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
  };

  var getXlinkProp = function (name) {
    return isXlink(name) ? name.slice(6, name.length) : ''
  };

  var isFalsyAttrValue = function (val) {
    return val == null || val === false
  };

  /*  */

  function genClassForVnode (vnode) {
    var data = vnode.data;
    var parentNode = vnode;
    var childNode = vnode;
    while (isDef(childNode.componentInstance)) {
      childNode = childNode.componentInstance._vnode;
      if (childNode && childNode.data) {
        data = mergeClassData(childNode.data, data);
      }
    }
    while (isDef(parentNode = parentNode.parent)) {
      if (parentNode && parentNode.data) {
        data = mergeClassData(data, parentNode.data);
      }
    }
    return renderClass(data.staticClass, data.class)
  }

  function mergeClassData (child, parent) {
    return {
      staticClass: concat(child.staticClass, parent.staticClass),
      class: isDef(child.class)
        ? [child.class, parent.class]
        : parent.class
    }
  }

  function renderClass (
    staticClass,
    dynamicClass
  ) {
    if (isDef(staticClass) || isDef(dynamicClass)) {
      return concat(staticClass, stringifyClass(dynamicClass))
    }
    /* istanbul ignore next */
    return ''
  }

  function concat (a, b) {
    return a ? b ? (a + ' ' + b) : a : (b || '')
  }

  function stringifyClass (value) {
    if (Array.isArray(value)) {
      return stringifyArray(value)
    }
    if (isObject(value)) {
      return stringifyObject(value)
    }
    if (typeof value === 'string') {
      return value
    }
    /* istanbul ignore next */
    return ''
  }

  function stringifyArray (value) {
    var res = '';
    var stringified;
    for (var i = 0, l = value.length; i < l; i++) {
      if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
        if (res) { res += ' '; }
        res += stringified;
      }
    }
    return res
  }

  function stringifyObject (value) {
    var res = '';
    for (var key in value) {
      if (value[key]) {
        if (res) { res += ' '; }
        res += key;
      }
    }
    return res
  }

  /*  */

  var namespaceMap = {
    svg: 'http://www.w3.org/2000/svg',
    math: 'http://www.w3.org/1998/Math/MathML'
  };

  var isHTMLTag = makeMap(
    'html,body,base,head,link,meta,style,title,' +
    'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
    'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
    'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
    's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
    'embed,object,param,source,canvas,script,noscript,del,ins,' +
    'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
    'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
    'output,progress,select,textarea,' +
    'details,dialog,menu,menuitem,summary,' +
    'content,element,shadow,template,blockquote,iframe,tfoot'
  );

  // this map is intentionally selective, only covering SVG elements that may
  // contain child elements.
  var isSVG = makeMap(
    'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
    'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
    'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
    true
  );

  var isPreTag = function (tag) { return tag === 'pre'; };

  var isReservedTag = function (tag) {
    return isHTMLTag(tag) || isSVG(tag)
  };

  function getTagNamespace (tag) {
    if (isSVG(tag)) {
      return 'svg'
    }
    // basic support for MathML
    // note it doesn't support other MathML elements being component roots
    if (tag === 'math') {
      return 'math'
    }
  }

  var unknownElementCache = Object.create(null);
  function isUnknownElement (tag) {
    /* istanbul ignore if */
    if (!inBrowser) {
      return true
    }
    if (isReservedTag(tag)) {
      return false
    }
    tag = tag.toLowerCase();
    /* istanbul ignore if */
    if (unknownElementCache[tag] != null) {
      return unknownElementCache[tag]
    }
    var el = document.createElement(tag);
    if (tag.indexOf('-') > -1) {
      // http://stackoverflow.com/a/28210364/1070244
      return (unknownElementCache[tag] = (
        el.constructor === window.HTMLUnknownElement ||
        el.constructor === window.HTMLElement
      ))
    } else {
      return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
    }
  }

  var isTextInputType = makeMap('text,number,password,search,email,tel,url');

  /*  */

  /**
   * Query an element selector if it's not an element already.
   */
  function query (el) {
    if (typeof el === 'string') {
      var selected = document.querySelector(el);
      if (!selected) {
        warn(
          'Cannot find element: ' + el
        );
        return document.createElement('div')
      }
      return selected
    } else {
      return el
    }
  }

  /*  */

  function createElement$1 (tagName, vnode) {
    var elm = document.createElement(tagName);
    if (tagName !== 'select') {
      return elm
    }
    // false or null will remove the attribute but undefined will not
    if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
      elm.setAttribute('multiple', 'multiple');
    }
    return elm
  }

  function createElementNS (namespace, tagName) {
    return document.createElementNS(namespaceMap[namespace], tagName)
  }

  function createTextNode (text) {
    return document.createTextNode(text)
  }

  function createComment (text) {
    return document.createComment(text)
  }

  function insertBefore (parentNode, newNode, referenceNode) {
    parentNode.insertBefore(newNode, referenceNode);
  }

  function removeChild (node, child) {
    node.removeChild(child);
  }

  function appendChild (node, child) {
    node.appendChild(child);
  }

  function parentNode (node) {
    return node.parentNode
  }

  function nextSibling (node) {
    return node.nextSibling
  }

  function tagName (node) {
    return node.tagName
  }

  function setTextContent (node, text) {
    node.textContent = text;
  }

  function setStyleScope (node, scopeId) {
    node.setAttribute(scopeId, '');
  }

  var nodeOps = /*#__PURE__*/Object.freeze({
    createElement: createElement$1,
    createElementNS: createElementNS,
    createTextNode: createTextNode,
    createComment: createComment,
    insertBefore: insertBefore,
    removeChild: removeChild,
    appendChild: appendChild,
    parentNode: parentNode,
    nextSibling: nextSibling,
    tagName: tagName,
    setTextContent: setTextContent,
    setStyleScope: setStyleScope
  });

  /*  */

  var ref = {
    create: function create (_, vnode) {
      registerRef(vnode);
    },
    update: function update (oldVnode, vnode) {
      if (oldVnode.data.ref !== vnode.data.ref) {
        registerRef(oldVnode, true);
        registerRef(vnode);
      }
    },
    destroy: function destroy (vnode) {
      registerRef(vnode, true);
    }
  };

  function registerRef (vnode, isRemoval) {
    var key = vnode.data.ref;
    if (!isDef(key)) { return }

    var vm = vnode.context;
    var ref = vnode.componentInstance || vnode.elm;
    var refs = vm.$refs;
    if (isRemoval) {
      if (Array.isArray(refs[key])) {
        remove(refs[key], ref);
      } else if (refs[key] === ref) {
        refs[key] = undefined;
      }
    } else {
      if (vnode.data.refInFor) {
        if (!Array.isArray(refs[key])) {
          refs[key] = [ref];
        } else if (refs[key].indexOf(ref) < 0) {
          // $flow-disable-line
          refs[key].push(ref);
        }
      } else {
        refs[key] = ref;
      }
    }
  }

  /**
   * Virtual DOM patching algorithm based on Snabbdom by
   * Simon Friis Vindum (@paldepind)
   * Licensed under the MIT License
   * https://github.com/paldepind/snabbdom/blob/master/LICENSE
   *
   * modified by Evan You (@yyx990803)
   *
   * Not type-checking this because this file is perf-critical and the cost
   * of making flow understand it is not worth it.
   */

  var emptyNode = new VNode('', {}, []);

  var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

  function sameVnode (a, b) {
    return (
      a.key === b.key && (
        (
          a.tag === b.tag &&
          a.isComment === b.isComment &&
          isDef(a.data) === isDef(b.data) &&
          sameInputType(a, b)
        ) || (
          isTrue(a.isAsyncPlaceholder) &&
          a.asyncFactory === b.asyncFactory &&
          isUndef(b.asyncFactory.error)
        )
      )
    )
  }

  function sameInputType (a, b) {
    if (a.tag !== 'input') { return true }
    var i;
    var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
    var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
    return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
  }

  function createKeyToOldIdx (children, beginIdx, endIdx) {
    var i, key;
    var map = {};
    for (i = beginIdx; i <= endIdx; ++i) {
      key = children[i].key;
      if (isDef(key)) { map[key] = i; }
    }
    return map
  }

  function createPatchFunction (backend) {
    var i, j;
    var cbs = {};

    var modules = backend.modules;
    var nodeOps = backend.nodeOps;

    for (i = 0; i < hooks.length; ++i) {
      cbs[hooks[i]] = [];
      for (j = 0; j < modules.length; ++j) {
        if (isDef(modules[j][hooks[i]])) {
          cbs[hooks[i]].push(modules[j][hooks[i]]);
        }
      }
    }

    function emptyNodeAt (elm) {
      return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
    }

    function createRmCb (childElm, listeners) {
      function remove$$1 () {
        if (--remove$$1.listeners === 0) {
          removeNode(childElm);
        }
      }
      remove$$1.listeners = listeners;
      return remove$$1
    }

    function removeNode (el) {
      var parent = nodeOps.parentNode(el);
      // element may have already been removed due to v-html / v-text
      if (isDef(parent)) {
        nodeOps.removeChild(parent, el);
      }
    }

    function isUnknownElement$$1 (vnode, inVPre) {
      return (
        !inVPre &&
        !vnode.ns &&
        !(
          config.ignoredElements.length &&
          config.ignoredElements.some(function (ignore) {
            return isRegExp(ignore)
              ? ignore.test(vnode.tag)
              : ignore === vnode.tag
          })
        ) &&
        config.isUnknownElement(vnode.tag)
      )
    }

    var creatingElmInVPre = 0;

    function createElm (
      vnode,
      insertedVnodeQueue,
      parentElm,
      refElm,
      nested,
      ownerArray,
      index
    ) {
      if (isDef(vnode.elm) && isDef(ownerArray)) {
        // This vnode was used in a previous render!
        // now it's used as a new node, overwriting its elm would cause
        // potential patch errors down the road when it's used as an insertion
        // reference node. Instead, we clone the node on-demand before creating
        // associated DOM element for it.
        vnode = ownerArray[index] = cloneVNode(vnode);
      }

      vnode.isRootInsert = !nested; // for transition enter check
      if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
        return
      }

      var data = vnode.data;
      var children = vnode.children;
      var tag = vnode.tag;
      if (isDef(tag)) {
        {
          if (data && data.pre) {
            creatingElmInVPre++;
          }
          if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
            warn(
              'Unknown custom element: <' + tag + '> - did you ' +
              'register the component correctly? For recursive components, ' +
              'make sure to provide the "name" option.',
              vnode.context
            );
          }
        }

        vnode.elm = vnode.ns
          ? nodeOps.createElementNS(vnode.ns, tag)
          : nodeOps.createElement(tag, vnode);
        setScope(vnode);

        /* istanbul ignore if */
        {
          createChildren(vnode, children, insertedVnodeQueue);
          if (isDef(data)) {
            invokeCreateHooks(vnode, insertedVnodeQueue);
          }
          insert(parentElm, vnode.elm, refElm);
        }

        if (data && data.pre) {
          creatingElmInVPre--;
        }
      } else if (isTrue(vnode.isComment)) {
        vnode.elm = nodeOps.createComment(vnode.text);
        insert(parentElm, vnode.elm, refElm);
      } else {
        vnode.elm = nodeOps.createTextNode(vnode.text);
        insert(parentElm, vnode.elm, refElm);
      }
    }

    function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
      var i = vnode.data;
      if (isDef(i)) {
        var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
        if (isDef(i = i.hook) && isDef(i = i.init)) {
          i(vnode, false /* hydrating */);
        }
        // after calling the init hook, if the vnode is a child component
        // it should've created a child instance and mounted it. the child
        // component also has set the placeholder vnode's elm.
        // in that case we can just return the element and be done.
        if (isDef(vnode.componentInstance)) {
          initComponent(vnode, insertedVnodeQueue);
          insert(parentElm, vnode.elm, refElm);
          if (isTrue(isReactivated)) {
            reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
          }
          return true
        }
      }
    }

    function initComponent (vnode, insertedVnodeQueue) {
      if (isDef(vnode.data.pendingInsert)) {
        insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
        vnode.data.pendingInsert = null;
      }
      vnode.elm = vnode.componentInstance.$el;
      if (isPatchable(vnode)) {
        invokeCreateHooks(vnode, insertedVnodeQueue);
        setScope(vnode);
      } else {
        // empty component root.
        // skip all element-related modules except for ref (#3455)
        registerRef(vnode);
        // make sure to invoke the insert hook
        insertedVnodeQueue.push(vnode);
      }
    }

    function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
      var i;
      // hack for #4339: a reactivated component with inner transition
      // does not trigger because the inner node's created hooks are not called
      // again. It's not ideal to involve module-specific logic in here but
      // there doesn't seem to be a better way to do it.
      var innerNode = vnode;
      while (innerNode.componentInstance) {
        innerNode = innerNode.componentInstance._vnode;
        if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
          for (i = 0; i < cbs.activate.length; ++i) {
            cbs.activate[i](emptyNode, innerNode);
          }
          insertedVnodeQueue.push(innerNode);
          break
        }
      }
      // unlike a newly created component,
      // a reactivated keep-alive component doesn't insert itself
      insert(parentElm, vnode.elm, refElm);
    }

    function insert (parent, elm, ref$$1) {
      if (isDef(parent)) {
        if (isDef(ref$$1)) {
          if (nodeOps.parentNode(ref$$1) === parent) {
            nodeOps.insertBefore(parent, elm, ref$$1);
          }
        } else {
          nodeOps.appendChild(parent, elm);
        }
      }
    }

    function createChildren (vnode, children, insertedVnodeQueue) {
      if (Array.isArray(children)) {
        {
          checkDuplicateKeys(children);
        }
        for (var i = 0; i < children.length; ++i) {
          createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
        }
      } else if (isPrimitive(vnode.text)) {
        nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
      }
    }

    function isPatchable (vnode) {
      while (vnode.componentInstance) {
        vnode = vnode.componentInstance._vnode;
      }
      return isDef(vnode.tag)
    }

    function invokeCreateHooks (vnode, insertedVnodeQueue) {
      for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
        cbs.create[i$1](emptyNode, vnode);
      }
      i = vnode.data.hook; // Reuse variable
      if (isDef(i)) {
        if (isDef(i.create)) { i.create(emptyNode, vnode); }
        if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
      }
    }

    // set scope id attribute for scoped CSS.
    // this is implemented as a special case to avoid the overhead
    // of going through the normal attribute patching process.
    function setScope (vnode) {
      var i;
      if (isDef(i = vnode.fnScopeId)) {
        nodeOps.setStyleScope(vnode.elm, i);
      } else {
        var ancestor = vnode;
        while (ancestor) {
          if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
            nodeOps.setStyleScope(vnode.elm, i);
          }
          ancestor = ancestor.parent;
        }
      }
      // for slot content they should also get the scopeId from the host instance.
      if (isDef(i = activeInstance) &&
        i !== vnode.context &&
        i !== vnode.fnContext &&
        isDef(i = i.$options._scopeId)
      ) {
        nodeOps.setStyleScope(vnode.elm, i);
      }
    }

    function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
      for (; startIdx <= endIdx; ++startIdx) {
        createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
      }
    }

    function invokeDestroyHook (vnode) {
      var i, j;
      var data = vnode.data;
      if (isDef(data)) {
        if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
        for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
      }
      if (isDef(i = vnode.children)) {
        for (j = 0; j < vnode.children.length; ++j) {
          invokeDestroyHook(vnode.children[j]);
        }
      }
    }

    function removeVnodes (vnodes, startIdx, endIdx) {
      for (; startIdx <= endIdx; ++startIdx) {
        var ch = vnodes[startIdx];
        if (isDef(ch)) {
          if (isDef(ch.tag)) {
            removeAndInvokeRemoveHook(ch);
            invokeDestroyHook(ch);
          } else { // Text node
            removeNode(ch.elm);
          }
        }
      }
    }

    function removeAndInvokeRemoveHook (vnode, rm) {
      if (isDef(rm) || isDef(vnode.data)) {
        var i;
        var listeners = cbs.remove.length + 1;
        if (isDef(rm)) {
          // we have a recursively passed down rm callback
          // increase the listeners count
          rm.listeners += listeners;
        } else {
          // directly removing
          rm = createRmCb(vnode.elm, listeners);
        }
        // recursively invoke hooks on child component root node
        if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
          removeAndInvokeRemoveHook(i, rm);
        }
        for (i = 0; i < cbs.remove.length; ++i) {
          cbs.remove[i](vnode, rm);
        }
        if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
          i(vnode, rm);
        } else {
          rm();
        }
      } else {
        removeNode(vnode.elm);
      }
    }

    function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
      var oldStartIdx = 0;
      var newStartIdx = 0;
      var oldEndIdx = oldCh.length - 1;
      var oldStartVnode = oldCh[0];
      var oldEndVnode = oldCh[oldEndIdx];
      var newEndIdx = newCh.length - 1;
      var newStartVnode = newCh[0];
      var newEndVnode = newCh[newEndIdx];
      var oldKeyToIdx, idxInOld, vnodeToMove, refElm;

      // removeOnly is a special flag used only by <transition-group>
      // to ensure removed elements stay in correct relative positions
      // during leaving transitions
      var canMove = !removeOnly;

      {
        checkDuplicateKeys(newCh);
      }

      while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
        if (isUndef(oldStartVnode)) {
          oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
        } else if (isUndef(oldEndVnode)) {
          oldEndVnode = oldCh[--oldEndIdx];
        } else if (sameVnode(oldStartVnode, newStartVnode)) {
          patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
          oldStartVnode = oldCh[++oldStartIdx];
          newStartVnode = newCh[++newStartIdx];
        } else if (sameVnode(oldEndVnode, newEndVnode)) {
          patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
          oldEndVnode = oldCh[--oldEndIdx];
          newEndVnode = newCh[--newEndIdx];
        } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
          patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
          canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
          oldStartVnode = oldCh[++oldStartIdx];
          newEndVnode = newCh[--newEndIdx];
        } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
          patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
          canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
          oldEndVnode = oldCh[--oldEndIdx];
          newStartVnode = newCh[++newStartIdx];
        } else {
          if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
          idxInOld = isDef(newStartVnode.key)
            ? oldKeyToIdx[newStartVnode.key]
            : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
          if (isUndef(idxInOld)) { // New element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
          } else {
            vnodeToMove = oldCh[idxInOld];
            if (sameVnode(vnodeToMove, newStartVnode)) {
              patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
              oldCh[idxInOld] = undefined;
              canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
            } else {
              // same key but different element. treat as new element
              createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
            }
          }
          newStartVnode = newCh[++newStartIdx];
        }
      }
      if (oldStartIdx > oldEndIdx) {
        refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
        addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
      } else if (newStartIdx > newEndIdx) {
        removeVnodes(oldCh, oldStartIdx, oldEndIdx);
      }
    }

    function checkDuplicateKeys (children) {
      var seenKeys = {};
      for (var i = 0; i < children.length; i++) {
        var vnode = children[i];
        var key = vnode.key;
        if (isDef(key)) {
          if (seenKeys[key]) {
            warn(
              ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
              vnode.context
            );
          } else {
            seenKeys[key] = true;
          }
        }
      }
    }

    function findIdxInOld (node, oldCh, start, end) {
      for (var i = start; i < end; i++) {
        var c = oldCh[i];
        if (isDef(c) && sameVnode(node, c)) { return i }
      }
    }

    function patchVnode (
      oldVnode,
      vnode,
      insertedVnodeQueue,
      ownerArray,
      index,
      removeOnly
    ) {
      if (oldVnode === vnode) {
        return
      }

      if (isDef(vnode.elm) && isDef(ownerArray)) {
        // clone reused vnode
        vnode = ownerArray[index] = cloneVNode(vnode);
      }

      var elm = vnode.elm = oldVnode.elm;

      if (isTrue(oldVnode.isAsyncPlaceholder)) {
        if (isDef(vnode.asyncFactory.resolved)) {
          hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
        } else {
          vnode.isAsyncPlaceholder = true;
        }
        return
      }

      // reuse element for static trees.
      // note we only do this if the vnode is cloned -
      // if the new node is not cloned it means the render functions have been
      // reset by the hot-reload-api and we need to do a proper re-render.
      if (isTrue(vnode.isStatic) &&
        isTrue(oldVnode.isStatic) &&
        vnode.key === oldVnode.key &&
        (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
      ) {
        vnode.componentInstance = oldVnode.componentInstance;
        return
      }

      var i;
      var data = vnode.data;
      if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
        i(oldVnode, vnode);
      }

      var oldCh = oldVnode.children;
      var ch = vnode.children;
      if (isDef(data) && isPatchable(vnode)) {
        for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
        if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
      }
      if (isUndef(vnode.text)) {
        if (isDef(oldCh) && isDef(ch)) {
          if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
        } else if (isDef(ch)) {
          {
            checkDuplicateKeys(ch);
          }
          if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
          addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
        } else if (isDef(oldCh)) {
          removeVnodes(oldCh, 0, oldCh.length - 1);
        } else if (isDef(oldVnode.text)) {
          nodeOps.setTextContent(elm, '');
        }
      } else if (oldVnode.text !== vnode.text) {
        nodeOps.setTextContent(elm, vnode.text);
      }
      if (isDef(data)) {
        if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
      }
    }

    function invokeInsertHook (vnode, queue, initial) {
      // delay insert hooks for component root nodes, invoke them after the
      // element is really inserted
      if (isTrue(initial) && isDef(vnode.parent)) {
        vnode.parent.data.pendingInsert = queue;
      } else {
        for (var i = 0; i < queue.length; ++i) {
          queue[i].data.hook.insert(queue[i]);
        }
      }
    }

    var hydrationBailed = false;
    // list of modules that can skip create hook during hydration because they
    // are already rendered on the client or has no need for initialization
    // Note: style is excluded because it relies on initial clone for future
    // deep updates (#7063).
    var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');

    // Note: this is a browser-only function so we can assume elms are DOM nodes.
    function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {
      var i;
      var tag = vnode.tag;
      var data = vnode.data;
      var children = vnode.children;
      inVPre = inVPre || (data && data.pre);
      vnode.elm = elm;

      if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
        vnode.isAsyncPlaceholder = true;
        return true
      }
      // assert node match
      {
        if (!assertNodeMatch(elm, vnode, inVPre)) {
          return false
        }
      }
      if (isDef(data)) {
        if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
        if (isDef(i = vnode.componentInstance)) {
          // child component. it should have hydrated its own tree.
          initComponent(vnode, insertedVnodeQueue);
          return true
        }
      }
      if (isDef(tag)) {
        if (isDef(children)) {
          // empty element, allow client to pick up and populate children
          if (!elm.hasChildNodes()) {
            createChildren(vnode, children, insertedVnodeQueue);
          } else {
            // v-html and domProps: innerHTML
            if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
              if (i !== elm.innerHTML) {
                /* istanbul ignore if */
                if (typeof console !== 'undefined' &&
                  !hydrationBailed
                ) {
                  hydrationBailed = true;
                  console.warn('Parent: ', elm);
                  console.warn('server innerHTML: ', i);
                  console.warn('client innerHTML: ', elm.innerHTML);
                }
                return false
              }
            } else {
              // iterate and compare children lists
              var childrenMatch = true;
              var childNode = elm.firstChild;
              for (var i$1 = 0; i$1 < children.length; i$1++) {
                if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                  childrenMatch = false;
                  break
                }
                childNode = childNode.nextSibling;
              }
              // if childNode is not null, it means the actual childNodes list is
              // longer than the virtual children list.
              if (!childrenMatch || childNode) {
                /* istanbul ignore if */
                if (typeof console !== 'undefined' &&
                  !hydrationBailed
                ) {
                  hydrationBailed = true;
                  console.warn('Parent: ', elm);
                  console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
                }
                return false
              }
            }
          }
        }
        if (isDef(data)) {
          var fullInvoke = false;
          for (var key in data) {
            if (!isRenderedModule(key)) {
              fullInvoke = true;
              invokeCreateHooks(vnode, insertedVnodeQueue);
              break
            }
          }
          if (!fullInvoke && data['class']) {
            // ensure collecting deps for deep class bindings for future updates
            traverse(data['class']);
          }
        }
      } else if (elm.data !== vnode.text) {
        elm.data = vnode.text;
      }
      return true
    }

    function assertNodeMatch (node, vnode, inVPre) {
      if (isDef(vnode.tag)) {
        return vnode.tag.indexOf('vue-component') === 0 || (
          !isUnknownElement$$1(vnode, inVPre) &&
          vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
        )
      } else {
        return node.nodeType === (vnode.isComment ? 8 : 3)
      }
    }

    return function patch (oldVnode, vnode, hydrating, removeOnly) {
      if (isUndef(vnode)) {
        if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
        return
      }

      var isInitialPatch = false;
      var insertedVnodeQueue = [];

      if (isUndef(oldVnode)) {
        // empty mount (likely as component), create new root element
        isInitialPatch = true;
        createElm(vnode, insertedVnodeQueue);
      } else {
        var isRealElement = isDef(oldVnode.nodeType);
        if (!isRealElement && sameVnode(oldVnode, vnode)) {
          // patch existing root node
          patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);
        } else {
          if (isRealElement) {
            // mounting to a real element
            // check if this is server-rendered content and if we can perform
            // a successful hydration.
            if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
              oldVnode.removeAttribute(SSR_ATTR);
              hydrating = true;
            }
            if (isTrue(hydrating)) {
              if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
                invokeInsertHook(vnode, insertedVnodeQueue, true);
                return oldVnode
              } else {
                warn(
                  'The client-side rendered virtual DOM tree is not matching ' +
                  'server-rendered content. This is likely caused by incorrect ' +
                  'HTML markup, for example nesting block-level elements inside ' +
                  '<p>, or missing <tbody>. Bailing hydration and performing ' +
                  'full client-side render.'
                );
              }
            }
            // either not server-rendered, or hydration failed.
            // create an empty node and replace it
            oldVnode = emptyNodeAt(oldVnode);
          }

          // replacing existing element
          var oldElm = oldVnode.elm;
          var parentElm = nodeOps.parentNode(oldElm);

          // create new node
          createElm(
            vnode,
            insertedVnodeQueue,
            // extremely rare edge case: do not insert if old element is in a
            // leaving transition. Only happens when combining transition +
            // keep-alive + HOCs. (#4590)
            oldElm._leaveCb ? null : parentElm,
            nodeOps.nextSibling(oldElm)
          );

          // update parent placeholder node element, recursively
          if (isDef(vnode.parent)) {
            var ancestor = vnode.parent;
            var patchable = isPatchable(vnode);
            while (ancestor) {
              for (var i = 0; i < cbs.destroy.length; ++i) {
                cbs.destroy[i](ancestor);
              }
              ancestor.elm = vnode.elm;
              if (patchable) {
                for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                  cbs.create[i$1](emptyNode, ancestor);
                }
                // #6513
                // invoke insert hooks that may have been merged by create hooks.
                // e.g. for directives that uses the "inserted" hook.
                var insert = ancestor.data.hook.insert;
                if (insert.merged) {
                  // start at index 1 to avoid re-invoking component mounted hook
                  for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                    insert.fns[i$2]();
                  }
                }
              } else {
                registerRef(ancestor);
              }
              ancestor = ancestor.parent;
            }
          }

          // destroy old node
          if (isDef(parentElm)) {
            removeVnodes([oldVnode], 0, 0);
          } else if (isDef(oldVnode.tag)) {
            invokeDestroyHook(oldVnode);
          }
        }
      }

      invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
      return vnode.elm
    }
  }

  /*  */

  var directives = {
    create: updateDirectives,
    update: updateDirectives,
    destroy: function unbindDirectives (vnode) {
      updateDirectives(vnode, emptyNode);
    }
  };

  function updateDirectives (oldVnode, vnode) {
    if (oldVnode.data.directives || vnode.data.directives) {
      _update(oldVnode, vnode);
    }
  }

  function _update (oldVnode, vnode) {
    var isCreate = oldVnode === emptyNode;
    var isDestroy = vnode === emptyNode;
    var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
    var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

    var dirsWithInsert = [];
    var dirsWithPostpatch = [];

    var key, oldDir, dir;
    for (key in newDirs) {
      oldDir = oldDirs[key];
      dir = newDirs[key];
      if (!oldDir) {
        // new directive, bind
        callHook$1(dir, 'bind', vnode, oldVnode);
        if (dir.def && dir.def.inserted) {
          dirsWithInsert.push(dir);
        }
      } else {
        // existing directive, update
        dir.oldValue = oldDir.value;
        dir.oldArg = oldDir.arg;
        callHook$1(dir, 'update', vnode, oldVnode);
        if (dir.def && dir.def.componentUpdated) {
          dirsWithPostpatch.push(dir);
        }
      }
    }

    if (dirsWithInsert.length) {
      var callInsert = function () {
        for (var i = 0; i < dirsWithInsert.length; i++) {
          callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
        }
      };
      if (isCreate) {
        mergeVNodeHook(vnode, 'insert', callInsert);
      } else {
        callInsert();
      }
    }

    if (dirsWithPostpatch.length) {
      mergeVNodeHook(vnode, 'postpatch', function () {
        for (var i = 0; i < dirsWithPostpatch.length; i++) {
          callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
        }
      });
    }

    if (!isCreate) {
      for (key in oldDirs) {
        if (!newDirs[key]) {
          // no longer present, unbind
          callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
        }
      }
    }
  }

  var emptyModifiers = Object.create(null);

  function normalizeDirectives$1 (
    dirs,
    vm
  ) {
    var res = Object.create(null);
    if (!dirs) {
      // $flow-disable-line
      return res
    }
    var i, dir;
    for (i = 0; i < dirs.length; i++) {
      dir = dirs[i];
      if (!dir.modifiers) {
        // $flow-disable-line
        dir.modifiers = emptyModifiers;
      }
      res[getRawDirName(dir)] = dir;
      dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
    }
    // $flow-disable-line
    return res
  }

  function getRawDirName (dir) {
    return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
  }

  function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
    var fn = dir.def && dir.def[hook];
    if (fn) {
      try {
        fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
      } catch (e) {
        handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
      }
    }
  }

  var baseModules = [
    ref,
    directives
  ];

  /*  */

  function updateAttrs (oldVnode, vnode) {
    var opts = vnode.componentOptions;
    if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
      return
    }
    if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
      return
    }
    var key, cur, old;
    var elm = vnode.elm;
    var oldAttrs = oldVnode.data.attrs || {};
    var attrs = vnode.data.attrs || {};
    // clone observed objects, as the user probably wants to mutate it
    if (isDef(attrs.__ob__)) {
      attrs = vnode.data.attrs = extend({}, attrs);
    }

    for (key in attrs) {
      cur = attrs[key];
      old = oldAttrs[key];
      if (old !== cur) {
        setAttr(elm, key, cur);
      }
    }
    // #4391: in IE9, setting type can reset value for input[type=radio]
    // #6666: IE/Edge forces progress value down to 1 before setting a max
    /* istanbul ignore if */
    if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
      setAttr(elm, 'value', attrs.value);
    }
    for (key in oldAttrs) {
      if (isUndef(attrs[key])) {
        if (isXlink(key)) {
          elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
        } else if (!isEnumeratedAttr(key)) {
          elm.removeAttribute(key);
        }
      }
    }
  }

  function setAttr (el, key, value) {
    if (el.tagName.indexOf('-') > -1) {
      baseSetAttr(el, key, value);
    } else if (isBooleanAttr(key)) {
      // set attribute for blank value
      // e.g. <option disabled>Select one</option>
      if (isFalsyAttrValue(value)) {
        el.removeAttribute(key);
      } else {
        // technically allowfullscreen is a boolean attribute for <iframe>,
        // but Flash expects a value of "true" when used on <embed> tag
        value = key === 'allowfullscreen' && el.tagName === 'EMBED'
          ? 'true'
          : key;
        el.setAttribute(key, value);
      }
    } else if (isEnumeratedAttr(key)) {
      el.setAttribute(key, convertEnumeratedValue(key, value));
    } else if (isXlink(key)) {
      if (isFalsyAttrValue(value)) {
        el.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else {
        el.setAttributeNS(xlinkNS, key, value);
      }
    } else {
      baseSetAttr(el, key, value);
    }
  }

  function baseSetAttr (el, key, value) {
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      // #7138: IE10 & 11 fires input event when setting placeholder on
      // <textarea>... block the first input event and remove the blocker
      // immediately.
      /* istanbul ignore if */
      if (
        isIE && !isIE9 &&
        el.tagName === 'TEXTAREA' &&
        key === 'placeholder' && value !== '' && !el.__ieph
      ) {
        var blocker = function (e) {
          e.stopImmediatePropagation();
          el.removeEventListener('input', blocker);
        };
        el.addEventListener('input', blocker);
        // $flow-disable-line
        el.__ieph = true; /* IE placeholder patched */
      }
      el.setAttribute(key, value);
    }
  }

  var attrs = {
    create: updateAttrs,
    update: updateAttrs
  };

  /*  */

  function updateClass (oldVnode, vnode) {
    var el = vnode.elm;
    var data = vnode.data;
    var oldData = oldVnode.data;
    if (
      isUndef(data.staticClass) &&
      isUndef(data.class) && (
        isUndef(oldData) || (
          isUndef(oldData.staticClass) &&
          isUndef(oldData.class)
        )
      )
    ) {
      return
    }

    var cls = genClassForVnode(vnode);

    // handle transition classes
    var transitionClass = el._transitionClasses;
    if (isDef(transitionClass)) {
      cls = concat(cls, stringifyClass(transitionClass));
    }

    // set the class
    if (cls !== el._prevClass) {
      el.setAttribute('class', cls);
      el._prevClass = cls;
    }
  }

  var klass = {
    create: updateClass,
    update: updateClass
  };

  /*  */

  var validDivisionCharRE = /[\w).+\-_$\]]/;

  function parseFilters (exp) {
    var inSingle = false;
    var inDouble = false;
    var inTemplateString = false;
    var inRegex = false;
    var curly = 0;
    var square = 0;
    var paren = 0;
    var lastFilterIndex = 0;
    var c, prev, i, expression, filters;

    for (i = 0; i < exp.length; i++) {
      prev = c;
      c = exp.charCodeAt(i);
      if (inSingle) {
        if (c === 0x27 && prev !== 0x5C) { inSingle = false; }
      } else if (inDouble) {
        if (c === 0x22 && prev !== 0x5C) { inDouble = false; }
      } else if (inTemplateString) {
        if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }
      } else if (inRegex) {
        if (c === 0x2f && prev !== 0x5C) { inRegex = false; }
      } else if (
        c === 0x7C && // pipe
        exp.charCodeAt(i + 1) !== 0x7C &&
        exp.charCodeAt(i - 1) !== 0x7C &&
        !curly && !square && !paren
      ) {
        if (expression === undefined) {
          // first filter, end of expression
          lastFilterIndex = i + 1;
          expression = exp.slice(0, i).trim();
        } else {
          pushFilter();
        }
      } else {
        switch (c) {
          case 0x22: inDouble = true; break         // "
          case 0x27: inSingle = true; break         // '
          case 0x60: inTemplateString = true; break // `
          case 0x28: paren++; break                 // (
          case 0x29: paren--; break                 // )
          case 0x5B: square++; break                // [
          case 0x5D: square--; break                // ]
          case 0x7B: curly++; break                 // {
          case 0x7D: curly--; break                 // }
        }
        if (c === 0x2f) { // /
          var j = i - 1;
          var p = (void 0);
          // find first non-whitespace prev char
          for (; j >= 0; j--) {
            p = exp.charAt(j);
            if (p !== ' ') { break }
          }
          if (!p || !validDivisionCharRE.test(p)) {
            inRegex = true;
          }
        }
      }
    }

    if (expression === undefined) {
      expression = exp.slice(0, i).trim();
    } else if (lastFilterIndex !== 0) {
      pushFilter();
    }

    function pushFilter () {
      (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
      lastFilterIndex = i + 1;
    }

    if (filters) {
      for (i = 0; i < filters.length; i++) {
        expression = wrapFilter(expression, filters[i]);
      }
    }

    return expression
  }

  function wrapFilter (exp, filter) {
    var i = filter.indexOf('(');
    if (i < 0) {
      // _f: resolveFilter
      return ("_f(\"" + filter + "\")(" + exp + ")")
    } else {
      var name = filter.slice(0, i);
      var args = filter.slice(i + 1);
      return ("_f(\"" + name + "\")(" + exp + (args !== ')' ? ',' + args : args))
    }
  }

  /*  */



  /* eslint-disable no-unused-vars */
  function baseWarn (msg, range) {
    console.error(("[Vue compiler]: " + msg));
  }
  /* eslint-enable no-unused-vars */

  function pluckModuleFunction (
    modules,
    key
  ) {
    return modules
      ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })
      : []
  }

  function addProp (el, name, value, range, dynamic) {
    (el.props || (el.props = [])).push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));
    el.plain = false;
  }

  function addAttr (el, name, value, range, dynamic) {
    var attrs = dynamic
      ? (el.dynamicAttrs || (el.dynamicAttrs = []))
      : (el.attrs || (el.attrs = []));
    attrs.push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));
    el.plain = false;
  }

  // add a raw attr (use this in preTransforms)
  function addRawAttr (el, name, value, range) {
    el.attrsMap[name] = value;
    el.attrsList.push(rangeSetItem({ name: name, value: value }, range));
  }

  function addDirective (
    el,
    name,
    rawName,
    value,
    arg,
    isDynamicArg,
    modifiers,
    range
  ) {
    (el.directives || (el.directives = [])).push(rangeSetItem({
      name: name,
      rawName: rawName,
      value: value,
      arg: arg,
      isDynamicArg: isDynamicArg,
      modifiers: modifiers
    }, range));
    el.plain = false;
  }

  function prependModifierMarker (symbol, name, dynamic) {
    return dynamic
      ? ("_p(" + name + ",\"" + symbol + "\")")
      : symbol + name // mark the event as captured
  }

  function addHandler (
    el,
    name,
    value,
    modifiers,
    important,
    warn,
    range,
    dynamic
  ) {
    modifiers = modifiers || emptyObject;
    // warn prevent and passive modifier
    /* istanbul ignore if */
    if (
      warn &&
      modifiers.prevent && modifiers.passive
    ) {
      warn(
        'passive and prevent can\'t be used together. ' +
        'Passive handler can\'t prevent default event.',
        range
      );
    }

    // normalize click.right and click.middle since they don't actually fire
    // this is technically browser-specific, but at least for now browsers are
    // the only target envs that have right/middle clicks.
    if (modifiers.right) {
      if (dynamic) {
        name = "(" + name + ")==='click'?'contextmenu':(" + name + ")";
      } else if (name === 'click') {
        name = 'contextmenu';
        delete modifiers.right;
      }
    } else if (modifiers.middle) {
      if (dynamic) {
        name = "(" + name + ")==='click'?'mouseup':(" + name + ")";
      } else if (name === 'click') {
        name = 'mouseup';
      }
    }

    // check capture modifier
    if (modifiers.capture) {
      delete modifiers.capture;
      name = prependModifierMarker('!', name, dynamic);
    }
    if (modifiers.once) {
      delete modifiers.once;
      name = prependModifierMarker('~', name, dynamic);
    }
    /* istanbul ignore if */
    if (modifiers.passive) {
      delete modifiers.passive;
      name = prependModifierMarker('&', name, dynamic);
    }

    var events;
    if (modifiers.native) {
      delete modifiers.native;
      events = el.nativeEvents || (el.nativeEvents = {});
    } else {
      events = el.events || (el.events = {});
    }

    var newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range);
    if (modifiers !== emptyObject) {
      newHandler.modifiers = modifiers;
    }

    var handlers = events[name];
    /* istanbul ignore if */
    if (Array.isArray(handlers)) {
      important ? handlers.unshift(newHandler) : handlers.push(newHandler);
    } else if (handlers) {
      events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
    } else {
      events[name] = newHandler;
    }

    el.plain = false;
  }

  function getRawBindingAttr (
    el,
    name
  ) {
    return el.rawAttrsMap[':' + name] ||
      el.rawAttrsMap['v-bind:' + name] ||
      el.rawAttrsMap[name]
  }

  function getBindingAttr (
    el,
    name,
    getStatic
  ) {
    var dynamicValue =
      getAndRemoveAttr(el, ':' + name) ||
      getAndRemoveAttr(el, 'v-bind:' + name);
    if (dynamicValue != null) {
      return parseFilters(dynamicValue)
    } else if (getStatic !== false) {
      var staticValue = getAndRemoveAttr(el, name);
      if (staticValue != null) {
        return JSON.stringify(staticValue)
      }
    }
  }

  // note: this only removes the attr from the Array (attrsList) so that it
  // doesn't get processed by processAttrs.
  // By default it does NOT remove it from the map (attrsMap) because the map is
  // needed during codegen.
  function getAndRemoveAttr (
    el,
    name,
    removeFromMap
  ) {
    var val;
    if ((val = el.attrsMap[name]) != null) {
      var list = el.attrsList;
      for (var i = 0, l = list.length; i < l; i++) {
        if (list[i].name === name) {
          list.splice(i, 1);
          break
        }
      }
    }
    if (removeFromMap) {
      delete el.attrsMap[name];
    }
    return val
  }

  function getAndRemoveAttrByRegex (
    el,
    name
  ) {
    var list = el.attrsList;
    for (var i = 0, l = list.length; i < l; i++) {
      var attr = list[i];
      if (name.test(attr.name)) {
        list.splice(i, 1);
        return attr
      }
    }
  }

  function rangeSetItem (
    item,
    range
  ) {
    if (range) {
      if (range.start != null) {
        item.start = range.start;
      }
      if (range.end != null) {
        item.end = range.end;
      }
    }
    return item
  }

  /*  */

  /**
   * Cross-platform code generation for component v-model
   */
  function genComponentModel (
    el,
    value,
    modifiers
  ) {
    var ref = modifiers || {};
    var number = ref.number;
    var trim = ref.trim;

    var baseValueExpression = '$$v';
    var valueExpression = baseValueExpression;
    if (trim) {
      valueExpression =
        "(typeof " + baseValueExpression + " === 'string'" +
        "? " + baseValueExpression + ".trim()" +
        ": " + baseValueExpression + ")";
    }
    if (number) {
      valueExpression = "_n(" + valueExpression + ")";
    }
    var assignment = genAssignmentCode(value, valueExpression);

    el.model = {
      value: ("(" + value + ")"),
      expression: JSON.stringify(value),
      callback: ("function (" + baseValueExpression + ") {" + assignment + "}")
    };
  }

  /**
   * Cross-platform codegen helper for generating v-model value assignment code.
   */
  function genAssignmentCode (
    value,
    assignment
  ) {
    var res = parseModel(value);
    if (res.key === null) {
      return (value + "=" + assignment)
    } else {
      return ("$set(" + (res.exp) + ", " + (res.key) + ", " + assignment + ")")
    }
  }

  /**
   * Parse a v-model expression into a base path and a final key segment.
   * Handles both dot-path and possible square brackets.
   *
   * Possible cases:
   *
   * - test
   * - test[key]
   * - test[test1[key]]
   * - test["a"][key]
   * - xxx.test[a[a].test1[key]]
   * - test.xxx.a["asa"][test1[key]]
   *
   */

  var len, str, chr, index$1, expressionPos, expressionEndPos;



  function parseModel (val) {
    // Fix https://github.com/vuejs/vue/pull/7730
    // allow v-model="obj.val " (trailing whitespace)
    val = val.trim();
    len = val.length;

    if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
      index$1 = val.lastIndexOf('.');
      if (index$1 > -1) {
        return {
          exp: val.slice(0, index$1),
          key: '"' + val.slice(index$1 + 1) + '"'
        }
      } else {
        return {
          exp: val,
          key: null
        }
      }
    }

    str = val;
    index$1 = expressionPos = expressionEndPos = 0;

    while (!eof()) {
      chr = next();
      /* istanbul ignore if */
      if (isStringStart(chr)) {
        parseString(chr);
      } else if (chr === 0x5B) {
        parseBracket(chr);
      }
    }

    return {
      exp: val.slice(0, expressionPos),
      key: val.slice(expressionPos + 1, expressionEndPos)
    }
  }

  function next () {
    return str.charCodeAt(++index$1)
  }

  function eof () {
    return index$1 >= len
  }

  function isStringStart (chr) {
    return chr === 0x22 || chr === 0x27
  }

  function parseBracket (chr) {
    var inBracket = 1;
    expressionPos = index$1;
    while (!eof()) {
      chr = next();
      if (isStringStart(chr)) {
        parseString(chr);
        continue
      }
      if (chr === 0x5B) { inBracket++; }
      if (chr === 0x5D) { inBracket--; }
      if (inBracket === 0) {
        expressionEndPos = index$1;
        break
      }
    }
  }

  function parseString (chr) {
    var stringQuote = chr;
    while (!eof()) {
      chr = next();
      if (chr === stringQuote) {
        break
      }
    }
  }

  /*  */

  var warn$1;

  // in some cases, the event used has to be determined at runtime
  // so we used some reserved tokens during compile.
  var RANGE_TOKEN = '__r';
  var CHECKBOX_RADIO_TOKEN = '__c';

  function model (
    el,
    dir,
    _warn
  ) {
    warn$1 = _warn;
    var value = dir.value;
    var modifiers = dir.modifiers;
    var tag = el.tag;
    var type = el.attrsMap.type;

    {
      // inputs with type="file" are read only and setting the input's
      // value will throw an error.
      if (tag === 'input' && type === 'file') {
        warn$1(
          "<" + (el.tag) + " v-model=\"" + value + "\" type=\"file\">:\n" +
          "File inputs are read only. Use a v-on:change listener instead.",
          el.rawAttrsMap['v-model']
        );
      }
    }

    if (el.component) {
      genComponentModel(el, value, modifiers);
      // component v-model doesn't need extra runtime
      return false
    } else if (tag === 'select') {
      genSelect(el, value, modifiers);
    } else if (tag === 'input' && type === 'checkbox') {
      genCheckboxModel(el, value, modifiers);
    } else if (tag === 'input' && type === 'radio') {
      genRadioModel(el, value, modifiers);
    } else if (tag === 'input' || tag === 'textarea') {
      genDefaultModel(el, value, modifiers);
    } else if (!config.isReservedTag(tag)) {
      genComponentModel(el, value, modifiers);
      // component v-model doesn't need extra runtime
      return false
    } else {
      warn$1(
        "<" + (el.tag) + " v-model=\"" + value + "\">: " +
        "v-model is not supported on this element type. " +
        'If you are working with contenteditable, it\'s recommended to ' +
        'wrap a library dedicated for that purpose inside a custom component.',
        el.rawAttrsMap['v-model']
      );
    }

    // ensure runtime directive metadata
    return true
  }

  function genCheckboxModel (
    el,
    value,
    modifiers
  ) {
    var number = modifiers && modifiers.number;
    var valueBinding = getBindingAttr(el, 'value') || 'null';
    var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
    var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
    addProp(el, 'checked',
      "Array.isArray(" + value + ")" +
      "?_i(" + value + "," + valueBinding + ")>-1" + (
        trueValueBinding === 'true'
          ? (":(" + value + ")")
          : (":_q(" + value + "," + trueValueBinding + ")")
      )
    );
    addHandler(el, 'change',
      "var $$a=" + value + "," +
          '$$el=$event.target,' +
          "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" +
      'if(Array.isArray($$a)){' +
        "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," +
            '$$i=_i($$a,$$v);' +
        "if($$el.checked){$$i<0&&(" + (genAssignmentCode(value, '$$a.concat([$$v])')) + ")}" +
        "else{$$i>-1&&(" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + ")}" +
      "}else{" + (genAssignmentCode(value, '$$c')) + "}",
      null, true
    );
  }

  function genRadioModel (
    el,
    value,
    modifiers
  ) {
    var number = modifiers && modifiers.number;
    var valueBinding = getBindingAttr(el, 'value') || 'null';
    valueBinding = number ? ("_n(" + valueBinding + ")") : valueBinding;
    addProp(el, 'checked', ("_q(" + value + "," + valueBinding + ")"));
    addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);
  }

  function genSelect (
    el,
    value,
    modifiers
  ) {
    var number = modifiers && modifiers.number;
    var selectedVal = "Array.prototype.filter" +
      ".call($event.target.options,function(o){return o.selected})" +
      ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" +
      "return " + (number ? '_n(val)' : 'val') + "})";

    var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
    var code = "var $$selectedVal = " + selectedVal + ";";
    code = code + " " + (genAssignmentCode(value, assignment));
    addHandler(el, 'change', code, null, true);
  }

  function genDefaultModel (
    el,
    value,
    modifiers
  ) {
    var type = el.attrsMap.type;

    // warn if v-bind:value conflicts with v-model
    // except for inputs with v-bind:type
    {
      var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];
      var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
      if (value$1 && !typeBinding) {
        var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';
        warn$1(
          binding + "=\"" + value$1 + "\" conflicts with v-model on the same element " +
          'because the latter already expands to a value binding internally',
          el.rawAttrsMap[binding]
        );
      }
    }

    var ref = modifiers || {};
    var lazy = ref.lazy;
    var number = ref.number;
    var trim = ref.trim;
    var needCompositionGuard = !lazy && type !== 'range';
    var event = lazy
      ? 'change'
      : type === 'range'
        ? RANGE_TOKEN
        : 'input';

    var valueExpression = '$event.target.value';
    if (trim) {
      valueExpression = "$event.target.value.trim()";
    }
    if (number) {
      valueExpression = "_n(" + valueExpression + ")";
    }

    var code = genAssignmentCode(value, valueExpression);
    if (needCompositionGuard) {
      code = "if($event.target.composing)return;" + code;
    }

    addProp(el, 'value', ("(" + value + ")"));
    addHandler(el, event, code, null, true);
    if (trim || number) {
      addHandler(el, 'blur', '$forceUpdate()');
    }
  }

  /*  */

  // normalize v-model event tokens that can only be determined at runtime.
  // it's important to place the event as the first in the array because
  // the whole point is ensuring the v-model callback gets called before
  // user-attached handlers.
  function normalizeEvents (on) {
    /* istanbul ignore if */
    if (isDef(on[RANGE_TOKEN])) {
      // IE input[type=range] only supports `change` event
      var event = isIE ? 'change' : 'input';
      on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
      delete on[RANGE_TOKEN];
    }
    // This was originally intended to fix #4521 but no longer necessary
    // after 2.5. Keeping it for backwards compat with generated code from < 2.4
    /* istanbul ignore if */
    if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
      on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
      delete on[CHECKBOX_RADIO_TOKEN];
    }
  }

  var target$1;

  function createOnceHandler$1 (event, handler, capture) {
    var _target = target$1; // save current target element in closure
    return function onceHandler () {
      var res = handler.apply(null, arguments);
      if (res !== null) {
        remove$2(event, onceHandler, capture, _target);
      }
    }
  }

  // #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
  // implementation and does not fire microtasks in between event propagation, so
  // safe to exclude.
  var useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);

  function add$1 (
    name,
    handler,
    capture,
    passive
  ) {
    // async edge case #6566: inner click event triggers patch, event handler
    // attached to outer element during patch, and triggered again. This
    // happens because browsers fire microtask ticks between event propagation.
    // the solution is simple: we save the timestamp when a handler is attached,
    // and the handler would only fire if the event passed to it was fired
    // AFTER it was attached.
    if (useMicrotaskFix) {
      var attachedTimestamp = currentFlushTimestamp;
      var original = handler;
      handler = original._wrapper = function (e) {
        if (
          // no bubbling, should always fire.
          // this is just a safety net in case event.timeStamp is unreliable in
          // certain weird environments...
          e.target === e.currentTarget ||
          // event is fired after handler attachment
          e.timeStamp >= attachedTimestamp ||
          // bail for environments that have buggy event.timeStamp implementations
          // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
          // #9681 QtWebEngine event.timeStamp is negative value
          e.timeStamp <= 0 ||
          // #9448 bail if event is fired in another document in a multi-page
          // electron/nw.js app, since event.timeStamp will be using a different
          // starting reference
          e.target.ownerDocument !== document
        ) {
          return original.apply(this, arguments)
        }
      };
    }
    target$1.addEventListener(
      name,
      handler,
      supportsPassive
        ? { capture: capture, passive: passive }
        : capture
    );
  }

  function remove$2 (
    name,
    handler,
    capture,
    _target
  ) {
    (_target || target$1).removeEventListener(
      name,
      handler._wrapper || handler,
      capture
    );
  }

  function updateDOMListeners (oldVnode, vnode) {
    if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
      return
    }
    var on = vnode.data.on || {};
    var oldOn = oldVnode.data.on || {};
    target$1 = vnode.elm;
    normalizeEvents(on);
    updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);
    target$1 = undefined;
  }

  var events = {
    create: updateDOMListeners,
    update: updateDOMListeners
  };

  /*  */

  var svgContainer;

  function updateDOMProps (oldVnode, vnode) {
    if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
      return
    }
    var key, cur;
    var elm = vnode.elm;
    var oldProps = oldVnode.data.domProps || {};
    var props = vnode.data.domProps || {};
    // clone observed objects, as the user probably wants to mutate it
    if (isDef(props.__ob__)) {
      props = vnode.data.domProps = extend({}, props);
    }

    for (key in oldProps) {
      if (!(key in props)) {
        elm[key] = '';
      }
    }

    for (key in props) {
      cur = props[key];
      // ignore children if the node has textContent or innerHTML,
      // as these will throw away existing DOM nodes and cause removal errors
      // on subsequent patches (#3360)
      if (key === 'textContent' || key === 'innerHTML') {
        if (vnode.children) { vnode.children.length = 0; }
        if (cur === oldProps[key]) { continue }
        // #6601 work around Chrome version <= 55 bug where single textNode
        // replaced by innerHTML/textContent retains its parentNode property
        if (elm.childNodes.length === 1) {
          elm.removeChild(elm.childNodes[0]);
        }
      }

      if (key === 'value' && elm.tagName !== 'PROGRESS') {
        // store value as _value as well since
        // non-string values will be stringified
        elm._value = cur;
        // avoid resetting cursor position when value is the same
        var strCur = isUndef(cur) ? '' : String(cur);
        if (shouldUpdateValue(elm, strCur)) {
          elm.value = strCur;
        }
      } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {
        // IE doesn't support innerHTML for SVG elements
        svgContainer = svgContainer || document.createElement('div');
        svgContainer.innerHTML = "<svg>" + cur + "</svg>";
        var svg = svgContainer.firstChild;
        while (elm.firstChild) {
          elm.removeChild(elm.firstChild);
        }
        while (svg.firstChild) {
          elm.appendChild(svg.firstChild);
        }
      } else if (
        // skip the update if old and new VDOM state is the same.
        // `value` is handled separately because the DOM value may be temporarily
        // out of sync with VDOM state due to focus, composition and modifiers.
        // This  #4521 by skipping the unnecesarry `checked` update.
        cur !== oldProps[key]
      ) {
        // some property updates can throw
        // e.g. `value` on <progress> w/ non-finite value
        try {
          elm[key] = cur;
        } catch (e) {}
      }
    }
  }

  // check platforms/web/util/attrs.js acceptValue


  function shouldUpdateValue (elm, checkVal) {
    return (!elm.composing && (
      elm.tagName === 'OPTION' ||
      isNotInFocusAndDirty(elm, checkVal) ||
      isDirtyWithModifiers(elm, checkVal)
    ))
  }

  function isNotInFocusAndDirty (elm, checkVal) {
    // return true when textbox (.number and .trim) loses focus and its value is
    // not equal to the updated value
    var notInFocus = true;
    // #6157
    // work around IE bug when accessing document.activeElement in an iframe
    try { notInFocus = document.activeElement !== elm; } catch (e) {}
    return notInFocus && elm.value !== checkVal
  }

  function isDirtyWithModifiers (elm, newVal) {
    var value = elm.value;
    var modifiers = elm._vModifiers; // injected by v-model runtime
    if (isDef(modifiers)) {
      if (modifiers.number) {
        return toNumber(value) !== toNumber(newVal)
      }
      if (modifiers.trim) {
        return value.trim() !== newVal.trim()
      }
    }
    return value !== newVal
  }

  var domProps = {
    create: updateDOMProps,
    update: updateDOMProps
  };

  /*  */

  var parseStyleText = cached(function (cssText) {
    var res = {};
    var listDelimiter = /;(?![^(]*\))/g;
    var propertyDelimiter = /:(.+)/;
    cssText.split(listDelimiter).forEach(function (item) {
      if (item) {
        var tmp = item.split(propertyDelimiter);
        tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
      }
    });
    return res
  });

  // merge static and dynamic style data on the same vnode
  function normalizeStyleData (data) {
    var style = normalizeStyleBinding(data.style);
    // static style is pre-processed into an object during compilation
    // and is always a fresh object, so it's safe to merge into it
    return data.staticStyle
      ? extend(data.staticStyle, style)
      : style
  }

  // normalize possible array / string values into Object
  function normalizeStyleBinding (bindingStyle) {
    if (Array.isArray(bindingStyle)) {
      return toObject(bindingStyle)
    }
    if (typeof bindingStyle === 'string') {
      return parseStyleText(bindingStyle)
    }
    return bindingStyle
  }

  /**
   * parent component style should be after child's
   * so that parent component's style could override it
   */
  function getStyle (vnode, checkChild) {
    var res = {};
    var styleData;

    if (checkChild) {
      var childNode = vnode;
      while (childNode.componentInstance) {
        childNode = childNode.componentInstance._vnode;
        if (
          childNode && childNode.data &&
          (styleData = normalizeStyleData(childNode.data))
        ) {
          extend(res, styleData);
        }
      }
    }

    if ((styleData = normalizeStyleData(vnode.data))) {
      extend(res, styleData);
    }

    var parentNode = vnode;
    while ((parentNode = parentNode.parent)) {
      if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
        extend(res, styleData);
      }
    }
    return res
  }

  /*  */

  var cssVarRE = /^--/;
  var importantRE = /\s*!important$/;
  var setProp = function (el, name, val) {
    /* istanbul ignore if */
    if (cssVarRE.test(name)) {
      el.style.setProperty(name, val);
    } else if (importantRE.test(val)) {
      el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');
    } else {
      var normalizedName = normalize(name);
      if (Array.isArray(val)) {
        // Support values array created by autoprefixer, e.g.
        // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
        // Set them one by one, and the browser will only set those it can recognize
        for (var i = 0, len = val.length; i < len; i++) {
          el.style[normalizedName] = val[i];
        }
      } else {
        el.style[normalizedName] = val;
      }
    }
  };

  var vendorNames = ['Webkit', 'Moz', 'ms'];

  var emptyStyle;
  var normalize = cached(function (prop) {
    emptyStyle = emptyStyle || document.createElement('div').style;
    prop = camelize(prop);
    if (prop !== 'filter' && (prop in emptyStyle)) {
      return prop
    }
    var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
    for (var i = 0; i < vendorNames.length; i++) {
      var name = vendorNames[i] + capName;
      if (name in emptyStyle) {
        return name
      }
    }
  });

  function updateStyle (oldVnode, vnode) {
    var data = vnode.data;
    var oldData = oldVnode.data;

    if (isUndef(data.staticStyle) && isUndef(data.style) &&
      isUndef(oldData.staticStyle) && isUndef(oldData.style)
    ) {
      return
    }

    var cur, name;
    var el = vnode.elm;
    var oldStaticStyle = oldData.staticStyle;
    var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

    // if static style exists, stylebinding already merged into it when doing normalizeStyleData
    var oldStyle = oldStaticStyle || oldStyleBinding;

    var style = normalizeStyleBinding(vnode.data.style) || {};

    // store normalized style under a different key for next diff
    // make sure to clone it if it's reactive, since the user likely wants
    // to mutate it.
    vnode.data.normalizedStyle = isDef(style.__ob__)
      ? extend({}, style)
      : style;

    var newStyle = getStyle(vnode, true);

    for (name in oldStyle) {
      if (isUndef(newStyle[name])) {
        setProp(el, name, '');
      }
    }
    for (name in newStyle) {
      cur = newStyle[name];
      if (cur !== oldStyle[name]) {
        // ie9 setting to null has no effect, must use empty string
        setProp(el, name, cur == null ? '' : cur);
      }
    }
  }

  var style = {
    create: updateStyle,
    update: updateStyle
  };

  /*  */

  var whitespaceRE = /\s+/;

  /**
   * Add class with compatibility for SVG since classList is not supported on
   * SVG elements in IE
   */
  function addClass (el, cls) {
    /* istanbul ignore if */
    if (!cls || !(cls = cls.trim())) {
      return
    }

    /* istanbul ignore else */
    if (el.classList) {
      if (cls.indexOf(' ') > -1) {
        cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });
      } else {
        el.classList.add(cls);
      }
    } else {
      var cur = " " + (el.getAttribute('class') || '') + " ";
      if (cur.indexOf(' ' + cls + ' ') < 0) {
        el.setAttribute('class', (cur + cls).trim());
      }
    }
  }

  /**
   * Remove class with compatibility for SVG since classList is not supported on
   * SVG elements in IE
   */
  function removeClass (el, cls) {
    /* istanbul ignore if */
    if (!cls || !(cls = cls.trim())) {
      return
    }

    /* istanbul ignore else */
    if (el.classList) {
      if (cls.indexOf(' ') > -1) {
        cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });
      } else {
        el.classList.remove(cls);
      }
      if (!el.classList.length) {
        el.removeAttribute('class');
      }
    } else {
      var cur = " " + (el.getAttribute('class') || '') + " ";
      var tar = ' ' + cls + ' ';
      while (cur.indexOf(tar) >= 0) {
        cur = cur.replace(tar, ' ');
      }
      cur = cur.trim();
      if (cur) {
        el.setAttribute('class', cur);
      } else {
        el.removeAttribute('class');
      }
    }
  }

  /*  */

  function resolveTransition (def$$1) {
    if (!def$$1) {
      return
    }
    /* istanbul ignore else */
    if (typeof def$$1 === 'object') {
      var res = {};
      if (def$$1.css !== false) {
        extend(res, autoCssTransition(def$$1.name || 'v'));
      }
      extend(res, def$$1);
      return res
    } else if (typeof def$$1 === 'string') {
      return autoCssTransition(def$$1)
    }
  }

  var autoCssTransition = cached(function (name) {
    return {
      enterClass: (name + "-enter"),
      enterToClass: (name + "-enter-to"),
      enterActiveClass: (name + "-enter-active"),
      leaveClass: (name + "-leave"),
      leaveToClass: (name + "-leave-to"),
      leaveActiveClass: (name + "-leave-active")
    }
  });

  var hasTransition = inBrowser && !isIE9;
  var TRANSITION = 'transition';
  var ANIMATION = 'animation';

  // Transition property/event sniffing
  var transitionProp = 'transition';
  var transitionEndEvent = 'transitionend';
  var animationProp = 'animation';
  var animationEndEvent = 'animationend';
  if (hasTransition) {
    /* istanbul ignore if */
    if (window.ontransitionend === undefined &&
      window.onwebkittransitionend !== undefined
    ) {
      transitionProp = 'WebkitTransition';
      transitionEndEvent = 'webkitTransitionEnd';
    }
    if (window.onanimationend === undefined &&
      window.onwebkitanimationend !== undefined
    ) {
      animationProp = 'WebkitAnimation';
      animationEndEvent = 'webkitAnimationEnd';
    }
  }

  // binding to window is necessary to make hot reload work in IE in strict mode
  var raf = inBrowser
    ? window.requestAnimationFrame
      ? window.requestAnimationFrame.bind(window)
      : setTimeout
    : /* istanbul ignore next */ function (fn) { return fn(); };

  function nextFrame (fn) {
    raf(function () {
      raf(fn);
    });
  }

  function addTransitionClass (el, cls) {
    var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
    if (transitionClasses.indexOf(cls) < 0) {
      transitionClasses.push(cls);
      addClass(el, cls);
    }
  }

  function removeTransitionClass (el, cls) {
    if (el._transitionClasses) {
      remove(el._transitionClasses, cls);
    }
    removeClass(el, cls);
  }

  function whenTransitionEnds (
    el,
    expectedType,
    cb
  ) {
    var ref = getTransitionInfo(el, expectedType);
    var type = ref.type;
    var timeout = ref.timeout;
    var propCount = ref.propCount;
    if (!type) { return cb() }
    var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
    var ended = 0;
    var end = function () {
      el.removeEventListener(event, onEnd);
      cb();
    };
    var onEnd = function (e) {
      if (e.target === el) {
        if (++ended >= propCount) {
          end();
        }
      }
    };
    setTimeout(function () {
      if (ended < propCount) {
        end();
      }
    }, timeout + 1);
    el.addEventListener(event, onEnd);
  }

  var transformRE = /\b(transform|all)(,|$)/;

  function getTransitionInfo (el, expectedType) {
    var styles = window.getComputedStyle(el);
    // JSDOM may return undefined for transition properties
    var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');
    var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');
    var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
    var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');
    var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');
    var animationTimeout = getTimeout(animationDelays, animationDurations);

    var type;
    var timeout = 0;
    var propCount = 0;
    /* istanbul ignore if */
    if (expectedType === TRANSITION) {
      if (transitionTimeout > 0) {
        type = TRANSITION;
        timeout = transitionTimeout;
        propCount = transitionDurations.length;
      }
    } else if (expectedType === ANIMATION) {
      if (animationTimeout > 0) {
        type = ANIMATION;
        timeout = animationTimeout;
        propCount = animationDurations.length;
      }
    } else {
      timeout = Math.max(transitionTimeout, animationTimeout);
      type = timeout > 0
        ? transitionTimeout > animationTimeout
          ? TRANSITION
          : ANIMATION
        : null;
      propCount = type
        ? type === TRANSITION
          ? transitionDurations.length
          : animationDurations.length
        : 0;
    }
    var hasTransform =
      type === TRANSITION &&
      transformRE.test(styles[transitionProp + 'Property']);
    return {
      type: type,
      timeout: timeout,
      propCount: propCount,
      hasTransform: hasTransform
    }
  }

  function getTimeout (delays, durations) {
    /* istanbul ignore next */
    while (delays.length < durations.length) {
      delays = delays.concat(delays);
    }

    return Math.max.apply(null, durations.map(function (d, i) {
      return toMs(d) + toMs(delays[i])
    }))
  }

  // Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
  // in a locale-dependent way, using a comma instead of a dot.
  // If comma is not replaced with a dot, the input will be rounded down (i.e. acting
  // as a floor function) causing unexpected behaviors
  function toMs (s) {
    return Number(s.slice(0, -1).replace(',', '.')) * 1000
  }

  /*  */

  function enter (vnode, toggleDisplay) {
    var el = vnode.elm;

    // call leave callback now
    if (isDef(el._leaveCb)) {
      el._leaveCb.cancelled = true;
      el._leaveCb();
    }

    var data = resolveTransition(vnode.data.transition);
    if (isUndef(data)) {
      return
    }

    /* istanbul ignore if */
    if (isDef(el._enterCb) || el.nodeType !== 1) {
      return
    }

    var css = data.css;
    var type = data.type;
    var enterClass = data.enterClass;
    var enterToClass = data.enterToClass;
    var enterActiveClass = data.enterActiveClass;
    var appearClass = data.appearClass;
    var appearToClass = data.appearToClass;
    var appearActiveClass = data.appearActiveClass;
    var beforeEnter = data.beforeEnter;
    var enter = data.enter;
    var afterEnter = data.afterEnter;
    var enterCancelled = data.enterCancelled;
    var beforeAppear = data.beforeAppear;
    var appear = data.appear;
    var afterAppear = data.afterAppear;
    var appearCancelled = data.appearCancelled;
    var duration = data.duration;

    // activeInstance will always be the <transition> component managing this
    // transition. One edge case to check is when the <transition> is placed
    // as the root node of a child component. In that case we need to check
    // <transition>'s parent for appear check.
    var context = activeInstance;
    var transitionNode = activeInstance.$vnode;
    while (transitionNode && transitionNode.parent) {
      context = transitionNode.context;
      transitionNode = transitionNode.parent;
    }

    var isAppear = !context._isMounted || !vnode.isRootInsert;

    if (isAppear && !appear && appear !== '') {
      return
    }

    var startClass = isAppear && appearClass
      ? appearClass
      : enterClass;
    var activeClass = isAppear && appearActiveClass
      ? appearActiveClass
      : enterActiveClass;
    var toClass = isAppear && appearToClass
      ? appearToClass
      : enterToClass;

    var beforeEnterHook = isAppear
      ? (beforeAppear || beforeEnter)
      : beforeEnter;
    var enterHook = isAppear
      ? (typeof appear === 'function' ? appear : enter)
      : enter;
    var afterEnterHook = isAppear
      ? (afterAppear || afterEnter)
      : afterEnter;
    var enterCancelledHook = isAppear
      ? (appearCancelled || enterCancelled)
      : enterCancelled;

    var explicitEnterDuration = toNumber(
      isObject(duration)
        ? duration.enter
        : duration
    );

    if (explicitEnterDuration != null) {
      checkDuration(explicitEnterDuration, 'enter', vnode);
    }

    var expectsCSS = css !== false && !isIE9;
    var userWantsControl = getHookArgumentsLength(enterHook);

    var cb = el._enterCb = once(function () {
      if (expectsCSS) {
        removeTransitionClass(el, toClass);
        removeTransitionClass(el, activeClass);
      }
      if (cb.cancelled) {
        if (expectsCSS) {
          removeTransitionClass(el, startClass);
        }
        enterCancelledHook && enterCancelledHook(el);
      } else {
        afterEnterHook && afterEnterHook(el);
      }
      el._enterCb = null;
    });

    if (!vnode.data.show) {
      // remove pending leave element on enter by injecting an insert hook
      mergeVNodeHook(vnode, 'insert', function () {
        var parent = el.parentNode;
        var pendingNode = parent && parent._pending && parent._pending[vnode.key];
        if (pendingNode &&
          pendingNode.tag === vnode.tag &&
          pendingNode.elm._leaveCb
        ) {
          pendingNode.elm._leaveCb();
        }
        enterHook && enterHook(el, cb);
      });
    }

    // start enter transition
    beforeEnterHook && beforeEnterHook(el);
    if (expectsCSS) {
      addTransitionClass(el, startClass);
      addTransitionClass(el, activeClass);
      nextFrame(function () {
        removeTransitionClass(el, startClass);
        if (!cb.cancelled) {
          addTransitionClass(el, toClass);
          if (!userWantsControl) {
            if (isValidDuration(explicitEnterDuration)) {
              setTimeout(cb, explicitEnterDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        }
      });
    }

    if (vnode.data.show) {
      toggleDisplay && toggleDisplay();
      enterHook && enterHook(el, cb);
    }

    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }

  function leave (vnode, rm) {
    var el = vnode.elm;

    // call enter callback now
    if (isDef(el._enterCb)) {
      el._enterCb.cancelled = true;
      el._enterCb();
    }

    var data = resolveTransition(vnode.data.transition);
    if (isUndef(data) || el.nodeType !== 1) {
      return rm()
    }

    /* istanbul ignore if */
    if (isDef(el._leaveCb)) {
      return
    }

    var css = data.css;
    var type = data.type;
    var leaveClass = data.leaveClass;
    var leaveToClass = data.leaveToClass;
    var leaveActiveClass = data.leaveActiveClass;
    var beforeLeave = data.beforeLeave;
    var leave = data.leave;
    var afterLeave = data.afterLeave;
    var leaveCancelled = data.leaveCancelled;
    var delayLeave = data.delayLeave;
    var duration = data.duration;

    var expectsCSS = css !== false && !isIE9;
    var userWantsControl = getHookArgumentsLength(leave);

    var explicitLeaveDuration = toNumber(
      isObject(duration)
        ? duration.leave
        : duration
    );

    if (isDef(explicitLeaveDuration)) {
      checkDuration(explicitLeaveDuration, 'leave', vnode);
    }

    var cb = el._leaveCb = once(function () {
      if (el.parentNode && el.parentNode._pending) {
        el.parentNode._pending[vnode.key] = null;
      }
      if (expectsCSS) {
        removeTransitionClass(el, leaveToClass);
        removeTransitionClass(el, leaveActiveClass);
      }
      if (cb.cancelled) {
        if (expectsCSS) {
          removeTransitionClass(el, leaveClass);
        }
        leaveCancelled && leaveCancelled(el);
      } else {
        rm();
        afterLeave && afterLeave(el);
      }
      el._leaveCb = null;
    });

    if (delayLeave) {
      delayLeave(performLeave);
    } else {
      performLeave();
    }

    function performLeave () {
      // the delayed leave may have already been cancelled
      if (cb.cancelled) {
        return
      }
      // record leaving element
      if (!vnode.data.show && el.parentNode) {
        (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
      }
      beforeLeave && beforeLeave(el);
      if (expectsCSS) {
        addTransitionClass(el, leaveClass);
        addTransitionClass(el, leaveActiveClass);
        nextFrame(function () {
          removeTransitionClass(el, leaveClass);
          if (!cb.cancelled) {
            addTransitionClass(el, leaveToClass);
            if (!userWantsControl) {
              if (isValidDuration(explicitLeaveDuration)) {
                setTimeout(cb, explicitLeaveDuration);
              } else {
                whenTransitionEnds(el, type, cb);
              }
            }
          }
        });
      }
      leave && leave(el, cb);
      if (!expectsCSS && !userWantsControl) {
        cb();
      }
    }
  }

  // only used in dev mode
  function checkDuration (val, name, vnode) {
    if (typeof val !== 'number') {
      warn(
        "<transition> explicit " + name + " duration is not a valid number - " +
        "got " + (JSON.stringify(val)) + ".",
        vnode.context
      );
    } else if (isNaN(val)) {
      warn(
        "<transition> explicit " + name + " duration is NaN - " +
        'the duration expression might be incorrect.',
        vnode.context
      );
    }
  }

  function isValidDuration (val) {
    return typeof val === 'number' && !isNaN(val)
  }

  /**
   * Normalize a transition hook's argument length. The hook may be:
   * - a merged hook (invoker) with the original in .fns
   * - a wrapped component method (check ._length)
   * - a plain function (.length)
   */
  function getHookArgumentsLength (fn) {
    if (isUndef(fn)) {
      return false
    }
    var invokerFns = fn.fns;
    if (isDef(invokerFns)) {
      // invoker
      return getHookArgumentsLength(
        Array.isArray(invokerFns)
          ? invokerFns[0]
          : invokerFns
      )
    } else {
      return (fn._length || fn.length) > 1
    }
  }

  function _enter (_, vnode) {
    if (vnode.data.show !== true) {
      enter(vnode);
    }
  }

  var transition = inBrowser ? {
    create: _enter,
    activate: _enter,
    remove: function remove$$1 (vnode, rm) {
      /* istanbul ignore else */
      if (vnode.data.show !== true) {
        leave(vnode, rm);
      } else {
        rm();
      }
    }
  } : {};

  var platformModules = [
    attrs,
    klass,
    events,
    domProps,
    style,
    transition
  ];

  /*  */

  // the directive module should be applied last, after all
  // built-in modules have been applied.
  var modules = platformModules.concat(baseModules);

  var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

  /**
   * Not type checking this file because flow doesn't like attaching
   * properties to Elements.
   */

  /* istanbul ignore if */
  if (isIE9) {
    // http://www.matts411.com/post/internet-explorer-9-oninput/
    document.addEventListener('selectionchange', function () {
      var el = document.activeElement;
      if (el && el.vmodel) {
        trigger(el, 'input');
      }
    });
  }

  var directive = {
    inserted: function inserted (el, binding, vnode, oldVnode) {
      if (vnode.tag === 'select') {
        // #6903
        if (oldVnode.elm && !oldVnode.elm._vOptions) {
          mergeVNodeHook(vnode, 'postpatch', function () {
            directive.componentUpdated(el, binding, vnode);
          });
        } else {
          setSelected(el, binding, vnode.context);
        }
        el._vOptions = [].map.call(el.options, getValue);
      } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
        el._vModifiers = binding.modifiers;
        if (!binding.modifiers.lazy) {
          el.addEventListener('compositionstart', onCompositionStart);
          el.addEventListener('compositionend', onCompositionEnd);
          // Safari < 10.2 & UIWebView doesn't fire compositionend when
          // switching focus before confirming composition choice
          // this also fixes the issue where some browsers e.g. iOS Chrome
          // fires "change" instead of "input" on autocomplete.
          el.addEventListener('change', onCompositionEnd);
          /* istanbul ignore if */
          if (isIE9) {
            el.vmodel = true;
          }
        }
      }
    },

    componentUpdated: function componentUpdated (el, binding, vnode) {
      if (vnode.tag === 'select') {
        setSelected(el, binding, vnode.context);
        // in case the options rendered by v-for have changed,
        // it's possible that the value is out-of-sync with the rendered options.
        // detect such cases and filter out values that no longer has a matching
        // option in the DOM.
        var prevOptions = el._vOptions;
        var curOptions = el._vOptions = [].map.call(el.options, getValue);
        if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
          // trigger change event if
          // no matching option found for at least one value
          var needReset = el.multiple
            ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })
            : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
          if (needReset) {
            trigger(el, 'change');
          }
        }
      }
    }
  };

  function setSelected (el, binding, vm) {
    actuallySetSelected(el, binding, vm);
    /* istanbul ignore if */
    if (isIE || isEdge) {
      setTimeout(function () {
        actuallySetSelected(el, binding, vm);
      }, 0);
    }
  }

  function actuallySetSelected (el, binding, vm) {
    var value = binding.value;
    var isMultiple = el.multiple;
    if (isMultiple && !Array.isArray(value)) {
      warn(
        "<select multiple v-model=\"" + (binding.expression) + "\"> " +
        "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
        vm
      );
      return
    }
    var selected, option;
    for (var i = 0, l = el.options.length; i < l; i++) {
      option = el.options[i];
      if (isMultiple) {
        selected = looseIndexOf(value, getValue(option)) > -1;
        if (option.selected !== selected) {
          option.selected = selected;
        }
      } else {
        if (looseEqual(getValue(option), value)) {
          if (el.selectedIndex !== i) {
            el.selectedIndex = i;
          }
          return
        }
      }
    }
    if (!isMultiple) {
      el.selectedIndex = -1;
    }
  }

  function hasNoMatchingOption (value, options) {
    return options.every(function (o) { return !looseEqual(o, value); })
  }

  function getValue (option) {
    return '_value' in option
      ? option._value
      : option.value
  }

  function onCompositionStart (e) {
    e.target.composing = true;
  }

  function onCompositionEnd (e) {
    // prevent triggering an input event for no reason
    if (!e.target.composing) { return }
    e.target.composing = false;
    trigger(e.target, 'input');
  }

  function trigger (el, type) {
    var e = document.createEvent('HTMLEvents');
    e.initEvent(type, true, true);
    el.dispatchEvent(e);
  }

  /*  */

  // recursively search for possible transition defined inside the component root
  function locateNode (vnode) {
    return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
      ? locateNode(vnode.componentInstance._vnode)
      : vnode
  }

  var show = {
    bind: function bind (el, ref, vnode) {
      var value = ref.value;

      vnode = locateNode(vnode);
      var transition$$1 = vnode.data && vnode.data.transition;
      var originalDisplay = el.__vOriginalDisplay =
        el.style.display === 'none' ? '' : el.style.display;
      if (value && transition$$1) {
        vnode.data.show = true;
        enter(vnode, function () {
          el.style.display = originalDisplay;
        });
      } else {
        el.style.display = value ? originalDisplay : 'none';
      }
    },

    update: function update (el, ref, vnode) {
      var value = ref.value;
      var oldValue = ref.oldValue;

      /* istanbul ignore if */
      if (!value === !oldValue) { return }
      vnode = locateNode(vnode);
      var transition$$1 = vnode.data && vnode.data.transition;
      if (transition$$1) {
        vnode.data.show = true;
        if (value) {
          enter(vnode, function () {
            el.style.display = el.__vOriginalDisplay;
          });
        } else {
          leave(vnode, function () {
            el.style.display = 'none';
          });
        }
      } else {
        el.style.display = value ? el.__vOriginalDisplay : 'none';
      }
    },

    unbind: function unbind (
      el,
      binding,
      vnode,
      oldVnode,
      isDestroy
    ) {
      if (!isDestroy) {
        el.style.display = el.__vOriginalDisplay;
      }
    }
  };

  var platformDirectives = {
    model: directive,
    show: show
  };

  /*  */

  var transitionProps = {
    name: String,
    appear: Boolean,
    css: Boolean,
    mode: String,
    type: String,
    enterClass: String,
    leaveClass: String,
    enterToClass: String,
    leaveToClass: String,
    enterActiveClass: String,
    leaveActiveClass: String,
    appearClass: String,
    appearActiveClass: String,
    appearToClass: String,
    duration: [Number, String, Object]
  };

  // in case the child is also an abstract component, e.g. <keep-alive>
  // we want to recursively retrieve the real component to be rendered
  function getRealChild (vnode) {
    var compOptions = vnode && vnode.componentOptions;
    if (compOptions && compOptions.Ctor.options.abstract) {
      return getRealChild(getFirstComponentChild(compOptions.children))
    } else {
      return vnode
    }
  }

  function extractTransitionData (comp) {
    var data = {};
    var options = comp.$options;
    // props
    for (var key in options.propsData) {
      data[key] = comp[key];
    }
    // events.
    // extract listeners and pass them directly to the transition methods
    var listeners = options._parentListeners;
    for (var key$1 in listeners) {
      data[camelize(key$1)] = listeners[key$1];
    }
    return data
  }

  function placeholder (h, rawChild) {
    if (/\d-keep-alive$/.test(rawChild.tag)) {
      return h('keep-alive', {
        props: rawChild.componentOptions.propsData
      })
    }
  }

  function hasParentTransition (vnode) {
    while ((vnode = vnode.parent)) {
      if (vnode.data.transition) {
        return true
      }
    }
  }

  function isSameChild (child, oldChild) {
    return oldChild.key === child.key && oldChild.tag === child.tag
  }

  var isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };

  var isVShowDirective = function (d) { return d.name === 'show'; };

  var Transition = {
    name: 'transition',
    props: transitionProps,
    abstract: true,

    render: function render (h) {
      var this$1 = this;

      var children = this.$slots.default;
      if (!children) {
        return
      }

      // filter out text nodes (possible whitespaces)
      children = children.filter(isNotTextNode);
      /* istanbul ignore if */
      if (!children.length) {
        return
      }

      // warn multiple elements
      if (children.length > 1) {
        warn(
          '<transition> can only be used on a single element. Use ' +
          '<transition-group> for lists.',
          this.$parent
        );
      }

      var mode = this.mode;

      // warn invalid mode
      if (mode && mode !== 'in-out' && mode !== 'out-in'
      ) {
        warn(
          'invalid <transition> mode: ' + mode,
          this.$parent
        );
      }

      var rawChild = children[0];

      // if this is a component root node and the component's
      // parent container node also has transition, skip.
      if (hasParentTransition(this.$vnode)) {
        return rawChild
      }

      // apply transition data to child
      // use getRealChild() to ignore abstract components e.g. keep-alive
      var child = getRealChild(rawChild);
      /* istanbul ignore if */
      if (!child) {
        return rawChild
      }

      if (this._leaving) {
        return placeholder(h, rawChild)
      }

      // ensure a key that is unique to the vnode type and to this transition
      // component instance. This key will be used to remove pending leaving nodes
      // during entering.
      var id = "__transition-" + (this._uid) + "-";
      child.key = child.key == null
        ? child.isComment
          ? id + 'comment'
          : id + child.tag
        : isPrimitive(child.key)
          ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
          : child.key;

      var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
      var oldRawChild = this._vnode;
      var oldChild = getRealChild(oldRawChild);

      // mark v-show
      // so that the transition module can hand over the control to the directive
      if (child.data.directives && child.data.directives.some(isVShowDirective)) {
        child.data.show = true;
      }

      if (
        oldChild &&
        oldChild.data &&
        !isSameChild(child, oldChild) &&
        !isAsyncPlaceholder(oldChild) &&
        // #6687 component root is a comment node
        !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
      ) {
        // replace old child transition data with fresh one
        // important for dynamic transitions!
        var oldData = oldChild.data.transition = extend({}, data);
        // handle transition mode
        if (mode === 'out-in') {
          // return placeholder node and queue update when leave finishes
          this._leaving = true;
          mergeVNodeHook(oldData, 'afterLeave', function () {
            this$1._leaving = false;
            this$1.$forceUpdate();
          });
          return placeholder(h, rawChild)
        } else if (mode === 'in-out') {
          if (isAsyncPlaceholder(child)) {
            return oldRawChild
          }
          var delayedLeave;
          var performLeave = function () { delayedLeave(); };
          mergeVNodeHook(data, 'afterEnter', performLeave);
          mergeVNodeHook(data, 'enterCancelled', performLeave);
          mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
        }
      }

      return rawChild
    }
  };

  /*  */

  var props = extend({
    tag: String,
    moveClass: String
  }, transitionProps);

  delete props.mode;

  var TransitionGroup = {
    props: props,

    beforeMount: function beforeMount () {
      var this$1 = this;

      var update = this._update;
      this._update = function (vnode, hydrating) {
        var restoreActiveInstance = setActiveInstance(this$1);
        // force removing pass
        this$1.__patch__(
          this$1._vnode,
          this$1.kept,
          false, // hydrating
          true // removeOnly (!important, avoids unnecessary moves)
        );
        this$1._vnode = this$1.kept;
        restoreActiveInstance();
        update.call(this$1, vnode, hydrating);
      };
    },

    render: function render (h) {
      var tag = this.tag || this.$vnode.data.tag || 'span';
      var map = Object.create(null);
      var prevChildren = this.prevChildren = this.children;
      var rawChildren = this.$slots.default || [];
      var children = this.children = [];
      var transitionData = extractTransitionData(this);

      for (var i = 0; i < rawChildren.length; i++) {
        var c = rawChildren[i];
        if (c.tag) {
          if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
            children.push(c);
            map[c.key] = c
            ;(c.data || (c.data = {})).transition = transitionData;
          } else {
            var opts = c.componentOptions;
            var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
            warn(("<transition-group> children must be keyed: <" + name + ">"));
          }
        }
      }

      if (prevChildren) {
        var kept = [];
        var removed = [];
        for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
          var c$1 = prevChildren[i$1];
          c$1.data.transition = transitionData;
          c$1.data.pos = c$1.elm.getBoundingClientRect();
          if (map[c$1.key]) {
            kept.push(c$1);
          } else {
            removed.push(c$1);
          }
        }
        this.kept = h(tag, null, kept);
        this.removed = removed;
      }

      return h(tag, null, children)
    },

    updated: function updated () {
      var children = this.prevChildren;
      var moveClass = this.moveClass || ((this.name || 'v') + '-move');
      if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
        return
      }

      // we divide the work into three loops to avoid mixing DOM reads and writes
      // in each iteration - which helps prevent layout thrashing.
      children.forEach(callPendingCbs);
      children.forEach(recordPosition);
      children.forEach(applyTranslation);

      // force reflow to put everything in position
      // assign to this to avoid being removed in tree-shaking
      // $flow-disable-line
      this._reflow = document.body.offsetHeight;

      children.forEach(function (c) {
        if (c.data.moved) {
          var el = c.elm;
          var s = el.style;
          addTransitionClass(el, moveClass);
          s.transform = s.WebkitTransform = s.transitionDuration = '';
          el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
            if (e && e.target !== el) {
              return
            }
            if (!e || /transform$/.test(e.propertyName)) {
              el.removeEventListener(transitionEndEvent, cb);
              el._moveCb = null;
              removeTransitionClass(el, moveClass);
            }
          });
        }
      });
    },

    methods: {
      hasMove: function hasMove (el, moveClass) {
        /* istanbul ignore if */
        if (!hasTransition) {
          return false
        }
        /* istanbul ignore if */
        if (this._hasMove) {
          return this._hasMove
        }
        // Detect whether an element with the move class applied has
        // CSS transitions. Since the element may be inside an entering
        // transition at this very moment, we make a clone of it and remove
        // all other transition classes applied to ensure only the move class
        // is applied.
        var clone = el.cloneNode();
        if (el._transitionClasses) {
          el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
        }
        addClass(clone, moveClass);
        clone.style.display = 'none';
        this.$el.appendChild(clone);
        var info = getTransitionInfo(clone);
        this.$el.removeChild(clone);
        return (this._hasMove = info.hasTransform)
      }
    }
  };

  function callPendingCbs (c) {
    /* istanbul ignore if */
    if (c.elm._moveCb) {
      c.elm._moveCb();
    }
    /* istanbul ignore if */
    if (c.elm._enterCb) {
      c.elm._enterCb();
    }
  }

  function recordPosition (c) {
    c.data.newPos = c.elm.getBoundingClientRect();
  }

  function applyTranslation (c) {
    var oldPos = c.data.pos;
    var newPos = c.data.newPos;
    var dx = oldPos.left - newPos.left;
    var dy = oldPos.top - newPos.top;
    if (dx || dy) {
      c.data.moved = true;
      var s = c.elm.style;
      s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
      s.transitionDuration = '0s';
    }
  }

  var platformComponents = {
    Transition: Transition,
    TransitionGroup: TransitionGroup
  };

  /*  */

  // install platform specific utils
  Vue.config.mustUseProp = mustUseProp;
  Vue.config.isReservedTag = isReservedTag;
  Vue.config.isReservedAttr = isReservedAttr;
  Vue.config.getTagNamespace = getTagNamespace;
  Vue.config.isUnknownElement = isUnknownElement;

  // install platform runtime directives & components
  extend(Vue.options.directives, platformDirectives);
  extend(Vue.options.components, platformComponents);

  // install platform patch function
  Vue.prototype.__patch__ = inBrowser ? patch : noop;

  // public mount method
  Vue.prototype.$mount = function (
    el,
    hydrating
  ) {
    el = el && inBrowser ? query(el) : undefined;
    return mountComponent(this, el, hydrating)
  };

  // devtools global hook
  /* istanbul ignore next */
  if (inBrowser) {
    setTimeout(function () {
      if (config.devtools) {
        if (devtools) {
          devtools.emit('init', Vue);
        } else {
          console[console.info ? 'info' : 'log'](
            'Download the Vue Devtools extension for a better development experience:\n' +
            'https://github.com/vuejs/vue-devtools'
          );
        }
      }
      if (config.productionTip !== false &&
        typeof console !== 'undefined'
      ) {
        console[console.info ? 'info' : 'log'](
          "You are running Vue in development mode.\n" +
          "Make sure to turn on production mode when deploying for production.\n" +
          "See more tips at https://vuejs.org/guide/deployment.html"
        );
      }
    }, 0);
  }

  /*  */

  var defaultTagRE = /\{\{((?:.|\r?\n)+?)\}\}/g;
  var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

  var buildRegex = cached(function (delimiters) {
    var open = delimiters[0].replace(regexEscapeRE, '\\$&');
    var close = delimiters[1].replace(regexEscapeRE, '\\$&');
    return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
  });



  function parseText (
    text,
    delimiters
  ) {
    var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
    if (!tagRE.test(text)) {
      return
    }
    var tokens = [];
    var rawTokens = [];
    var lastIndex = tagRE.lastIndex = 0;
    var match, index, tokenValue;
    while ((match = tagRE.exec(text))) {
      index = match.index;
      // push text token
      if (index > lastIndex) {
        rawTokens.push(tokenValue = text.slice(lastIndex, index));
        tokens.push(JSON.stringify(tokenValue));
      }
      // tag token
      var exp = parseFilters(match[1].trim());
      tokens.push(("_s(" + exp + ")"));
      rawTokens.push({ '@binding': exp });
      lastIndex = index + match[0].length;
    }
    if (lastIndex < text.length) {
      rawTokens.push(tokenValue = text.slice(lastIndex));
      tokens.push(JSON.stringify(tokenValue));
    }
    return {
      expression: tokens.join('+'),
      tokens: rawTokens
    }
  }

  /*  */

  function transformNode (el, options) {
    var warn = options.warn || baseWarn;
    var staticClass = getAndRemoveAttr(el, 'class');
    if (staticClass) {
      var res = parseText(staticClass, options.delimiters);
      if (res) {
        warn(
          "class=\"" + staticClass + "\": " +
          'Interpolation inside attributes has been removed. ' +
          'Use v-bind or the colon shorthand instead. For example, ' +
          'instead of <div class="{{ val }}">, use <div :class="val">.',
          el.rawAttrsMap['class']
        );
      }
    }
    if (staticClass) {
      el.staticClass = JSON.stringify(staticClass);
    }
    var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
    if (classBinding) {
      el.classBinding = classBinding;
    }
  }

  function genData (el) {
    var data = '';
    if (el.staticClass) {
      data += "staticClass:" + (el.staticClass) + ",";
    }
    if (el.classBinding) {
      data += "class:" + (el.classBinding) + ",";
    }
    return data
  }

  var klass$1 = {
    staticKeys: ['staticClass'],
    transformNode: transformNode,
    genData: genData
  };

  /*  */

  function transformNode$1 (el, options) {
    var warn = options.warn || baseWarn;
    var staticStyle = getAndRemoveAttr(el, 'style');
    if (staticStyle) {
      /* istanbul ignore if */
      {
        var res = parseText(staticStyle, options.delimiters);
        if (res) {
          warn(
            "style=\"" + staticStyle + "\": " +
            'Interpolation inside attributes has been removed. ' +
            'Use v-bind or the colon shorthand instead. For example, ' +
            'instead of <div style="{{ val }}">, use <div :style="val">.',
            el.rawAttrsMap['style']
          );
        }
      }
      el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
    }

    var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
    if (styleBinding) {
      el.styleBinding = styleBinding;
    }
  }

  function genData$1 (el) {
    var data = '';
    if (el.staticStyle) {
      data += "staticStyle:" + (el.staticStyle) + ",";
    }
    if (el.styleBinding) {
      data += "style:(" + (el.styleBinding) + "),";
    }
    return data
  }

  var style$1 = {
    staticKeys: ['staticStyle'],
    transformNode: transformNode$1,
    genData: genData$1
  };

  /*  */

  var decoder;

  var he = {
    decode: function decode (html) {
      decoder = decoder || document.createElement('div');
      decoder.innerHTML = html;
      return decoder.textContent
    }
  };

  /*  */

  var isUnaryTag = makeMap(
    'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
    'link,meta,param,source,track,wbr'
  );

  // Elements that you can, intentionally, leave open
  // (and which close themselves)
  var canBeLeftOpenTag = makeMap(
    'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
  );

  // HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
  // Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
  var isNonPhrasingTag = makeMap(
    'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
    'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
    'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
    'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
    'title,tr,track'
  );

  /**
   * Not type-checking this file because it's mostly vendor code.
   */

  // Regular Expressions for parsing tags and attributes
  var attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
  var dynamicArgAttribute = /^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
  var ncname = "[a-zA-Z_][\\-\\.0-9_a-zA-Z" + (unicodeRegExp.source) + "]*";
  var qnameCapture = "((?:" + ncname + "\\:)?" + ncname + ")";
  var startTagOpen = new RegExp(("^<" + qnameCapture));
  var startTagClose = /^\s*(\/?)>/;
  var endTag = new RegExp(("^<\\/" + qnameCapture + "[^>]*>"));
  var doctype = /^<!DOCTYPE [^>]+>/i;
  // #7298: escape - to avoid being passed as HTML comment when inlined in page
  var comment = /^<!\--/;
  var conditionalComment = /^<!\[/;

  // Special Elements (can contain anything)
  var isPlainTextElement = makeMap('script,style,textarea', true);
  var reCache = {};

  var decodingMap = {
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&amp;': '&',
    '&#10;': '\n',
    '&#9;': '\t',
    '&#39;': "'"
  };
  var encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;
  var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g;

  // #5992
  var isIgnoreNewlineTag = makeMap('pre,textarea', true);
  var shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\n'; };

  function decodeAttr (value, shouldDecodeNewlines) {
    var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
    return value.replace(re, function (match) { return decodingMap[match]; })
  }

  function parseHTML (html, options) {
    var stack = [];
    var expectHTML = options.expectHTML;
    var isUnaryTag$$1 = options.isUnaryTag || no;
    var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
    var index = 0;
    var last, lastTag;
    while (html) {
      last = html;
      // Make sure we're not in a plaintext content element like script/style
      if (!lastTag || !isPlainTextElement(lastTag)) {
        var textEnd = html.indexOf('<');
        if (textEnd === 0) {
          // Comment:
          if (comment.test(html)) {
            var commentEnd = html.indexOf('-->');

            if (commentEnd >= 0) {
              if (options.shouldKeepComment) {
                options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);
              }
              advance(commentEnd + 3);
              continue
            }
          }

          // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
          if (conditionalComment.test(html)) {
            var conditionalEnd = html.indexOf(']>');

            if (conditionalEnd >= 0) {
              advance(conditionalEnd + 2);
              continue
            }
          }

          // Doctype:
          var doctypeMatch = html.match(doctype);
          if (doctypeMatch) {
            advance(doctypeMatch[0].length);
            continue
          }

          // End tag:
          var endTagMatch = html.match(endTag);
          if (endTagMatch) {
            var curIndex = index;
            advance(endTagMatch[0].length);
            parseEndTag(endTagMatch[1], curIndex, index);
            continue
          }

          // Start tag:
          var startTagMatch = parseStartTag();
          if (startTagMatch) {
            handleStartTag(startTagMatch);
            if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {
              advance(1);
            }
            continue
          }
        }

        var text = (void 0), rest = (void 0), next = (void 0);
        if (textEnd >= 0) {
          rest = html.slice(textEnd);
          while (
            !endTag.test(rest) &&
            !startTagOpen.test(rest) &&
            !comment.test(rest) &&
            !conditionalComment.test(rest)
          ) {
            // < in plain text, be forgiving and treat it as text
            next = rest.indexOf('<', 1);
            if (next < 0) { break }
            textEnd += next;
            rest = html.slice(textEnd);
          }
          text = html.substring(0, textEnd);
        }

        if (textEnd < 0) {
          text = html;
        }

        if (text) {
          advance(text.length);
        }

        if (options.chars && text) {
          options.chars(text, index - text.length, index);
        }
      } else {
        var endTagLength = 0;
        var stackedTag = lastTag.toLowerCase();
        var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
        var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
          endTagLength = endTag.length;
          if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
            text = text
              .replace(/<!\--([\s\S]*?)-->/g, '$1') // #7298
              .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
          }
          if (shouldIgnoreFirstNewline(stackedTag, text)) {
            text = text.slice(1);
          }
          if (options.chars) {
            options.chars(text);
          }
          return ''
        });
        index += html.length - rest$1.length;
        html = rest$1;
        parseEndTag(stackedTag, index - endTagLength, index);
      }

      if (html === last) {
        options.chars && options.chars(html);
        if (!stack.length && options.warn) {
          options.warn(("Mal-formatted tag at end of template: \"" + html + "\""), { start: index + html.length });
        }
        break
      }
    }

    // Clean up any remaining tags
    parseEndTag();

    function advance (n) {
      index += n;
      html = html.substring(n);
    }

    function parseStartTag () {
      var start = html.match(startTagOpen);
      if (start) {
        var match = {
          tagName: start[1],
          attrs: [],
          start: index
        };
        advance(start[0].length);
        var end, attr;
        while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {
          attr.start = index;
          advance(attr[0].length);
          attr.end = index;
          match.attrs.push(attr);
        }
        if (end) {
          match.unarySlash = end[1];
          advance(end[0].length);
          match.end = index;
          return match
        }
      }
    }

    function handleStartTag (match) {
      var tagName = match.tagName;
      var unarySlash = match.unarySlash;

      if (expectHTML) {
        if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
          parseEndTag(lastTag);
        }
        if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
          parseEndTag(tagName);
        }
      }

      var unary = isUnaryTag$$1(tagName) || !!unarySlash;

      var l = match.attrs.length;
      var attrs = new Array(l);
      for (var i = 0; i < l; i++) {
        var args = match.attrs[i];
        var value = args[3] || args[4] || args[5] || '';
        var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'
          ? options.shouldDecodeNewlinesForHref
          : options.shouldDecodeNewlines;
        attrs[i] = {
          name: args[1],
          value: decodeAttr(value, shouldDecodeNewlines)
        };
        if (options.outputSourceRange) {
          attrs[i].start = args.start + args[0].match(/^\s*/).length;
          attrs[i].end = args.end;
        }
      }

      if (!unary) {
        stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end });
        lastTag = tagName;
      }

      if (options.start) {
        options.start(tagName, attrs, unary, match.start, match.end);
      }
    }

    function parseEndTag (tagName, start, end) {
      var pos, lowerCasedTagName;
      if (start == null) { start = index; }
      if (end == null) { end = index; }

      // Find the closest opened tag of the same type
      if (tagName) {
        lowerCasedTagName = tagName.toLowerCase();
        for (pos = stack.length - 1; pos >= 0; pos--) {
          if (stack[pos].lowerCasedTag === lowerCasedTagName) {
            break
          }
        }
      } else {
        // If no tag name is provided, clean shop
        pos = 0;
      }

      if (pos >= 0) {
        // Close all the open elements, up the stack
        for (var i = stack.length - 1; i >= pos; i--) {
          if (i > pos || !tagName &&
            options.warn
          ) {
            options.warn(
              ("tag <" + (stack[i].tag) + "> has no matching end tag."),
              { start: stack[i].start, end: stack[i].end }
            );
          }
          if (options.end) {
            options.end(stack[i].tag, start, end);
          }
        }

        // Remove the open elements from the stack
        stack.length = pos;
        lastTag = pos && stack[pos - 1].tag;
      } else if (lowerCasedTagName === 'br') {
        if (options.start) {
          options.start(tagName, [], true, start, end);
        }
      } else if (lowerCasedTagName === 'p') {
        if (options.start) {
          options.start(tagName, [], false, start, end);
        }
        if (options.end) {
          options.end(tagName, start, end);
        }
      }
    }
  }

  /*  */

  var onRE = /^@|^v-on:/;
  var dirRE = /^v-|^@|^:|^#/;
  var forAliasRE = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/;
  var forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
  var stripParensRE = /^\(|\)$/g;
  var dynamicArgRE = /^\[.*\]$/;

  var argRE = /:(.*)$/;
  var bindRE = /^:|^\.|^v-bind:/;
  var modifierRE = /\.[^.\]]+(?=[^\]]*$)/g;

  var slotRE = /^v-slot(:|$)|^#/;

  var lineBreakRE = /[\r\n]/;
  var whitespaceRE$1 = /\s+/g;

  var invalidAttributeRE = /[\s"'<>\/=]/;

  var decodeHTMLCached = cached(he.decode);

  var emptySlotScopeToken = "_empty_";

  // configurable state
  var warn$2;
  var delimiters;
  var transforms;
  var preTransforms;
  var postTransforms;
  var platformIsPreTag;
  var platformMustUseProp;
  var platformGetTagNamespace;
  var maybeComponent;

  function createASTElement (
    tag,
    attrs,
    parent
  ) {
    return {
      type: 1,
      tag: tag,
      attrsList: attrs,
      attrsMap: makeAttrsMap(attrs),
      rawAttrsMap: {},
      parent: parent,
      children: []
    }
  }

  /**
   * Convert HTML string to AST.
   */
  function parse (
    template,
    options
  ) {
    warn$2 = options.warn || baseWarn;

    platformIsPreTag = options.isPreTag || no;
    platformMustUseProp = options.mustUseProp || no;
    platformGetTagNamespace = options.getTagNamespace || no;
    var isReservedTag = options.isReservedTag || no;
    maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };

    transforms = pluckModuleFunction(options.modules, 'transformNode');
    preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
    postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');

    delimiters = options.delimiters;

    var stack = [];
    var preserveWhitespace = options.preserveWhitespace !== false;
    var whitespaceOption = options.whitespace;
    var root;
    var currentParent;
    var inVPre = false;
    var inPre = false;
    var warned = false;

    function warnOnce (msg, range) {
      if (!warned) {
        warned = true;
        warn$2(msg, range);
      }
    }

    function closeElement (element) {
      trimEndingWhitespace(element);
      if (!inVPre && !element.processed) {
        element = processElement(element, options);
      }
      // tree management
      if (!stack.length && element !== root) {
        // allow root elements with v-if, v-else-if and v-else
        if (root.if && (element.elseif || element.else)) {
          {
            checkRootConstraints(element);
          }
          addIfCondition(root, {
            exp: element.elseif,
            block: element
          });
        } else {
          warnOnce(
            "Component template should contain exactly one root element. " +
            "If you are using v-if on multiple elements, " +
            "use v-else-if to chain them instead.",
            { start: element.start }
          );
        }
      }
      if (currentParent && !element.forbidden) {
        if (element.elseif || element.else) {
          processIfConditions(element, currentParent);
        } else {
          if (element.slotScope) {
            // scoped slot
            // keep it in the children list so that v-else(-if) conditions can
            // find it as the prev node.
            var name = element.slotTarget || '"default"'
            ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
          }
          currentParent.children.push(element);
          element.parent = currentParent;
        }
      }

      // final children cleanup
      // filter out scoped slots
      element.children = element.children.filter(function (c) { return !(c).slotScope; });
      // remove trailing whitespace node again
      trimEndingWhitespace(element);

      // check pre state
      if (element.pre) {
        inVPre = false;
      }
      if (platformIsPreTag(element.tag)) {
        inPre = false;
      }
      // apply post-transforms
      for (var i = 0; i < postTransforms.length; i++) {
        postTransforms[i](element, options);
      }
    }

    function trimEndingWhitespace (el) {
      // remove trailing whitespace node
      if (!inPre) {
        var lastNode;
        while (
          (lastNode = el.children[el.children.length - 1]) &&
          lastNode.type === 3 &&
          lastNode.text === ' '
        ) {
          el.children.pop();
        }
      }
    }

    function checkRootConstraints (el) {
      if (el.tag === 'slot' || el.tag === 'template') {
        warnOnce(
          "Cannot use <" + (el.tag) + "> as component root element because it may " +
          'contain multiple nodes.',
          { start: el.start }
        );
      }
      if (el.attrsMap.hasOwnProperty('v-for')) {
        warnOnce(
          'Cannot use v-for on stateful component root element because ' +
          'it renders multiple elements.',
          el.rawAttrsMap['v-for']
        );
      }
    }

    parseHTML(template, {
      warn: warn$2,
      expectHTML: options.expectHTML,
      isUnaryTag: options.isUnaryTag,
      canBeLeftOpenTag: options.canBeLeftOpenTag,
      shouldDecodeNewlines: options.shouldDecodeNewlines,
      shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,
      shouldKeepComment: options.comments,
      outputSourceRange: options.outputSourceRange,
      start: function start (tag, attrs, unary, start$1, end) {
        // check namespace.
        // inherit parent ns if there is one
        var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);

        // handle IE svg bug
        /* istanbul ignore if */
        if (isIE && ns === 'svg') {
          attrs = guardIESVGBug(attrs);
        }

        var element = createASTElement(tag, attrs, currentParent);
        if (ns) {
          element.ns = ns;
        }

        {
          if (options.outputSourceRange) {
            element.start = start$1;
            element.end = end;
            element.rawAttrsMap = element.attrsList.reduce(function (cumulated, attr) {
              cumulated[attr.name] = attr;
              return cumulated
            }, {});
          }
          attrs.forEach(function (attr) {
            if (invalidAttributeRE.test(attr.name)) {
              warn$2(
                "Invalid dynamic argument expression: attribute names cannot contain " +
                "spaces, quotes, <, >, / or =.",
                {
                  start: attr.start + attr.name.indexOf("["),
                  end: attr.start + attr.name.length
                }
              );
            }
          });
        }

        if (isForbiddenTag(element) && !isServerRendering()) {
          element.forbidden = true;
          warn$2(
            'Templates should only be responsible for mapping the state to the ' +
            'UI. Avoid placing tags with side-effects in your templates, such as ' +
            "<" + tag + ">" + ', as they will not be parsed.',
            { start: element.start }
          );
        }

        // apply pre-transforms
        for (var i = 0; i < preTransforms.length; i++) {
          element = preTransforms[i](element, options) || element;
        }

        if (!inVPre) {
          processPre(element);
          if (element.pre) {
            inVPre = true;
          }
        }
        if (platformIsPreTag(element.tag)) {
          inPre = true;
        }
        if (inVPre) {
          processRawAttrs(element);
        } else if (!element.processed) {
          // structural directives
          processFor(element);
          processIf(element);
          processOnce(element);
        }

        if (!root) {
          root = element;
          {
            checkRootConstraints(root);
          }
        }

        if (!unary) {
          currentParent = element;
          stack.push(element);
        } else {
          closeElement(element);
        }
      },

      end: function end (tag, start, end$1) {
        var element = stack[stack.length - 1];
        // pop stack
        stack.length -= 1;
        currentParent = stack[stack.length - 1];
        if (options.outputSourceRange) {
          element.end = end$1;
        }
        closeElement(element);
      },

      chars: function chars (text, start, end) {
        if (!currentParent) {
          {
            if (text === template) {
              warnOnce(
                'Component template requires a root element, rather than just text.',
                { start: start }
              );
            } else if ((text = text.trim())) {
              warnOnce(
                ("text \"" + text + "\" outside root element will be ignored."),
                { start: start }
              );
            }
          }
          return
        }
        // IE textarea placeholder bug
        /* istanbul ignore if */
        if (isIE &&
          currentParent.tag === 'textarea' &&
          currentParent.attrsMap.placeholder === text
        ) {
          return
        }
        var children = currentParent.children;
        if (inPre || text.trim()) {
          text = isTextTag(currentParent) ? text : decodeHTMLCached(text);
        } else if (!children.length) {
          // remove the whitespace-only node right after an opening tag
          text = '';
        } else if (whitespaceOption) {
          if (whitespaceOption === 'condense') {
            // in condense mode, remove the whitespace node if it contains
            // line break, otherwise condense to a single space
            text = lineBreakRE.test(text) ? '' : ' ';
          } else {
            text = ' ';
          }
        } else {
          text = preserveWhitespace ? ' ' : '';
        }
        if (text) {
          if (!inPre && whitespaceOption === 'condense') {
            // condense consecutive whitespaces into single space
            text = text.replace(whitespaceRE$1, ' ');
          }
          var res;
          var child;
          if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {
            child = {
              type: 2,
              expression: res.expression,
              tokens: res.tokens,
              text: text
            };
          } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
            child = {
              type: 3,
              text: text
            };
          }
          if (child) {
            if (options.outputSourceRange) {
              child.start = start;
              child.end = end;
            }
            children.push(child);
          }
        }
      },
      comment: function comment (text, start, end) {
        // adding anyting as a sibling to the root node is forbidden
        // comments should still be allowed, but ignored
        if (currentParent) {
          var child = {
            type: 3,
            text: text,
            isComment: true
          };
          if (options.outputSourceRange) {
            child.start = start;
            child.end = end;
          }
          currentParent.children.push(child);
        }
      }
    });
    return root
  }

  function processPre (el) {
    if (getAndRemoveAttr(el, 'v-pre') != null) {
      el.pre = true;
    }
  }

  function processRawAttrs (el) {
    var list = el.attrsList;
    var len = list.length;
    if (len) {
      var attrs = el.attrs = new Array(len);
      for (var i = 0; i < len; i++) {
        attrs[i] = {
          name: list[i].name,
          value: JSON.stringify(list[i].value)
        };
        if (list[i].start != null) {
          attrs[i].start = list[i].start;
          attrs[i].end = list[i].end;
        }
      }
    } else if (!el.pre) {
      // non root node in pre blocks with no attributes
      el.plain = true;
    }
  }

  function processElement (
    element,
    options
  ) {
    processKey(element);

    // determine whether this is a plain element after
    // removing structural attributes
    element.plain = (
      !element.key &&
      !element.scopedSlots &&
      !element.attrsList.length
    );

    processRef(element);
    processSlotContent(element);
    processSlotOutlet(element);
    processComponent(element);
    for (var i = 0; i < transforms.length; i++) {
      element = transforms[i](element, options) || element;
    }
    processAttrs(element);
    return element
  }

  function processKey (el) {
    var exp = getBindingAttr(el, 'key');
    if (exp) {
      {
        if (el.tag === 'template') {
          warn$2(
            "<template> cannot be keyed. Place the key on real elements instead.",
            getRawBindingAttr(el, 'key')
          );
        }
        if (el.for) {
          var iterator = el.iterator2 || el.iterator1;
          var parent = el.parent;
          if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {
            warn$2(
              "Do not use v-for index as key on <transition-group> children, " +
              "this is the same as not using keys.",
              getRawBindingAttr(el, 'key'),
              true /* tip */
            );
          }
        }
      }
      el.key = exp;
    }
  }

  function processRef (el) {
    var ref = getBindingAttr(el, 'ref');
    if (ref) {
      el.ref = ref;
      el.refInFor = checkInFor(el);
    }
  }

  function processFor (el) {
    var exp;
    if ((exp = getAndRemoveAttr(el, 'v-for'))) {
      var res = parseFor(exp);
      if (res) {
        extend(el, res);
      } else {
        warn$2(
          ("Invalid v-for expression: " + exp),
          el.rawAttrsMap['v-for']
        );
      }
    }
  }



  function parseFor (exp) {
    var inMatch = exp.match(forAliasRE);
    if (!inMatch) { return }
    var res = {};
    res.for = inMatch[2].trim();
    var alias = inMatch[1].trim().replace(stripParensRE, '');
    var iteratorMatch = alias.match(forIteratorRE);
    if (iteratorMatch) {
      res.alias = alias.replace(forIteratorRE, '').trim();
      res.iterator1 = iteratorMatch[1].trim();
      if (iteratorMatch[2]) {
        res.iterator2 = iteratorMatch[2].trim();
      }
    } else {
      res.alias = alias;
    }
    return res
  }

  function processIf (el) {
    var exp = getAndRemoveAttr(el, 'v-if');
    if (exp) {
      el.if = exp;
      addIfCondition(el, {
        exp: exp,
        block: el
      });
    } else {
      if (getAndRemoveAttr(el, 'v-else') != null) {
        el.else = true;
      }
      var elseif = getAndRemoveAttr(el, 'v-else-if');
      if (elseif) {
        el.elseif = elseif;
      }
    }
  }

  function processIfConditions (el, parent) {
    var prev = findPrevElement(parent.children);
    if (prev && prev.if) {
      addIfCondition(prev, {
        exp: el.elseif,
        block: el
      });
    } else {
      warn$2(
        "v-" + (el.elseif ? ('else-if="' + el.elseif + '"') : 'else') + " " +
        "used on element <" + (el.tag) + "> without corresponding v-if.",
        el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']
      );
    }
  }

  function findPrevElement (children) {
    var i = children.length;
    while (i--) {
      if (children[i].type === 1) {
        return children[i]
      } else {
        if (children[i].text !== ' ') {
          warn$2(
            "text \"" + (children[i].text.trim()) + "\" between v-if and v-else(-if) " +
            "will be ignored.",
            children[i]
          );
        }
        children.pop();
      }
    }
  }

  function addIfCondition (el, condition) {
    if (!el.ifConditions) {
      el.ifConditions = [];
    }
    el.ifConditions.push(condition);
  }

  function processOnce (el) {
    var once$$1 = getAndRemoveAttr(el, 'v-once');
    if (once$$1 != null) {
      el.once = true;
    }
  }

  // handle content being passed to a component as slot,
  // e.g. <template slot="xxx">, <div slot-scope="xxx">
  function processSlotContent (el) {
    var slotScope;
    if (el.tag === 'template') {
      slotScope = getAndRemoveAttr(el, 'scope');
      /* istanbul ignore if */
      if (slotScope) {
        warn$2(
          "the \"scope\" attribute for scoped slots have been deprecated and " +
          "replaced by \"slot-scope\" since 2.5. The new \"slot-scope\" attribute " +
          "can also be used on plain elements in addition to <template> to " +
          "denote scoped slots.",
          el.rawAttrsMap['scope'],
          true
        );
      }
      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');
    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {
      /* istanbul ignore if */
      if (el.attrsMap['v-for']) {
        warn$2(
          "Ambiguous combined usage of slot-scope and v-for on <" + (el.tag) + "> " +
          "(v-for takes higher priority). Use a wrapper <template> for the " +
          "scoped slot to make it clearer.",
          el.rawAttrsMap['slot-scope'],
          true
        );
      }
      el.slotScope = slotScope;
    }

    // slot="xxx"
    var slotTarget = getBindingAttr(el, 'slot');
    if (slotTarget) {
      el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
      el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']);
      // preserve slot as an attribute for native shadow DOM compat
      // only for non-scoped slots.
      if (el.tag !== 'template' && !el.slotScope) {
        addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));
      }
    }

    // 2.6 v-slot syntax
    {
      if (el.tag === 'template') {
        // v-slot on <template>
        var slotBinding = getAndRemoveAttrByRegex(el, slotRE);
        if (slotBinding) {
          {
            if (el.slotTarget || el.slotScope) {
              warn$2(
                "Unexpected mixed usage of different slot syntaxes.",
                el
              );
            }
            if (el.parent && !maybeComponent(el.parent)) {
              warn$2(
                "<template v-slot> can only appear at the root level inside " +
                "the receiving component",
                el
              );
            }
          }
          var ref = getSlotName(slotBinding);
          var name = ref.name;
          var dynamic = ref.dynamic;
          el.slotTarget = name;
          el.slotTargetDynamic = dynamic;
          el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf
        }
      } else {
        // v-slot on component, denotes default slot
        var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);
        if (slotBinding$1) {
          {
            if (!maybeComponent(el)) {
              warn$2(
                "v-slot can only be used on components or <template>.",
                slotBinding$1
              );
            }
            if (el.slotScope || el.slotTarget) {
              warn$2(
                "Unexpected mixed usage of different slot syntaxes.",
                el
              );
            }
            if (el.scopedSlots) {
              warn$2(
                "To avoid scope ambiguity, the default slot should also use " +
                "<template> syntax when there are other named slots.",
                slotBinding$1
              );
            }
          }
          // add the component's children to its default slot
          var slots = el.scopedSlots || (el.scopedSlots = {});
          var ref$1 = getSlotName(slotBinding$1);
          var name$1 = ref$1.name;
          var dynamic$1 = ref$1.dynamic;
          var slotContainer = slots[name$1] = createASTElement('template', [], el);
          slotContainer.slotTarget = name$1;
          slotContainer.slotTargetDynamic = dynamic$1;
          slotContainer.children = el.children.filter(function (c) {
            if (!c.slotScope) {
              c.parent = slotContainer;
              return true
            }
          });
          slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken;
          // remove children as they are returned from scopedSlots now
          el.children = [];
          // mark el non-plain so data gets generated
          el.plain = false;
        }
      }
    }
  }

  function getSlotName (binding) {
    var name = binding.name.replace(slotRE, '');
    if (!name) {
      if (binding.name[0] !== '#') {
        name = 'default';
      } else {
        warn$2(
          "v-slot shorthand syntax requires a slot name.",
          binding
        );
      }
    }
    return dynamicArgRE.test(name)
      // dynamic [name]
      ? { name: name.slice(1, -1), dynamic: true }
      // static name
      : { name: ("\"" + name + "\""), dynamic: false }
  }

  // handle <slot/> outlets
  function processSlotOutlet (el) {
    if (el.tag === 'slot') {
      el.slotName = getBindingAttr(el, 'name');
      if (el.key) {
        warn$2(
          "`key` does not work on <slot> because slots are abstract outlets " +
          "and can possibly expand into multiple elements. " +
          "Use the key on a wrapping element instead.",
          getRawBindingAttr(el, 'key')
        );
      }
    }
  }

  function processComponent (el) {
    var binding;
    if ((binding = getBindingAttr(el, 'is'))) {
      el.component = binding;
    }
    if (getAndRemoveAttr(el, 'inline-template') != null) {
      el.inlineTemplate = true;
    }
  }

  function processAttrs (el) {
    var list = el.attrsList;
    var i, l, name, rawName, value, modifiers, syncGen, isDynamic;
    for (i = 0, l = list.length; i < l; i++) {
      name = rawName = list[i].name;
      value = list[i].value;
      if (dirRE.test(name)) {
        // mark element as dynamic
        el.hasBindings = true;
        // modifiers
        modifiers = parseModifiers(name.replace(dirRE, ''));
        // support .foo shorthand syntax for the .prop modifier
        if (modifiers) {
          name = name.replace(modifierRE, '');
        }
        if (bindRE.test(name)) { // v-bind
          name = name.replace(bindRE, '');
          value = parseFilters(value);
          isDynamic = dynamicArgRE.test(name);
          if (isDynamic) {
            name = name.slice(1, -1);
          }
          if (
            value.trim().length === 0
          ) {
            warn$2(
              ("The value for a v-bind expression cannot be empty. Found in \"v-bind:" + name + "\"")
            );
          }
          if (modifiers) {
            if (modifiers.prop && !isDynamic) {
              name = camelize(name);
              if (name === 'innerHtml') { name = 'innerHTML'; }
            }
            if (modifiers.camel && !isDynamic) {
              name = camelize(name);
            }
            if (modifiers.sync) {
              syncGen = genAssignmentCode(value, "$event");
              if (!isDynamic) {
                addHandler(
                  el,
                  ("update:" + (camelize(name))),
                  syncGen,
                  null,
                  false,
                  warn$2,
                  list[i]
                );
                if (hyphenate(name) !== camelize(name)) {
                  addHandler(
                    el,
                    ("update:" + (hyphenate(name))),
                    syncGen,
                    null,
                    false,
                    warn$2,
                    list[i]
                  );
                }
              } else {
                // handler w/ dynamic event name
                addHandler(
                  el,
                  ("\"update:\"+(" + name + ")"),
                  syncGen,
                  null,
                  false,
                  warn$2,
                  list[i],
                  true // dynamic
                );
              }
            }
          }
          if ((modifiers && modifiers.prop) || (
            !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)
          )) {
            addProp(el, name, value, list[i], isDynamic);
          } else {
            addAttr(el, name, value, list[i], isDynamic);
          }
        } else if (onRE.test(name)) { // v-on
          name = name.replace(onRE, '');
          isDynamic = dynamicArgRE.test(name);
          if (isDynamic) {
            name = name.slice(1, -1);
          }
          addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);
        } else { // normal directives
          name = name.replace(dirRE, '');
          // parse arg
          var argMatch = name.match(argRE);
          var arg = argMatch && argMatch[1];
          isDynamic = false;
          if (arg) {
            name = name.slice(0, -(arg.length + 1));
            if (dynamicArgRE.test(arg)) {
              arg = arg.slice(1, -1);
              isDynamic = true;
            }
          }
          addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);
          if (name === 'model') {
            checkForAliasModel(el, value);
          }
        }
      } else {
        // literal attribute
        {
          var res = parseText(value, delimiters);
          if (res) {
            warn$2(
              name + "=\"" + value + "\": " +
              'Interpolation inside attributes has been removed. ' +
              'Use v-bind or the colon shorthand instead. For example, ' +
              'instead of <div id="{{ val }}">, use <div :id="val">.',
              list[i]
            );
          }
        }
        addAttr(el, name, JSON.stringify(value), list[i]);
        // #6887 firefox doesn't update muted state if set via attribute
        // even immediately after element creation
        if (!el.component &&
            name === 'muted' &&
            platformMustUseProp(el.tag, el.attrsMap.type, name)) {
          addProp(el, name, 'true', list[i]);
        }
      }
    }
  }

  function checkInFor (el) {
    var parent = el;
    while (parent) {
      if (parent.for !== undefined) {
        return true
      }
      parent = parent.parent;
    }
    return false
  }

  function parseModifiers (name) {
    var match = name.match(modifierRE);
    if (match) {
      var ret = {};
      match.forEach(function (m) { ret[m.slice(1)] = true; });
      return ret
    }
  }

  function makeAttrsMap (attrs) {
    var map = {};
    for (var i = 0, l = attrs.length; i < l; i++) {
      if (
        map[attrs[i].name] && !isIE && !isEdge
      ) {
        warn$2('duplicate attribute: ' + attrs[i].name, attrs[i]);
      }
      map[attrs[i].name] = attrs[i].value;
    }
    return map
  }

  // for script (e.g. type="x/template") or style, do not decode content
  function isTextTag (el) {
    return el.tag === 'script' || el.tag === 'style'
  }

  function isForbiddenTag (el) {
    return (
      el.tag === 'style' ||
      (el.tag === 'script' && (
        !el.attrsMap.type ||
        el.attrsMap.type === 'text/javascript'
      ))
    )
  }

  var ieNSBug = /^xmlns:NS\d+/;
  var ieNSPrefix = /^NS\d+:/;

  /* istanbul ignore next */
  function guardIESVGBug (attrs) {
    var res = [];
    for (var i = 0; i < attrs.length; i++) {
      var attr = attrs[i];
      if (!ieNSBug.test(attr.name)) {
        attr.name = attr.name.replace(ieNSPrefix, '');
        res.push(attr);
      }
    }
    return res
  }

  function checkForAliasModel (el, value) {
    var _el = el;
    while (_el) {
      if (_el.for && _el.alias === value) {
        warn$2(
          "<" + (el.tag) + " v-model=\"" + value + "\">: " +
          "You are binding v-model directly to a v-for iteration alias. " +
          "This will not be able to modify the v-for source array because " +
          "writing to the alias is like modifying a function local variable. " +
          "Consider using an array of objects and use v-model on an object property instead.",
          el.rawAttrsMap['v-model']
        );
      }
      _el = _el.parent;
    }
  }

  /*  */

  function preTransformNode (el, options) {
    if (el.tag === 'input') {
      var map = el.attrsMap;
      if (!map['v-model']) {
        return
      }

      var typeBinding;
      if (map[':type'] || map['v-bind:type']) {
        typeBinding = getBindingAttr(el, 'type');
      }
      if (!map.type && !typeBinding && map['v-bind']) {
        typeBinding = "(" + (map['v-bind']) + ").type";
      }

      if (typeBinding) {
        var ifCondition = getAndRemoveAttr(el, 'v-if', true);
        var ifConditionExtra = ifCondition ? ("&&(" + ifCondition + ")") : "";
        var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;
        var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);
        // 1. checkbox
        var branch0 = cloneASTElement(el);
        // process for on the main node
        processFor(branch0);
        addRawAttr(branch0, 'type', 'checkbox');
        processElement(branch0, options);
        branch0.processed = true; // prevent it from double-processed
        branch0.if = "(" + typeBinding + ")==='checkbox'" + ifConditionExtra;
        addIfCondition(branch0, {
          exp: branch0.if,
          block: branch0
        });
        // 2. add radio else-if condition
        var branch1 = cloneASTElement(el);
        getAndRemoveAttr(branch1, 'v-for', true);
        addRawAttr(branch1, 'type', 'radio');
        processElement(branch1, options);
        addIfCondition(branch0, {
          exp: "(" + typeBinding + ")==='radio'" + ifConditionExtra,
          block: branch1
        });
        // 3. other
        var branch2 = cloneASTElement(el);
        getAndRemoveAttr(branch2, 'v-for', true);
        addRawAttr(branch2, ':type', typeBinding);
        processElement(branch2, options);
        addIfCondition(branch0, {
          exp: ifCondition,
          block: branch2
        });

        if (hasElse) {
          branch0.else = true;
        } else if (elseIfCondition) {
          branch0.elseif = elseIfCondition;
        }

        return branch0
      }
    }
  }

  function cloneASTElement (el) {
    return createASTElement(el.tag, el.attrsList.slice(), el.parent)
  }

  var model$1 = {
    preTransformNode: preTransformNode
  };

  var modules$1 = [
    klass$1,
    style$1,
    model$1
  ];

  /*  */

  function text (el, dir) {
    if (dir.value) {
      addProp(el, 'textContent', ("_s(" + (dir.value) + ")"), dir);
    }
  }

  /*  */

  function html (el, dir) {
    if (dir.value) {
      addProp(el, 'innerHTML', ("_s(" + (dir.value) + ")"), dir);
    }
  }

  var directives$1 = {
    model: model,
    text: text,
    html: html
  };

  /*  */

  var baseOptions = {
    expectHTML: true,
    modules: modules$1,
    directives: directives$1,
    isPreTag: isPreTag,
    isUnaryTag: isUnaryTag,
    mustUseProp: mustUseProp,
    canBeLeftOpenTag: canBeLeftOpenTag,
    isReservedTag: isReservedTag,
    getTagNamespace: getTagNamespace,
    staticKeys: genStaticKeys(modules$1)
  };

  /*  */

  var isStaticKey;
  var isPlatformReservedTag;

  var genStaticKeysCached = cached(genStaticKeys$1);

  /**
   * Goal of the optimizer: walk the generated template AST tree
   * and detect sub-trees that are purely static, i.e. parts of
   * the DOM that never needs to change.
   *
   * Once we detect these sub-trees, we can:
   *
   * 1. Hoist them into constants, so that we no longer need to
   *    create fresh nodes for them on each re-render;
   * 2. Completely skip them in the patching process.
   */
  function optimize (root, options) {
    if (!root) { return }
    isStaticKey = genStaticKeysCached(options.staticKeys || '');
    isPlatformReservedTag = options.isReservedTag || no;
    // first pass: mark all non-static nodes.
    markStatic$1(root);
    // second pass: mark static roots.
    markStaticRoots(root, false);
  }

  function genStaticKeys$1 (keys) {
    return makeMap(
      'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +
      (keys ? ',' + keys : '')
    )
  }

  function markStatic$1 (node) {
    node.static = isStatic(node);
    if (node.type === 1) {
      // do not make component slot content static. this avoids
      // 1. components not able to mutate slot nodes
      // 2. static slot content fails for hot-reloading
      if (
        !isPlatformReservedTag(node.tag) &&
        node.tag !== 'slot' &&
        node.attrsMap['inline-template'] == null
      ) {
        return
      }
      for (var i = 0, l = node.children.length; i < l; i++) {
        var child = node.children[i];
        markStatic$1(child);
        if (!child.static) {
          node.static = false;
        }
      }
      if (node.ifConditions) {
        for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
          var block = node.ifConditions[i$1].block;
          markStatic$1(block);
          if (!block.static) {
            node.static = false;
          }
        }
      }
    }
  }

  function markStaticRoots (node, isInFor) {
    if (node.type === 1) {
      if (node.static || node.once) {
        node.staticInFor = isInFor;
      }
      // For a node to qualify as a static root, it should have children that
      // are not just static text. Otherwise the cost of hoisting out will
      // outweigh the benefits and it's better off to just always render it fresh.
      if (node.static && node.children.length && !(
        node.children.length === 1 &&
        node.children[0].type === 3
      )) {
        node.staticRoot = true;
        return
      } else {
        node.staticRoot = false;
      }
      if (node.children) {
        for (var i = 0, l = node.children.length; i < l; i++) {
          markStaticRoots(node.children[i], isInFor || !!node.for);
        }
      }
      if (node.ifConditions) {
        for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
          markStaticRoots(node.ifConditions[i$1].block, isInFor);
        }
      }
    }
  }

  function isStatic (node) {
    if (node.type === 2) { // expression
      return false
    }
    if (node.type === 3) { // text
      return true
    }
    return !!(node.pre || (
      !node.hasBindings && // no dynamic bindings
      !node.if && !node.for && // not v-if or v-for or v-else
      !isBuiltInTag(node.tag) && // not a built-in
      isPlatformReservedTag(node.tag) && // not a component
      !isDirectChildOfTemplateFor(node) &&
      Object.keys(node).every(isStaticKey)
    ))
  }

  function isDirectChildOfTemplateFor (node) {
    while (node.parent) {
      node = node.parent;
      if (node.tag !== 'template') {
        return false
      }
      if (node.for) {
        return true
      }
    }
    return false
  }

  /*  */

  var fnExpRE = /^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/;
  var fnInvokeRE = /\([^)]*?\);*$/;
  var simplePathRE = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/;

  // KeyboardEvent.keyCode aliases
  var keyCodes = {
    esc: 27,
    tab: 9,
    enter: 13,
    space: 32,
    up: 38,
    left: 37,
    right: 39,
    down: 40,
    'delete': [8, 46]
  };

  // KeyboardEvent.key aliases
  var keyNames = {
    // #7880: IE11 and Edge use `Esc` for Escape key name.
    esc: ['Esc', 'Escape'],
    tab: 'Tab',
    enter: 'Enter',
    // #9112: IE11 uses `Spacebar` for Space key name.
    space: [' ', 'Spacebar'],
    // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.
    up: ['Up', 'ArrowUp'],
    left: ['Left', 'ArrowLeft'],
    right: ['Right', 'ArrowRight'],
    down: ['Down', 'ArrowDown'],
    // #9112: IE11 uses `Del` for Delete key name.
    'delete': ['Backspace', 'Delete', 'Del']
  };

  // #4868: modifiers that prevent the execution of the listener
  // need to explicitly return null so that we can determine whether to remove
  // the listener for .once
  var genGuard = function (condition) { return ("if(" + condition + ")return null;"); };

  var modifierCode = {
    stop: '$event.stopPropagation();',
    prevent: '$event.preventDefault();',
    self: genGuard("$event.target !== $event.currentTarget"),
    ctrl: genGuard("!$event.ctrlKey"),
    shift: genGuard("!$event.shiftKey"),
    alt: genGuard("!$event.altKey"),
    meta: genGuard("!$event.metaKey"),
    left: genGuard("'button' in $event && $event.button !== 0"),
    middle: genGuard("'button' in $event && $event.button !== 1"),
    right: genGuard("'button' in $event && $event.button !== 2")
  };

  function genHandlers (
    events,
    isNative
  ) {
    var prefix = isNative ? 'nativeOn:' : 'on:';
    var staticHandlers = "";
    var dynamicHandlers = "";
    for (var name in events) {
      var handlerCode = genHandler(events[name]);
      if (events[name] && events[name].dynamic) {
        dynamicHandlers += name + "," + handlerCode + ",";
      } else {
        staticHandlers += "\"" + name + "\":" + handlerCode + ",";
      }
    }
    staticHandlers = "{" + (staticHandlers.slice(0, -1)) + "}";
    if (dynamicHandlers) {
      return prefix + "_d(" + staticHandlers + ",[" + (dynamicHandlers.slice(0, -1)) + "])"
    } else {
      return prefix + staticHandlers
    }
  }

  function genHandler (handler) {
    if (!handler) {
      return 'function(){}'
    }

    if (Array.isArray(handler)) {
      return ("[" + (handler.map(function (handler) { return genHandler(handler); }).join(',')) + "]")
    }

    var isMethodPath = simplePathRE.test(handler.value);
    var isFunctionExpression = fnExpRE.test(handler.value);
    var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));

    if (!handler.modifiers) {
      if (isMethodPath || isFunctionExpression) {
        return handler.value
      }
      return ("function($event){" + (isFunctionInvocation ? ("return " + (handler.value)) : handler.value) + "}") // inline statement
    } else {
      var code = '';
      var genModifierCode = '';
      var keys = [];
      for (var key in handler.modifiers) {
        if (modifierCode[key]) {
          genModifierCode += modifierCode[key];
          // left/right
          if (keyCodes[key]) {
            keys.push(key);
          }
        } else if (key === 'exact') {
          var modifiers = (handler.modifiers);
          genModifierCode += genGuard(
            ['ctrl', 'shift', 'alt', 'meta']
              .filter(function (keyModifier) { return !modifiers[keyModifier]; })
              .map(function (keyModifier) { return ("$event." + keyModifier + "Key"); })
              .join('||')
          );
        } else {
          keys.push(key);
        }
      }
      if (keys.length) {
        code += genKeyFilter(keys);
      }
      // Make sure modifiers like prevent and stop get executed after key filtering
      if (genModifierCode) {
        code += genModifierCode;
      }
      var handlerCode = isMethodPath
        ? ("return " + (handler.value) + "($event)")
        : isFunctionExpression
          ? ("return (" + (handler.value) + ")($event)")
          : isFunctionInvocation
            ? ("return " + (handler.value))
            : handler.value;
      return ("function($event){" + code + handlerCode + "}")
    }
  }

  function genKeyFilter (keys) {
    return (
      // make sure the key filters only apply to KeyboardEvents
      // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake
      // key events that do not have keyCode property...
      "if(!$event.type.indexOf('key')&&" +
      (keys.map(genFilterCode).join('&&')) + ")return null;"
    )
  }

  function genFilterCode (key) {
    var keyVal = parseInt(key, 10);
    if (keyVal) {
      return ("$event.keyCode!==" + keyVal)
    }
    var keyCode = keyCodes[key];
    var keyName = keyNames[key];
    return (
      "_k($event.keyCode," +
      (JSON.stringify(key)) + "," +
      (JSON.stringify(keyCode)) + "," +
      "$event.key," +
      "" + (JSON.stringify(keyName)) +
      ")"
    )
  }

  /*  */

  function on (el, dir) {
    if (dir.modifiers) {
      warn("v-on without argument does not support modifiers.");
    }
    el.wrapListeners = function (code) { return ("_g(" + code + "," + (dir.value) + ")"); };
  }

  /*  */

  function bind$1 (el, dir) {
    el.wrapData = function (code) {
      return ("_b(" + code + ",'" + (el.tag) + "'," + (dir.value) + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")")
    };
  }

  /*  */

  var baseDirectives = {
    on: on,
    bind: bind$1,
    cloak: noop
  };

  /*  */





  var CodegenState = function CodegenState (options) {
    this.options = options;
    this.warn = options.warn || baseWarn;
    this.transforms = pluckModuleFunction(options.modules, 'transformCode');
    this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
    this.directives = extend(extend({}, baseDirectives), options.directives);
    var isReservedTag = options.isReservedTag || no;
    this.maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };
    this.onceId = 0;
    this.staticRenderFns = [];
    this.pre = false;
  };



  function generate (
    ast,
    options
  ) {
    var state = new CodegenState(options);
    var code = ast ? genElement(ast, state) : '_c("div")';
    return {
      render: ("with(this){return " + code + "}"),
      staticRenderFns: state.staticRenderFns
    }
  }

  function genElement (el, state) {
    if (el.parent) {
      el.pre = el.pre || el.parent.pre;
    }

    if (el.staticRoot && !el.staticProcessed) {
      return genStatic(el, state)
    } else if (el.once && !el.onceProcessed) {
      return genOnce(el, state)
    } else if (el.for && !el.forProcessed) {
      return genFor(el, state)
    } else if (el.if && !el.ifProcessed) {
      return genIf(el, state)
    } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {
      return genChildren(el, state) || 'void 0'
    } else if (el.tag === 'slot') {
      return genSlot(el, state)
    } else {
      // component or element
      var code;
      if (el.component) {
        code = genComponent(el.component, el, state);
      } else {
        var data;
        if (!el.plain || (el.pre && state.maybeComponent(el))) {
          data = genData$2(el, state);
        }

        var children = el.inlineTemplate ? null : genChildren(el, state, true);
        code = "_c('" + (el.tag) + "'" + (data ? ("," + data) : '') + (children ? ("," + children) : '') + ")";
      }
      // module transforms
      for (var i = 0; i < state.transforms.length; i++) {
        code = state.transforms[i](el, code);
      }
      return code
    }
  }

  // hoist static sub-trees out
  function genStatic (el, state) {
    el.staticProcessed = true;
    // Some elements (templates) need to behave differently inside of a v-pre
    // node.  All pre nodes are static roots, so we can use this as a location to
    // wrap a state change and reset it upon exiting the pre node.
    var originalPreState = state.pre;
    if (el.pre) {
      state.pre = el.pre;
    }
    state.staticRenderFns.push(("with(this){return " + (genElement(el, state)) + "}"));
    state.pre = originalPreState;
    return ("_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")")
  }

  // v-once
  function genOnce (el, state) {
    el.onceProcessed = true;
    if (el.if && !el.ifProcessed) {
      return genIf(el, state)
    } else if (el.staticInFor) {
      var key = '';
      var parent = el.parent;
      while (parent) {
        if (parent.for) {
          key = parent.key;
          break
        }
        parent = parent.parent;
      }
      if (!key) {
        state.warn(
          "v-once can only be used inside v-for that is keyed. ",
          el.rawAttrsMap['v-once']
        );
        return genElement(el, state)
      }
      return ("_o(" + (genElement(el, state)) + "," + (state.onceId++) + "," + key + ")")
    } else {
      return genStatic(el, state)
    }
  }

  function genIf (
    el,
    state,
    altGen,
    altEmpty
  ) {
    el.ifProcessed = true; // avoid recursion
    return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)
  }

  function genIfConditions (
    conditions,
    state,
    altGen,
    altEmpty
  ) {
    if (!conditions.length) {
      return altEmpty || '_e()'
    }

    var condition = conditions.shift();
    if (condition.exp) {
      return ("(" + (condition.exp) + ")?" + (genTernaryExp(condition.block)) + ":" + (genIfConditions(conditions, state, altGen, altEmpty)))
    } else {
      return ("" + (genTernaryExp(condition.block)))
    }

    // v-if with v-once should generate code like (a)?_m(0):_m(1)
    function genTernaryExp (el) {
      return altGen
        ? altGen(el, state)
        : el.once
          ? genOnce(el, state)
          : genElement(el, state)
    }
  }

  function genFor (
    el,
    state,
    altGen,
    altHelper
  ) {
    var exp = el.for;
    var alias = el.alias;
    var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
    var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';

    if (state.maybeComponent(el) &&
      el.tag !== 'slot' &&
      el.tag !== 'template' &&
      !el.key
    ) {
      state.warn(
        "<" + (el.tag) + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " +
        "v-for should have explicit keys. " +
        "See https://vuejs.org/guide/list.html#key for more info.",
        el.rawAttrsMap['v-for'],
        true /* tip */
      );
    }

    el.forProcessed = true; // avoid recursion
    return (altHelper || '_l') + "((" + exp + ")," +
      "function(" + alias + iterator1 + iterator2 + "){" +
        "return " + ((altGen || genElement)(el, state)) +
      '})'
  }

  function genData$2 (el, state) {
    var data = '{';

    // directives first.
    // directives may mutate the el's other properties before they are generated.
    var dirs = genDirectives(el, state);
    if (dirs) { data += dirs + ','; }

    // key
    if (el.key) {
      data += "key:" + (el.key) + ",";
    }
    // ref
    if (el.ref) {
      data += "ref:" + (el.ref) + ",";
    }
    if (el.refInFor) {
      data += "refInFor:true,";
    }
    // pre
    if (el.pre) {
      data += "pre:true,";
    }
    // record original tag name for components using "is" attribute
    if (el.component) {
      data += "tag:\"" + (el.tag) + "\",";
    }
    // module data generation functions
    for (var i = 0; i < state.dataGenFns.length; i++) {
      data += state.dataGenFns[i](el);
    }
    // attributes
    if (el.attrs) {
      data += "attrs:" + (genProps(el.attrs)) + ",";
    }
    // DOM props
    if (el.props) {
      data += "domProps:" + (genProps(el.props)) + ",";
    }
    // event handlers
    if (el.events) {
      data += (genHandlers(el.events, false)) + ",";
    }
    if (el.nativeEvents) {
      data += (genHandlers(el.nativeEvents, true)) + ",";
    }
    // slot target
    // only for non-scoped slots
    if (el.slotTarget && !el.slotScope) {
      data += "slot:" + (el.slotTarget) + ",";
    }
    // scoped slots
    if (el.scopedSlots) {
      data += (genScopedSlots(el, el.scopedSlots, state)) + ",";
    }
    // component v-model
    if (el.model) {
      data += "model:{value:" + (el.model.value) + ",callback:" + (el.model.callback) + ",expression:" + (el.model.expression) + "},";
    }
    // inline-template
    if (el.inlineTemplate) {
      var inlineTemplate = genInlineTemplate(el, state);
      if (inlineTemplate) {
        data += inlineTemplate + ",";
      }
    }
    data = data.replace(/,$/, '') + '}';
    // v-bind dynamic argument wrap
    // v-bind with dynamic arguments must be applied using the same v-bind object
    // merge helper so that class/style/mustUseProp attrs are handled correctly.
    if (el.dynamicAttrs) {
      data = "_b(" + data + ",\"" + (el.tag) + "\"," + (genProps(el.dynamicAttrs)) + ")";
    }
    // v-bind data wrap
    if (el.wrapData) {
      data = el.wrapData(data);
    }
    // v-on data wrap
    if (el.wrapListeners) {
      data = el.wrapListeners(data);
    }
    return data
  }

  function genDirectives (el, state) {
    var dirs = el.directives;
    if (!dirs) { return }
    var res = 'directives:[';
    var hasRuntime = false;
    var i, l, dir, needRuntime;
    for (i = 0, l = dirs.length; i < l; i++) {
      dir = dirs[i];
      needRuntime = true;
      var gen = state.directives[dir.name];
      if (gen) {
        // compile-time directive that manipulates AST.
        // returns true if it also needs a runtime counterpart.
        needRuntime = !!gen(el, dir, state.warn);
      }
      if (needRuntime) {
        hasRuntime = true;
        res += "{name:\"" + (dir.name) + "\",rawName:\"" + (dir.rawName) + "\"" + (dir.value ? (",value:(" + (dir.value) + "),expression:" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (",arg:" + (dir.isDynamicArg ? dir.arg : ("\"" + (dir.arg) + "\""))) : '') + (dir.modifiers ? (",modifiers:" + (JSON.stringify(dir.modifiers))) : '') + "},";
      }
    }
    if (hasRuntime) {
      return res.slice(0, -1) + ']'
    }
  }

  function genInlineTemplate (el, state) {
    var ast = el.children[0];
    if (el.children.length !== 1 || ast.type !== 1) {
      state.warn(
        'Inline-template components must have exactly one child element.',
        { start: el.start }
      );
    }
    if (ast && ast.type === 1) {
      var inlineRenderFns = generate(ast, state.options);
      return ("inlineTemplate:{render:function(){" + (inlineRenderFns.render) + "},staticRenderFns:[" + (inlineRenderFns.staticRenderFns.map(function (code) { return ("function(){" + code + "}"); }).join(',')) + "]}")
    }
  }

  function genScopedSlots (
    el,
    slots,
    state
  ) {
    // by default scoped slots are considered "stable", this allows child
    // components with only scoped slots to skip forced updates from parent.
    // but in some cases we have to bail-out of this optimization
    // for example if the slot contains dynamic names, has v-if or v-for on them...
    var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {
      var slot = slots[key];
      return (
        slot.slotTargetDynamic ||
        slot.if ||
        slot.for ||
        containsSlotChild(slot) // is passing down slot from parent which may be dynamic
      )
    });

    // #9534: if a component with scoped slots is inside a conditional branch,
    // it's possible for the same component to be reused but with different
    // compiled slot content. To avoid that, we generate a unique key based on
    // the generated code of all the slot contents.
    var needsKey = !!el.if;

    // OR when it is inside another scoped slot or v-for (the reactivity may be
    // disconnected due to the intermediate scope variable)
    // #9438, #9506
    // TODO: this can be further optimized by properly analyzing in-scope bindings
    // and skip force updating ones that do not actually use scope variables.
    if (!needsForceUpdate) {
      var parent = el.parent;
      while (parent) {
        if (
          (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||
          parent.for
        ) {
          needsForceUpdate = true;
          break
        }
        if (parent.if) {
          needsKey = true;
        }
        parent = parent.parent;
      }
    }

    var generatedSlots = Object.keys(slots)
      .map(function (key) { return genScopedSlot(slots[key], state); })
      .join(',');

    return ("scopedSlots:_u([" + generatedSlots + "]" + (needsForceUpdate ? ",null,true" : "") + (!needsForceUpdate && needsKey ? (",null,false," + (hash(generatedSlots))) : "") + ")")
  }

  function hash(str) {
    var hash = 5381;
    var i = str.length;
    while(i) {
      hash = (hash * 33) ^ str.charCodeAt(--i);
    }
    return hash >>> 0
  }

  function containsSlotChild (el) {
    if (el.type === 1) {
      if (el.tag === 'slot') {
        return true
      }
      return el.children.some(containsSlotChild)
    }
    return false
  }

  function genScopedSlot (
    el,
    state
  ) {
    var isLegacySyntax = el.attrsMap['slot-scope'];
    if (el.if && !el.ifProcessed && !isLegacySyntax) {
      return genIf(el, state, genScopedSlot, "null")
    }
    if (el.for && !el.forProcessed) {
      return genFor(el, state, genScopedSlot)
    }
    var slotScope = el.slotScope === emptySlotScopeToken
      ? ""
      : String(el.slotScope);
    var fn = "function(" + slotScope + "){" +
      "return " + (el.tag === 'template'
        ? el.if && isLegacySyntax
          ? ("(" + (el.if) + ")?" + (genChildren(el, state) || 'undefined') + ":undefined")
          : genChildren(el, state) || 'undefined'
        : genElement(el, state)) + "}";
    // reverse proxy v-slot without scope on this.$slots
    var reverseProxy = slotScope ? "" : ",proxy:true";
    return ("{key:" + (el.slotTarget || "\"default\"") + ",fn:" + fn + reverseProxy + "}")
  }

  function genChildren (
    el,
    state,
    checkSkip,
    altGenElement,
    altGenNode
  ) {
    var children = el.children;
    if (children.length) {
      var el$1 = children[0];
      // optimize single v-for
      if (children.length === 1 &&
        el$1.for &&
        el$1.tag !== 'template' &&
        el$1.tag !== 'slot'
      ) {
        var normalizationType = checkSkip
          ? state.maybeComponent(el$1) ? ",1" : ",0"
          : "";
        return ("" + ((altGenElement || genElement)(el$1, state)) + normalizationType)
      }
      var normalizationType$1 = checkSkip
        ? getNormalizationType(children, state.maybeComponent)
        : 0;
      var gen = altGenNode || genNode;
      return ("[" + (children.map(function (c) { return gen(c, state); }).join(',')) + "]" + (normalizationType$1 ? ("," + normalizationType$1) : ''))
    }
  }

  // determine the normalization needed for the children array.
  // 0: no normalization needed
  // 1: simple normalization needed (possible 1-level deep nested array)
  // 2: full normalization needed
  function getNormalizationType (
    children,
    maybeComponent
  ) {
    var res = 0;
    for (var i = 0; i < children.length; i++) {
      var el = children[i];
      if (el.type !== 1) {
        continue
      }
      if (needsNormalization(el) ||
          (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {
        res = 2;
        break
      }
      if (maybeComponent(el) ||
          (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {
        res = 1;
      }
    }
    return res
  }

  function needsNormalization (el) {
    return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
  }

  function genNode (node, state) {
    if (node.type === 1) {
      return genElement(node, state)
    } else if (node.type === 3 && node.isComment) {
      return genComment(node)
    } else {
      return genText(node)
    }
  }

  function genText (text) {
    return ("_v(" + (text.type === 2
      ? text.expression // no need for () because already wrapped in _s()
      : transformSpecialNewlines(JSON.stringify(text.text))) + ")")
  }

  function genComment (comment) {
    return ("_e(" + (JSON.stringify(comment.text)) + ")")
  }

  function genSlot (el, state) {
    var slotName = el.slotName || '"default"';
    var children = genChildren(el, state);
    var res = "_t(" + slotName + (children ? ("," + children) : '');
    var attrs = el.attrs || el.dynamicAttrs
      ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) { return ({
          // slot props are camelized
          name: camelize(attr.name),
          value: attr.value,
          dynamic: attr.dynamic
        }); }))
      : null;
    var bind$$1 = el.attrsMap['v-bind'];
    if ((attrs || bind$$1) && !children) {
      res += ",null";
    }
    if (attrs) {
      res += "," + attrs;
    }
    if (bind$$1) {
      res += (attrs ? '' : ',null') + "," + bind$$1;
    }
    return res + ')'
  }

  // componentName is el.component, take it as argument to shun flow's pessimistic refinement
  function genComponent (
    componentName,
    el,
    state
  ) {
    var children = el.inlineTemplate ? null : genChildren(el, state, true);
    return ("_c(" + componentName + "," + (genData$2(el, state)) + (children ? ("," + children) : '') + ")")
  }

  function genProps (props) {
    var staticProps = "";
    var dynamicProps = "";
    for (var i = 0; i < props.length; i++) {
      var prop = props[i];
      var value = transformSpecialNewlines(prop.value);
      if (prop.dynamic) {
        dynamicProps += (prop.name) + "," + value + ",";
      } else {
        staticProps += "\"" + (prop.name) + "\":" + value + ",";
      }
    }
    staticProps = "{" + (staticProps.slice(0, -1)) + "}";
    if (dynamicProps) {
      return ("_d(" + staticProps + ",[" + (dynamicProps.slice(0, -1)) + "])")
    } else {
      return staticProps
    }
  }

  // #3895, #4268
  function transformSpecialNewlines (text) {
    return text
      .replace(/\u2028/g, '\\u2028')
      .replace(/\u2029/g, '\\u2029')
  }

  /*  */



  // these keywords should not appear inside expressions, but operators like
  // typeof, instanceof and in are allowed
  var prohibitedKeywordRE = new RegExp('\\b' + (
    'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
    'super,throw,while,yield,delete,export,import,return,switch,default,' +
    'extends,finally,continue,debugger,function,arguments'
  ).split(',').join('\\b|\\b') + '\\b');

  // these unary operators should not be used as property/method names
  var unaryOperatorsRE = new RegExp('\\b' + (
    'delete,typeof,void'
  ).split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

  // strip strings in expressions
  var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

  // detect problematic expressions in a template
  function detectErrors (ast, warn) {
    if (ast) {
      checkNode(ast, warn);
    }
  }

  function checkNode (node, warn) {
    if (node.type === 1) {
      for (var name in node.attrsMap) {
        if (dirRE.test(name)) {
          var value = node.attrsMap[name];
          if (value) {
            var range = node.rawAttrsMap[name];
            if (name === 'v-for') {
              checkFor(node, ("v-for=\"" + value + "\""), warn, range);
            } else if (name === 'v-slot' || name[0] === '#') {
              checkFunctionParameterExpression(value, (name + "=\"" + value + "\""), warn, range);
            } else if (onRE.test(name)) {
              checkEvent(value, (name + "=\"" + value + "\""), warn, range);
            } else {
              checkExpression(value, (name + "=\"" + value + "\""), warn, range);
            }
          }
        }
      }
      if (node.children) {
        for (var i = 0; i < node.children.length; i++) {
          checkNode(node.children[i], warn);
        }
      }
    } else if (node.type === 2) {
      checkExpression(node.expression, node.text, warn, node);
    }
  }

  function checkEvent (exp, text, warn, range) {
    var stripped = exp.replace(stripStringRE, '');
    var keywordMatch = stripped.match(unaryOperatorsRE);
    if (keywordMatch && stripped.charAt(keywordMatch.index - 1) !== '$') {
      warn(
        "avoid using JavaScript unary operator as property name: " +
        "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim()),
        range
      );
    }
    checkExpression(exp, text, warn, range);
  }

  function checkFor (node, text, warn, range) {
    checkExpression(node.for || '', text, warn, range);
    checkIdentifier(node.alias, 'v-for alias', text, warn, range);
    checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);
    checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);
  }

  function checkIdentifier (
    ident,
    type,
    text,
    warn,
    range
  ) {
    if (typeof ident === 'string') {
      try {
        new Function(("var " + ident + "=_"));
      } catch (e) {
        warn(("invalid " + type + " \"" + ident + "\" in expression: " + (text.trim())), range);
      }
    }
  }

  function checkExpression (exp, text, warn, range) {
    try {
      new Function(("return " + exp));
    } catch (e) {
      var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
      if (keywordMatch) {
        warn(
          "avoid using JavaScript keyword as property name: " +
          "\"" + (keywordMatch[0]) + "\"\n  Raw expression: " + (text.trim()),
          range
        );
      } else {
        warn(
          "invalid expression: " + (e.message) + " in\n\n" +
          "    " + exp + "\n\n" +
          "  Raw expression: " + (text.trim()) + "\n",
          range
        );
      }
    }
  }

  function checkFunctionParameterExpression (exp, text, warn, range) {
    try {
      new Function(exp, '');
    } catch (e) {
      warn(
        "invalid function parameter expression: " + (e.message) + " in\n\n" +
        "    " + exp + "\n\n" +
        "  Raw expression: " + (text.trim()) + "\n",
        range
      );
    }
  }

  /*  */

  var range = 2;

  function generateCodeFrame (
    source,
    start,
    end
  ) {
    if ( start === void 0 ) start = 0;
    if ( end === void 0 ) end = source.length;

    var lines = source.split(/\r?\n/);
    var count = 0;
    var res = [];
    for (var i = 0; i < lines.length; i++) {
      count += lines[i].length + 1;
      if (count >= start) {
        for (var j = i - range; j <= i + range || end > count; j++) {
          if (j < 0 || j >= lines.length) { continue }
          res.push(("" + (j + 1) + (repeat$1(" ", 3 - String(j + 1).length)) + "|  " + (lines[j])));
          var lineLength = lines[j].length;
          if (j === i) {
            // push underline
            var pad = start - (count - lineLength) + 1;
            var length = end > count ? lineLength - pad : end - start;
            res.push("   |  " + repeat$1(" ", pad) + repeat$1("^", length));
          } else if (j > i) {
            if (end > count) {
              var length$1 = Math.min(end - count, lineLength);
              res.push("   |  " + repeat$1("^", length$1));
            }
            count += lineLength + 1;
          }
        }
        break
      }
    }
    return res.join('\n')
  }

  function repeat$1 (str, n) {
    var result = '';
    if (n > 0) {
      while (true) { // eslint-disable-line
        if (n & 1) { result += str; }
        n >>>= 1;
        if (n <= 0) { break }
        str += str;
      }
    }
    return result
  }

  /*  */



  function createFunction (code, errors) {
    try {
      return new Function(code)
    } catch (err) {
      errors.push({ err: err, code: code });
      return noop
    }
  }

  function createCompileToFunctionFn (compile) {
    var cache = Object.create(null);

    return function compileToFunctions (
      template,
      options,
      vm
    ) {
      options = extend({}, options);
      var warn$$1 = options.warn || warn;
      delete options.warn;

      /* istanbul ignore if */
      {
        // detect possible CSP restriction
        try {
          new Function('return 1');
        } catch (e) {
          if (e.toString().match(/unsafe-eval|CSP/)) {
            warn$$1(
              'It seems you are using the standalone build of Vue.js in an ' +
              'environment with Content Security Policy that prohibits unsafe-eval. ' +
              'The template compiler cannot work in this environment. Consider ' +
              'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
              'templates into render functions.'
            );
          }
        }
      }

      // check cache
      var key = options.delimiters
        ? String(options.delimiters) + template
        : template;
      if (cache[key]) {
        return cache[key]
      }

      // compile
      var compiled = compile(template, options);

      // check compilation errors/tips
      {
        if (compiled.errors && compiled.errors.length) {
          if (options.outputSourceRange) {
            compiled.errors.forEach(function (e) {
              warn$$1(
                "Error compiling template:\n\n" + (e.msg) + "\n\n" +
                generateCodeFrame(template, e.start, e.end),
                vm
              );
            });
          } else {
            warn$$1(
              "Error compiling template:\n\n" + template + "\n\n" +
              compiled.errors.map(function (e) { return ("- " + e); }).join('\n') + '\n',
              vm
            );
          }
        }
        if (compiled.tips && compiled.tips.length) {
          if (options.outputSourceRange) {
            compiled.tips.forEach(function (e) { return tip(e.msg, vm); });
          } else {
            compiled.tips.forEach(function (msg) { return tip(msg, vm); });
          }
        }
      }

      // turn code into functions
      var res = {};
      var fnGenErrors = [];
      res.render = createFunction(compiled.render, fnGenErrors);
      res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
        return createFunction(code, fnGenErrors)
      });

      // check function generation errors.
      // this should only happen if there is a bug in the compiler itself.
      // mostly for codegen development use
      /* istanbul ignore if */
      {
        if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
          warn$$1(
            "Failed to generate render function:\n\n" +
            fnGenErrors.map(function (ref) {
              var err = ref.err;
              var code = ref.code;

              return ((err.toString()) + " in\n\n" + code + "\n");
          }).join('\n'),
            vm
          );
        }
      }

      return (cache[key] = res)
    }
  }

  /*  */

  function createCompilerCreator (baseCompile) {
    return function createCompiler (baseOptions) {
      function compile (
        template,
        options
      ) {
        var finalOptions = Object.create(baseOptions);
        var errors = [];
        var tips = [];

        var warn = function (msg, range, tip) {
          (tip ? tips : errors).push(msg);
        };

        if (options) {
          if (options.outputSourceRange) {
            // $flow-disable-line
            var leadingSpaceLength = template.match(/^\s*/)[0].length;

            warn = function (msg, range, tip) {
              var data = { msg: msg };
              if (range) {
                if (range.start != null) {
                  data.start = range.start + leadingSpaceLength;
                }
                if (range.end != null) {
                  data.end = range.end + leadingSpaceLength;
                }
              }
              (tip ? tips : errors).push(data);
            };
          }
          // merge custom modules
          if (options.modules) {
            finalOptions.modules =
              (baseOptions.modules || []).concat(options.modules);
          }
          // merge custom directives
          if (options.directives) {
            finalOptions.directives = extend(
              Object.create(baseOptions.directives || null),
              options.directives
            );
          }
          // copy other options
          for (var key in options) {
            if (key !== 'modules' && key !== 'directives') {
              finalOptions[key] = options[key];
            }
          }
        }

        finalOptions.warn = warn;

        var compiled = baseCompile(template.trim(), finalOptions);
        {
          detectErrors(compiled.ast, warn);
        }
        compiled.errors = errors;
        compiled.tips = tips;
        return compiled
      }

      return {
        compile: compile,
        compileToFunctions: createCompileToFunctionFn(compile)
      }
    }
  }

  /*  */

  // `createCompilerCreator` allows creating compilers that use alternative
  // parser/optimizer/codegen, e.g the SSR optimizing compiler.
  // Here we just export a default compiler using the default parts.
  var createCompiler = createCompilerCreator(function baseCompile (
    template,
    options
  ) {
    var ast = parse(template.trim(), options);
    if (options.optimize !== false) {
      optimize(ast, options);
    }
    var code = generate(ast, options);
    return {
      ast: ast,
      render: code.render,
      staticRenderFns: code.staticRenderFns
    }
  });

  /*  */

  var ref$1 = createCompiler(baseOptions);
  var compile = ref$1.compile;
  var compileToFunctions = ref$1.compileToFunctions;

  /*  */

  // check whether current browser encodes a char inside attribute values
  var div;
  function getShouldDecode (href) {
    div = div || document.createElement('div');
    div.innerHTML = href ? "<a href=\"\n\"/>" : "<div a=\"\n\"/>";
    return div.innerHTML.indexOf('&#10;') > 0
  }

  // #3663: IE encodes newlines inside attribute values while other browsers don't
  var shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;
  // #6828: chrome encodes content in a[href]
  var shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;

  /*  */

  var idToTemplate = cached(function (id) {
    var el = query(id);
    return el && el.innerHTML
  });

  var mount = Vue.prototype.$mount;
  Vue.prototype.$mount = function (
    el,
    hydrating
  ) {
    el = el && query(el);

    /* istanbul ignore if */
    if (el === document.body || el === document.documentElement) {
      warn(
        "Do not mount Vue to <html> or <body> - mount to normal elements instead."
      );
      return this
    }

    var options = this.$options;
    // resolve template/el and convert to render function
    if (!options.render) {
      var template = options.template;
      if (template) {
        if (typeof template === 'string') {
          if (template.charAt(0) === '#') {
            template = idToTemplate(template);
            /* istanbul ignore if */
            if (!template) {
              warn(
                ("Template element not found or is empty: " + (options.template)),
                this
              );
            }
          }
        } else if (template.nodeType) {
          template = template.innerHTML;
        } else {
          {
            warn('invalid template option:' + template, this);
          }
          return this
        }
      } else if (el) {
        template = getOuterHTML(el);
      }
      if (template) {
        /* istanbul ignore if */
        if (config.performance && mark) {
          mark('compile');
        }

        var ref = compileToFunctions(template, {
          outputSourceRange: "development" !== 'production',
          shouldDecodeNewlines: shouldDecodeNewlines,
          shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,
          delimiters: options.delimiters,
          comments: options.comments
        }, this);
        var render = ref.render;
        var staticRenderFns = ref.staticRenderFns;
        options.render = render;
        options.staticRenderFns = staticRenderFns;

        /* istanbul ignore if */
        if (config.performance && mark) {
          mark('compile end');
          measure(("vue " + (this._name) + " compile"), 'compile', 'compile end');
        }
      }
    }
    return mount.call(this, el, hydrating)
  };

  /**
   * Get outerHTML of elements, taking care
   * of SVG elements in IE as well.
   */
  function getOuterHTML (el) {
    if (el.outerHTML) {
      return el.outerHTML
    } else {
      var container = document.createElement('div');
      container.appendChild(el.cloneNode(true));
      return container.innerHTML
    }
  }

  Vue.compile = compileToFunctions;

  return Vue;

}));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16), __webpack_require__(42).setImmediate))

/***/ }),
/* 16 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(132);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(133);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.camelize = camelize;
exports.padZero = padZero;
var camelizeRE = /-(\w)/g;

function camelize(str) {
  return str.replace(camelizeRE, function (_, c) {
    return c.toUpperCase();
  });
}

function padZero(num, targetLength) {
  if (targetLength === void 0) {
    targetLength = 2;
  }

  var str = num + '';

  while (str.length < targetLength) {
    str = '0' + str;
  }

  return str;
}

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getScroller = getScroller;
exports.getScrollTop = getScrollTop;
exports.setScrollTop = setScrollTop;
exports.getRootScrollTop = getRootScrollTop;
exports.setRootScrollTop = setRootScrollTop;
exports.getElementTop = getElementTop;
exports.getVisibleHeight = getVisibleHeight;
exports.getVisibleTop = getVisibleTop;

function isWindow(val) {
  return val === window;
} // get nearest scroll element
// https://github.com/youzan/vant/issues/3823


var overflowScrollReg = /scroll|auto/i;

function getScroller(el, root) {
  if (root === void 0) {
    root = window;
  }

  var node = el;

  while (node && node.tagName !== 'HTML' && node.tagName !== 'BODY' && node.nodeType === 1 && node !== root) {
    var _window$getComputedSt = window.getComputedStyle(node),
        overflowY = _window$getComputedSt.overflowY;

    if (overflowScrollReg.test(overflowY)) {
      return node;
    }

    node = node.parentNode;
  }

  return root;
}

function getScrollTop(el) {
  var top = 'scrollTop' in el ? el.scrollTop : el.pageYOffset; // iOS scroll bounce cause minus scrollTop

  return Math.max(top, 0);
}

function setScrollTop(el, value) {
  if ('scrollTop' in el) {
    el.scrollTop = value;
  } else {
    el.scrollTo(el.scrollX, value);
  }
}

function getRootScrollTop() {
  return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
}

function setRootScrollTop(value) {
  setScrollTop(window, value);
  setScrollTop(document.body, value);
} // get distance from element top to page top or scroller top


function getElementTop(el, scroller) {
  if (isWindow(el)) {
    return 0;
  }

  var scrollTop = scroller ? getScrollTop(scroller) : getRootScrollTop();
  return el.getBoundingClientRect().top + scrollTop;
}

function getVisibleHeight(el) {
  if (isWindow(el)) {
    return el.innerHeight;
  }

  return el.getBoundingClientRect().height;
}

function getVisibleTop(el) {
  if (isWindow(el)) {
    return 0;
  }

  return el.getBoundingClientRect().top;
}

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(131);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(134);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(135);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _babelHelperVueJsxMergeProps = _interopRequireDefault(__webpack_require__(8));

var _utils = __webpack_require__(1);

var _functional = __webpack_require__(14);

var _info = _interopRequireDefault(__webpack_require__(49));

// Utils
// Components
var _createNamespace = (0, _utils.createNamespace)('icon'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

function isImage(name) {
  return name ? name.indexOf('/') !== -1 : false;
} // compatible with legacy usage, should be removed in next major version


var LEGACY_MAP = {
  medel: 'medal',
  'medel-o': 'medal-o',
  'calender-o': 'calendar-o'
};

function correctName(name) {
  return name && LEGACY_MAP[name] || name;
}

function Icon(h, props, slots, ctx) {
  var _props$badge;

  var name = correctName(props.name);
  var imageIcon = isImage(name);

  if (false) {
    console.warn('[@ceair/vant] Icon: "info" prop is deprecated, use "badge" prop instead.');
  }

  return h(props.tag, (0, _babelHelperVueJsxMergeProps.default)([{
    "class": [props.classPrefix, imageIcon ? '' : props.classPrefix + "-" + name],
    "style": {
      color: props.color,
      fontSize: (0, _utils.addUnit)(props.size)
    }
  }, (0, _functional.inherit)(ctx, true)]), [slots.default && slots.default(), imageIcon && h("img", {
    "class": bem('image'),
    "attrs": {
      "src": name
    }
  }), h(_info.default, {
    "attrs": {
      "dot": props.dot,
      "info": (_props$badge = props.badge) != null ? _props$badge : props.info
    }
  })]);
}

Icon.props = {
  dot: Boolean,
  name: String,
  size: [Number, String],
  // @deprecated
  // should be removed in next major version
  info: [Number, String],
  badge: [Number, String],
  color: String,
  tag: {
    type: String,
    default: 'i'
  },
  classPrefix: {
    type: String,
    default: bem()
  }
};

var _default = createComponent(Icon);

exports.default = _default;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.addUnit = addUnit;
exports.unitToPx = unitToPx;

var _ = __webpack_require__(1);

var _number = __webpack_require__(32);

function addUnit(value) {
  if (!(0, _.isDef)(value)) {
    return undefined;
  }

  value = String(value);
  return (0, _number.isNumeric)(value) ? value + "px" : value;
} // cache


var rootFontSize;

function getRootFontSize() {
  if (!rootFontSize) {
    var doc = document.documentElement;
    var fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize;
    rootFontSize = parseFloat(fontSize);
  }

  return rootFontSize;
}

function convertRem(value) {
  value = value.replace(/rem/g, '');
  return +value * getRootFontSize();
}

function convertVw(value) {
  value = value.replace(/vw/g, '');
  return +value * window.innerWidth / 100;
}

function convertVh(value) {
  value = value.replace(/vh/g, '');
  return +value * window.innerHeight / 100;
}

function unitToPx(value) {
  if (typeof value === 'number') {
    return value;
  }

  if (_.inBrowser) {
    if (value.indexOf('rem') !== -1) {
      return convertRem(value);
    }

    if (value.indexOf('vw') !== -1) {
      return convertVw(value);
    }

    if (value.indexOf('vh') !== -1) {
      return convertVh(value);
    }
  }

  return parseFloat(value);
}

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.formatMonthTitle = formatMonthTitle;
exports.compareMonth = compareMonth;
exports.compareDay = compareDay;
exports.getDayByOffset = getDayByOffset;
exports.getPrevDay = getPrevDay;
exports.getNextDay = getNextDay;
exports.calcDateNum = calcDateNum;
exports.copyDate = copyDate;
exports.copyDates = copyDates;
exports.t = exports.bem = exports.createComponent = void 0;

var _utils = __webpack_require__(1);

var _createNamespace = (0, _utils.createNamespace)('calendar'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1],
    t = _createNamespace[2];

exports.t = t;
exports.bem = bem;
exports.createComponent = createComponent;

function formatMonthTitle(date) {
  return t('monthTitle', date.getFullYear(), date.getMonth() + 1);
}

function compareMonth(date1, date2) {
  var year1 = date1.getFullYear();
  var year2 = date2.getFullYear();
  var month1 = date1.getMonth();
  var month2 = date2.getMonth();

  if (year1 === year2) {
    return month1 === month2 ? 0 : month1 > month2 ? 1 : -1;
  }

  return year1 > year2 ? 1 : -1;
}

function compareDay(day1, day2) {
  var compareMonthResult = compareMonth(day1, day2);

  if (compareMonthResult === 0) {
    var date1 = day1.getDate();
    var date2 = day2.getDate();
    return date1 === date2 ? 0 : date1 > date2 ? 1 : -1;
  }

  return compareMonthResult;
}

function getDayByOffset(date, offset) {
  date = new Date(date);
  date.setDate(date.getDate() + offset);
  return date;
}

function getPrevDay(date) {
  return getDayByOffset(date, -1);
}

function getNextDay(date) {
  return getDayByOffset(date, 1);
}

function calcDateNum(date) {
  var day1 = date[0].getTime();
  var day2 = date[1].getTime();
  return (day2 - day1) / (1000 * 60 * 60 * 24) + 1;
}

function copyDate(dates) {
  return new Date(dates);
}

function copyDates(dates) {
  if (Array.isArray(dates)) {
    return dates.map(function (date) {
      if (date === null) {
        return date;
      }

      return copyDate(date);
    });
  }

  return copyDate(dates);
}

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _utils = __webpack_require__(1);

var _popup = __webpack_require__(28);

var _icon = _interopRequireDefault(__webpack_require__(24));

var _createNamespace = (0, _utils.createNamespace)('popup'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

var _default = createComponent({
  mixins: [(0, _popup.PopupMixin)()],
  props: {
    round: Boolean,
    duration: [Number, String],
    closeable: Boolean,
    transition: String,
    safeAreaInsetBottom: Boolean,
    popupStyle: Object,
    closeIcon: {
      type: String,
      default: 'cross'
    },
    closeIconPosition: {
      type: String,
      default: 'top-right'
    },
    position: {
      type: String,
      default: 'center'
    },
    overlay: {
      type: Boolean,
      default: true
    },
    closeOnClickOverlay: {
      type: Boolean,
      default: true
    }
  },
  beforeCreate: function beforeCreate() {
    var _this = this;

    var createEmitter = function createEmitter(eventName) {
      return function (event) {
        return _this.$emit(eventName, event);
      };
    };

    this.onClick = createEmitter('click');
    this.onOpened = createEmitter('opened');
    this.onClosed = createEmitter('closed');
  },
  methods: {
    onClickCloseIcon: function onClickCloseIcon(event) {
      this.$emit('click-close-icon', event);
      this.close();
    }
  },
  render: function render() {
    var _bem;

    var h = arguments[0];

    if (!this.shouldRender) {
      return;
    }

    var round = this.round,
        position = this.position,
        duration = this.duration;
    var isCenter = position === 'center';
    var transitionName = this.transition || (isCenter ? 'van-fade' : "van-popup-slide-" + position);
    var style = {};

    if (this.popupStyle) {
      style = this.popupStyle;
    }

    if ((0, _utils.isDef)(duration)) {
      var key = isCenter ? 'animationDuration' : 'transitionDuration';
      style[key] = duration + "s";
    }

    return h("transition", {
      "attrs": {
        "appear": this.transitionAppear,
        "name": transitionName
      },
      "on": {
        "afterEnter": this.onOpened,
        "afterLeave": this.onClosed
      }
    }, [h("div", {
      "directives": [{
        name: "show",
        value: this.value
      }],
      "style": style,
      "class": bem((_bem = {
        round: round
      }, _bem[position] = position, _bem['safe-area-inset-bottom'] = this.safeAreaInsetBottom, _bem)),
      "on": {
        "click": this.onClick
      }
    }, [this.slots(), this.closeable && h(_icon.default, {
      "attrs": {
        "role": "button",
        "tabindex": "0",
        "name": this.closeIcon
      },
      "class": bem('close-icon', this.closeIconPosition),
      "on": {
        "click": this.onClickCloseIcon
      }
    })])]);
  }
});

exports.default = _default;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.PopupMixin = PopupMixin;
exports.popupMixinProps = void 0;

var _context = __webpack_require__(48);

var _overlay = __webpack_require__(148);

var _event = __webpack_require__(9);

var _node = __webpack_require__(34);

var _scroll = __webpack_require__(20);

var _touch = __webpack_require__(35);

var _portal = __webpack_require__(150);

var _closeOnPopstate = __webpack_require__(151);

// Context
// Utils
// Mixins
var popupMixinProps = {
  // Initial rendering animation
  transitionAppear: Boolean,
  // whether to show popup
  value: Boolean,
  // whether to show overlay
  overlay: Boolean,
  // overlay custom style
  overlayStyle: Object,
  // overlay custom class name
  overlayClass: String,
  // whether to close popup when overlay is clicked
  closeOnClickOverlay: Boolean,
  // z-index
  zIndex: [Number, String],
  // prevent body scroll
  lockScroll: {
    type: Boolean,
    default: true
  },
  // whether to lazy render
  lazyRender: {
    type: Boolean,
    default: true
  }
};
exports.popupMixinProps = popupMixinProps;

function PopupMixin(options) {
  if (options === void 0) {
    options = {};
  }

  return {
    mixins: [_touch.TouchMixin, _closeOnPopstate.CloseOnPopstateMixin, (0, _portal.PortalMixin)({
      afterPortal: function afterPortal() {
        if (this.overlay) {
          (0, _overlay.updateOverlay)();
        }
      }
    })],
    provide: function provide() {
      return {
        vanPopup: this
      };
    },
    props: popupMixinProps,
    data: function data() {
      this.onReopenCallback = [];
      return {
        inited: this.value
      };
    },
    computed: {
      shouldRender: function shouldRender() {
        return this.inited || !this.lazyRender;
      }
    },
    watch: {
      value: function value(val) {
        var type = val ? 'open' : 'close';
        this.inited = this.inited || this.value;
        this[type]();

        if (!options.skipToggleEvent) {
          this.$emit(type);
        }
      },
      overlay: 'renderOverlay'
    },
    mounted: function mounted() {
      if (this.value) {
        this.open();
      }
    },

    /* istanbul ignore next */
    activated: function activated() {
      if (this.shouldReopen) {
        this.$emit('input', true);
        this.shouldReopen = false;
      }
    },
    beforeDestroy: function beforeDestroy() {
      (0, _overlay.removeOverlay)(this);

      if (this.opened) {
        this.removeLock();
      }

      if (this.getContainer) {
        (0, _node.removeNode)(this.$el);
      }
    },

    /* istanbul ignore next */
    deactivated: function deactivated() {
      if (this.value) {
        this.close();
        this.shouldReopen = true;
      }
    },
    methods: {
      open: function open() {
        /* istanbul ignore next */
        if (this.$isServer || this.opened) {
          return;
        } // cover default zIndex


        if (this.zIndex !== undefined) {
          _context.context.zIndex = this.zIndex;
        }

        this.opened = true;
        this.renderOverlay();
        this.addLock();
        this.onReopenCallback.forEach(function (callback) {
          callback();
        });
      },
      addLock: function addLock() {
        if (this.lockScroll) {
          (0, _event.on)(document, 'touchstart', this.touchStart);
          (0, _event.on)(document, 'touchmove', this.onTouchMove);

          if (!_context.context.lockCount) {
            document.body.classList.add('van-overflow-hidden');
          }

          _context.context.lockCount++;
        }
      },
      removeLock: function removeLock() {
        if (this.lockScroll && _context.context.lockCount) {
          _context.context.lockCount--;
          (0, _event.off)(document, 'touchstart', this.touchStart);
          (0, _event.off)(document, 'touchmove', this.onTouchMove);

          if (!_context.context.lockCount) {
            document.body.classList.remove('van-overflow-hidden');
          }
        }
      },
      close: function close() {
        if (!this.opened) {
          return;
        }

        (0, _overlay.closeOverlay)(this);
        this.opened = false;
        this.removeLock();
        this.$emit('input', false);
      },
      onTouchMove: function onTouchMove(event) {
        this.touchMove(event);
        var direction = this.deltaY > 0 ? '10' : '01';
        var el = (0, _scroll.getScroller)(event.target, this.$el);
        var scrollHeight = el.scrollHeight,
            offsetHeight = el.offsetHeight,
            scrollTop = el.scrollTop;
        var status = '11';
        /* istanbul ignore next */

        if (scrollTop === 0) {
          status = offsetHeight >= scrollHeight ? '00' : '01';
        } else if (scrollTop + offsetHeight >= scrollHeight) {
          status = '10';
        }
        /* istanbul ignore next */


        if (status !== '11' && this.direction === 'vertical' && !(parseInt(status, 2) & parseInt(direction, 2))) {
          (0, _event.preventDefault)(event, true);
        }
      },
      renderOverlay: function renderOverlay() {
        var _this = this;

        if (this.$isServer || !this.value) {
          return;
        }

        this.$nextTick(function () {
          _this.updateZIndex(_this.overlay ? 1 : 0);

          if (_this.overlay) {
            (0, _overlay.openOverlay)(_this, {
              zIndex: _context.context.zIndex++,
              duration: _this.duration,
              className: _this.overlayClass,
              customStyle: _this.overlayStyle
            });
          } else {
            (0, _overlay.closeOverlay)(_this);
          }
        });
      },
      updateZIndex: function updateZIndex(value) {
        if (value === void 0) {
          value = 0;
        }

        this.$el.style.zIndex = ++_context.context.zIndex + value;
      },
      onReopen: function onReopen(callback) {
        this.onReopenCallback.push(callback);
      }
    }
  };
}

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.BORDER_UNSET_TOP_BOTTOM = exports.BORDER_TOP_BOTTOM = exports.BORDER_SURROUND = exports.BORDER_BOTTOM = exports.BORDER_LEFT_BOLD = exports.BORDER_TOP_BOLD = exports.BORDER_LEFT = exports.BORDER_TOP = exports.BORDER = exports.RED = void 0;
// color
var RED = '#ee0a24'; // border

exports.RED = RED;
var BORDER = 'van-hairline';
exports.BORDER = BORDER;
var BORDER_TOP = BORDER + "--top";
exports.BORDER_TOP = BORDER_TOP;
var BORDER_LEFT = BORDER + "--left";
exports.BORDER_LEFT = BORDER_LEFT;
var BORDER_TOP_BOLD = BORDER + "--top-bold";
exports.BORDER_TOP_BOLD = BORDER_TOP_BOLD;
var BORDER_LEFT_BOLD = BORDER + "--left-bold";
exports.BORDER_LEFT_BOLD = BORDER_LEFT_BOLD;
var BORDER_BOTTOM = BORDER + "--bottom";
exports.BORDER_BOTTOM = BORDER_BOTTOM;
var BORDER_SURROUND = BORDER + "--surround";
exports.BORDER_SURROUND = BORDER_SURROUND;
var BORDER_TOP_BOTTOM = BORDER + "--top-bottom";
exports.BORDER_TOP_BOTTOM = BORDER_TOP_BOTTOM;
var BORDER_UNSET_TOP_BOTTOM = BORDER + "-unset--top-bottom";
exports.BORDER_UNSET_TOP_BOTTOM = BORDER_UNSET_TOP_BOTTOM;

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _babelHelperVueJsxMergeProps = _interopRequireDefault(__webpack_require__(8));

var _utils = __webpack_require__(1);

var _functional = __webpack_require__(14);

// Utils
var _createNamespace = (0, _utils.createNamespace)('loading'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

function LoadingIcon(h, props) {
  if (props.type === 'spinner') {
    var Spin = [];

    for (var i = 0; i < 12; i++) {
      Spin.push(h("i"));
    }

    return Spin;
  }

  return h("svg", {
    "class": bem('circular'),
    "attrs": {
      "viewBox": "25 25 50 50"
    }
  }, [h("circle", {
    "attrs": {
      "cx": "50",
      "cy": "50",
      "r": "20",
      "fill": "none"
    }
  })]);
}

function LoadingText(h, props, slots) {
  if (slots.default) {
    var _props$textColor;

    var style = {
      fontSize: (0, _utils.addUnit)(props.textSize),
      color: (_props$textColor = props.textColor) != null ? _props$textColor : props.color
    };
    return h("span", {
      "class": bem('text'),
      "style": style
    }, [slots.default()]);
  } else {
    // 默认显示加载中...
    var _style = {
      fontSize: (0, _utils.addUnit)(props.textSize),
      color: '#999999'
    };
    return h("span", {
      "class": bem('text'),
      "style": _style
    }, ['加载中...']);
  }
}

function Loading(h, props, slots, ctx) {
  var color = props.color,
      size = props.size,
      type = props.type;
  var style = {
    color: color
  };

  if (size) {
    var iconSize = (0, _utils.addUnit)(size);
    style.width = iconSize;
    style.height = iconSize;
  }

  return h("div", (0, _babelHelperVueJsxMergeProps.default)([{
    "class": bem([type, {
      vertical: props.vertical
    }])
  }, (0, _functional.inherit)(ctx, true)]), [h("span", {
    "class": bem('spinner', type),
    "style": style
  }, [LoadingIcon(h, props)]), LoadingText(h, props, slots)]);
}

Loading.props = {
  color: {
    type: String,
    default: '#437ACF'
  },
  size: {
    type: [Number, String],
    default: '15px'
  },
  vertical: Boolean,
  textSize: [Number, String],
  textColor: {
    type: String,
    default: '#999999'
  },
  type: {
    type: String,
    default: 'circular'
  }
};

var _default = createComponent(Loading);

exports.default = _default;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MUJSSDK = {
  callSync: function callSync(plugin, action, param) {
    if (window.MUJSBridge) {
      return window.MUJSBridge.callSync(plugin, action, param);
    }
  },
  call: function call(plugin, action, param, success, failure) {
    if (window.MUJSBridge) {
      window.MUJSBridge.call(plugin, action, param, success, failure);
      return;
    }
    var tryTimes = 0;
    var interval = setInterval(function () {
      tryTimes++;
      if (window.MUJSBridge) {
        clearInterval(interval);
        window.MUJSBridge.call(plugin, action, param, success, failure);
        return;
      }
      if (tryTimes >= 1000) {
        clearInterval(interval);
      }
    }, 10);
  }
};
exports.default = MUJSSDK;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.isNumeric = isNumeric;
exports.isNaN = isNaN;

function isNumeric(val) {
  return /^\d+(\.\d+)?$/.test(val);
}

function isNaN(val) {
  if (Number.isNaN) {
    return Number.isNaN(val);
  } // eslint-disable-next-line no-self-compare


  return val !== val;
}

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.isDate = isDate;

var _number = __webpack_require__(32);

function isDate(val) {
  return Object.prototype.toString.call(val) === '[object Date]' && !(0, _number.isNaN)(val.getTime());
}

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.removeNode = removeNode;

function removeNode(el) {
  var parent = el.parentNode;

  if (parent) {
    parent.removeChild(el);
  }
}

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.TouchMixin = void 0;

var _event = __webpack_require__(9);

var MIN_DISTANCE = 10;

function getDirection(x, y) {
  if (x > y && x > MIN_DISTANCE) {
    return 'horizontal';
  }

  if (y > x && y > MIN_DISTANCE) {
    return 'vertical';
  }

  return '';
}

var TouchMixin = {
  data: function data() {
    return {
      direction: ''
    };
  },
  methods: {
    touchStart: function touchStart(event) {
      this.resetTouchStatus();
      this.startX = event.touches[0].clientX;
      this.startY = event.touches[0].clientY;
    },
    touchMove: function touchMove(event) {
      var touch = event.touches[0]; // Fix: Safari back will set clientX to negative number

      this.deltaX = touch.clientX < 0 ? 0 : touch.clientX - this.startX;
      this.deltaY = touch.clientY - this.startY;
      this.offsetX = Math.abs(this.deltaX);
      this.offsetY = Math.abs(this.deltaY);
      this.direction = this.direction || getDirection(this.offsetX, this.offsetY);
    },
    resetTouchStatus: function resetTouchStatus() {
      this.direction = '';
      this.deltaX = 0;
      this.deltaY = 0;
      this.offsetX = 0;
      this.offsetY = 0;
    },
    // avoid Vue 2.6 event bubble issues by manually binding events
    // https://github.com/youzan/vant/issues/3015
    bindTouchEvent: function bindTouchEvent(el) {
      var onTouchStart = this.onTouchStart,
          onTouchMove = this.onTouchMove,
          onTouchEnd = this.onTouchEnd;
      (0, _event.on)(el, 'touchstart', onTouchStart);
      (0, _event.on)(el, 'touchmove', onTouchMove);

      if (onTouchEnd) {
        (0, _event.on)(el, 'touchend', onTouchEnd);
        (0, _event.on)(el, 'touchcancel', onTouchEnd);
      }
    }
  }
};
exports.TouchMixin = TouchMixin;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.BindEventMixin = BindEventMixin;

var _event = __webpack_require__(9);

/**
 * Bind event when mounted or activated
 */
var uid = 0;

function BindEventMixin(handler) {
  var key = "binded_" + uid++;

  function bind() {
    if (!this[key]) {
      handler.call(this, _event.on, true);
      this[key] = true;
    }
  }

  function unbind() {
    if (this[key]) {
      handler.call(this, _event.off, false);
      this[key] = false;
    }
  }

  return {
    mounted: bind,
    activated: bind,
    deactivated: unbind,
    beforeDestroy: unbind
  };
}

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.route = route;
exports.functionalRoute = functionalRoute;
exports.routeProps = void 0;

/**
 * Vue Router support
 */
function isRedundantNavigation(err) {
  return err.name === 'NavigationDuplicated' || err.message && err.message.indexOf('redundant navigation') !== -1;
}

function route(router, config) {
  var to = config.to,
      url = config.url,
      replace = config.replace;

  if (to && router) {
    var promise = router[replace ? 'replace' : 'push'](to);
    /* istanbul ignore else */

    if (promise && promise.catch) {
      promise.catch(function (err) {
        if (err && !isRedundantNavigation(err)) {
          throw err;
        }
      });
    }
  } else if (url) {
    replace ? location.replace(url) : location.href = url;
  }
}

function functionalRoute(context) {
  route(context.parent && context.parent.$router, context.props);
}

var routeProps = {
  url: String,
  replace: Boolean,
  to: [String, Object]
};
exports.routeProps = routeProps;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _vue = _interopRequireDefault(__webpack_require__(13));

var _Toast = _interopRequireDefault(__webpack_require__(152));

var _utils = __webpack_require__(1);

var _node = __webpack_require__(34);

var defaultOptions = {
  icon: '',
  type: 'text',
  // @deprecated
  mask: false,
  value: true,
  message: '',
  className: '',
  overlay: false,
  onClose: null,
  onOpened: null,
  duration: 2000,
  iconPrefix: undefined,
  position: 'middle',
  transition: 'van-fade',
  forbidClick: false,
  loadingType: undefined,
  getContainer: 'body',
  overlayStyle: null,
  closeOnClick: false,
  closeOnClickOverlay: false
}; // default options of specific type

var defaultOptionsMap = {};
var queue = [];
var multiple = false;
var currentOptions = (0, _extends2.default)({}, defaultOptions);

function parseOptions(message) {
  if ((0, _utils.isObject)(message)) {
    return message;
  }

  return {
    message: message
  };
}

function isInDocument(element) {
  return document.body.contains(element);
}

function createInstance() {
  /* istanbul ignore if */
  if (_utils.isServer) {
    return {};
  }

  queue = queue.filter(function (item) {
    return !item.$el.parentNode || isInDocument(item.$el);
  });

  if (!queue.length || multiple) {
    var toast = new (_vue.default.extend(_Toast.default))({
      el: document.createElement('div')
    });
    toast.$on('input', function (value) {
      toast.value = value;
    });
    queue.push(toast);
  }

  return queue[queue.length - 1];
} // transform toast options to popup props


function transformOptions(options) {
  return (0, _extends2.default)({}, options, {
    overlay: options.mask || options.overlay,
    mask: undefined,
    duration: undefined
  });
}

function Toast(options) {
  if (options === void 0) {
    options = {};
  }

  var toast = createInstance(); // should add z-index if previous toast has not disappeared

  if (toast.value) {
    toast.updateZIndex();
  }

  options = parseOptions(options);
  options = (0, _extends2.default)({}, currentOptions, defaultOptionsMap[options.type || currentOptions.type], options);

  if (false) {
    console.warn('[@ceair/vant] Toast: "mask" option is deprecated, use "overlay" option instead.');
  }

  options.clear = function () {
    toast.value = false;

    if (options.onClose) {
      options.onClose();
      options.onClose = null;
    }

    if (multiple && !_utils.isServer) {
      toast.$on('closed', function () {
        clearTimeout(toast.timer);
        queue = queue.filter(function (item) {
          return item !== toast;
        });
        (0, _node.removeNode)(toast.$el);
        toast.$destroy();
      });
    }
  };

  (0, _extends2.default)(toast, transformOptions(options));
  clearTimeout(toast.timer);

  if (options.duration > 0) {
    toast.timer = setTimeout(function () {
      toast.clear();
    }, options.duration);
  }

  return toast;
}

var createMethod = function createMethod(type) {
  return function (options) {
    return Toast((0, _extends2.default)({
      type: type
    }, parseOptions(options)));
  };
};

['loading', 'success', 'fail'].forEach(function (method) {
  Toast[method] = createMethod(method);
});

Toast.clear = function (all) {
  if (queue.length) {
    if (all) {
      queue.forEach(function (toast) {
        toast.clear();
      });
      queue = [];
    } else if (!multiple) {
      queue[0].clear();
    } else {
      queue.shift().clear();
    }
  }
};

Toast.setDefaultOptions = function (type, options) {
  if (typeof type === 'string') {
    defaultOptionsMap[type] = options;
  } else {
    (0, _extends2.default)(currentOptions, type);
  }
};

Toast.resetDefaultOptions = function (type) {
  if (typeof type === 'string') {
    defaultOptionsMap[type] = null;
  } else {
    currentOptions = (0, _extends2.default)({}, defaultOptions);
    defaultOptionsMap = {};
  }
};

Toast.allowMultiple = function (value) {
  if (value === void 0) {
    value = true;
  }

  multiple = value;
};

Toast.install = function () {
  _vue.default.use(_Toast.default);
};

_vue.default.prototype.$toast = Toast;
var _default = Toast;
exports.default = _default;

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.times = times;
exports.getTrueValue = getTrueValue;
exports.getMonthEndDay = getMonthEndDay;
exports.getWeekText = getWeekText;
exports.generateWeeks = generateWeeks;

var _string = __webpack_require__(19);

var _number = __webpack_require__(32);

/*
 * @FilePath: /mu-vant/src/datetime-picker/utils.ts
 * @Description: 添加描述
 * @version: 1.0.0
 * @Author: GENGMENGWEI
 * @Date: 2022-12-12 18:16:46
 * @LastEditors: gengmengwei
 * @LastEditTime: 2023-01-17 16:20:55
 */
var weeks = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'];

function times(n, iteratee) {
  var index = -1;
  var result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }

  return result;
}

function getTrueValue(value) {
  if (!value) {
    return 0;
  }

  while ((0, _number.isNaN)(parseInt(value, 10))) {
    if (value.length > 1) {
      value = value.slice(1);
    } else {
      return 0;
    }
  }

  return parseInt(value, 10);
}

function getMonthEndDay(year, month) {
  return 32 - new Date(year, month - 1, 32).getDate();
}

function getWeekText(date) {
  var month = (0, _string.padZero)(date.getMonth() + 1);
  var day = (0, _string.padZero)(date.getDate());
  var week = weeks[date.getDay()];

  if (date.toLocaleDateString() === new Date().toLocaleDateString()) {
    return '今天';
  }

  return month + "\u6708" + day + "\u65E5" + week;
}

function generateWeeks(years, months, days) {
  var result = [];
  var yearLen = years.length;
  var monthLen = months.length;
  var dayLen = days.length;

  for (var i = 0; i < yearLen; i++) {
    for (var j = 0; j < monthLen; j++) {
      for (var k = 0; k < dayLen; k++) {
        var date = new Date(years[i], months[j] - 1, days[k]);
        var dateValue = {
          year: years[i],
          month: months[j],
          day: days[k]
        };
        result.push({
          text: getWeekText(date),
          value: dateValue
        });
      }
    }
  }

  return result;
}

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUMobile = {
  /**
   * 跳转MUC群对话框
   */
  forwardGroupChat: function forwardGroupChat(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    if (typeof param1 === 'function') {
      var p = new Promise(function (resolve, reject) {
        _windvane2.default.WindVane.call('MUMobile', 'forwardGroupChat', {}, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param1(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param2(err);
          reject(err);
        });
      });
      return p;
    } else {
      var _p = new Promise(function (resolve, reject) {
        _windvane2.default.WindVane.call('MUMobile', 'forwardGroupChat', param1, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param2(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param3(err);
          reject(err);
        });
      });
      return _p;
    }
  },


  /**
   * 跳转muc 单聊
   */
  forwardSingleChat: function forwardSingleChat(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'forwardSingleChat', param1, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param2(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param3(err);
        reject(err);
      });
    });
    return p;
  },

  /**
   * 分享磁铁到muc
   */
  shareCardToMuc: function shareCardToMuc(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'shareCardToMuc', param1, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param2(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param3(err);
        reject(err);
      });
    });
    return p;
  },

  /**
   * 分享网页链接到muc
   */
  sharePageToMuc: function sharePageToMuc(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'sharePageToMuc', param1, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param2(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param3(err);
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vue = __webpack_require__(15);

var _vue2 = _interopRequireDefault(_vue);

var _index = __webpack_require__(121);

var _index2 = _interopRequireDefault(_index);

var _utils = __webpack_require__(10);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuCalendarConstructor = _vue2.default.extend(_index2.default); /*
                                                                    * @Author: xiaoyang
                                                                    * @Date: 2020-08-19 17:39:36
                                                                    * @LastEditTime: 2023-02-10 08:50:53
                                                                    * @LastEditors: wangjie59 wangjie59@ceair.com
                                                                    * @Description: 添加注释
                                                                    * @FilePath: /mu-hybrid/mu-hybrid/mu_calendar/calendar.js
                                                                    */


var instance = void 0;

var defaultCallback = function defaultCallback(selectedDate) {
  try {
    instance.resolve({
      status: 0,
      message: '',
      data: {
        selectedDate: selectedDate
      }
    });
  } catch (e) {
    // TODO handle the exception
    instance.reject({
      status: -1,
      message: e.message,
      data: {}
    });
  }
};

// 使用这个方法调用muCalendar组件
var initInstance = function initInstance() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var newDiv = document.createElement('div');
  newDiv.style.position = 'fixed';
  newDiv.style.zIndex = '99999999';
  // 实例化子组件，然后获取到DOM结构并挂载到body上
  instance = new MuCalendarConstructor({
    // el: options.el ? getElement(options.el) : document.createElement('div')
    el: options.el ? (0, _utils.getElement)(options.el) : newDiv
  });

  instance.callback = defaultCallback;

  // 日历关闭
  instance.onCalenderClosed = function () {
    // TODO 销毁实例
    instance.$destroy();
    instance.$el.parentNode.removeChild(instance.$el);
    instance = null;
  };

  // options.el
  //   ? instance.$mount()
  document.body.appendChild(instance.$el);
};

// 显示日历
var openMuCalendar = function openMuCalendar(params, resolve, reject) {
  var options = {};

  var _params$color = params.color,
      color = _params$color === undefined ? '#437acf' : _params$color,
      minCalendarDate = params.minCalendarDate,
      maxCalendarDate = params.maxCalendarDate,
      minPickerDate = params.minPickerDate,
      maxPickerDate = params.maxPickerDate,
      _params$calendarMode = params.calendarMode,
      calendarMode = _params$calendarMode === undefined ? 'picker' : _params$calendarMode,
      _params$pickerMode = params.pickerMode,
      pickerMode = _params$pickerMode === undefined ? 'single' : _params$pickerMode,
      selectedDates = params.selectedDates,
      disabledDates = params.disabledDates,
      metadataUrl = params.metadataUrl,
      showWork = params.showWork,
      states = params.states,
      marks = params.marks,
      el = params.el;


  var inParams = function inParams(key) {
    return Object.hasOwnProperty.call(params, key);
  };

  // 错误信息
  var errorResult = {
    status: -1,
    message: '',
    data: {}
  };

  // minCalendarDate 校验
  if (inParams('minCalendarDate')) {
    var _isDateStr = (0, _utils.isDateStr)(minCalendarDate),
        minCalendarDateValid = _isDateStr.validate,
        minCalendarDateFormatted = _isDateStr.content;

    if (!minCalendarDateValid || minCalendarDateFormatted.day !== 1) {
      errorResult.message = 'minCalendarDate参数错误';
    }
  }
  // maxCalendarDate 校验
  if (inParams('maxCalendarDate')) {
    var _isDateStr2 = (0, _utils.isDateStr)(maxCalendarDate),
        maxCalendarDateValid = _isDateStr2.validate,
        _isDateStr2$content = _isDateStr2.content,
        year = _isDateStr2$content.year,
        month = _isDateStr2$content.month,
        day = _isDateStr2$content.day;

    var time = new Date(year, month, day).getTime();
    var getTime = new Date(year, month + 1, 0).getTime();
    if (!maxCalendarDateValid || time !== getTime) {
      errorResult.message = 'maxCalendarDate参数错误';
    }
  }
  // minPickerDate 校验
  if (inParams('minPickerDate')) {
    if (!(0, _utils.isDateStr)(minPickerDate).validate) {
      errorResult.message = 'minPickerDate参数错误';
    }
  }

  // maxPickerDate 校验
  if (inParams('maxPickerDate')) {
    if (!(0, _utils.isDateStr)(maxPickerDate).validate) {
      errorResult.message = 'maxPickerDate参数错误';
    }
  }

  if (maxPickerDate && minPickerDate) {
    var minPicker = (0, _utils.isDateStr)(maxPickerDate);
    var maxPicker = (0, _utils.isDateStr)(minPickerDate);
    if (minPicker.validate && maxPicker.validate) {
      if (minPicker.date.getTime() < maxPicker.date.getTime()) {
        errorResult.message = 'maxPickerDate不能小于minPickerDate';
      }
    }
  }

  // calendarMode参数错误
  if (!['picker', 'display'].includes(calendarMode)) {
    errorResult.message = 'calendarMode参数错误';
  }

  // pickerMode参数错误
  var pickerModeValid = ['single', 'range'].includes(pickerMode);
  if (!pickerModeValid) {
    errorResult.message = 'pickerMode参数错误';
  }

  // selectedDates参数错误
  // 判断 不同 pickerMode 值下 selectedDates 是否有效？是否升序&时间格式是否正确，按照hybrid文档的要求：
  if (inParams('selectedDates')) {
    if (!Array.isArray(selectedDates) || !selectedDates.length) {
      errorResult.message = 'selectedDates参数错误';
    } else if (pickerModeValid) {
      if (pickerMode === 'single' && selectedDates.length !== 1) {
        errorResult.message = 'pickerMode为single时，selectedDates长度为1';
      }
      if (pickerMode === 'range' && selectedDates.length !== 2) {
        errorResult.message = 'pickerMode为range时，selectedDates长度为2';
      }

      // 判断selectedDates数组中的时间字符串属性date是否是升序
      var isAsc = selectedDates.every(function (item, index, arr) {
        if (index === 0) {
          return true;
        }
        var now = (0, _utils.isDateStr)(item.date);
        var pre = (0, _utils.isDateStr)(arr[index - 1].date);
        if (now.validate && pre.validate) {
          return now.date.getTime() >= pre.date.getTime();
        }
        return false;
      });

      if (!isAsc) {
        errorResult.message = 'selectedDates数组中的时间字符串属性date不是升序';
      }
    }
  } else {
    errorResult.message = 'selectedDates参数错误';
  }

  // disabledDates参数错误
  // 判断 disabledDates 是否有效？时间格式是否正确，按照hybrid文档的要求：
  if (inParams('disabledDates')) {
    if (!Array.isArray(disabledDates) || !disabledDates.length) {
      errorResult.message = 'disabledDates参数错误';
    } else {
      var isDateStrValid = disabledDates.every(function (item) {
        return (0, _utils.isDateStr)(item.date).validate;
      });
      if (!isDateStrValid) {
        errorResult.message = 'disabledDates参数错误';
      }
    }
  }

  // 参数错误，直接返回
  if (errorResult.message) {
    reject(errorResult);
    return;
  }

  // 参数格式化 start
  if (minCalendarDate) {
    options.minCalendarDate = new Date(minCalendarDate);
  }
  if (maxCalendarDate) {
    options.maxCalendarDate = new Date(maxCalendarDate);
  }

  // 没传入最小可选日期，就取最小可视日期的第一天
  var calendarProps = _index2.default.components && _index2.default.components.vanCalendar && _index2.default.components.vanCalendar.props;
  var minDate = options.minCalendarDate || calendarProps && calendarProps.minCalendarDate.default();
  minDate.setDate(1);
  options.minDate = new Date(minPickerDate || minDate);
  // 没传入最大可选日期，就取最大可视日期的最后一天
  var maxDate = options.maxCalendarDate || calendarProps && calendarProps.maxCalendarDate.default();
  maxDate.setDate(0);
  options.maxDate = new Date(maxPickerDate || maxDate);

  // 是否只读，只读模式下不可选择日期
  options.readonly = calendarMode === 'display';

  // 选择类型 single:单选,range:区间选择,multiple:多选(不使用)
  options.type = pickerMode;

  // vant 自带属性 暂未使用
  // 日历标题 默认 '日期选择'
  // options.title = title;
  // color 主题色 对底部按钮和选中日期生效 默认 #437acf
  options.color = color;
  // 日期行高 默认 64px
  // options.rowHeight = rowHeight;
  // 是否以弹层形式展示 默认 true
  // options.poppable = poppable;
  // 是否只渲染可视区域 默认 true
  // options.lazyRender = lazyRender;
  // 是否显示月份背景水印 默认 true
  // options.showMark = showMark;
  // 是否展示日历标题 默认 true
  // options.showTitle = showTitle;
  // 是否展示日历副标题（年月） 默认 true
  // options.showSubtitle = showSubtitle;
  // 是否展示确认按钮 默认 true
  // options.showConfirm = showConfirm;
  // 确认按钮的文字 默认 '确认'
  // options.confirmText = confirmText;
  // 确认按钮处于禁用状态时的文字 默认 '确认'
  // options.confirmDisabledText = confirmDisabledText;
  // 设置周起始日 默认 0
  // options.firstDayOfWeek = firstDayOfWeek;

  // poppable 为 true 时，支持以下属性
  // 弹出位置，可选值为 top right left bottom 默认 bottom
  // options.position = position;
  // 是否显示圆角弹窗 默认 true
  // options.round = round;
  // 是否在页面回退时自动关闭弹出层 默认 true
  // options.closeOnPopstate = closeOnPopstate;
  // 是否在点击遮罩层后关闭弹出层 默认 true
  // options.closeOnClickOverlay = closeOnClickOverlay;
  // 指定挂载的节点 用法示例：https://mu-mobile.ceair.com/mu-vant/#/zh-CN/popup#zhi-ding-gua-zai-wei-zhi
  if (inParams('el')) {
    options.el = el;
  }

  // type 为 range 或 multiple 时，支持以下属性
  // 日期区间最多可选天数 默认 无限制
  // options.maxRange = maxRange;
  // 范围选择超过最多可选天数时的提示文案 默认 '选择天数不能超过 xx 天'
  // options.rangePrompt = rangePrompt;

  // type 为 range 时，支持以下属性
  // 是否允许日期范围的起止时间为同一天 默认 false
  // options.allowSameDay = allowSameDay;

  // TODO 通过这个函数添加下方的 marks
  /**
   * @description: 日期格式化函数
   * @param {Date} day 日历组件返回的选中的Date
   * @return {*} 添加自定义日期显示后的Date
   * @author: wangjie59
   */
  options.formatter = function (day) {
    // Day
    // date       日期对应的 Date 对象                                    Date
    // type       日期类型，可选值为selected、start、middle、end、disabled  string
    // text       中间显示的文字                                          string
    // topInfo    上方的提示信息                                          string
    // bottomInfo 下方的提示信息                                          string
    // className  额外类名                                               string
    var formatDate = (0, _utils.timeFormat)(day.date);
    (instance.calendarProps.disabledDates || []).includes(formatDate) && (day.type = 'disabled');
    if (formatDate === (0, _utils.timeFormat)(new Date())) {
      day.text = '今天';
    }
    return day;
  };

  // 默认选中的日期
  if (selectedDates) {
    options.defaultDate = pickerMode === 'single' ? new Date(selectedDates[0].date) : selectedDates.map(function (_ref) {
      var date = _ref.date;
      return new Date(date);
    });
  }

  // 禁止选择的日期
  if (disabledDates) {
    options.disabledDates = disabledDates.map(function (_ref2) {
      var date = _ref2.date;
      return date;
    });
  }

  // TODO 节日需要单独适配
  options.metadataUrl = metadataUrl;
  // TODO bool 否 是 是否显示班休
  options.showWork = showWork;
  // TODO Array 否 - 状态颜色列表
  options.states = states;
  // TODO Array 否 - 日期状态列表
  options.marks = marks;

  // 参数格式化 end

  if (!instance) {
    initInstance(options);
  }

  instance.resolve = resolve;
  instance.reject = reject;

  // 向组件更新props
  instance.calendarProps = options;
  // for (const key in options) {
  //   if (Object.hasOwnProperty.call(options, key)) {
  //     instance[key] = options[key];
  //   }
  // }

  setTimeout(function () {
    if (!instance.visible) {
      instance.toggle(true);
    };
  }, 10);
};

var MUCalendar = {
  /**
   * 打开日历
   */
  open: (0, _utils.p2c)(function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    // 添加UI组件容器
    return new Promise(function (resolve, reject) {
      try {
        openMuCalendar(option, resolve, reject);
      } catch (e) {
        // TODO handle the exception
        reject(e.message);
      }
    });
  }),

  /**
    * 关闭日历
    */
  close: (0, _utils.p2c)(function (success, failure) {
    return new Promise(function (resolve, reject) {
      var result = {
        status: 0,
        message: 'success',
        data: {}
      };
      try {
        if (instance && instance.visible) {
          instance.toggle();
          resolve(result);
        } else {
          result.status = -1;
          result.message = '日历未打开';
          reject(result);
        }
      } catch (e) {
        result.status = -1;
        result.message = e.message;
        // TODO handle the exception
        reject(result);
      }
    });
  })
};

exports.default = MUCalendar;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(120);
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)))

/***/ }),
/* 43 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(136);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(137);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

exports.__esModule = true;
exports.raf = raf;
exports.doubleRaf = doubleRaf;
exports.cancelRaf = cancelRaf;

var _ = __webpack_require__(1);

/*
 * @Author: xiaoyang
 * @Date: 2021-06-11 11:26:52
 * @LastEditTime: 2021-07-21 17:56:29
 * @LastEditors: xiaoyang
 * @Description: 添加描述
 * @FilePath: /mu-vant/src/utils/dom/raf.ts
 * @version: 1.0.0
 */

/**
 * requestAnimationFrame polyfill
 */
var prev = Date.now();
/* istanbul ignore next */

function fallback(fn) {
  var curr = Date.now();
  var ms = Math.max(0, 16 - (curr - prev));
  var id = setTimeout(fn, ms);
  prev = curr + ms;
  return id;
}
/* istanbul ignore next */


var root = _.isServer ? global : window;
/* istanbul ignore next */

var iRaf = root.requestAnimationFrame || fallback;
/* istanbul ignore next */

var iCancel = root.cancelAnimationFrame || root.clearTimeout;

function raf(fn) {
  return iRaf.call(root, fn);
} // double raf for animation


function doubleRaf(fn) {
  raf(function () {
    raf(fn);
  });
}

function cancelRaf(id) {
  iCancel.call(root, id);
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)))

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _vue = _interopRequireDefault(__webpack_require__(13));

var _deepAssign = __webpack_require__(144);

var _zhCN = _interopRequireDefault(__webpack_require__(145));

var proto = _vue.default.prototype; // @ts-ignore

var defineReactive = _vue.default.util.defineReactive;
defineReactive(proto, '$vantLang', 'zh-CN');
defineReactive(proto, '$vantMessages', {
  'zh-CN': _zhCN.default
});
var _default = {
  messages: function messages() {
    return proto.$vantMessages[proto.$vantLang];
  },
  use: function use(lang, messages) {
    var _this$add;

    proto.$vantLang = lang;
    this.add((_this$add = {}, _this$add[lang] = messages, _this$add));
  },
  add: function add(messages) {
    if (messages === void 0) {
      messages = {};
    }

    (0, _deepAssign.deepAssign)(proto.$vantMessages, messages);
  }
};
exports.default = _default;

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.context = void 0;
var context = {
  zIndex: 2000,
  lockCount: 0,
  stack: [],
  find: function find(vm) {
    return this.stack.filter(function (item) {
      return item.vm === vm;
    })[0];
  }
};
exports.context = context;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _babelHelperVueJsxMergeProps = _interopRequireDefault(__webpack_require__(8));

var _utils = __webpack_require__(1);

var _functional = __webpack_require__(14);

// Utils
var _createNamespace = (0, _utils.createNamespace)('info'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

function Info(h, props, slots, ctx) {
  var dot = props.dot,
      info = props.info;
  var showInfo = (0, _utils.isDef)(info) && info !== '';

  if (!dot && !showInfo) {
    return;
  }

  return h("div", (0, _babelHelperVueJsxMergeProps.default)([{
    "class": bem({
      dot: dot
    })
  }, (0, _functional.inherit)(ctx, true)]), [dot ? '' : props.info]);
}

Info.props = {
  dot: Boolean,
  info: [Number, String]
};

var _default = createComponent(Info);

exports.default = _default;

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _babelHelperVueJsxMergeProps = _interopRequireDefault(__webpack_require__(8));

var _utils = __webpack_require__(1);

var _functional = __webpack_require__(14);

var _constant = __webpack_require__(29);

var _router = __webpack_require__(37);

var _icon = _interopRequireDefault(__webpack_require__(24));

var _loading = _interopRequireDefault(__webpack_require__(30));

// Utils
// Components
var _createNamespace = (0, _utils.createNamespace)('button'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

function Button(h, props, slots, ctx) {
  var _ref;

  var tag = props.tag,
      icon = props.icon,
      type = props.type,
      color = props.color,
      plain = props.plain,
      disabled = props.disabled,
      loading = props.loading,
      hairline = props.hairline,
      loadingText = props.loadingText,
      iconPosition = props.iconPosition;
  var style = {};

  if (color) {
    style.color = plain ? color : 'white';

    if (!plain) {
      // Use background instead of backgroundColor to make linear-gradient work
      style.background = color;
    } // hide border when color is linear-gradient


    if (color.indexOf('gradient') !== -1) {
      style.border = 0;
    } else {
      style.borderColor = color;
    }
  }

  function onClick(event) {
    if (props.loading) {
      event.preventDefault();
    }

    if (!loading && !disabled) {
      (0, _functional.emit)(ctx, 'click', event);
      (0, _router.functionalRoute)(ctx);
    }
  }

  function onTouchstart(event) {
    (0, _functional.emit)(ctx, 'touchstart', event);
  }

  var classes = [bem([type, props.size, {
    plain: plain,
    loading: loading,
    disabled: disabled,
    hairline: hairline,
    block: props.block,
    round: props.round,
    square: props.square
  }]), (_ref = {}, _ref[_constant.BORDER_SURROUND] = hairline, _ref)];

  function renderIcon() {
    if (loading) {
      return slots.loading ? slots.loading() : h(_loading.default, {
        "class": bem('loading'),
        "attrs": {
          "size": props.loadingSize,
          "type": props.loadingType,
          "color": "currentColor"
        }
      });
    }

    if (slots.icon) {
      return h("div", {
        "class": bem('icon')
      }, [slots.icon()]);
    }

    if (icon) {
      return h(_icon.default, {
        "attrs": {
          "name": icon,
          "classPrefix": props.iconPrefix
        },
        "class": bem('icon')
      });
    }
  }

  function renderContent() {
    var content = [];

    if (iconPosition === 'left') {
      content.push(renderIcon());
    }

    var text;

    if (loading) {
      text = loadingText;
    } else {
      text = slots.default ? slots.default() : props.text;
    }

    if (text) {
      content.push(h("span", {
        "class": bem('text')
      }, [text]));
    }

    if (iconPosition === 'right') {
      content.push(renderIcon());
    }

    return content;
  }

  return h(tag, (0, _babelHelperVueJsxMergeProps.default)([{
    "style": style,
    "class": classes,
    "attrs": {
      "type": props.nativeType,
      "disabled": disabled
    },
    "on": {
      "click": onClick,
      "touchstart": onTouchstart
    }
  }, (0, _functional.inherit)(ctx)]), [h("div", {
    "class": bem('content')
  }, [renderContent()])]);
}

Button.props = (0, _extends2.default)({}, _router.routeProps, {
  text: String,
  icon: String,
  color: String,
  block: Boolean,
  plain: Boolean,
  round: Boolean,
  square: Boolean,
  loading: Boolean,
  hairline: Boolean,
  disabled: Boolean,
  iconPrefix: String,
  nativeType: String,
  loadingText: String,
  loadingType: String,
  tag: {
    type: String,
    default: 'button'
  },
  type: {
    type: String,
    default: 'default'
  },
  size: {
    type: String,
    default: 'normal'
  },
  loadingSize: {
    type: String,
    default: '20px'
  },
  iconPosition: {
    type: String,
    default: 'left'
  }
});

var _default = createComponent(Button);

exports.default = _default;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUMobile = {
  /**
   * 根据typeId，取得卡片list
   * @param {{Array}} option.types
   */
  getCards: function getCards() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'getCards', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {
          console.error(err);
        }
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
   * 根据条件查询卡片列表
   */
  queryCards: function queryCards() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'queryCards', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
   * 根据卡片id 打开卡片
   * @param {{String}} option.cardCode
   */
  openCard: function openCard() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      // 判断当前客户端版本号是否支持对应卡片
      var error = {
        status: -1,
        data: {},
        message: ''
      };
      // 从ua中获取当前app版本号
      var ua = navigator.userAgent;
      // 掌上东航5.0 版本号
      var appMUMobileVersion = ua.match(/MUMobile\/([\S.]+)/) ? ua.match(/MUMobile\/([\S.]+)/)[1] : '';
      // 掌上东航外部版 版本号
      // TODO: 暂时没启用
      // const appMUMobileGuestVersion = ua.match(/MUMobileGuest\/([\S.]+)/) ? ua.match(/MUMobileGuest\/([\S.]+)/)[1] : '';
      // 是否掌上东航外部版
      var isMUMobileGuest = ua.indexOf('MUMobileGuest') > -1;

      try {
        // webapp 最低5.0.1822版本
        if (appMUMobileVersion !== '' && appMUMobileVersion < '5.0.1822' && option.cardCode.indexOf('webapp_') > -1) {
          error.message = '请升级最新版本';
          reject(error);
          return;
        }
        // miniapp 最低5.0.1900版本
        if (appMUMobileVersion !== '' && appMUMobileVersion < '5.0.1900' && option.cardCode.indexOf('miniapp_') > -1) {
          error.message = '请升级最新版本';
          reject(error);
          return;
        }
      } catch (err) {
        error.message = err.message;
        reject(error);
        return;
      }

      // 判断是否开发环境，且不包含dev  追加前缀
      // 不是掌上东航外部版，说明在emas上，需要cardCode 加上dev_
      console.log('MuCard isMUMobileGuest: ', isMUMobileGuest);
      if ((Object({"NODE_ENV":"production"}).VUE_APP_ENV === 'dev' || Object({"NODE_ENV":"production"}).VUE_APP_ENV === 'local') && isMUMobileGuest === false) {
        var cardCode = option.cardCode;
        if (!cardCode) {
          error.message = 'no card code';
          reject(error);
          return;
        }
        // 直接这么判断后面估计会出问题。。。
        if (!cardCode.includes('dev_')) {
          option.cardCode = 'dev_' + cardCode;
        }
      }

      _windvane2.default.WindVane.call('MUMobile', 'openCard', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vue = __webpack_require__(15);

var _vue2 = _interopRequireDefault(_vue);

var _index = __webpack_require__(163);

var _index2 = _interopRequireDefault(_index);

var _utils = __webpack_require__(10);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuCascaderConstructor = _vue2.default.extend(_index2.default); /*
                                                                    * @Author: xiaoyang
                                                                    * @Date: 2020-08-19 17:39:36
                                                                    * @LastEditTime: 2023-02-07 17:34:47
                                                                    * @LastEditors: xiaoyang
                                                                    * @Description: 实现掌上东航 MUCascadingMenu web版本
                                                                    * @FilePath: /vue-demo/node_modules/@ceair/mu-hybrid/mu_cascadingMenu/web.js
                                                                    */


var instance = void 0;

var defaultCallback = function defaultCallback(selectedDate) {
  try {
    instance.resolve({
      status: 0,
      message: '',
      data: {
        selectedDate: selectedDate
      }
    });
  } catch (e) {
    // TODO handle the exception
    instance.reject({
      status: -1,
      message: e.message,
      data: {}
    });
  }
};

/**
 * MUCascadingMenu data入参 转换成 vant Cascader options
 */
var makeOptionsTree = function makeOptionsTree(data) {
  var newdata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  var tree = [];
  if (data && newdata) {
    newdata.map(function (item) {
      item.children = [];
      data.map(function (item2) {
        if (item2.parent === item.key) {
          item.children.push(item2);
        }
      });
      if (item.children.length > 0) {
        makeOptionsTree(data, item.children);
      } else {
        delete item.children;
      }
    });
  } else {
    // 构造树, 第-级节点
    data.map(function (item) {
      // key 存在，parent 不存在，第一节点
      if (item.key && !item.parent) {
        tree.push(item);
      }
    });
    makeOptionsTree(data, tree);
  }
  return tree;
};

/**
 * init
 */
var initInstance = function initInstance() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  instance = new MuCascaderConstructor({
    el: document.createElement('div')
  });

  instance.callback = defaultCallback;
  document.body.appendChild(instance.$el);
};

// 显示日历
var openCascader = function openCascader(params, resolve, reject) {
  // {
  //   "title": ["第一级"],
  //   "data": [{ "level": 1, "key": "11", "value": "" }]
  // }
  var _params$data = params.data,
      data = _params$data === undefined ? {} : _params$data;

  var title = '请选择';
  if (!instance) {
    initInstance({});
  }

  // 字段key转换
  data.map(function (item) {
    item.text = item.value;
    item.value = item.key;
  });
  // 标题
  instance.title = title;
  // 级联数据
  instance.options = makeOptionsTree(data);

  instance.resolve = resolve;
  instance.reject = reject;

  setTimeout(function () {
    if (!instance.show) {
      instance.cascaderValue = '';
      instance.toggle(true);
    }
  }, 10);
};

var MUCascadingMenu = {
  /**
   *  open
   * @param option {"title": ["第一级"],"data": [{ "level": 1, "key": "11", "value": "" }]}
   *
   */
  open: (0, _utils.p2c)(function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    return new Promise(function (resolve, reject) {
      openCascader(option, resolve, reject);
    });
  }),
  close: (0, _utils.p2c)(function (success, failure) {
    return new Promise(function (resolve, reject) {
      if (instance && instance.show) {
        instance.toggle();
        resolve({
          status: 0,
          message: 'success',
          data: {}
        });
      } else {
        reject({
          status: -1,
          message: 'Cascader 不存在'
        });
      }
    });
  })
};

exports.default = MUCascadingMenu;

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.ChildrenMixin = ChildrenMixin;
exports.ParentMixin = ParentMixin;

var _vnodes = __webpack_require__(180);

function ChildrenMixin(_parent, options) {
  var _inject, _computed;

  if (options === void 0) {
    options = {};
  }

  var indexKey = options.indexKey || 'index';
  return {
    inject: (_inject = {}, _inject[_parent] = {
      default: null
    }, _inject),
    computed: (_computed = {
      parent: function parent() {
        if (this.disableBindRelation) {
          return null;
        }

        return this[_parent];
      }
    }, _computed[indexKey] = function () {
      this.bindRelation();

      if (this.parent) {
        return this.parent.children.indexOf(this);
      }

      return null;
    }, _computed),
    watch: {
      disableBindRelation: function disableBindRelation(val) {
        if (!val) {
          this.bindRelation();
        }
      }
    },
    mounted: function mounted() {
      this.bindRelation();
    },
    beforeDestroy: function beforeDestroy() {
      var _this = this;

      if (this.parent) {
        this.parent.children = this.parent.children.filter(function (item) {
          return item !== _this;
        });
      }
    },
    methods: {
      bindRelation: function bindRelation() {
        if (!this.parent || this.parent.children.indexOf(this) !== -1) {
          return;
        }

        var children = [].concat(this.parent.children, [this]);
        (0, _vnodes.sortChildren)(children, this.parent);
        this.parent.children = children;
      }
    }
  };
}

function ParentMixin(parent) {
  return {
    provide: function provide() {
      var _ref;

      return _ref = {}, _ref[parent] = this, _ref;
    },
    data: function data() {
      return {
        children: []
      };
    }
  };
}

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.isHidden = isHidden;

function isHidden(el) {
  var style = window.getComputedStyle(el);
  var hidden = style.display === 'none'; // offsetParent returns null in the following situations:
  // 1. The element or its parent element has the display property set to none.
  // 2. The element has the position property set to fixed

  var parentHidden = el.offsetParent === null && style.position !== 'fixed';
  return hidden || parentHidden;
}

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(12);
__webpack_require__(21);
__webpack_require__(17);
__webpack_require__(18);
__webpack_require__(22);

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vue = __webpack_require__(15);

var _vue2 = _interopRequireDefault(_vue);

var _index = __webpack_require__(203);

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * @Author: wangjie59 wangjie59@ceair.com
 * @Date: 2023-02-07 17:06:40
 * @LastEditors: wangjie59 wangjie59@ceair.com
 * @LastEditTime: 2023-02-10 08:50:46
 * @FilePath: /mu-hybrid/mu-hybrid/mu_datePicker/datePicker.js
 * @Description:
 * @version: 1.0.0
 */
var DatePickerConstructor = _vue2.default.extend(_index2.default);
var instance = void 0;

var defaultCallback = function defaultCallback(selectedDate) {
  try {
    instance.resolve({
      status: 0,
      message: '',
      data: {
        selectedDate: selectedDate
      }
    });
  } catch (e) {
    instance.reject({
      status: -1,
      message: e.message,
      data: {}
    });
  }
};

var initInstance = function initInstance() {
  var newDiv = document.createElement('div');
  newDiv.style.position = 'fixed';
  newDiv.style.zIndex = '99999999';
  instance = new DatePickerConstructor({
    el: newDiv
  });
  instance.callback = defaultCallback;
  document.body.appendChild(instance.$el);
};

var showDatePicker = function showDatePicker(option) {
  if (!instance) {
    initInstance();
  }

  Object.keys(option).forEach(function (prop) {
    if (typeof instance[prop] !== 'undefined') {
      instance[prop] = option[prop];
    }
  });

  if (!instance.show) {
    _vue2.default.nextTick(function () {
      instance.show = true;
    });
  }
};

exports.default = {
  open: function open() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      try {
        showDatePicker(option);
        instance.resolve = resolve;
        instance.reject = reject;
      } catch (e) {
        reject({
          status: -1,
          message: e.message,
          data: {}
        });
      }
    });
    return p;
  }
};

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.range = range;
exports.formatNumber = formatNumber;

function range(num, min, max) {
  return Math.min(Math.max(num, min), max);
}

function trimExtraChar(value, _char, regExp) {
  var index = value.indexOf(_char);
  var prefix = '';

  if (index === -1) {
    return value;
  }

  if (_char === '-' && index !== 0) {
    return value.slice(0, index);
  }

  if (_char === '.' && value.match(/^(\.|-\.)/)) {
    prefix = index ? '-0' : '0';
  }

  return prefix + value.slice(0, index + 1) + value.slice(index).replace(regExp, '');
}

function formatNumber(value, allowDot, allowMinus) {
  if (allowDot === void 0) {
    allowDot = true;
  }

  if (allowMinus === void 0) {
    allowMinus = true;
  }

  if (allowDot) {
    value = trimExtraChar(value, '.', /\./g);
  } else {
    value = value.split('.')[0];
  }

  if (allowMinus) {
    value = trimExtraChar(value, '-', /-/g);
  } else {
    value = value.replace(/-/, '');
  }

  var regExp = allowDot ? /[^-0-9.]/g : /[^-0-9]/g;
  return value.replace(regExp, '');
}

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.TimePickerMixin = exports.sharedProps = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _utils = __webpack_require__(39);

var _string = __webpack_require__(19);

var _shared = __webpack_require__(59);

var _picker = _interopRequireDefault(__webpack_require__(209));

var sharedProps = (0, _extends2.default)({}, _shared.pickerProps, {
  value: null,
  filter: Function,
  columnsOrder: Array,
  showToolbar: {
    type: Boolean,
    default: true
  },
  formatter: {
    type: Function,
    default: function _default(type, value) {
      return value;
    }
  }
});
exports.sharedProps = sharedProps;
var TimePickerMixin = {
  data: function data() {
    return {
      innerValue: this.formatValue(this.value)
    };
  },
  computed: {
    originColumns: function originColumns() {
      var _this = this;

      return this.ranges.map(function (_ref) {
        var type = _ref.type,
            rangeArr = _ref.range;
        var values = rangeArr;

        if (type === 'week') {
          var years = (0, _utils.times)(rangeArr[1].maxYear - rangeArr[0].minYear + 1, function (index) {
            var value = (0, _string.padZero)(rangeArr[0].minYear + index);
            return value;
          });
          var months = (0, _utils.times)(rangeArr[1].maxMonth - rangeArr[0].minMonth + 1, function (index) {
            var value = (0, _string.padZero)(rangeArr[0].minMonth + index);
            return value;
          });
          var days = (0, _utils.times)(rangeArr[1].maxDate - rangeArr[0].minDate + 1, function (index) {
            var value = (0, _string.padZero)(rangeArr[0].minDate + index);
            return value;
          });
          values = (0, _utils.generateWeeks)(years, months, days);
        } else {
          values = (0, _utils.times)(rangeArr[1] - rangeArr[0] + 1, function (index) {
            var value = (0, _string.padZero)(rangeArr[0] + index);
            return value;
          });
        }

        if (_this.filter) {
          values = _this.filter(type, values);
        }

        return {
          type: type,
          values: values
        };
      });
    },
    columns: function columns() {
      var _this2 = this;

      return this.originColumns.map(function (column) {
        return {
          values: column.values.map(function (value) {
            return _this2.formatter(column.type, value);
          })
        };
      });
    }
  },
  watch: {
    columns: 'updateColumnValue',
    innerValue: function innerValue(val, oldVal) {
      if (!oldVal) {
        this.$emit('input', null);
      } else {
        this.$emit('input', val);
      }
    }
  },
  mounted: function mounted() {
    var _this3 = this;

    this.updateColumnValue();
    this.$nextTick(function () {
      _this3.updateInnerValue();
    });
  },
  methods: {
    // @exposed-api
    getPicker: function getPicker() {
      return this.$refs.picker;
    },
    onConfirm: function onConfirm() {
      this.$emit('input', this.innerValue);
      this.$emit('confirm', this.innerValue);
    },
    onCancel: function onCancel() {
      this.$emit('cancel');
    }
  },
  render: function render() {
    var _this4 = this;

    var h = arguments[0];
    var props = {};
    Object.keys(_shared.pickerProps).forEach(function (key) {
      props[key] = _this4[key];
    });
    return h(_picker.default, {
      "ref": "picker",
      "attrs": {
        "columns": this.columns,
        "readonly": this.readonly
      },
      "scopedSlots": this.$scopedSlots,
      "on": {
        "change": this.onChange,
        "confirm": this.onConfirm,
        "cancel": this.onCancel
      },
      "props": (0, _extends2.default)({}, props)
    });
  }
};
exports.TimePickerMixin = TimePickerMixin;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.pickerProps = exports.DEFAULT_ITEM_HEIGHT = void 0;
var DEFAULT_ITEM_HEIGHT = 48;
exports.DEFAULT_ITEM_HEIGHT = DEFAULT_ITEM_HEIGHT;
var pickerProps = {
  title: String,
  loading: Boolean,
  readonly: Boolean,
  itemHeight: [Number, String],
  showToolbar: Boolean,
  cancelButtonText: String,
  confirmButtonText: String,
  cancelButtonColor: String,
  confirmButtonColor: String,
  hairline: {
    type: Boolean,
    default: false
  },
  zoom: {
    type: Boolean,
    default: false
  },
  allowHtml: {
    type: Boolean,
    default: true
  },
  visibleItemCount: {
    type: [Number, String],
    default: 6
  },
  swipeDuration: {
    type: [Number, String],
    default: 1000
  }
};
exports.pickerProps = pickerProps;

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vue = __webpack_require__(15);

var _vue2 = _interopRequireDefault(_vue);

var _Dialog = __webpack_require__(225);

var _Dialog2 = _interopRequireDefault(_Dialog);

var _ActionSheet = __webpack_require__(234);

var _ActionSheet2 = _interopRequireDefault(_ActionSheet);

var _utils = __webpack_require__(10);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * @Author: xiaoyang
 * @Date: 2023-02-07 16:49:36
 * @LastEditTime: 2023-02-23 23:20:06
 * @LastEditors: xiaoyang
 * @Description:
 * @FilePath: /mu-hybrid/mu-hybrid/mu_dialog/web.js
 * @version: 1.0.0
 */

var MuDialogConstructor = _vue2.default.extend(_Dialog2.default);
var MuActionSheetConstructor = _vue2.default.extend(_ActionSheet2.default);

var DialogInstance = void 0;
var ActionSheetInstance = void 0;

/**
 * init
 */
var initDialogInstance = function initDialogInstance() {
  DialogInstance = new MuDialogConstructor({
    el: document.createElement('div')
  });
  document.body.appendChild(DialogInstance.$el);
};

// Dialog调用
var openDialog = function openDialog(params, type) {
  if (!DialogInstance) {
    initDialogInstance();
  }
  if (type === 'alert') {
    return DialogInstance.alert(params);
  } else if (type === 'confirm') {
    return DialogInstance.confirm(params);
  } else {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: 'Dialog type is error'
      });
    });
  }
};

var defaultActionSheetCallback = function defaultActionSheetCallback(index) {
  try {
    ActionSheetInstance.resolve({
      status: 0,
      message: 'ok',
      data: {
        type: 'confirm',
        index: index
      }
    });
  } catch (e) {
    ActionSheetInstance.reject({
      status: -1,
      message: e.message,
      data: {}
    });
  }
};

var initActionSheetInstance = function initActionSheetInstance() {
  ActionSheetInstance = new MuActionSheetConstructor({
    el: document.createElement('div')
  });
  ActionSheetInstance.callback = defaultActionSheetCallback;
  document.body.appendChild(ActionSheetInstance.$el);
};

// ActionSheet调用
var openActionSheet = function openActionSheet(params) {
  if (!ActionSheetInstance) {
    initActionSheetInstance();
  }
  var itemList = params.itemList;

  var _action = [];
  itemList.forEach(function (item) {
    _action.push({
      name: item
    });
  });
  ActionSheetInstance.actions = _action;

  if (!ActionSheetInstance.show) {
    setTimeout(function () {
      ActionSheetInstance.show = true;
    }, 10);
  }
};

var MuDialog = {
  showAlert: (0, _utils.p2c)(function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    return new Promise(function (resolve, reject) {
      var _option$title = option.title,
          title = _option$title === undefined ? '提示' : _option$title,
          _option$message = option.message,
          message = _option$message === undefined ? '' : _option$message;

      var confirmButtonText = option.buttonTitle || '确认';

      openDialog({ title: title, message: message, confirmButtonText: confirmButtonText }, 'alert').then(function () {
        resolve({ status: 0, message: '', data: { type: 'confirm' } });
      });
    });
  }),
  showConfirm: (0, _utils.p2c)(function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    return new Promise(function (resolve, reject) {
      var _option$title2 = option.title,
          title = _option$title2 === undefined ? '提示' : _option$title2,
          _option$message2 = option.message,
          message = _option$message2 === undefined ? '' : _option$message2;

      var confirmButtonText = option.confirmButtonTitle || '确认';
      var cancelButtonText = option.cancelButtonTitle || '取消';

      openDialog({ title: title, message: message, confirmButtonText: confirmButtonText, cancelButtonText: cancelButtonText }, 'confirm').then(function () {
        resolve({ status: 0, message: '', data: { type: 'confirm' } });
      }).catch(function () {
        reject({ status: 0, message: '', data: { type: 'cancel' } });
      });
    });
  }),
  showPrompt: (0, _utils.p2c)(function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    return new Promise(function (resolve, reject) {
      openDialog({ title: '提示', message: '暂不支持' }, 'alert').then(function () {
        reject({ status: -1, message: '', data: {} });
      });
    });
  }),
  showActionSheet: (0, _utils.p2c)(function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    return new Promise(function (resolve, reject) {
      openActionSheet(option);
      ActionSheetInstance.resolve = resolve;
      ActionSheetInstance.reject = reject;
    });
  })
};

exports.default = MuDialog;

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUEpass = {
  authQR: function authQR(option) {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUEpass', 'authQR', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  getOTP: function getOTP() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUEpass', 'getOTP', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
}; /*
    * @Author: lee9527
    * @Date: 2021-01-05 09:06:06
    * @LastEditors: lee9527
    * @LastEditTime: 2021-05-25 13:18:03
    * @Description:
    * @FilePath: /mu-hybrid/mu-hybrid/mu_epass/index.js
    * @version: 1.0.0
    */
exports.default = MUEpass;

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUFileManager = {
  /**
   * 判断文件是否存在
   */
  fileIsExist: function fileIsExist(option) {
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUFileManager', 'fileIsExist', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },


  /**
   * base64转bin文件
   */
  base64ToBin: function base64ToBin(option) {
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUFileManager', 'base64ToBin', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },


  /**
   * bin文件转base64
   */
  binToBase64: function binToBase64(option) {
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUFileManager', 'binToBase64', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },
  writeBase64: function writeBase64(option) {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUFileManager', 'writeBase64', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  readBase64: function readBase64(option) {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUFileManager', 'readBase64', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  deleteFile: function deleteFile(option) {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUFileManager', 'deleteFile', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  getFileInfo: function getFileInfo(option) {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUFileManager', 'getFileInfo', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  getAbsolutePath: function getAbsolutePath(option) {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUFileManager', 'fileAbsPathFrom', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  getLocalPath: function getLocalPath(option) {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUFileManager', 'fileLocalPathFrom', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  zip: function zip(option) {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUFileManager', 'zip', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  unzip: function unzip(option) {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUFileManager', 'unzip', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUFileManager;

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /*
                                                                                                                                                                                                                                                                               * @Description: In User Settings Edit
                                                                                                                                                                                                                                                                               * @Author: your name
                                                                                                                                                                                                                                                                               * @Date: 2019-09-17 16:29:24
                                                                                                                                                                                                                                                                               * @LastEditTime: 2021-12-07 09:06:57
                                                                                                                                                                                                                                                                               * @LastEditors: lee9527
                                                                                                                                                                                                                                                                               */

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var language = {
  en_US: {
    NETWORK_ERROR: 'Network error, please try again later',
    SERVER_ERROR: 'Server error, please try again later',
    UNKNOWN_ERROR: 'Unknown error, please try again later',
    INVALID_PARAM_ERROR: 'Invalid param, please try again later',
    OTHER_ERROR: 'Nothing returned from this request, please try again later'
  },
  zh_CN: {
    NETWORK_ERROR: '网络正在开小差...请稍后再试',
    SERVER_ERROR: '网络服务出现异常，请稍后再试',
    UNKNOWN_ERROR: '网络服务出现异常，请稍后再试',
    INVALID_PARAM_ERROR: '参数错误',
    OTHER_ERROR: '此次请求未返回任何消息/内容，请稍后再试'
  }
};

var MuHttpClient = {
  getLanguage: function getLanguage() {
    var language = 'zh-CN';
    var userAgent = navigator.userAgent;
    var tmpArray = userAgent.split(' ');
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = tmpArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var item = _step.value;

        if (item.indexOf('Language') !== -1) {
          language = item.split('/')[1];
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return language.replace('_', '-');
  },
  judgeErrorCode: function judgeErrorCode(err) {
    var msg = '';
    if (err.status !== 0) {
      var obj = '';
      var uaLanguage = this.getLanguage();
      if (uaLanguage.startsWith('zh')) {
        uaLanguage = 'zh-CN';
      }
      switch (uaLanguage) {
        case 'zh-CN':
          obj = language.zh_CN;
          break;
        case 'en-US':
          obj = language.en_US;
          break;
        default:
          break;
      }
      switch (err.errorCode) {
        case 'NETWORK_ERROR':
          msg = obj.NETWORK_ERROR;
          break;
        case 'SERVER_ERROR':
          msg = obj.SERVER_ERROR;
          break;
        case 'UNKNOWN_ERROR':
          msg = obj.UNKNOWN_ERROR;
          break;
        case 'INVALID_PARAM_ERROR':
          msg = obj.INVALID_PARAM_ERROR;
          break;
        case '':
          msg = obj.OTHER_ERROR;
          break;
        default:
          msg = obj.OTHER_ERROR;
          break;
      }
    }
    return msg;
  },


  /**
   * 校验接口地址
   * @param {{string}} url 请求地址
   * @return {{bool}}返回校验结果
   */
  getInterfaceUrl: function getInterfaceUrl(url) {
    var reg = /(http|https):\/\/([\w.]+\/?)\S*/;
    return reg.test(url);
  },

  /**
   * 获取请求参数
   * @param {{all}} option 请求参数
   * @callback {{number, json}}     callback(errCode, param)回调返回值
   */
  getParam: function getParam(option, callback) {
    var param = void 0;
    var errCode = 0;
    // 只接受string，object类型
    switch (typeof option === 'undefined' ? 'undefined' : _typeof(option)) {
      // 默认全部传了。
      case 'object':
        param = option;
        break;
      // 默认只有get请求url，没其他东西
      case 'string':
        param = {
          url: option
        };
        break;
      default:
        errCode = 1;
        param = {
          status: -1,
          data: {},
          message: '请求参数格式不符合要求：' + (typeof option === 'undefined' ? 'undefined' : _typeof(option))
        };
        break;
    }

    // 设置默认缓存
    param.cacheStrategy === 'always' && !param.cacheTime && (param.cacheTime = 30);
    param.cacheStrategy === 'hybrid' && !param.cacheTime && (param.cacheTime = 30);

    this.getInterfaceUrl(option.url) ? callback(errCode, param)
    // eslint-disable-next-line standard/no-callback-literal
    : callback(1, {
      status: -1,
      data: {},
      message: '接口地址格式错误：' + option.url
    });
  },


  /**
   * 非promise方式发送请求
   * @param {{string || json}} option 请求参数
   * @return {{object}} Promise
   */
  sendRequestWithoutPromise: function sendRequestWithoutPromise(method, option, success, failure) {
    var _this2 = this;

    console.info('--------MUHttpClient.option------');
    console.info(option);
    var _this = this;
    var param = void 0;
    try {
      _this.getParam(option, function (errCode, data) {
        if (errCode) {
          failure(data);
        } else {
          data.method = method;
          param = data;
        }
      });
      param.beforeSend && param.beforeSend();
      _windvane2.default.WindVane.call('MUHttpClient', 'execute', param, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        param.success && param.success(res.data);
        // 调用请求完成回调
        param.complete && param.complete();
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        // eslint-disable-next-line prefer-promise-reject-errors
        err.message = _this2.judgeErrorCode(err);
        failure(err);
        // reject(err);
        param.error && param.error(err);
        // 调用请求完成回调
        param.complete && param.complete();
      });
    } catch (error) {
      var err = {
        status: -1,
        data: {},
        message: 'MuHttpClient-' + error
      };
      failure(err);
      param.error(err);
      param.complete && param.complete();
    }
  },

  /**
   * 发送请求
   * @param {{string || json}} option 请求参数
   * @return {{object}} Promise
   */
  sendRequest: function sendRequest(method, option) {
    var _this3 = this;

    console.info('--------MUHttpClient.option------');
    console.info(option);

    var _this = this;
    var p = new Promise(function (resolve, reject) {
      var param = void 0;
      try {
        _this.getParam(option, function (errCode, data) {
          if (errCode) {
            reject(data);
          } else {
            data.method = method;
            param = data;
          }
        });
        // 调用请求前回调
        param.beforeSend && param.beforeSend();
        _windvane2.default.WindVane.call('MUHttpClient', 'execute', param, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          resolve(res);
          param.success && param.success(res.data);
          // 调用请求完成回调
          param.complete && param.complete();
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          // eslint-disable-next-line prefer-promise-reject-errors
          err.message = _this3.judgeErrorCode(err);
          reject(err);
          param.error && param.error(err);
          // 调用请求完成回调
          param.complete && param.complete();
        });
      } catch (error) {
        var err = {
          status: -1,
          data: {},
          message: 'MuHttpClient-' + error
        };
        reject(err);
        param.error(err);
        param.complete && param.complete();
      }
    });
    return p;
  },
  get: function get(option, success, failure) {
    if (typeof success === 'function') {
      this.sendRequestWithoutPromise('get', option, success, failure);
    } else {
      return this.sendRequest('get', option);
    }
  },
  post: function post(option, success, failure) {
    if (typeof success === 'function') {
      this.sendRequestWithoutPromise('post', option, success, failure);
    } else {
      return this.sendRequest('post', option);
    }
  },
  /**
   * 下载文件
   * @param {{json}} option 下载参数
   * @return {{object}} Promise
   */
  download: function download(option) {
    var successCb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};

    var _this4 = this;

    var errorCb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};
    var progressCb = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};

    console.info('--download--' + JSON.stringify(option));
    try {
      if (!option.url || !option.method) {
        errorCb({
          status: -1,
          data: {},
          message: '必传参数缺少'
        });
        return;
      }

      if (option.savedPath && option.savedPath.indexOf('local://') === -1) {
        errorCb({
          status: -1,
          data: {},
          message: '只支持local://协议头'
        });
      }

      _windvane2.default.WindVane.call('MUHttpClient', 'download', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        if (res.data && res.data.percent) {
          progressCb(res);
        } else {
          successCb(res);
        }
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        err.message = _this4.judgeErrorCode(err);
        errorCb(err);
      });
    } catch (error) {
      var err = {
        status: -1,
        data: {},
        message: 'MuHttpClient-' + error
      };
      errorCb(err);
    }
  },
  /**
   * 上传文件
   * @param {{json}} option 上传参数
   * @return {{object}} Promise
   */
  upload: function upload(option) {
    var successCb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};

    var _this5 = this;

    var errorCb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};
    var progressCb = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};

    console.info('--upload--' + JSON.stringify(option));

    try {
      if (!option.url) {
        errorCb({
          status: -1,
          data: {},
          message: '必传参数缺少'
        });
        return;
      }
      _windvane2.default.WindVane.call('MUHttpClient', 'upload', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        if (res.data && res.data.percent) {
          progressCb(res);
        } else {
          successCb(res);
        }
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        err.message = _this5.judgeErrorCode(err);
        errorCb(err);
      });
    } catch (error) {
      var err = {
        status: -1,
        data: {},
        message: 'MuHttpClient-' + error
      };
      errorCb(err);
    }
  },

  cleanCache: function cleanCache() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var successCb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var errorCb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      try {
        if (!option.url || !option.method) {
          // eslint-disable-next-line prefer-promise-reject-errors
          reject({
            status: -1,
            data: {},
            message: '必传参数缺少'
          });
          errorCb({
            status: -1,
            data: {},
            message: '必传参数缺少'
          });
          return;
        }
        _windvane2.default.WindVane.call('MUHttpClient', 'cleanCache', option, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          resolve(res);
          successCb(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          reject(err);
          errorCb(err);
        });
      } catch (error) {
        var err = {
          status: -1,
          data: {},
          message: 'MuHttpClient-' + error
        };
        reject(err);
        errorCb(err);
      }
    });

    return p;
  },
  // TODO: set default golbal headers
  setHeader: function setHeader(option) {},
  // TODO: set default golbal cache
  setCache: function setCache() {
    var cacheStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    var cacheTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  },
  // TODO: set default golbal timeOut
  setTimeOut: function setTimeOut() {
    var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  }
};

exports.default = MuHttpClient;

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(6);
var normalizeHeaderName = __webpack_require__(276);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(68);
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(68);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(43)))

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);
var settle = __webpack_require__(277);
var buildURL = __webpack_require__(65);
var buildFullPath = __webpack_require__(279);
var parseHeaders = __webpack_require__(282);
var isURLSameOrigin = __webpack_require__(283);
var createError = __webpack_require__(69);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(284);

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(278);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];
  var defaultToConfig2Keys = [
    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',
    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath'
  ];

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {
    if (utils.isObject(config2[prop])) {
      config[prop] = utils.deepMerge(config1[prop], config2[prop]);
    } else if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (utils.isObject(config1[prop])) {
      config[prop] = utils.deepMerge(config1[prop]);
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys);

  var otherKeys = Object
    .keys(config2)
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  return config;
};


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * ©Copyright 2018 China Eastern Airlines. All rights reserved
 * Created by <xuyang28@ceair.com> on 2019-08-09
 * doc： http://weex.emas-poc.com/zh/biz-component/biz-comm-FileUploader.html?
 */
var isWeexNative = !(typeof window !== 'undefined' && window.Math === Math);
var MUImagePicker = {
  pickImage: function pickImage(options) {
    return this.pick();
  },
  capture: function capture(options) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'MUImagePicker ',
        data: {}
      });
    });
    return p;
  },
  takePhoto: function takePhoto(options) {
    return this.pick();
  },
  compress: function compress(options) {
    var p = new Promise(function (resolve, reject) {
      var result = {
        status: -1,
        message: 'fail ',
        data: {}
      };
      try {
        var img = new Image();
        img.src = options.path;
        img.onload = function () {
          // 图片的宽高
          var w = img.width;
          var h = img.height;
          var canvas = document.createElement('canvas');
          // canvas对图片进行裁剪，这里设置为图片的原始尺寸
          canvas.width = w;
          canvas.height = h;
          var ctx = canvas.getContext('2d');
          // fillRect()方法绘制一个填充了内容的矩形，这个矩形的开始点（左上点）在
          // (x, y) ，它的宽度和高度分别由width 和 height 确定，填充样式由当前的fillStyle 决定。
          ctx.fillRect(0, 0, canvas.width, canvas.height);
          // 绘制图像
          ctx.drawImage(img, 0, 0, w, h);
          var dataUrl = canvas.toDataURL('image/png', options.quality ? options.quality / 100 : 1);
          // base64格式文件转成Blob文件格式
          result.status = 0;
          result.message = 'ok';
          result.data = {
            path: dataUrl
          };
          resolve(result);
        };
      } catch (e) {
        result.message = e.message || 'fail';
        reject(result);
      }
    });
    return p;
  },
  pick: function pick(options) {
    var p = new Promise(function (resolve, reject) {
      var result = {
        status: -1,
        message: 'fail ',
        data: {}
      };
      if (!isWeexNative) {
        // 创建input用于上传
        try {
          var input = document.createElement('input');
          input.type = 'file';
          input.style.display = 'none';
          // 暂时只支持上传图片
          input.accept = 'image/gif,image/jpeg,image/jpg,image/png,image/svg';
          document.body.appendChild(input);
          input.onchange = function (e) {
            // 获取图片
            var file = e.target.files[0];
            // 创建url
            var url = (window.URL || window.webkitURL).createObjectURL(file);;
            var files = [{
              fileSize: file.size,
              name: file.name,
              type: file.type,
              path: url
            }];
            result.status = 0;
            result.message = 'ok';
            result.data = {
              files: files
            };
            document.body.removeChild(input);
            resolve(result);
          };
          // 点击上传
          input.click();
        } catch (e) {
          result.message = e.message || 'fail';
          reject(result);
        }
      } else {
        result.status = 0;
        result.message = 'MUImagePicker';
        resolve(result);
      }
    });
    return p;
  },
  getImageInfo: function getImageInfo(options) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'MUImagePicker ',
        data: {}
      });
    });
    return p;
  }
};

exports.default = MUImagePicker;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
// import _window from '../windvane.src';

var MuInvoice = {
  /**
   * 跳转图片选择器
   */
  getInvoice: function getInvoice() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: '',
        data: {
          invoices: [{
			"user_info": {
				"fee": 10000,
				"title": "上海朴诺信息技术有限公司",
				"billing_time": 1710201600,
				"billing_no": "24952000000029659801",
				"billing_code": "",
				"info": [
					{
						"name": "*现代服务*培训服务",
						"fee": 9434
					}
				],
				"fee_without_tax": 9434,
				"tax": 566,
				"pdf_url": "https://mp.weixin.qq.com/intp/invoice/getpdf?type=invoice&card_id=p4gLgvn1AsQhfJ-r8uB4xYy6BsyE&wx_invoice_token=G7WA0wr_XPJ1NMNcYb0fgS_rdEkqXFnyTR0iIIG_-Am0YHeu5H3yK551h8jgaKoQ0t36H35RvgODKoVXz07IDg.%3D",
				"reimburse_status": "INVOICE_REIMBURSE_INIT",
				"order_id": "addinvoice_24952000000029659801__2005107712",
				"s_pdf_media_id": "23579089547108353",
				"check_code": "",
				"buyer_number": "913101205515426749",
				"buyer_address_and_phone": "",
				"buyer_bank_account": "",
				"seller_number": "914403006188392540",
				"seller_address_and_phone": "",
				"seller_bank_account": ""
			},
			"card_id": "p4gLgvn1AsQhfJ-r8uB4xYy6BsyE",
			"openid": "oI0N1wvnDTPIML3b24sRjWv9bqaM",
			"type": "增值税电子普通发票",
			"payee": "金蝶软件（中国）有限公司",
			"detail": ""}, { user_info: {
              fee: 11437,
              title: 'xx有限公司',
              billing_time: 1575216000,
              billing_no: '032323200411',
              billing_code: '81112307',
              info: [{ name: '*运输服务*客运服务费' }],
              fee_without_tax: 11104,
              tax: 333,
              pdf_url: 'xxx',
              reimburse_status: 'INVOICE_REIMBURSE_INIT',
              order_id: '81113407-0310011111',
              check_code: '0288066666628247092',
              buyer_number: '',
              buyer_address_and_phone: '',
              buyer_bank_account: '',
              seller_number: '',
              seller_address_and_phone: '',
              seller_bank_account: '' },
            card_id: 'xx',
            openid: 'xxx',
            type: '增值税电子普通发票',
            payee: '上海滴滴畅行科技有限公司',
            detail: '' }]
        }
      });
    });
    return p;
  }
};

exports.default = MuInvoice;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vue = __webpack_require__(15);

var _vue2 = _interopRequireDefault(_vue);

var _Loading = __webpack_require__(310);

var _Loading2 = _interopRequireDefault(_Loading);

var _utils = __webpack_require__(10);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuConstructor = _vue2.default.extend(_Loading2.default); /*
                                                              * @Author: xiaoyang
                                                              * @Date: 2023-02-07 16:49:36
                                                              * @LastEditTime: 2023-02-10 11:03:52
                                                              * @LastEditors: xiaoyang
                                                              * @Description:
                                                              * @FilePath: /mu-hybrid/mu-hybrid/mu_loading/web.js
                                                              * @version: 1.0.0
                                                              */

var Instance = void 0;

/**
 * init
 */
var initInstance = function initInstance() {
  Instance = new MuConstructor({
    el: document.createElement('div')
  });
  document.body.appendChild(Instance.$el);
};

var openLoading = function openLoading(params, type) {
  if (!Instance) {
    initInstance();
  }
  var message = params.message,
      _params$duration = params.duration,
      duration = _params$duration === undefined ? 999 : _params$duration;

  var cancelable = params.cancelable;
  Instance[type]({ message: message, duration: duration * 1000, forbidClick: cancelable !== true });
};

// vant toast没回调，mock返回
var success = { status: 0, message: 'success', data: {} };

var MuDialog = {
  show: (0, _utils.p2c)(function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return new Promise(function (resolve, reject) {
      openLoading(option, 'show');
      resolve(success);
    });
  }),
  hide: (0, _utils.p2c)(function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return new Promise(function (resolve, reject) {
      openLoading(option, 'clear');
      resolve(success);
    });
  })
};

exports.default = MuDialog;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(12);
__webpack_require__(21);
__webpack_require__(17);
__webpack_require__(18);
__webpack_require__(22);
__webpack_require__(23);
__webpack_require__(44);

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _mujssdk = __webpack_require__(31);

var _mujssdk2 = _interopRequireDefault(_mujssdk);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUMiniApp = {
  /**
   * 打开小程序
   */
  open: function open(option) {
    var p = new Promise(function (resolve, reject) {
      _mujssdk2.default.call('MUMiniApp', 'open', option, resolve, reject);
    });
    return p;
  },
  getCommonUsed: function getCommonUsed(option) {
    var p = new Promise(function (resolve, reject) {
      _mujssdk2.default.call('MUMiniApp', 'getCommonUsed', option, resolve, reject);
    });
    return p;
  },
  search: function search(option) {
    var p = new Promise(function (resolve, reject) {
      _mujssdk2.default.call('MUMiniApp', 'search', option, resolve, reject);
    });
    return p;
  }
}; /*
    * @Author: lee9527
    * @Date: 2022-01-18 16:46:01
    * @LastEditors: lee9527
    * @LastEditTime: 2022-01-20 15:07:19
    * @Description:
    * @FilePath: /mu-hybrid/mu-hybrid/mu_miniApp/index.js
    * @version: 1.0.0
    */
exports.default = MUMiniApp;

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUNavigator = {};

/**
 * 初始化
 */
/*
 * @Description: MUNavigator
 * @version: 1.0.0
 * @Author: liyanling
 * @Date: 2020-05-31
 * @LastEditors: xiaoyang
 * @LastEditTime: 2023-11-23 10:28:26
 */
MUNavigator.initialize = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
};

// 拼接地址
var CreateLink = function CreateLink(page, params) {
  var url = location.href;
  var newLocation = '';
  if (url.indexOf('#') > -1) {
    newLocation = url.split('#')[0] + '#/' + page + '?' + toParams(params);
  } else {
    newLocation = url.split('#')[0] + '/' + page + '?' + toParams(params);
  }
  return newLocation;
};
function toParams(obj) {
  var param = '';
  for (var name in obj) {
    if (typeof obj[name] !== 'function') {
      param += '&' + name + '=' + encodeURI(obj[name]);
    }
  }
  return param.substring(1);
}
/**
 * 跳转到指定页面
 * @param {{string}} path 跳转的页面名称
 * @param {{Boolean}} animated 是否有过场动画
 * @param {{Object}} data 携带的参数
 */
MUNavigator.forward = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  if (option.path.indexOf('/') === 0 || option.path.indexOf('http') === 0) {
    // 说明不需要进行地址转换
  } else {
    option.path = CreateLink(option.path, option.data);
  }
  option.animated = option.animated || true;
  option.data = option.data || {};

  console.log('MUNavigator.forward -->>', JSON.stringify(option));
  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUNavigator', 'forward', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};

/**
 * 返回上一页
 */
MUNavigator.back = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUNavigator', 'back', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};

/**
 * 在当前页面创建里程碑
 */
MUNavigator.createMilestone = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUNavigator', 'createMilestone', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};

/**
 * 返回最近的里程碑
 */
MUNavigator.backToMilestone = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUNavigator', 'backToMilestone', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};

/**
 * 将当前页设为根页面
 */
MUNavigator.attachToRoot = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUNavigator', 'attachToRoot', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};

/**
 * 返回至根页面
 */
MUNavigator.backToRoot = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUNavigator', 'backToRoot', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};

/**
 * 跳转到指定页面
 * @param {{string}} path 跳转的页面名称
 * @param {{Boolean}} animated 是否有过场动画
 * @param {{Object}} data 携带的参数
 */
MUNavigator.forwardForResult = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  if (option.path.indexOf('/') === 0 || option.path.indexOf('http') === 0) {
    // 说明不需要进行地址转换
  } else {
    option.path = CreateLink(option.path, option.data);
  }
  option.animated = option.animated || true;
  option.data = option.data || {};
  var p = new Promise(function (resolve, reject) {
    // 判断是否是mu weex native环境
    _windvane2.default.WindVane.call('MUNavigator', 'forwardForResult', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};

/**
 * 返回上一页
 * @param {{string}} data 回传到前一个页面的参数
 */
MUNavigator.backWithResult = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  option.data = option.data || {};
  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUNavigator', 'backWithResult', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};

/**
 * 移除里程碑
 */
MUNavigator.removeMilestone = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUNavigator', 'removeMilestone', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};

exports.default = MUNavigator;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(330);


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUOAuth = {
  authorize: function authorize(option) {
    var p = new Promise(function (resolve, reject) {
      if (!option.authId) {
        // eslint-disable-next-line prefer-promise-reject-errors
        reject({
          status: -1,
          errorCode: 'INVALID_PARAM_ERROR',
          message: 'authId不能为空',
          data: {}
        });
      }
      if (!option.appIcon) {
        option.appIcon = 'https://miniapp.ceair.com/cdn/miniapp/image/defaultImage.png';
      }
      if (!option.scope) {
        option.scope = 'api_base';
      }
      _windvane2.default.WindVane.call('MUOAuth', 'authorize', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
}; /*
    * @Author: lee9527
    * @Date: 2021-01-04 10:18:06
    * @LastEditors: lee9527
    * @LastEditTime: 2022-08-16 10:16:18
    * @Description:
    * @FilePath: /mu-hybrid/mu-hybrid/mu_oAuth/index.js
    * @version: 1.0.0
    */
exports.default = MUOAuth;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUScanner = {
  /**
   * 跳转MUC群对话框
   */
  scan: function scan() {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUScanner', 'scan', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUScanner;

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ExportModule = {
	showSuccess: function showSuccess() {
		var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
		var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
		var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

		var p = new Promise(function (resolve, reject) {
			_windvane2.default.WindVane.call("MUToast", "showSuccess", option, function (res) {
				try {
					res.data = JSON.parse(res.data);
				} catch (err) {}
				delete res.ret;
				success(res);
				resolve(res);
			}, function (err) {
				try {
					err.data = JSON.parse(err.data);
				} catch (err) {}
				delete err.ret;
				failure(err);
				reject(err);
			});
		});
		return p;
	},
	showInfo: function showInfo() {
		var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
		var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
		var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

		var p = new Promise(function (resolve, reject) {
			_windvane2.default.WindVane.call("MUToast", "showInfo", option, function (res) {
				try {
					res.data = JSON.parse(res.data);
				} catch (err) {}
				delete res.ret;
				success(res);
				resolve(res);
			}, function (err) {
				try {
					err.data = JSON.parse(err.data);
				} catch (err) {}
				delete err.ret;
				failure(err);
				reject(err);
			});
		});
		return p;
	},
	showError: function showError() {
		var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
		var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
		var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

		var p = new Promise(function (resolve, reject) {
			_windvane2.default.WindVane.call("MUToast", "showError", option, function (res) {
				try {
					res.data = JSON.parse(res.data);
				} catch (err) {}
				delete res.ret;
				success(res);
				resolve(res);
			}, function (err) {
				try {
					err.data = JSON.parse(err.data);
				} catch (err) {}
				delete err.ret;
				failure(err);
				reject(err);
			});
		});
		return p;
	},
	showWarning: function showWarning() {
		var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
		var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
		var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

		var p = new Promise(function (resolve, reject) {
			_windvane2.default.WindVane.call("MUToast", "showWarning", option, function (res) {
				try {
					res.data = JSON.parse(res.data);
				} catch (err) {}
				delete res.ret;
				success(res);
				resolve(res);
			}, function (err) {
				try {
					err.data = JSON.parse(err.data);
				} catch (err) {}
				delete err.ret;
				failure(err);
				reject(err);
			});
		});
		return p;
	}
};

exports.default = ExportModule;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vue = __webpack_require__(15);

var _vue2 = _interopRequireDefault(_vue);

var _Toast = __webpack_require__(388);

var _Toast2 = _interopRequireDefault(_Toast);

var _utils = __webpack_require__(10);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuConstructor = _vue2.default.extend(_Toast2.default); /*
                                                            * @Author: xiaoyang
                                                            * @Date: 2023-02-07 16:49:36
                                                            * @LastEditTime: 2023-02-10 10:44:41
                                                            * @LastEditors: xiaoyang
                                                            * @Description:
                                                            * @FilePath: /mu-hybrid/mu-hybrid/mu_toast/web.js
                                                            * @version: 1.0.0
                                                            */

var Instance = void 0;

/**
 * init
 */
var initInstance = function initInstance() {
  Instance = new MuConstructor({
    el: document.createElement('div')
  });
  document.body.appendChild(Instance.$el);
};

// Dialog调用
var openToast = function openToast(params, type) {
  if (!Instance) {
    initInstance();
  }
  var message = params.message,
      _params$duration = params.duration,
      duration = _params$duration === undefined ? 1500 : _params$duration;

  Instance[type]({ message: message, duration: duration });
};

// vant toast没回调，mock返回
var success = { status: 0, message: 'success', data: {} };

var MuDialog = {
  showSuccess: (0, _utils.p2c)(function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return new Promise(function (resolve, reject) {
      openToast(option, 'success');
      resolve(success);
    });
  }),
  showInfo: (0, _utils.p2c)(function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return new Promise(function (resolve, reject) {
      openToast(option, 'info');
      resolve(success);
    });
  }),
  showError: (0, _utils.p2c)(function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return new Promise(function (resolve, reject) {
      openToast(option, 'fail');
      resolve(success);
    });
  }),
  showWarning: (0, _utils.p2c)(function () {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return new Promise(function (resolve, reject) {
      openToast(option, 'fail');
      resolve(success);
    });
  })
};

exports.default = MuDialog;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUTracker = {
  /**
   * 设置用户userId
   */
  setUserIdentifier: function setUserIdentifier(option) {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUTracker', 'setUserIdentifier', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  /**
   * 统计带二级参数的自定义事件
   */
  trackEvent: function trackEvent(option) {
    var p = new Promise(function (resolve, reject) {
      if (option['eventData']['app_id'] && option['eventData']['app_name']) {
        _windvane2.default.WindVane.call('MUTracker', 'trackEvent', option, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          reject(err);
        });
      } else {
        // todo 自动注入appid
        option['eventData']['app_id'] = 'mu-hybrid';
        option['eventData']['app_name'] = 'mu-hybrid';
        _windvane2.default.WindVane.call('MUTracker', 'trackEvent', option, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          reject(err);
        });
      }
    });
    return p;
  }
}; /*
    * @Description: MUTracker
    * @Author: chenqin7
    * @Date: 2019-08-20 16:11:21
    * @LastEditTime: 2021-05-25 13:24:57
    * @LastEditors: lee9527
    */

exports.default = MUTracker;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MuWindow = exports.MuWatermark = exports.MuVerification = exports.MuUserInfo = exports.MuTracker = exports.MuTools = exports.MuToast = exports.MuSystemTools = exports.MuStorage = exports.MuSignaturePad = exports.MuSignature = exports.MuShare = exports.MuSensor = exports.MuScreen = exports.MuScanner = exports.MuPush = exports.MuPda = exports.MuOffline = exports.MuOAuth = exports.MuNfc = exports.MuNetwork = exports.MuNavigator = exports.MuMjc = exports.MuMiniApp = exports.MuMail = exports.MuLogger = exports.MuLoading = exports.MuLifecycler = exports.MuInvoice = exports.MuImagePicker = exports.MuImageBrowser = exports.MuIdCamera = exports.MuIbeacon = exports.MuHttpClient = exports.MuGeoLocation = exports.MuFileManager = exports.MuEventCenter = exports.MuErrorHandler = exports.MuEpass = exports.MuDocumentReader = exports.MuDocCenter = exports.MuDialog = exports.MuDevice = exports.MuDatePicker = exports.MuDatabase = exports.MuContact = exports.MuCascadingMenu = exports.MuCards = exports.MuCalendar = exports.MuBioAuth = exports.MuAudioRecorder = exports.MuAudio = exports.MuAppUtils = exports.MuAppUpgrade = exports.MuAppSettings = exports.MuAppHelp = exports.MuAppAbout = exports.MuApm = undefined;

var _mu_apm = __webpack_require__(85);

var _mu_apm2 = _interopRequireDefault(_mu_apm);

var _mock = __webpack_require__(86);

var _mock2 = _interopRequireDefault(_mock);

var _pc = __webpack_require__(87);

var _pc2 = _interopRequireDefault(_pc);

var _mu_app_about = __webpack_require__(89);

var _mu_app_about2 = _interopRequireDefault(_mu_app_about);

var _mock3 = __webpack_require__(90);

var _mock4 = _interopRequireDefault(_mock3);

var _pc3 = __webpack_require__(91);

var _pc4 = _interopRequireDefault(_pc3);

var _mu_app_help = __webpack_require__(40);

var _mu_app_help2 = _interopRequireDefault(_mu_app_help);

var _mock5 = __webpack_require__(93);

var _mock6 = _interopRequireDefault(_mock5);

var _pc5 = __webpack_require__(94);

var _pc6 = _interopRequireDefault(_pc5);

var _mu_app_settings = __webpack_require__(95);

var _mu_app_settings2 = _interopRequireDefault(_mu_app_settings);

var _mock7 = __webpack_require__(96);

var _mock8 = _interopRequireDefault(_mock7);

var _pc7 = __webpack_require__(97);

var _pc8 = _interopRequireDefault(_pc7);

var _mu_app_upgrade = __webpack_require__(98);

var _mu_app_upgrade2 = _interopRequireDefault(_mu_app_upgrade);

var _mock9 = __webpack_require__(99);

var _mock10 = _interopRequireDefault(_mock9);

var _pc9 = __webpack_require__(100);

var _pc10 = _interopRequireDefault(_pc9);

var _mu_app_utils = __webpack_require__(102);

var _mu_app_utils2 = _interopRequireDefault(_mu_app_utils);

var _mock11 = __webpack_require__(103);

var _mock12 = _interopRequireDefault(_mock11);

var _pc11 = __webpack_require__(104);

var _pc12 = _interopRequireDefault(_pc11);

var _mu_audio = __webpack_require__(106);

var _mu_audio2 = _interopRequireDefault(_mu_audio);

var _mock13 = __webpack_require__(107);

var _mock14 = _interopRequireDefault(_mock13);

var _pc13 = __webpack_require__(108);

var _pc14 = _interopRequireDefault(_pc13);

var _mu_audio_recorder = __webpack_require__(110);

var _mu_audio_recorder2 = _interopRequireDefault(_mu_audio_recorder);

var _mock15 = __webpack_require__(111);

var _mock16 = _interopRequireDefault(_mock15);

var _pc15 = __webpack_require__(112);

var _pc16 = _interopRequireDefault(_pc15);

var _mu_bio_auth = __webpack_require__(114);

var _mu_bio_auth2 = _interopRequireDefault(_mu_bio_auth);

var _mock17 = __webpack_require__(115);

var _mock18 = _interopRequireDefault(_mock17);

var _pc17 = __webpack_require__(116);

var _pc18 = _interopRequireDefault(_pc17);

var _mu_calendar = __webpack_require__(118);

var _mu_calendar2 = _interopRequireDefault(_mu_calendar);

var _mock19 = __webpack_require__(119);

var _mock20 = _interopRequireDefault(_mock19);

var _pc19 = __webpack_require__(157);

var _pc20 = _interopRequireDefault(_pc19);

var _mu_cards = __webpack_require__(51);

var _mu_cards2 = _interopRequireDefault(_mu_cards);

var _mock21 = __webpack_require__(158);

var _mock22 = _interopRequireDefault(_mock21);

var _pc21 = __webpack_require__(160);

var _pc22 = _interopRequireDefault(_pc21);

var _mu_cascading_menu = __webpack_require__(161);

var _mu_cascading_menu2 = _interopRequireDefault(_mu_cascading_menu);

var _mock23 = __webpack_require__(162);

var _mock24 = _interopRequireDefault(_mock23);

var _pc23 = __webpack_require__(190);

var _pc24 = _interopRequireDefault(_pc23);

var _mu_contact = __webpack_require__(191);

var _mu_contact2 = _interopRequireDefault(_mu_contact);

var _mock25 = __webpack_require__(192);

var _mock26 = _interopRequireDefault(_mock25);

var _pc25 = __webpack_require__(193);

var _pc26 = _interopRequireDefault(_pc25);

var _mu_database = __webpack_require__(195);

var _mu_database2 = _interopRequireDefault(_mu_database);

var _mock27 = __webpack_require__(198);

var _mock28 = _interopRequireDefault(_mock27);

var _pc27 = __webpack_require__(199);

var _pc28 = _interopRequireDefault(_pc27);

var _mu_datePicker = __webpack_require__(201);

var _mu_datePicker2 = _interopRequireDefault(_mu_datePicker);

var _mock29 = __webpack_require__(202);

var _mock30 = _interopRequireDefault(_mock29);

var _pc29 = __webpack_require__(217);

var _pc30 = _interopRequireDefault(_pc29);

var _mu_device = __webpack_require__(219);

var _mu_device2 = _interopRequireDefault(_mu_device);

var _mock31 = __webpack_require__(220);

var _mock32 = _interopRequireDefault(_mock31);

var _pc31 = __webpack_require__(221);

var _pc32 = _interopRequireDefault(_pc31);

var _mu_dialog = __webpack_require__(223);

var _mu_dialog2 = _interopRequireDefault(_mu_dialog);

var _mock33 = __webpack_require__(224);

var _mock34 = _interopRequireDefault(_mock33);

var _pc33 = __webpack_require__(243);

var _pc34 = _interopRequireDefault(_pc33);

var _mu_doc_center = __webpack_require__(244);

var _mu_doc_center2 = _interopRequireDefault(_mu_doc_center);

var _mock35 = __webpack_require__(245);

var _mock36 = _interopRequireDefault(_mock35);

var _pc35 = __webpack_require__(246);

var _pc36 = _interopRequireDefault(_pc35);

var _mu_document_reader = __webpack_require__(248);

var _mu_document_reader2 = _interopRequireDefault(_mu_document_reader);

var _mock37 = __webpack_require__(249);

var _mock38 = _interopRequireDefault(_mock37);

var _pc37 = __webpack_require__(250);

var _pc38 = _interopRequireDefault(_pc37);

var _mu_epass = __webpack_require__(61);

var _mu_epass2 = _interopRequireDefault(_mu_epass);

var _mock39 = __webpack_require__(252);

var _mock40 = _interopRequireDefault(_mock39);

var _pc39 = __webpack_require__(253);

var _pc40 = _interopRequireDefault(_pc39);

var _mu_error_handler = __webpack_require__(255);

var _mu_error_handler2 = _interopRequireDefault(_mu_error_handler);

var _mock41 = __webpack_require__(256);

var _mock42 = _interopRequireDefault(_mock41);

var _pc41 = __webpack_require__(257);

var _pc42 = _interopRequireDefault(_pc41);

var _mu_event_center = __webpack_require__(259);

var _mu_event_center2 = _interopRequireDefault(_mu_event_center);

var _mock43 = __webpack_require__(260);

var _mock44 = _interopRequireDefault(_mock43);

var _pc43 = __webpack_require__(261);

var _pc44 = _interopRequireDefault(_pc43);

var _mu_file_manager = __webpack_require__(62);

var _mu_file_manager2 = _interopRequireDefault(_mu_file_manager);

var _mock45 = __webpack_require__(262);

var _mock46 = _interopRequireDefault(_mock45);

var _pc45 = __webpack_require__(263);

var _pc46 = _interopRequireDefault(_pc45);

var _mu_geo_location = __webpack_require__(264);

var _mu_geo_location2 = _interopRequireDefault(_mu_geo_location);

var _mock47 = __webpack_require__(265);

var _mock48 = _interopRequireDefault(_mock47);

var _pc47 = __webpack_require__(266);

var _pc48 = _interopRequireDefault(_pc47);

var _mu_http_client = __webpack_require__(63);

var _mu_http_client2 = _interopRequireDefault(_mu_http_client);

var _mock49 = __webpack_require__(268);

var _mock50 = _interopRequireDefault(_mock49);

var _pc49 = __webpack_require__(287);

var _pc50 = _interopRequireDefault(_pc49);

var _mu_ibeacon = __webpack_require__(288);

var _mu_ibeacon2 = _interopRequireDefault(_mu_ibeacon);

var _mock51 = __webpack_require__(289);

var _mock52 = _interopRequireDefault(_mock51);

var _pc51 = __webpack_require__(290);

var _pc52 = _interopRequireDefault(_pc51);

var _mu_id_camera = __webpack_require__(292);

var _mu_id_camera2 = _interopRequireDefault(_mu_id_camera);

var _mock53 = __webpack_require__(293);

var _mock54 = _interopRequireDefault(_mock53);

var _pc53 = __webpack_require__(294);

var _pc54 = _interopRequireDefault(_pc53);

var _mu_image_browser = __webpack_require__(296);

var _mu_image_browser2 = _interopRequireDefault(_mu_image_browser);

var _mock55 = __webpack_require__(297);

var _mock56 = _interopRequireDefault(_mock55);

var _pc55 = __webpack_require__(298);

var _pc56 = _interopRequireDefault(_pc55);

var _mu_image_picker = __webpack_require__(300);

var _mu_image_picker2 = _interopRequireDefault(_mu_image_picker);

var _mock57 = __webpack_require__(72);

var _mock58 = _interopRequireDefault(_mock57);

var _pc57 = __webpack_require__(301);

var _pc58 = _interopRequireDefault(_pc57);

var _mu_invoice = __webpack_require__(302);

var _mu_invoice2 = _interopRequireDefault(_mu_invoice);

var _mock59 = __webpack_require__(73);

var _mock60 = _interopRequireDefault(_mock59);

var _pc59 = __webpack_require__(303);

var _pc60 = _interopRequireDefault(_pc59);

var _mu_lifecycler = __webpack_require__(304);

var _mu_lifecycler2 = _interopRequireDefault(_mu_lifecycler);

var _mock61 = __webpack_require__(305);

var _mock62 = _interopRequireDefault(_mock61);

var _pc61 = __webpack_require__(306);

var _pc62 = _interopRequireDefault(_pc61);

var _mu_loading = __webpack_require__(308);

var _mu_loading2 = _interopRequireDefault(_mu_loading);

var _mock63 = __webpack_require__(309);

var _mock64 = _interopRequireDefault(_mock63);

var _pc63 = __webpack_require__(314);

var _pc64 = _interopRequireDefault(_pc63);

var _mu_logger = __webpack_require__(315);

var _mu_logger2 = _interopRequireDefault(_mu_logger);

var _mock65 = __webpack_require__(316);

var _mock66 = _interopRequireDefault(_mock65);

var _pc65 = __webpack_require__(317);

var _pc66 = _interopRequireDefault(_pc65);

var _mu_mail = __webpack_require__(318);

var _mu_mail2 = _interopRequireDefault(_mu_mail);

var _mock67 = __webpack_require__(319);

var _mock68 = _interopRequireDefault(_mock67);

var _pc67 = __webpack_require__(320);

var _pc68 = _interopRequireDefault(_pc67);

var _mu_mini_app = __webpack_require__(76);

var _mu_mini_app2 = _interopRequireDefault(_mu_mini_app);

var _mock69 = __webpack_require__(322);

var _mock70 = _interopRequireDefault(_mock69);

var _pc69 = __webpack_require__(323);

var _pc70 = _interopRequireDefault(_pc69);

var _mu_mjc = __webpack_require__(324);

var _mu_mjc2 = _interopRequireDefault(_mu_mjc);

var _mock71 = __webpack_require__(325);

var _mock72 = _interopRequireDefault(_mock71);

var _pc71 = __webpack_require__(326);

var _pc72 = _interopRequireDefault(_pc71);

var _mu_navigator = __webpack_require__(77);

var _mu_navigator2 = _interopRequireDefault(_mu_navigator);

var _mock73 = __webpack_require__(328);

var _mock74 = _interopRequireDefault(_mock73);

var _pc73 = __webpack_require__(329);

var _pc74 = _interopRequireDefault(_pc73);

var _mu_network = __webpack_require__(333);

var _mu_network2 = _interopRequireDefault(_mu_network);

var _mock75 = __webpack_require__(334);

var _mock76 = _interopRequireDefault(_mock75);

var _pc75 = __webpack_require__(335);

var _pc76 = _interopRequireDefault(_pc75);

var _mu_nfc = __webpack_require__(337);

var _mu_nfc2 = _interopRequireDefault(_mu_nfc);

var _mock77 = __webpack_require__(338);

var _mock78 = _interopRequireDefault(_mock77);

var _pc77 = __webpack_require__(339);

var _pc78 = _interopRequireDefault(_pc77);

var _mu_o_auth = __webpack_require__(79);

var _mu_o_auth2 = _interopRequireDefault(_mu_o_auth);

var _mock79 = __webpack_require__(341);

var _mock80 = _interopRequireDefault(_mock79);

var _pc79 = __webpack_require__(342);

var _pc80 = _interopRequireDefault(_pc79);

var _mu_offline = __webpack_require__(344);

var _mu_offline2 = _interopRequireDefault(_mu_offline);

var _mock81 = __webpack_require__(345);

var _mock82 = _interopRequireDefault(_mock81);

var _pc81 = __webpack_require__(346);

var _pc82 = _interopRequireDefault(_pc81);

var _mu_pda = __webpack_require__(348);

var _mu_pda2 = _interopRequireDefault(_mu_pda);

var _mock83 = __webpack_require__(349);

var _mock84 = _interopRequireDefault(_mock83);

var _pc83 = __webpack_require__(350);

var _pc84 = _interopRequireDefault(_pc83);

var _mu_push = __webpack_require__(352);

var _mu_push2 = _interopRequireDefault(_mu_push);

var _mock85 = __webpack_require__(353);

var _mock86 = _interopRequireDefault(_mock85);

var _pc85 = __webpack_require__(354);

var _pc86 = _interopRequireDefault(_pc85);

var _mu_scanner = __webpack_require__(80);

var _mu_scanner2 = _interopRequireDefault(_mu_scanner);

var _mock87 = __webpack_require__(356);

var _mock88 = _interopRequireDefault(_mock87);

var _pc87 = __webpack_require__(357);

var _pc88 = _interopRequireDefault(_pc87);

var _mu_screen = __webpack_require__(359);

var _mu_screen2 = _interopRequireDefault(_mu_screen);

var _mock89 = __webpack_require__(360);

var _mock90 = _interopRequireDefault(_mock89);

var _pc89 = __webpack_require__(361);

var _pc90 = _interopRequireDefault(_pc89);

var _mu_sensor = __webpack_require__(363);

var _mu_sensor2 = _interopRequireDefault(_mu_sensor);

var _mock91 = __webpack_require__(364);

var _mock92 = _interopRequireDefault(_mock91);

var _pc91 = __webpack_require__(365);

var _pc92 = _interopRequireDefault(_pc91);

var _mu_share = __webpack_require__(367);

var _mu_share2 = _interopRequireDefault(_mu_share);

var _mock93 = __webpack_require__(368);

var _mock94 = _interopRequireDefault(_mock93);

var _pc93 = __webpack_require__(369);

var _pc94 = _interopRequireDefault(_pc93);

var _mu_signature = __webpack_require__(371);

var _mu_signature2 = _interopRequireDefault(_mu_signature);

var _mock95 = __webpack_require__(372);

var _mock96 = _interopRequireDefault(_mock95);

var _pc95 = __webpack_require__(373);

var _pc96 = _interopRequireDefault(_pc95);

var _mu_signature_pad = __webpack_require__(375);

var _mu_signature_pad2 = _interopRequireDefault(_mu_signature_pad);

var _mock97 = __webpack_require__(376);

var _mock98 = _interopRequireDefault(_mock97);

var _pc97 = __webpack_require__(377);

var _pc98 = _interopRequireDefault(_pc97);

var _mu_storage = __webpack_require__(379);

var _mu_storage2 = _interopRequireDefault(_mu_storage);

var _mock99 = __webpack_require__(380);

var _mock100 = _interopRequireDefault(_mock99);

var _pc99 = __webpack_require__(382);

var _pc100 = _interopRequireDefault(_pc99);

var _mu_system_tools = __webpack_require__(383);

var _mu_system_tools2 = _interopRequireDefault(_mu_system_tools);

var _mock101 = __webpack_require__(384);

var _mock102 = _interopRequireDefault(_mock101);

var _pc101 = __webpack_require__(385);

var _pc102 = _interopRequireDefault(_pc101);

var _mu_toast = __webpack_require__(81);

var _mu_toast2 = _interopRequireDefault(_mu_toast);

var _mock103 = __webpack_require__(387);

var _mock104 = _interopRequireDefault(_mock103);

var _pc103 = __webpack_require__(392);

var _pc104 = _interopRequireDefault(_pc103);

var _mu_tools = __webpack_require__(393);

var _mu_tools2 = _interopRequireDefault(_mu_tools);

var _mock105 = __webpack_require__(399);

var _mock106 = _interopRequireDefault(_mock105);

var _pc105 = __webpack_require__(400);

var _pc106 = _interopRequireDefault(_pc105);

var _mu_tracker = __webpack_require__(83);

var _mu_tracker2 = _interopRequireDefault(_mu_tracker);

var _mock107 = __webpack_require__(401);

var _mock108 = _interopRequireDefault(_mock107);

var _pc107 = __webpack_require__(402);

var _pc108 = _interopRequireDefault(_pc107);

var _mu_user_info = __webpack_require__(403);

var _mu_user_info2 = _interopRequireDefault(_mu_user_info);

var _mock109 = __webpack_require__(404);

var _mock110 = _interopRequireDefault(_mock109);

var _pc109 = __webpack_require__(406);

var _pc110 = _interopRequireDefault(_pc109);

var _mu_verification = __webpack_require__(407);

var _mu_verification2 = _interopRequireDefault(_mu_verification);

var _mock111 = __webpack_require__(408);

var _mock112 = _interopRequireDefault(_mock111);

var _pc111 = __webpack_require__(409);

var _pc112 = _interopRequireDefault(_pc111);

var _mu_watermark = __webpack_require__(411);

var _mu_watermark2 = _interopRequireDefault(_mu_watermark);

var _mock113 = __webpack_require__(412);

var _mock114 = _interopRequireDefault(_mock113);

var _pc113 = __webpack_require__(413);

var _pc114 = _interopRequireDefault(_pc113);

var _mu_window = __webpack_require__(415);

var _mu_window2 = _interopRequireDefault(_mu_window);

var _mock115 = __webpack_require__(416);

var _mock116 = _interopRequireDefault(_mock115);

var _pc115 = __webpack_require__(417);

var _pc116 = _interopRequireDefault(_pc115);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import mu_window_web from './mu_window/web.js';

// import mu_verification_web from './mu_verification/web.js';

// import mu_tracker_web from './mu_tracker/web.js';

// import mu_toast_web from './mu_toast/web.js';

// import mu_storage_web from './mu_storage/web.js';

// import mu_signature_web from './mu_signature/web.js';

// import mu_sensor_web from './mu_sensor/web.js';

// import mu_scanner_web from './mu_scanner/web.js';

// import mu_pda_web from './mu_pda/web.js';

// import mu_o_auth_web from './mu_o_auth/web.js';

// import mu_network_web from './mu_network/web.js';

// import mu_mjc_web from './mu_mjc/web.js';

// import mu_mail_web from './mu_mail/web.js';

// import mu_loading_web from './mu_loading/web.js';

// import mu_invoice_web from './mu_invoice/web.js';

// import mu_image_browser_web from './mu_image_browser/web.js';

// import mu_ibeacon_web from './mu_ibeacon/web.js';

// import mu_geo_location_web from './mu_geo_location/web.js';

// import mu_event_center_web from './mu_event_center/web.js';

// import mu_epass_web from './mu_epass/web.js';

// import mu_doc_center_web from './mu_doc_center/web.js';

// import mu_device_web from './mu_device/web.js';

// import mu_database_web from './mu_database/web.js';

// import mu_cascading_menu_web from './mu_cascading_menu/web.js';

// import mu_calendar_web from './mu_calendar/web.js';

// import mu_audio_recorder_web from './mu_audio_recorder/web.js';

// import mu_app_utils_web from './mu_app_utils/web.js';

// import mu_app_settings_web from './mu_app_settings/web.js';

// import mu_app_about_web from './mu_app_about/web.js';

/**
  * CopyRight (C) 2019-2024 ceair
  * Created by xuyang28 on 2023-12-11 16:15:45
*/

var isWeexNative = !(navigator.userAgent.indexOf('MUApp') === -1);
// import mu_watermark_web from './mu_watermark/web.js';

// import mu_user_info_web from './mu_user_info/web.js';

// import mu_tools_web from './mu_tools/web.js';

// import mu_system_tools_web from './mu_system_tools/web.js';

// import mu_signature_pad_web from './mu_signature_pad/web.js';

// import mu_share_web from './mu_share/web.js';

// import mu_screen_web from './mu_screen/web.js';

// import mu_push_web from './mu_push/web.js';

// import mu_offline_web from './mu_offline/web.js';

// import mu_nfc_web from './mu_nfc/web.js';

// import mu_navigator_web from './mu_navigator/web.js';

// import mu_mini_app_web from './mu_mini_app/web.js';

// import mu_logger_web from './mu_logger/web.js';

// import mu_lifecycler_web from './mu_lifecycler/web.js';

// import mu_image_picker_web from './mu_image_picker/web.js';

// import mu_id_camera_web from './mu_id_camera/web.js';

// import mu_http_client_web from './mu_http_client/web.js';

// import mu_file_manager_web from './mu_file_manager/web.js';

// import mu_error_handler_web from './mu_error_handler/web.js';

// import mu_document_reader_web from './mu_document_reader/web.js';

// import mu_dialog_web from './mu_dialog/web.js';

// import mu_datePicker_web from './mu_datePicker/web.js';

// import mu_contact_web from './mu_contact/web.js';

// import mu_cards_web from './mu_cards/web.js';

// import mu_bio_auth_web from './mu_bio_auth/web.js';

// import mu_audio_web from './mu_audio/web.js';

// import mu_app_upgrade_web from './mu_app_upgrade/web.js';

// import mu_app_help_web from './mu_app_help/web.js';

// import mu_apm_web from './mu_apm/web.js';

var isMuPC = !(navigator.userAgent.indexOf('MUPC') === -1);

var MuApm = isWeexNative ? _mu_apm2.default : isMuPC ? _pc2.default : _mock2.default;

var MuAppAbout = isWeexNative ? _mu_app_about2.default : isMuPC ? _pc4.default : _mock4.default;

var MuAppHelp = isWeexNative ? _mu_app_help2.default : isMuPC ? _pc6.default : _mock6.default;

var MuAppSettings = isWeexNative ? _mu_app_settings2.default : isMuPC ? _pc8.default : _mock8.default;

var MuAppUpgrade = isWeexNative ? _mu_app_upgrade2.default : isMuPC ? _pc10.default : _mock10.default;

var MuAppUtils = isWeexNative ? _mu_app_utils2.default : isMuPC ? _pc12.default : _mock12.default;

var MuAudio = isWeexNative ? _mu_audio2.default : isMuPC ? _pc14.default : _mock14.default;

var MuAudioRecorder = isWeexNative ? _mu_audio_recorder2.default : isMuPC ? _pc16.default : _mock16.default;

var MuBioAuth = isWeexNative ? _mu_bio_auth2.default : isMuPC ? _pc18.default : _mock18.default;

var MuCalendar = isWeexNative ? _mu_calendar2.default : isMuPC ? _pc20.default : _mock20.default;

var MuCards = isWeexNative ? _mu_cards2.default : isMuPC ? _pc22.default : _mock22.default;

var MuCascadingMenu = isWeexNative ? _mu_cascading_menu2.default : isMuPC ? _pc24.default : _mock24.default;

var MuContact = isWeexNative ? _mu_contact2.default : isMuPC ? _pc26.default : _mock26.default;

var MuDatabase = isWeexNative ? _mu_database2.default : isMuPC ? _pc28.default : _mock28.default;

var MuDatePicker = isWeexNative ? _mu_datePicker2.default : isMuPC ? _pc30.default : _mock30.default;

var MuDevice = isWeexNative ? _mu_device2.default : isMuPC ? _pc32.default : _mock32.default;

var MuDialog = isWeexNative ? _mu_dialog2.default : isMuPC ? _pc34.default : _mock34.default;

var MuDocCenter = isWeexNative ? _mu_doc_center2.default : isMuPC ? _pc36.default : _mock36.default;

var MuDocumentReader = isWeexNative ? _mu_document_reader2.default : isMuPC ? _pc38.default : _mock38.default;

var MuEpass = isWeexNative ? _mu_epass2.default : isMuPC ? _pc40.default : _mock40.default;

var MuErrorHandler = isWeexNative ? _mu_error_handler2.default : isMuPC ? _pc42.default : _mock42.default;

var MuEventCenter = isWeexNative ? _mu_event_center2.default : isMuPC ? _pc44.default : _mock44.default;

var MuFileManager = isWeexNative ? _mu_file_manager2.default : isMuPC ? _pc46.default : _mock46.default;

var MuGeoLocation = isWeexNative ? _mu_geo_location2.default : isMuPC ? _pc48.default : _mock48.default;

var MuHttpClient = isWeexNative ? _mu_http_client2.default : isMuPC ? _pc50.default : _mock50.default;

var MuIbeacon = isWeexNative ? _mu_ibeacon2.default : isMuPC ? _pc52.default : _mock52.default;

var MuIdCamera = isWeexNative ? _mu_id_camera2.default : isMuPC ? _pc54.default : _mock54.default;

var MuImageBrowser = isWeexNative ? _mu_image_browser2.default : isMuPC ? _pc56.default : _mock56.default;

var MuImagePicker = isWeexNative ? _mu_image_picker2.default : isMuPC ? _pc58.default : _mock58.default;

var MuInvoice = isWeexNative ? _mu_invoice2.default : isMuPC ? _pc60.default : _mock60.default;

var MuLifecycler = isWeexNative ? _mu_lifecycler2.default : isMuPC ? _pc62.default : _mock62.default;

var MuLoading = isWeexNative ? _mu_loading2.default : isMuPC ? _pc64.default : _mock64.default;

var MuLogger = isWeexNative ? _mu_logger2.default : isMuPC ? _pc66.default : _mock66.default;

var MuMail = isWeexNative ? _mu_mail2.default : isMuPC ? _pc68.default : _mock68.default;

var MuMiniApp = isWeexNative ? _mu_mini_app2.default : isMuPC ? _pc70.default : _mock70.default;

var MuMjc = isWeexNative ? _mu_mjc2.default : isMuPC ? _pc72.default : _mock72.default;

var MuNavigator = isWeexNative ? _mu_navigator2.default : isMuPC ? _pc74.default : _mock74.default;

var MuNetwork = isWeexNative ? _mu_network2.default : isMuPC ? _pc76.default : _mock76.default;

var MuNfc = isWeexNative ? _mu_nfc2.default : isMuPC ? _pc78.default : _mock78.default;

var MuOAuth = isWeexNative ? _mu_o_auth2.default : isMuPC ? _pc80.default : _mock80.default;

var MuOffline = isWeexNative ? _mu_offline2.default : isMuPC ? _pc82.default : _mock82.default;

var MuPda = isWeexNative ? _mu_pda2.default : isMuPC ? _pc84.default : _mock84.default;

var MuPush = isWeexNative ? _mu_push2.default : isMuPC ? _pc86.default : _mock86.default;

var MuScanner = isWeexNative ? _mu_scanner2.default : isMuPC ? _pc88.default : _mock88.default;

var MuScreen = isWeexNative ? _mu_screen2.default : isMuPC ? _pc90.default : _mock90.default;

var MuSensor = isWeexNative ? _mu_sensor2.default : isMuPC ? _pc92.default : _mock92.default;

var MuShare = isWeexNative ? _mu_share2.default : isMuPC ? _pc94.default : _mock94.default;

var MuSignature = isWeexNative ? _mu_signature2.default : isMuPC ? _pc96.default : _mock96.default;

var MuSignaturePad = isWeexNative ? _mu_signature_pad2.default : isMuPC ? _pc98.default : _mock98.default;

var MuStorage = isWeexNative ? _mu_storage2.default : isMuPC ? _pc100.default : _mock100.default;

var MuSystemTools = isWeexNative ? _mu_system_tools2.default : isMuPC ? _pc102.default : _mock102.default;

var MuToast = isWeexNative ? _mu_toast2.default : isMuPC ? _pc104.default : _mock104.default;

var MuTools = isWeexNative ? _mu_tools2.default : isMuPC ? _pc106.default : _mock106.default;

var MuTracker = isWeexNative ? _mu_tracker2.default : isMuPC ? _pc108.default : _mock108.default;

var MuUserInfo = isWeexNative ? _mu_user_info2.default : isMuPC ? _pc110.default : _mock110.default;

var MuVerification = isWeexNative ? _mu_verification2.default : isMuPC ? _pc112.default : _mock112.default;

var MuWatermark = isWeexNative ? _mu_watermark2.default : isMuPC ? _pc114.default : _mock114.default;

var MuWindow = isWeexNative ? _mu_window2.default : isMuPC ? _pc116.default : _mock116.default;

exports.MuApm = MuApm;
exports.MuAppAbout = MuAppAbout;
exports.MuAppHelp = MuAppHelp;
exports.MuAppSettings = MuAppSettings;
exports.MuAppUpgrade = MuAppUpgrade;
exports.MuAppUtils = MuAppUtils;
exports.MuAudio = MuAudio;
exports.MuAudioRecorder = MuAudioRecorder;
exports.MuBioAuth = MuBioAuth;
exports.MuCalendar = MuCalendar;
exports.MuCards = MuCards;
exports.MuCascadingMenu = MuCascadingMenu;
exports.MuContact = MuContact;
exports.MuDatabase = MuDatabase;
exports.MuDatePicker = MuDatePicker;
exports.MuDevice = MuDevice;
exports.MuDialog = MuDialog;
exports.MuDocCenter = MuDocCenter;
exports.MuDocumentReader = MuDocumentReader;
exports.MuEpass = MuEpass;
exports.MuErrorHandler = MuErrorHandler;
exports.MuEventCenter = MuEventCenter;
exports.MuFileManager = MuFileManager;
exports.MuGeoLocation = MuGeoLocation;
exports.MuHttpClient = MuHttpClient;
exports.MuIbeacon = MuIbeacon;
exports.MuIdCamera = MuIdCamera;
exports.MuImageBrowser = MuImageBrowser;
exports.MuImagePicker = MuImagePicker;
exports.MuInvoice = MuInvoice;
exports.MuLifecycler = MuLifecycler;
exports.MuLoading = MuLoading;
exports.MuLogger = MuLogger;
exports.MuMail = MuMail;
exports.MuMiniApp = MuMiniApp;
exports.MuMjc = MuMjc;
exports.MuNavigator = MuNavigator;
exports.MuNetwork = MuNetwork;
exports.MuNfc = MuNfc;
exports.MuOAuth = MuOAuth;
exports.MuOffline = MuOffline;
exports.MuPda = MuPda;
exports.MuPush = MuPush;
exports.MuScanner = MuScanner;
exports.MuScreen = MuScreen;
exports.MuSensor = MuSensor;
exports.MuShare = MuShare;
exports.MuSignature = MuSignature;
exports.MuSignaturePad = MuSignaturePad;
exports.MuStorage = MuStorage;
exports.MuSystemTools = MuSystemTools;
exports.MuToast = MuToast;
exports.MuTools = MuTools;
exports.MuTracker = MuTracker;
exports.MuUserInfo = MuUserInfo;
exports.MuVerification = MuVerification;
exports.MuWatermark = MuWatermark;
exports.MuWindow = MuWindow;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUApm = {
  /**
   * 关联用户信息(崩溃信息跟用户做关联)
   * @param {{String}} option.userIdentifier 用户账户信息
   */
  setUserIdentifier: function setUserIdentifier() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUApm', 'setUserIdentifier', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
   * 处理崩溃信息
   * @param {{String}} option.tag 标签
   * @param {{String}} option.message 内容
   */
  handleCrashMessage: function handleCrashMessage() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUApm', 'handleCrashMessage', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
}; /*
    * @Description: MUApm
    * @version: 1.0.0
    * @Author: chenqin7
    * @Date: 2019-09-17 13:21:02
    * @LastEditors: lee9527
    * @LastEditTime: 2021-05-25 11:25:04
    */
exports.default = MUApm;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MUApm = {
  setUserIdentifier: function setUserIdentifier(options) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'MUApm ',
        data: options
      });
    });
    return p;
  },
  handleCrashMessage: function handleCrashMessage(options) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'MUApm ',
        data: options
      });
    });
    return p;
  }
};

exports.default = MUApm;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(88).default;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MUApm = {
  setUserIdentifier: function setUserIdentifier() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  handleCrashMessage: function handleCrashMessage() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

exports.default = MUApm;

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUMobile = {
  /**
   * 获取用户信息
   */
  getAppInfo: function getAppInfo() {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'getAppInfo', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
   * 清除应用缓存
   */
  cleanAllCache: function cleanAllCache() {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'cleanAllCache', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
   * 获取应用缓存大小
   */
  fetchAppCacheSize: function fetchAppCacheSize() {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'fetchAppCacheSize', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * <!-- ©Copyright 2018 China Eastern Airlines. All rights reserved. -->
 * <!-- Created by <liyanling3@ceair.com> on 2020-03-11 -->
 */

var MUMobile = {
  /**
   * 获取用户信息
   */
  getAppInfo: function getAppInfo() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'web环境返回mock数据',
        data: {
          // 真机中返回local资源路径，mock中以http路径替换便于开发
          appIcon: 'https://apps.ceair.com/uploadsstore/icon/000171_1409490056967.png',
          appVersion: '0.0.0000',
          deviceId: 'agajdfhkasdfhk',
          userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 13_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/8.0 Mobile/15E148 Safari/605.1.15 Appcan/3.0',
          appName: '掌上东航mock'
        }
      });
    });
    return p;
  },
  fetchAppCacheSize: function fetchAppCacheSize() {
    var p = new Promise(function (resolve, reject) {
      resolve({ status: 0, message: '', data: { totalSize: 1201289 } });
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(92).default;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  getAppInfo: function getAppInfo() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  fetchAppCacheSize: function fetchAppCacheSize() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: xiaoyang
 * @Date: 2020-08-19 17:39:36
 * @LastEditTime: 2023-02-12 22:13:55
 * @LastEditors: xiaoyang
 * @Description: 添加注释
 * @FilePath: \mu-hybrid\mu-hybrid\mu_appHelp\mock.js
 */

var MUMobile = {
  /**
   * 跳转群聊
   */
  forwardGroupChat: function forwardGroupChat() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'mock 跳转muc客服群成功',
        data: {}
      });
    });
    return p;
  },

  /**
   * 跳转单聊
   */
  forwardSingleChat: function forwardSingleChat() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'mock 跳转muc单聊成功',
        data: {}
      });
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _mujssdk = __webpack_require__(31);

var _mujssdk2 = _interopRequireDefault(_mujssdk);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUAppHelp = {
  /**
   * 跳转muc 单聊
   */
  forwardGroupChat: function forwardGroupChat(option) {
    var p = new Promise(function (resolve, reject) {
      console.log('MUAppHelp');
      _mujssdk2.default.call('MUAppHelp', 'forwardGroupChat', option, resolve, reject);
    });
    return p;
  },

  /**
   * 跳转MUC群对话框
   */
  forwardSingleChat: function forwardSingleChat(option) {
    var p = new Promise(function (resolve, reject) {
      console.log('MUAppHelp');
      _mujssdk2.default.call('MUAppHelp', 'forwardSingleChat', option, resolve, reject);
    });
    return p;
  }
};

exports.default = MUAppHelp;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUMobile = {
  /** 获取应用设置
   *
   */
  getAppSettings: function getAppSettings() {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'getAppSettings', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
          delete res.ret;
        } catch (err) {}
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * <!-- ©Copyright 2018 China Eastern Airlines. All rights reserved. -->
 * <!-- Created by xiaoyang<xuyang28@ceair.com> on 2019-09-11 -->
 */

var MUMobile = {
  /**
   * 获取用户信息
   */
  getAppSettings: function getAppSettings() {
    var fontScaleLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'ok',
        data: {
          fontScaleLevel: fontScaleLevel,
          receiveMessage: true
        }
      });
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @FilePath: /mu-hybrid/mu-hybrid/mu_appSettings/pc.js
 * @Description:
 * @version: 1.0.0
 * @Author: GENGMENGWEI
 * @Date: 2022-11-30 09:49:14
 * @LastEditors: gengmengwei
 * @LastEditTime: 2022-11-30 10:54:34
 */
/**
 * <!-- ©Copyright 2018 China Eastern Airlines. All rights reserved. -->
 * <!-- Created by xiaoyang<xuyang28@ceair.com> on 2019-09-11 -->
 */

var MUMobile = {
  /**
   * 获取用户信息
   */
  getAppSettings: function getAppSettings() {
    var fontScaleLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

    var p = new Promise(function (resolve, reject) {
      try {
        var _window$NativeApi$sto = window.NativeApi.storage.localSetting(),
            fontSize = _window$NativeApi$sto.fontSize;

        resolve({
          status: 0,
          message: 'ok',
          data: {
            fontScaleLevel: fontSize || fontScaleLevel,
            receiveMessage: true
          }
        });
      } catch (error) {
        resolve({
          status: 0,
          message: 'ok',
          data: {
            fontScaleLevel: fontScaleLevel,
            receiveMessage: true
          }
        });
      }
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUMobile = {
  /**
   * 获取用户信息
   */
  checkUpgrade: function checkUpgrade() {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'checkUpgrade', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },


  /**
   * 获取用户信息
   */
  upgrade: function upgrade() {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'upgrade', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * <!-- ©Copyright 2018 China Eastern Airlines. All rights reserved. -->
 * <!-- Created by <liyanling3@ceair.com> on 2020-03-26 -->
 */

var MUMobile = {
  /**
   * 检查app升级
   */
  checkUpgrade: function checkUpgrade() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: '本地开发返回mock数据',
        data: {
          upgrade: true
        }
      });
    });
    return p;
  },

  /**
   * 升级应用
   */
  upgrade: function upgrade() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: '本地开发返回mock数据',
        data: {}
      });
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(101).default;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  checkUpgrade: function checkUpgrade() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  upgrade: function upgrade() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuAppUtils = {

  /**
   * 该方法ios通过url跳转第三方应用，Android通过packageName或url校跳转第三方应用
   * @param {{String}} option.packageName 包名
   * @param {{String}} option.url 地址
   * @param {{String}} option.bundleId 包名
   */
  openApp: function openApp() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUAppUtils', 'openApp', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },


  /**
   * 该方法ios通过url校验应用是否在白名单内，Android通过packageName校验应用是否已安装
   * @param {{String}} option.packageName 包名
   * @param {{String}} option.url 地址
   * @param {{String}} option.bundleId 包名
   */
  isAppInstalled: function isAppInstalled() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUAppUtils', 'isAppInstalled', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MuAppUtils;

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MuAppUtils = {
  openApp: function openApp(options) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'MuAppUtils ',
        data: options
      });
    });
    return p;
  },
  isAppInstalled: function isAppInstalled(options) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'MuAppUtils ',
        data: options
      });
    });
    return p;
  }
};

exports.default = MuAppUtils;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(105).default;

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  openApp: function openApp() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  isAppInstalled: function isAppInstalled() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuAudio = {
  // 播放
  play: function play() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var resolve = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var reject = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    _windvane2.default.WindVane.call('MUAudio', 'play', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  },


  // 暂停
  pause: function pause() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUAudio', 'pause', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },


  // 停止播放
  stop: function stop() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUAudio', 'stop', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },


  // 重播
  replay: function replay() {
    var resolve = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
    var reject = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};

    _windvane2.default.WindVane.call('MUAudio', 'replay', {}, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  },


  // 跳转到指定位置播放
  seekTo: function seekTo(option) {
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUAudio', 'seekTo', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        failure(err);
        reject(err);
      });
    });
    return p;
  },
  queryPlayStatus: function queryPlayStatus() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUAudio', 'queryPlayStatus', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        failure(err);
        reject(err);
      });
    });
    return p;
  },
  destroy: function destroy() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUAudio', 'destroy', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        failure(err);
        reject(err);
      });
    });
    return p;
  }
}; /*
    * @Author: lee9527
    * @Date: 2021-11-08 15:27:21
    * @LastEditors: lee9527
    * @LastEditTime: 2021-11-08 15:47:46
    * @Description:
    * @FilePath: /mu-hybrid/mu-hybrid/mu_audio/index.js
    * @version: 1.0.0
    */
exports.default = MuAudio;

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: lee9527
 * @Date: 2021-11-08 15:27:26
 * @LastEditors: lee9527
 * @LastEditTime: 2021-11-08 15:42:14
 * @Description:
 * @FilePath: /mu-hybrid/mu-hybrid/mu_audio/mock.js
 * @version: 1.0.0
 */
var MuAudio = {
  // 播放
  play: function play() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var resolve = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var reject = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    resolve({
      status: 0,
      message: '',
      data: {}
    });
  },


  // 暂停
  pause: function pause() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      success({
        status: 0,
        message: '',
        data: { progess: 203 }
      });
      resolve({
        status: 0,
        message: '',
        data: { progess: 203 }
      });
    });
    return p;
  },


  // 停止播放
  stop: function stop() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var err = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      success({
        status: 0,
        message: '',
        data: { progess: 203 }
      });
      resolve({
        status: 0,
        message: '',
        data: { progess: 203 }
      });
    });
    return p;
  },


  // 重播
  replay: function replay() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var err = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      success({
        status: 0,
        message: '',
        data: { progess: 203 }
      });
      resolve({
        status: 0,
        message: '',
        data: { progess: 203 }
      });
    });
    return p;
  },


  // 跳转到指定位置播放
  seekTo: function seekTo(option) {
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var err = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      success({
        status: 0,
        message: '',
        data: {}
      });
      resolve({
        status: 0,
        message: '',
        data: {}
      });
    });
    return p;
  },
  queryPlayStatus: function queryPlayStatus() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var err = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      success({
        status: 0,
        message: '',
        data: {
          duration: 7008,
          playStatus: 'PLAYING',
          progess: 203
        }
      });
      resolve({
        status: 0,
        message: '',
        data: {
          duration: 7008,
          playStatus: 'PLAYING',
          progess: 203
        }
      });
    });
    return p;
  }
};

exports.default = MuAudio;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(109).default;

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  play: function play() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  pause: function pause() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  stop: function stop() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  replay: function replay() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  seekTo: function seekTo() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  queryPlayStatus: function queryPlayStatus() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUAudioRecorder = {
  start: function start(param1, param2, param3) {
    var _adaptParam = this.adaptParam(param1, param2, param3),
        option = _adaptParam.option,
        success = _adaptParam.success,
        failure = _adaptParam.failure;

    _windvane2.default.WindVane.call('MUAudioRecorder', 'start', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  pause: function pause(param1, param2, param3) {
    var _adaptParam2 = this.adaptParam(param1, param2, param3),
        option = _adaptParam2.option,
        success = _adaptParam2.success,
        failure = _adaptParam2.failure;

    _windvane2.default.WindVane.call('MUAudioRecorder', 'pause', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  resume: function resume(param1, param2, param3) {
    var _adaptParam3 = this.adaptParam(param1, param2, param3),
        option = _adaptParam3.option,
        success = _adaptParam3.success,
        failure = _adaptParam3.failure;

    _windvane2.default.WindVane.call('MUAudioRecorder', 'resume', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  stop: function stop(param1, param2, param3) {
    var _adaptParam4 = this.adaptParam(param1, param2, param3),
        option = _adaptParam4.option,
        success = _adaptParam4.success,
        failure = _adaptParam4.failure;

    _windvane2.default.WindVane.call('MUAudioRecorder', 'stop', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  clean: function clean(param1, param2, param3) {
    var _adaptParam5 = this.adaptParam(param1, param2, param3),
        option = _adaptParam5.option,
        success = _adaptParam5.success,
        failure = _adaptParam5.failure;

    _windvane2.default.WindVane.call('MUAudioRecorder', 'clean', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  adaptParam: function adaptParam(param1, param2, param3) {
    var option = {};
    var success = void 0;
    var failure = void 0;
    if (typeof param1 === 'function') {
      success = param1;
      failure = param2;
    } else {
      option = param1;
      success = param2;
      failure = param3;
    }
    return {
      option: option,
      success: success,
      failure: failure
    };
  }
}; /*
    * @Description: audioRecord
    * @version: 1.0.0
    * @Author: liuqianlong
    * @Date: 2021-04-13 13:21:02
    * @LastEditors: lee9527
    * @LastEditTime: 2021-12-13 14:12:01
    */
exports.default = MUAudioRecorder;

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * <!-- ©Copyright 2020 China Eastern Airlines. All rights reserved. -->
 * <!-- Created by <songdiyuan@ceair.com> on 2021-04-13 -->
 */

var MUAudioRecorder = {
  /**
   * 开始录音
   */
  start: function start(options, success, failure) {
    success({
      status: 0,
      message: 'start ',
      data: options
    });
  },
  pause: function pause(options, success, failure) {
    success({
      status: 0,
      message: 'pause ',
      data: options
    });
  },
  resume: function resume(options, success, failure) {
    success({
      status: 0,
      message: 'resume ',
      data: options
    });
  },
  stop: function stop(options, success, failure) {
    success({
      status: 0,
      message: 'stop ',
      data: options
    });
  },
  clean: function clean(options, success, failure) {
    success({
      status: 0,
      message: 'clean ',
      data: options
    });
  }
};

exports.default = MUAudioRecorder;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(113).default;

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  start: function start() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  pause: function pause() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  resume: function resume() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  stop: function stop() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  clean: function clean() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUBioAuth = {
  fingerprintAuth: function fingerprintAuth(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    // 可以传空option,也可以不传
    if (typeof param1 === 'function') {
      _windvane2.default.WindVane.call('MUBioAuth', 'fingerprintAuth', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param1(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param2(err);
      });
    } else {
      _windvane2.default.WindVane.call('MUBioAuth', 'fingerprintAuth', param1, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param2(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param3(err);
      });
    }
  },
  querySupportedAuth: function querySupportedAuth(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    // 可以传空option,也可以不传
    if (typeof param1 === 'function') {
      _windvane2.default.WindVane.call('MUBioAuth', 'querySupportedAuth', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param1(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param2(err);
      });
    } else {
      _windvane2.default.WindVane.call('MUBioAuth', 'querySupportedAuth', param1, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param2(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param3(err);
      });
    }
  },
  faceAuth: function faceAuth(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    // 可以传空option,也可以不传
    if (typeof param1 === 'function') {
      _windvane2.default.WindVane.call('MUBioAuth', 'faceAuth', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param1(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param2(err);
      });
    } else {
      _windvane2.default.WindVane.call('MUBioAuth', 'faceAuth', param1, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param2(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param3(err);
      });
    }
  }
}; /*
    * @Description: ibeacon
    * @version: 1.0.0
    * @Author: liyanling3
    * @Date: 2020-02-18 13:21:02
    * @LastEditors: lee9527
    * @LastEditTime: 2021-10-13 11:32:03
    */
exports.default = MUBioAuth;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * <!-- ©Copyright 2020 China Eastern Airlines. All rights reserved. -->
 * <!-- Created by <songdiyuan@ceair.com> on 2020-07-20 -->
 */

var MUBioAuth = {
  /**
   * 指纹识别
   */
  fingerprintAuth: function fingerprintAuth(option, success, failure) {
    success({
      status: 0,
      message: 'web环境返回mock数据',
      data: {}
    });
  },

  /**
   * 查询支持的识别方式
   */
  querySupportedAuth: function querySupportedAuth(success, failure) {
    success({
      status: 0,
      message: 'web环境返回mock数据',
      data: {}
    });
  },

  /**
   * 人脸识别
   */
  faceAuth: function faceAuth(success, failure) {
    success({
      status: 0,
      message: 'web环境返回mock数据',
      data: {}
    });
  }
};

exports.default = MUBioAuth;

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(117).default;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  fingerprintAuth: function fingerprintAuth() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  querySupportedAuth: function querySupportedAuth() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  faceAuth: function faceAuth() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUCalendar = {
  open: function open() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUCalendar', 'open', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  close: function close(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    // 可以传空option,也可以不传
    if (typeof param1 === 'function') {
      _windvane2.default.WindVane.call('MUCalendar', 'close', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param1(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param2(err);
      });
    } else {
      _windvane2.default.WindVane.call('MUCalendar', 'close', param1, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param2(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param3(err);
      });
    }
  }
}; /*
    * @Description: ibeacon
    * @version: 1.0.0
    * @Author: liyanling3
    * @Date: 2020-02-18 13:21:02
    * @LastEditors: lee9527
    * @LastEditTime: 2021-05-25 13:09:03
    */
exports.default = MUCalendar;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/* eslint-disable no-undef */
/*
 * @Author: xiaoyang
 * @Date: 2020-08-19 17:39:36
 * @LastEditTime: 2023-02-07 17:31:49
 * @LastEditors: wangjie59 wangjie59@ceair.com
 * @Description: 添加注释
 * @FilePath: /mu-hybrid/mu-hybrid/mu_calendar/mock.js
 */
var isWeexNative = !(typeof window !== 'undefined' && window.Math === Math);

var MUCalendar = {
  /**
   * 获取用户信息
   */
  open: function open(option, success, failure) {
    success({
      status: 0,
      message: '网页mock数据',
      data: {
        'selectedDate': [{
          'date': '2019-01-08',
          'work': true
        }]
      }
    });
  },


  /**
  * 获取用户信息
  */
  close: function close(option, success, failure) {
    success({
      status: 0,
      message: '网页mock数据',
      data: {}
    });
  }
};

if (!isWeexNative) {
  MUCalendar = __webpack_require__(41).default;
}

exports.default = MUCalendar;

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16), __webpack_require__(43)))

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(122)
}
var Component = __webpack_require__(7)(
  /* script */
  __webpack_require__(125),
  /* template */
  __webpack_require__(156),
  /* styles */
  injectStyle,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)
Component.options.__file = "/data/gitlab-runner/builds/bxZ2z3qA/0/muit-mobile/Hybrid/hybrid-components/mu-hybrid/mu-hybrid/mu_calendar/index.vue"
if (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== "default" && key.substr(0, 2) !== "__"})) {console.error("named exports are not supported in *.vue files.")}
if (Component.options.functional) {console.error("[vue-loader] index.vue: functional components are not supported with templates, they should use render functions.")}

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-62b6bb7e", Component.options)
  } else {
    hotAPI.reload("data-v-62b6bb7e", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(123);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(11)("4efca0c2", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-62b6bb7e\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue", function() {
     var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-62b6bb7e\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),
/* 124 */
/***/ (function(module, exports) {

/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
module.exports = function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _calendar = __webpack_require__(126);

var _calendar2 = _interopRequireDefault(_calendar);

var _utils = __webpack_require__(10);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } //
//
//
//
//
//

exports.default = {
  name: 'mu-calendar',
  components: {
    vanCalendar: _calendar2.default
  },
  data: function data() {
    return {
      visible: false,
      calendarProps: {}
    };
  },
  updated: function updated() {
    var _$el$classList;

    // 移除类列表内指定的类值
    var className = (this.$el.className || '').match(/[^\s]*weex[^\s]*/g);
    className && (_$el$classList = this.$el.classList).remove.apply(_$el$classList, _toConsumableArray(className));
  },

  methods: {
    /**
     * @author: wangjie59
     * @description: 格式化为hybrid需要的格式
     * @param {Date} date
     * @return {*} 格式化后的日期
     * @example
     * ```js
     * formatDate(new Date())
     * ```
     */
    formatDate: function formatDate(date) {
      var dateArray = Array.isArray(date) ? date : [date];
      // TODO work 显示班休，目前没数据 metadataUrl
      return dateArray.map(function (item) {
        return { date: (0, _utils.timeFormat)(item), work: false };
      });
    },
    toggle: function toggle(visible) {
      this.visible = !!visible;
    },
    onConfirm: function onConfirm(date) {
      this.toggle(false);
      this.callback(this.formatDate(date));
    },
    onClosed: function onClosed() {
      // this.openReject('biz error');
    }
  }
};

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var Component = __webpack_require__(7)(
  /* script */
  __webpack_require__(127),
  /* template */
  null,
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)
Component.options.__file = "/data/gitlab-runner/builds/bxZ2z3qA/0/muit-mobile/Hybrid/hybrid-components/mu-hybrid/mu-hybrid/mu_calendar/calendar.vue"
if (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== "default" && key.substr(0, 2) !== "__"})) {console.error("named exports are not supported in *.vue files.")}

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-48f6bd42", Component.options)
  } else {
    hotAPI.reload("data-v-48f6bd42", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

__webpack_require__(128);

var _calendar = __webpack_require__(140);

var _calendar2 = _interopRequireDefault(_calendar);

var _utils = __webpack_require__(26);

var _date = __webpack_require__(33);

var _utils2 = __webpack_require__(10);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  extends: _calendar2.default,
  props: {
    // 禁止选择的日期
    disabledDates: {
      type: Array,
      validator: function validator(dates) {
        return !dates.length || dates.every(function (d) {
          return (0, _utils2.isDateStr)(d);
        });
      },
      default: function _default() {
        return [];
      }
    },
    // 日历显示的最小日期
    minCalendarDate: {
      type: Date,
      validator: _date.isDate,
      default: function _default() {
        var now = new Date();
        // 上一年第一天
        return new Date(now.getFullYear() - 1, 0, 1);
      }
    },
    // 日历显示的最大日期
    maxCalendarDate: {
      type: Date,
      validator: _date.isDate,
      default: function _default() {
        var now = new Date();
        // 下一年最后一天
        return new Date(now.getFullYear() + 1, 11, 31);
      }
    }
  },
  computed: {
    months: function months() {
      var months = [];
      var cursor = new Date(this.minCalendarDate);

      cursor.setDate(1);

      do {
        months.push(new Date(cursor));
        cursor.setMonth(cursor.getMonth() + 1);
      } while ((0, _utils.compareMonth)(cursor, this.maxCalendarDate) !== 1);

      return months;
    }
  }
}; //
//
//
//
//
//
//
//
//
//

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(12);
__webpack_require__(21);
__webpack_require__(17);
__webpack_require__(18);
__webpack_require__(22);
__webpack_require__(23);
__webpack_require__(44);
__webpack_require__(45);
__webpack_require__(138);

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, "html{-webkit-tap-highlight-color:transparent}body{margin:0;font-family:-apple-system,BlinkMacSystemFont,'Helvetica Neue',Helvetica,Segoe UI,Arial,Roboto,'PingFang SC',miui,'Hiragino Sans GB','Microsoft Yahei',sans-serif}a{text-decoration:none}button,input,textarea{color:inherit;font:inherit}[class*=van-]:focus,a:focus,button:focus,input:focus,textarea:focus{outline:0}ol,ul{margin:0;padding:0;list-style:none}.van-ellipsis{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.van-multi-ellipsis--l2{display:-webkit-box;overflow:hidden;text-overflow:ellipsis;-webkit-line-clamp:2;-webkit-box-orient:vertical}.van-multi-ellipsis--l3{display:-webkit-box;overflow:hidden;text-overflow:ellipsis;-webkit-line-clamp:3;-webkit-box-orient:vertical}.van-clearfix::after{display:table;clear:both;content:''}[class*=van-hairline]::after{position:absolute;box-sizing:border-box;content:' ';pointer-events:none;top:-50%;right:-50%;bottom:-50%;left:-50%;border:0 solid #ebedf0;-webkit-transform:scale(.5);transform:scale(.5)}.van-hairline,.van-hairline--bottom,.van-hairline--left,.van-hairline--right,.van-hairline--surround,.van-hairline--top,.van-hairline--top-bottom{position:relative}.van-hairline--top::after{border-top-width:1px}.van-hairline--left::after{border-left-width:1px}.van-hairline--right::after{border-right-width:1px}.van-hairline--bottom::after{border-bottom-width:1px}.van-hairline--top-bottom::after,.van-hairline-unset--top-bottom::after{border-width:1px 0}.van-hairline--surround::after{border-width:1px}@-webkit-keyframes van-slide-up-enter{from{-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}@keyframes van-slide-up-enter{from{-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}@-webkit-keyframes van-slide-up-leave{to{-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}@keyframes van-slide-up-leave{to{-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}@-webkit-keyframes van-slide-down-enter{from{-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}@keyframes van-slide-down-enter{from{-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}@-webkit-keyframes van-slide-down-leave{to{-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}@keyframes van-slide-down-leave{to{-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}@-webkit-keyframes van-slide-left-enter{from{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}@keyframes van-slide-left-enter{from{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}@-webkit-keyframes van-slide-left-leave{to{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}@keyframes van-slide-left-leave{to{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}@-webkit-keyframes van-slide-right-enter{from{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}@keyframes van-slide-right-enter{from{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}@-webkit-keyframes van-slide-right-leave{to{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}@keyframes van-slide-right-leave{to{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}@-webkit-keyframes van-fade-in{from{opacity:0}to{opacity:1}}@keyframes van-fade-in{from{opacity:0}to{opacity:1}}@-webkit-keyframes van-fade-out{from{opacity:1}to{opacity:0}}@keyframes van-fade-out{from{opacity:1}to{opacity:0}}@-webkit-keyframes van-rotate{from{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes van-rotate{from{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.van-fade-enter-active{-webkit-animation:.3s van-fade-in both ease-out;animation:.3s van-fade-in both ease-out}.van-fade-leave-active{-webkit-animation:.3s van-fade-out both ease-in;animation:.3s van-fade-out both ease-in}.van-slide-up-enter-active{-webkit-animation:van-slide-up-enter .3s both ease-out;animation:van-slide-up-enter .3s both ease-out}.van-slide-up-leave-active{-webkit-animation:van-slide-up-leave .3s both ease-in;animation:van-slide-up-leave .3s both ease-in}.van-slide-down-enter-active{-webkit-animation:van-slide-down-enter .3s both ease-out;animation:van-slide-down-enter .3s both ease-out}.van-slide-down-leave-active{-webkit-animation:van-slide-down-leave .3s both ease-in;animation:van-slide-down-leave .3s both ease-in}.van-slide-left-enter-active{-webkit-animation:van-slide-left-enter .3s both ease-out;animation:van-slide-left-enter .3s both ease-out}.van-slide-left-leave-active{-webkit-animation:van-slide-left-leave .3s both ease-in;animation:van-slide-left-leave .3s both ease-in}.van-slide-right-enter-active{-webkit-animation:van-slide-right-enter .3s both ease-out;animation:van-slide-right-enter .3s both ease-out}.van-slide-right-leave-active{-webkit-animation:van-slide-right-leave .3s both ease-in;animation:van-slide-right-leave .3s both ease-in}", ""]);

// exports


/***/ }),
/* 130 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-overlay{position:fixed;top:0;left:0;z-index:1;width:100%;height:100%;background-color:rgba(0,0,0,.4)}", ""]);

// exports


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-info{position:absolute;top:0;right:0;box-sizing:border-box;min-width:16px;padding:0 3px;color:#fff;font-weight:500;font-size:12px;font-family:-apple-system-font,Helvetica Neue,Arial,sans-serif;line-height:1.2;text-align:center;background-color:#ee0a24;border:1px solid #fff;border-radius:16px;-webkit-transform:translate(50%,-50%);transform:translate(50%,-50%);-webkit-transform-origin:100%;transform-origin:100%}.van-info--dot{width:8px;min-width:0;height:8px;background-color:#ee0a24;border-radius:100%}", ""]);

// exports


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-icon{position:relative;display:inline-block;font:normal normal normal 14px/1 vant-icon;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased}.van-icon:before{display:inline-block}.van-icon-exchange:before{content:'\\E6AF'}.van-icon-eye:before{content:'\\E6B0'}.van-icon-enlarge:before{content:'\\E6B1'}.van-icon-expand-o:before{content:'\\E6B2'}.van-icon-eye-o:before{content:'\\E6B3'}.van-icon-expand:before{content:'\\E6B4'}.van-icon-filter-o:before{content:'\\E6B5'}.van-icon-fire:before{content:'\\E6B6'}.van-icon-fail:before{content:'\\E6B7'}.van-icon-failure:before{content:'\\E6B8'}.van-icon-fire-o:before{content:'\\E6B9'}.van-icon-flag-o:before{content:'\\E6BA'}.van-icon-font:before{content:'\\E6BB'}.van-icon-font-o:before{content:'\\E6BC'}.van-icon-gem-o:before{content:'\\E6BD'}.van-icon-flower-o:before{content:'\\E6BE'}.van-icon-gem:before{content:'\\E6BF'}.van-icon-gift-card:before{content:'\\E6C0'}.van-icon-friends:before{content:'\\E6C1'}.van-icon-friends-o:before{content:'\\E6C2'}.van-icon-gold-coin:before{content:'\\E6C3'}.van-icon-gold-coin-o:before{content:'\\E6C4'}.van-icon-good-job-o:before{content:'\\E6C5'}.van-icon-gift:before{content:'\\E6C6'}.van-icon-gift-o:before{content:'\\E6C7'}.van-icon-gift-card-o:before{content:'\\E6C8'}.van-icon-good-job:before{content:'\\E6C9'}.van-icon-home-o:before{content:'\\E6CA'}.van-icon-goods-collect:before{content:'\\E6CB'}.van-icon-graphic:before{content:'\\E6CC'}.van-icon-goods-collect-o:before{content:'\\E6CD'}.van-icon-hot-o:before{content:'\\E6CE'}.van-icon-info:before{content:'\\E6CF'}.van-icon-hotel-o:before{content:'\\E6D0'}.van-icon-info-o:before{content:'\\E6D1'}.van-icon-hot-sale-o:before{content:'\\E6D2'}.van-icon-hot:before{content:'\\E6D3'}.van-icon-like:before{content:'\\E6D4'}.van-icon-idcard:before{content:'\\E6D5'}.van-icon-invitation:before{content:'\\E6D6'}.van-icon-like-o:before{content:'\\E6D7'}.van-icon-hot-sale:before{content:'\\E6D8'}.van-icon-location-o:before{content:'\\E6D9'}.van-icon-location:before{content:'\\E6DA'}.van-icon-label:before{content:'\\E6DB'}.van-icon-lock:before{content:'\\E6DC'}.van-icon-label-o:before{content:'\\E6DD'}.van-icon-map-marked:before{content:'\\E6DE'}.van-icon-logistics:before{content:'\\E6DF'}.van-icon-manager:before{content:'\\E6E0'}.van-icon-more:before{content:'\\E6E1'}.van-icon-live:before{content:'\\E6E2'}.van-icon-manager-o:before{content:'\\E6E3'}.van-icon-medal:before{content:'\\E6E4'}.van-icon-more-o:before{content:'\\E6E5'}.van-icon-music-o:before{content:'\\E6E6'}.van-icon-music:before{content:'\\E6E7'}.van-icon-new-arrival-o:before{content:'\\E6E8'}.van-icon-medal-o:before{content:'\\E6E9'}.van-icon-new-o:before{content:'\\E6EA'}.van-icon-free-postage:before{content:'\\E6EB'}.van-icon-newspaper-o:before{content:'\\E6EC'}.van-icon-new-arrival:before{content:'\\E6ED'}.van-icon-minus:before{content:'\\E6EE'}.van-icon-orders-o:before{content:'\\E6EF'}.van-icon-new:before{content:'\\E6F0'}.van-icon-paid:before{content:'\\E6F1'}.van-icon-notes-o:before{content:'\\E6F2'}.van-icon-other-pay:before{content:'\\E6F3'}.van-icon-pause-circle:before{content:'\\E6F4'}.van-icon-pause:before{content:'\\E6F5'}.van-icon-pause-circle-o:before{content:'\\E6F6'}.van-icon-peer-pay:before{content:'\\E6F7'}.van-icon-pending-payment:before{content:'\\E6F8'}.van-icon-passed:before{content:'\\E6F9'}.van-icon-plus:before{content:'\\E6FA'}.van-icon-phone-circle-o:before{content:'\\E6FB'}.van-icon-phone-o:before{content:'\\E6FC'}.van-icon-printer:before{content:'\\E6FD'}.van-icon-photo-fail:before{content:'\\E6FE'}.van-icon-phone:before{content:'\\E6FF'}.van-icon-photo-o:before{content:'\\E700'}.van-icon-play-circle:before{content:'\\E701'}.van-icon-play:before{content:'\\E702'}.van-icon-phone-circle:before{content:'\\E703'}.van-icon-point-gift-o:before{content:'\\E704'}.van-icon-point-gift:before{content:'\\E705'}.van-icon-play-circle-o:before{content:'\\E706'}.van-icon-shrink:before{content:'\\E707'}.van-icon-photo:before{content:'\\E708'}.van-icon-qr:before{content:'\\E709'}.van-icon-qr-invalid:before{content:'\\E70A'}.van-icon-question-o:before{content:'\\E70B'}.van-icon-revoke:before{content:'\\E70C'}.van-icon-replay:before{content:'\\E70D'}.van-icon-service:before{content:'\\E70E'}.van-icon-question:before{content:'\\E70F'}.van-icon-search:before{content:'\\E710'}.van-icon-refund-o:before{content:'\\E711'}.van-icon-service-o:before{content:'\\E712'}.van-icon-scan:before{content:'\\E713'}.van-icon-share:before{content:'\\E714'}.van-icon-send-gift-o:before{content:'\\E715'}.van-icon-share-o:before{content:'\\E716'}.van-icon-setting:before{content:'\\E717'}.van-icon-points:before{content:'\\E718'}.van-icon-photograph:before{content:'\\E719'}.van-icon-shop:before{content:'\\E71A'}.van-icon-shop-o:before{content:'\\E71B'}.van-icon-shop-collect-o:before{content:'\\E71C'}.van-icon-shop-collect:before{content:'\\E71D'}.van-icon-smile:before{content:'\\E71E'}.van-icon-shopping-cart-o:before{content:'\\E71F'}.van-icon-sign:before{content:'\\E720'}.van-icon-sort:before{content:'\\E721'}.van-icon-star-o:before{content:'\\E722'}.van-icon-smile-comment-o:before{content:'\\E723'}.van-icon-stop:before{content:'\\E724'}.van-icon-stop-circle-o:before{content:'\\E725'}.van-icon-smile-o:before{content:'\\E726'}.van-icon-star:before{content:'\\E727'}.van-icon-success:before{content:'\\E728'}.van-icon-stop-circle:before{content:'\\E729'}.van-icon-records:before{content:'\\E72A'}.van-icon-shopping-cart:before{content:'\\E72B'}.van-icon-tosend:before{content:'\\E72C'}.van-icon-todo-list:before{content:'\\E72D'}.van-icon-thumb-circle-o:before{content:'\\E72E'}.van-icon-thumb-circle:before{content:'\\E72F'}.van-icon-umbrella-circle:before{content:'\\E730'}.van-icon-underway:before{content:'\\E731'}.van-icon-upgrade:before{content:'\\E732'}.van-icon-todo-list-o:before{content:'\\E733'}.van-icon-tv-o:before{content:'\\E734'}.van-icon-underway-o:before{content:'\\E735'}.van-icon-user-o:before{content:'\\E736'}.van-icon-vip-card-o:before{content:'\\E737'}.van-icon-vip-card:before{content:'\\E738'}.van-icon-send-gift:before{content:'\\E739'}.van-icon-wap-home:before{content:'\\E73A'}.van-icon-wap-nav:before{content:'\\E73B'}.van-icon-volume-o:before{content:'\\E73C'}.van-icon-video:before{content:'\\E73D'}.van-icon-wap-home-o:before{content:'\\E73E'}.van-icon-volume:before{content:'\\E73F'}.van-icon-warning:before{content:'\\E740'}.van-icon-weapp-nav:before{content:'\\E741'}.van-icon-wechat-pay:before{content:'\\E742'}.van-icon-warning-o:before{content:'\\E743'}.van-icon-wechat:before{content:'\\E744'}.van-icon-setting-o:before{content:'\\E745'}.van-icon-youzan-shield:before{content:'\\E746'}.van-icon-warn-o:before{content:'\\E747'}.van-icon-smile-comment:before{content:'\\E748'}.van-icon-user-circle-o:before{content:'\\E749'}.van-icon-video-o:before{content:'\\E74A'}.van-icon-add-square:before{content:'\\E65C'}.van-icon-add:before{content:'\\E65D'}.van-icon-arrow-down:before{content:'\\E65E'}.van-icon-arrow-up:before{content:'\\E65F'}.van-icon-arrow:before{content:'\\E660'}.van-icon-after-sale:before{content:'\\E661'}.van-icon-add-o:before{content:'\\E662'}.van-icon-alipay:before{content:'\\E663'}.van-icon-ascending:before{content:'\\E664'}.van-icon-apps-o:before{content:'\\E665'}.van-icon-aim:before{content:'\\E666'}.van-icon-award:before{content:'\\E667'}.van-icon-arrow-left:before{content:'\\E668'}.van-icon-award-o:before{content:'\\E669'}.van-icon-audio:before{content:'\\E66A'}.van-icon-bag-o:before{content:'\\E66B'}.van-icon-balance-list:before{content:'\\E66C'}.van-icon-back-top:before{content:'\\E66D'}.van-icon-bag:before{content:'\\E66E'}.van-icon-balance-pay:before{content:'\\E66F'}.van-icon-balance-o:before{content:'\\E670'}.van-icon-bar-chart-o:before{content:'\\E671'}.van-icon-bars:before{content:'\\E672'}.van-icon-balance-list-o:before{content:'\\E673'}.van-icon-birthday-cake-o:before{content:'\\E674'}.van-icon-bookmark:before{content:'\\E675'}.van-icon-bill:before{content:'\\E676'}.van-icon-bell:before{content:'\\E677'}.van-icon-browsing-history-o:before{content:'\\E678'}.van-icon-browsing-history:before{content:'\\E679'}.van-icon-bookmark-o:before{content:'\\E67A'}.van-icon-bulb-o:before{content:'\\E67B'}.van-icon-bullhorn-o:before{content:'\\E67C'}.van-icon-bill-o:before{content:'\\E67D'}.van-icon-calendar-o:before{content:'\\E67E'}.van-icon-brush-o:before{content:'\\E67F'}.van-icon-card:before{content:'\\E680'}.van-icon-cart-o:before{content:'\\E681'}.van-icon-cart-circle:before{content:'\\E682'}.van-icon-cart-circle-o:before{content:'\\E683'}.van-icon-cart:before{content:'\\E684'}.van-icon-cash-on-deliver:before{content:'\\E685'}.van-icon-cash-back-record:before{content:'\\E686'}.van-icon-cashier-o:before{content:'\\E687'}.van-icon-chart-trending-o:before{content:'\\E688'}.van-icon-certificate:before{content:'\\E689'}.van-icon-chat:before{content:'\\E68A'}.van-icon-clear:before{content:'\\E68B'}.van-icon-chat-o:before{content:'\\E68C'}.van-icon-checked:before{content:'\\E68D'}.van-icon-clock:before{content:'\\E68E'}.van-icon-clock-o:before{content:'\\E68F'}.van-icon-close:before{content:'\\E690'}.van-icon-closed-eye:before{content:'\\E691'}.van-icon-circle:before{content:'\\E692'}.van-icon-cluster-o:before{content:'\\E693'}.van-icon-column:before{content:'\\E694'}.van-icon-comment-circle-o:before{content:'\\E695'}.van-icon-cluster:before{content:'\\E696'}.van-icon-comment:before{content:'\\E697'}.van-icon-comment-o:before{content:'\\E698'}.van-icon-comment-circle:before{content:'\\E699'}.van-icon-completed:before{content:'\\E69A'}.van-icon-credit-pay:before{content:'\\E69B'}.van-icon-coupon:before{content:'\\E69C'}.van-icon-debit-pay:before{content:'\\E69D'}.van-icon-coupon-o:before{content:'\\E69E'}.van-icon-contact:before{content:'\\E69F'}.van-icon-descending:before{content:'\\E6A0'}.van-icon-desktop-o:before{content:'\\E6A1'}.van-icon-diamond-o:before{content:'\\E6A2'}.van-icon-description:before{content:'\\E6A3'}.van-icon-delete:before{content:'\\E6A4'}.van-icon-diamond:before{content:'\\E6A5'}.van-icon-delete-o:before{content:'\\E6A6'}.van-icon-cross:before{content:'\\E6A7'}.van-icon-edit:before{content:'\\E6A8'}.van-icon-ellipsis:before{content:'\\E6A9'}.van-icon-down:before{content:'\\E6AA'}.van-icon-discount:before{content:'\\E6AB'}.van-icon-ecard-pay:before{content:'\\E6AC'}.van-icon-envelop-o:before{content:'\\E6AE'}.van-icon-shield-o:before{content:'\\E74B'}@font-face{font-weight:400;font-family:vant-icon;font-style:normal;font-display:auto;src:url('data:font/woff2;charset=utf-8;base64,') format('woff2'),url(//at.alicdn.com/t/font_2553510_3bs9b5licix.woff?t=1626956973644) format('woff'),url(//at.alicdn.com/t/font_2553510_3bs9b5licix.ttf?t=1626956973644) format('truetype')}.van-icon__image{width:1em;height:1em;object-fit:contain}", ""]);

// exports


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-overflow-hidden{overflow:hidden!important}.van-popup{position:fixed;max-height:100%;overflow-y:auto;background-color:#fff;-webkit-transition:-webkit-transform .3s;transition:-webkit-transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s;-webkit-overflow-scrolling:touch}.van-popup--center{top:50%;left:50%;-webkit-transform:translate3d(-50%,-50%,0);transform:translate3d(-50%,-50%,0)}.van-popup--center.van-popup--round{border-radius:16px}.van-popup--top{top:0;left:0;width:100%}.van-popup--top.van-popup--round{border-radius:0 0 16px 16px}.van-popup--right{top:50%;right:0;-webkit-transform:translate3d(0,-50%,0);transform:translate3d(0,-50%,0)}.van-popup--right.van-popup--round{border-radius:16px 0 0 16px}.van-popup--bottom{bottom:0;left:0;width:100%}.van-popup--bottom.van-popup--round{border-radius:16px 16px 0 0}.van-popup--left{top:50%;left:0;-webkit-transform:translate3d(0,-50%,0);transform:translate3d(0,-50%,0)}.van-popup--left.van-popup--round{border-radius:0 16px 16px 0}.van-popup--safe-area-inset-bottom{padding-bottom:constant(safe-area-inset-bottom);padding-bottom:env(safe-area-inset-bottom)}.van-popup-slide-bottom-enter-active,.van-popup-slide-left-enter-active,.van-popup-slide-right-enter-active,.van-popup-slide-top-enter-active{-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out}.van-popup-slide-bottom-leave-active,.van-popup-slide-left-leave-active,.van-popup-slide-right-leave-active,.van-popup-slide-top-leave-active{-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in}.van-popup-slide-top-enter,.van-popup-slide-top-leave-active{-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}.van-popup-slide-right-enter,.van-popup-slide-right-leave-active{-webkit-transform:translate3d(100%,-50%,0);transform:translate3d(100%,-50%,0)}.van-popup-slide-bottom-enter,.van-popup-slide-bottom-leave-active{-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}.van-popup-slide-left-enter,.van-popup-slide-left-leave-active{-webkit-transform:translate3d(-100%,-50%,0);transform:translate3d(-100%,-50%,0)}.van-popup__close-icon{position:absolute;z-index:1;color:#c8c9cc;font-size:22px;cursor:pointer}.van-popup__close-icon:active{color:#969799}.van-popup__close-icon--top-left{top:16px;left:16px}.van-popup__close-icon--top-right{top:16px;right:16px}.van-popup__close-icon--bottom-left{bottom:16px;left:16px}.van-popup__close-icon--bottom-right{right:16px;bottom:16px}", ""]);

// exports


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-loading{position:relative;color:#c8c9cc;font-size:0;vertical-align:middle}.van-loading__spinner{position:relative;display:inline-block;width:30px;max-width:100%;height:30px;max-height:100%;vertical-align:middle;-webkit-animation:van-rotate .8s linear infinite;animation:van-rotate .8s linear infinite}.van-loading__spinner--spinner{-webkit-animation-timing-function:steps(12);animation-timing-function:steps(12)}.van-loading__spinner--spinner i{position:absolute;top:0;left:0;width:100%;height:100%}.van-loading__spinner--spinner i::before{display:block;width:2px;height:25%;margin:0 auto;background-color:currentColor;border-radius:40%;content:' '}.van-loading__spinner--circular{-webkit-animation-duration:2s;animation-duration:2s}.van-loading__circular{display:block;width:100%;height:100%}.van-loading__circular circle{-webkit-animation:van-circular 1.5s ease-in-out infinite;animation:van-circular 1.5s ease-in-out infinite;stroke:currentColor;stroke-width:3;stroke-linecap:round}.van-loading__text{display:inline-block;margin-left:8px;color:#969799;font-size:15px;vertical-align:middle}.van-loading--vertical{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;align-items:center}.van-loading--vertical .van-loading__text{margin:8px 0 0}@-webkit-keyframes van-circular{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:90,150;stroke-dashoffset:-40}100%{stroke-dasharray:90,150;stroke-dashoffset:-120}}@keyframes van-circular{0%{stroke-dasharray:1,200;stroke-dashoffset:0}50%{stroke-dasharray:90,150;stroke-dashoffset:-40}100%{stroke-dasharray:90,150;stroke-dashoffset:-120}}.van-loading__spinner--spinner i:nth-of-type(1){-webkit-transform:rotate(30deg);transform:rotate(30deg);opacity:1}.van-loading__spinner--spinner i:nth-of-type(2){-webkit-transform:rotate(60deg);transform:rotate(60deg);opacity:.9375}.van-loading__spinner--spinner i:nth-of-type(3){-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:.875}.van-loading__spinner--spinner i:nth-of-type(4){-webkit-transform:rotate(120deg);transform:rotate(120deg);opacity:.8125}.van-loading__spinner--spinner i:nth-of-type(5){-webkit-transform:rotate(150deg);transform:rotate(150deg);opacity:.75}.van-loading__spinner--spinner i:nth-of-type(6){-webkit-transform:rotate(180deg);transform:rotate(180deg);opacity:.6875}.van-loading__spinner--spinner i:nth-of-type(7){-webkit-transform:rotate(210deg);transform:rotate(210deg);opacity:.625}.van-loading__spinner--spinner i:nth-of-type(8){-webkit-transform:rotate(240deg);transform:rotate(240deg);opacity:.5625}.van-loading__spinner--spinner i:nth-of-type(9){-webkit-transform:rotate(270deg);transform:rotate(270deg);opacity:.5}.van-loading__spinner--spinner i:nth-of-type(10){-webkit-transform:rotate(300deg);transform:rotate(300deg);opacity:.4375}.van-loading__spinner--spinner i:nth-of-type(11){-webkit-transform:rotate(330deg);transform:rotate(330deg);opacity:.375}.van-loading__spinner--spinner i:nth-of-type(12){-webkit-transform:rotate(360deg);transform:rotate(360deg);opacity:.3125}", ""]);

// exports


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-toast{position:fixed;top:50%;left:50%;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;justify-content:center;box-sizing:content-box;width:88px;max-width:70%;min-height:88px;padding:16px;color:#fff;font-size:15px;line-height:20px;white-space:pre-wrap;text-align:center;word-wrap:break-word;background-color:rgba(0,0,0,.7);border-radius:8px;-webkit-transform:translate3d(-50%,-50%,0);transform:translate3d(-50%,-50%,0)}.van-toast--unclickable{overflow:hidden}.van-toast--unclickable *{pointer-events:none}.van-toast--html,.van-toast--text{width:-webkit-fit-content;width:fit-content;min-width:96px;min-height:0;padding:8px 12px}.van-toast--html .van-toast__text,.van-toast--text .van-toast__text{margin-top:0}.van-toast--top{top:20%}.van-toast--bottom{top:auto;bottom:20%}.van-toast__icon{font-size:36px}.van-toast__loading{padding:4px;color:#fff}.van-toast__text{margin-top:8px}", ""]);

// exports


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-button{position:relative;display:inline-block;box-sizing:border-box;height:44px;margin:0;padding:0;font-size:17px;line-height:1.2;text-align:center;border-radius:2px;cursor:pointer;-webkit-transition:opacity .2s;transition:opacity .2s;-webkit-appearance:none}.van-button::before{position:absolute;top:50%;left:50%;width:100%;height:100%;background-color:#000;border:inherit;border-color:#000;border-radius:inherit;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);opacity:0;content:' '}.van-button:active::before{opacity:.1}.van-button--disabled::before,.van-button--loading::before{display:none}.van-button--default{color:#323233;background-color:#fff;border:1px solid #ebedf0}.van-button--primary{color:#fff;background-color:#07c160;border:1px solid #07c160}.van-button--info{color:#fff;background-color:#1989fa;border:1px solid #1989fa}.van-button--danger{color:#fff;background-color:#ee0a24;border:1px solid #ee0a24}.van-button--warning{color:#fff;background-color:#ff976a;border:1px solid #ff976a}.van-button--plain{background-color:#fff}.van-button--plain.van-button--primary{color:#07c160}.van-button--plain.van-button--info{color:#1989fa}.van-button--plain.van-button--danger{color:#ee0a24}.van-button--plain.van-button--warning{color:#ff976a}.van-button--large{width:100%;height:50px}.van-button--normal{padding:0 15px;font-size:15px}.van-button--small{height:32px;padding:0 8px;font-size:12px}.van-button__loading{color:inherit;font-size:inherit}.van-button--mini{height:24px;padding:0 4px;font-size:10px}.van-button--mini+.van-button--mini{margin-left:4px}.van-button--block{display:block;width:100%}.van-button--disabled{cursor:not-allowed;opacity:.5}.van-button--loading{cursor:default}.van-button--round{border-radius:999px}.van-button--square{border-radius:0}.van-button__content{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:center;-webkit-align-items:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;justify-content:center;height:100%}.van-button__content::before{content:' '}.van-button__icon{font-size:1.2em;line-height:inherit}.van-button__icon+.van-button__text,.van-button__loading+.van-button__text,.van-button__text+.van-button__icon,.van-button__text+.van-button__loading{margin-left:4px}.van-button--hairline{border-width:0}.van-button--hairline::after{border-color:inherit;border-radius:4px}.van-button--hairline.van-button--round::after{border-radius:999px}.van-button--hairline.van-button--square::after{border-radius:0}", ""]);

// exports


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(139);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-calendar{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;height:100%;background-color:#fff}.van-calendar__popup.van-popup--bottom,.van-calendar__popup.van-popup--top{height:80%}.van-calendar__popup.van-popup--left,.van-calendar__popup.van-popup--right{height:100%}.van-calendar__popup .van-popup__close-icon{top:11px}.van-calendar__header{-webkit-flex-shrink:0;flex-shrink:0;box-shadow:0 2px 10px rgba(125,126,128,.16)}.van-calendar__header-subtitle,.van-calendar__header-title,.van-calendar__month-title{height:44px;font-weight:500;line-height:44px;text-align:center}.van-calendar__header-title{font-size:17px}.van-calendar__header-subtitle{font-size:15px}.van-calendar__month-title{font-size:15px}.van-calendar__weekdays{display:-webkit-box;display:-webkit-flex;display:flex}.van-calendar__weekday{-webkit-box-flex:1;-webkit-flex:1;flex:1;font-size:12px;line-height:30px;text-align:center}.van-calendar__body{-webkit-box-flex:1;-webkit-flex:1;flex:1;overflow:auto;-webkit-overflow-scrolling:touch}.van-calendar__days{position:relative;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;-webkit-user-select:none;user-select:none}.van-calendar__month-mark{position:absolute;top:50%;left:50%;z-index:0;color:rgba(242,243,245,.8);font-size:160px;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);pointer-events:none}.van-calendar__day,.van-calendar__selected-day{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:center;-webkit-align-items:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;justify-content:center;text-align:center}.van-calendar__day{position:relative;width:14.285%;height:64px;font-size:17px;cursor:pointer}.van-calendar__day--end,.van-calendar__day--multiple-middle,.van-calendar__day--multiple-selected,.van-calendar__day--start,.van-calendar__day--start-end{color:#fff;background-color:#ee0a24}.van-calendar__day--start{border-radius:4px 0 0 4px}.van-calendar__day--end{border-radius:0 4px 4px 0}.van-calendar__day--multiple-selected,.van-calendar__day--start-end{border-radius:4px}.van-calendar__day--middle{color:#ee0a24}.van-calendar__day--middle::after{position:absolute;top:0;right:0;bottom:0;left:0;background-color:currentColor;opacity:.1;content:''}.van-calendar__day--disabled{color:#c8c9cc;cursor:default}.van-calendar__bottom-info,.van-calendar__top-info{position:absolute;right:0;left:0;font-size:10px;line-height:14px}@media (max-width:350px){.van-calendar__bottom-info,.van-calendar__top-info{font-size:9px}}.van-calendar__top-info{top:6px}.van-calendar__bottom-info{bottom:6px}.van-calendar__selected-day{width:54px;height:54px;color:#fff;background-color:#ee0a24;border-radius:50%}.van-calendar__footer{-webkit-flex-shrink:0;flex-shrink:0;padding:0 16px;padding-bottom:constant(safe-area-inset-bottom);padding-bottom:env(safe-area-inset-bottom)}.van-calendar__footer--unfit{padding-bottom:0}.van-calendar__confirm{height:36px;margin:7px 0}", ""]);

// exports


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _raf = __webpack_require__(46);

var _date = __webpack_require__(33);

var _scroll = __webpack_require__(20);

var _utils = __webpack_require__(26);

var _popup = _interopRequireDefault(__webpack_require__(27));

var _button = _interopRequireDefault(__webpack_require__(50));

var _toast = _interopRequireDefault(__webpack_require__(38));

var _Month = _interopRequireDefault(__webpack_require__(154));

var _Header = _interopRequireDefault(__webpack_require__(155));

// Utils
// Components
var _default2 = (0, _utils.createComponent)({
  props: {
    title: String,
    color: String,
    value: Boolean,
    readonly: Boolean,
    formatter: Function,
    rowHeight: [Number, String],
    confirmText: String,
    rangePrompt: String,
    defaultDate: [Date, Array],
    getContainer: [String, Function],
    allowSameDay: Boolean,
    confirmDisabledText: String,
    type: {
      type: String,
      default: 'single'
    },
    round: {
      type: Boolean,
      default: true
    },
    position: {
      type: String,
      default: 'bottom'
    },
    poppable: {
      type: Boolean,
      default: true
    },
    maxRange: {
      type: [Number, String],
      default: null
    },
    lazyRender: {
      type: Boolean,
      default: true
    },
    showMark: {
      type: Boolean,
      default: true
    },
    showTitle: {
      type: Boolean,
      default: true
    },
    showConfirm: {
      type: Boolean,
      default: true
    },
    showSubtitle: {
      type: Boolean,
      default: true
    },
    closeOnPopstate: {
      type: Boolean,
      default: true
    },
    closeOnClickOverlay: {
      type: Boolean,
      default: true
    },
    safeAreaInsetBottom: {
      type: Boolean,
      default: true
    },
    minDate: {
      type: Date,
      validator: _date.isDate,
      default: function _default() {
        return new Date();
      }
    },
    maxDate: {
      type: Date,
      validator: _date.isDate,
      default: function _default() {
        var now = new Date();
        return new Date(now.getFullYear(), now.getMonth() + 6, now.getDate());
      }
    },
    firstDayOfWeek: {
      type: [Number, String],
      default: 0,
      validator: function validator(val) {
        return val >= 0 && val <= 6;
      }
    }
  },
  data: function data() {
    return {
      subtitle: '',
      currentDate: this.getInitialDate()
    };
  },
  computed: {
    months: function months() {
      var months = [];
      var cursor = new Date(this.minDate);
      cursor.setDate(1);

      do {
        months.push(new Date(cursor));
        cursor.setMonth(cursor.getMonth() + 1);
      } while ((0, _utils.compareMonth)(cursor, this.maxDate) !== 1);

      return months;
    },
    buttonDisabled: function buttonDisabled() {
      var type = this.type,
          currentDate = this.currentDate;

      if (currentDate) {
        if (type === 'range') {
          return !currentDate[0] || !currentDate[1];
        }

        if (type === 'multiple') {
          return !currentDate.length;
        }
      }

      return !currentDate;
    },
    dayOffset: function dayOffset() {
      return this.firstDayOfWeek ? this.firstDayOfWeek % 7 : 0;
    }
  },
  watch: {
    value: 'init',
    type: function type() {
      this.reset();
    },
    defaultDate: function defaultDate(val) {
      this.currentDate = val;
      this.scrollIntoView();
    }
  },
  mounted: function mounted() {
    this.init();
  },

  /* istanbul ignore next */
  activated: function activated() {
    this.init();
  },
  methods: {
    // @exposed-api
    reset: function reset(date) {
      if (date === void 0) {
        date = this.getInitialDate();
      }

      this.currentDate = date;
      this.scrollIntoView();
    },
    init: function init() {
      var _this = this;

      if (this.poppable && !this.value) {
        return;
      }

      this.$nextTick(function () {
        // add Math.floor to avoid decimal height issues
        // https://github.com/youzan/vant/issues/5640
        _this.bodyHeight = Math.floor(_this.$refs.body.getBoundingClientRect().height);

        _this.onScroll();

        _this.scrollIntoView();
      });
    },
    // @exposed-api
    scrollToDate: function scrollToDate(targetDate) {
      var _this2 = this;

      (0, _raf.raf)(function () {
        var displayed = _this2.value || !_this2.poppable;
        /* istanbul ignore if */

        if (!targetDate || !displayed) {
          return;
        }

        _this2.months.some(function (month, index) {
          if ((0, _utils.compareMonth)(month, targetDate) === 0) {
            var _this2$$refs = _this2.$refs,
                body = _this2$$refs.body,
                months = _this2$$refs.months;
            months[index].scrollIntoView(body);
            return true;
          }

          return false;
        });

        _this2.onScroll();
      });
    },
    // scroll to current month
    scrollIntoView: function scrollIntoView() {
      var currentDate = this.currentDate;

      if (currentDate) {
        var targetDate = this.type === 'single' ? currentDate : currentDate[0];
        this.scrollToDate(targetDate);
      }
    },
    getInitialDate: function getInitialDate() {
      var type = this.type,
          minDate = this.minDate,
          maxDate = this.maxDate,
          defaultDate = this.defaultDate;

      if (defaultDate === null) {
        return defaultDate;
      }

      var defaultVal = new Date();

      if ((0, _utils.compareDay)(defaultVal, minDate) === -1) {
        defaultVal = minDate;
      } else if ((0, _utils.compareDay)(defaultVal, maxDate) === 1) {
        defaultVal = maxDate;
      }

      if (type === 'range') {
        var _ref = defaultDate || [],
            startDay = _ref[0],
            endDay = _ref[1];

        return [startDay || defaultVal, endDay || (0, _utils.getNextDay)(defaultVal)];
      }

      if (type === 'multiple') {
        return defaultDate || [defaultVal];
      }

      return defaultDate || defaultVal;
    },
    // calculate the position of the elements
    // and find the elements that needs to be rendered
    onScroll: function onScroll() {
      var _this$$refs = this.$refs,
          body = _this$$refs.body,
          months = _this$$refs.months;
      var top = (0, _scroll.getScrollTop)(body);
      var bottom = top + this.bodyHeight;
      var heights = months.map(function (item) {
        return item.getHeight();
      });
      var heightSum = heights.reduce(function (a, b) {
        return a + b;
      }, 0); // iOS scroll bounce may exceed the range

      if (bottom > heightSum && top > 0) {
        return;
      }

      var height = 0;
      var currentMonth;
      var visibleRange = [-1, -1];

      for (var i = 0; i < months.length; i++) {
        var visible = height <= bottom && height + heights[i] >= top;

        if (visible) {
          visibleRange[1] = i;

          if (!currentMonth) {
            currentMonth = months[i];
            visibleRange[0] = i;
          }

          if (!months[i].showed) {
            months[i].showed = true;
            this.$emit('month-show', {
              date: months[i].date,
              title: months[i].title
            });
          }
        }

        height += heights[i];
      }

      months.forEach(function (month, index) {
        month.visible = index >= visibleRange[0] - 1 && index <= visibleRange[1] + 1;
      });
      /* istanbul ignore else */

      if (currentMonth) {
        this.subtitle = currentMonth.title;
      }
    },
    onClickDay: function onClickDay(item) {
      if (this.readonly) {
        return;
      }

      var date = item.date;
      var type = this.type,
          currentDate = this.currentDate;

      if (type === 'range') {
        if (!currentDate) {
          this.select([date, null]);
          return;
        }

        var startDay = currentDate[0],
            endDay = currentDate[1];

        if (startDay && !endDay) {
          var compareToStart = (0, _utils.compareDay)(date, startDay);

          if (compareToStart === 1) {
            this.select([startDay, date], true);
          } else if (compareToStart === -1) {
            this.select([date, null]);
          } else if (this.allowSameDay) {
            this.select([date, date], true);
          }
        } else {
          this.select([date, null]);
        }
      } else if (type === 'multiple') {
        if (!currentDate) {
          this.select([date]);
          return;
        }

        var selectedIndex;
        var selected = this.currentDate.some(function (dateItem, index) {
          var equal = (0, _utils.compareDay)(dateItem, date) === 0;

          if (equal) {
            selectedIndex = index;
          }

          return equal;
        });

        if (selected) {
          var _currentDate$splice = currentDate.splice(selectedIndex, 1),
              unselectedDate = _currentDate$splice[0];

          this.$emit('unselect', (0, _utils.copyDate)(unselectedDate));
        } else if (this.maxRange && currentDate.length >= this.maxRange) {
          (0, _toast.default)(this.rangePrompt || (0, _utils.t)('rangePrompt', this.maxRange));
        } else {
          this.select([].concat(currentDate, [date]));
        }
      } else {
        this.select(date, true);
      }
    },
    togglePopup: function togglePopup(val) {
      this.$emit('input', val);
    },
    select: function select(date, complete) {
      var _this3 = this;

      var emit = function emit(date) {
        _this3.currentDate = date;

        _this3.$emit('select', (0, _utils.copyDates)(_this3.currentDate));
      };

      if (complete && this.type === 'range') {
        var valid = this.checkRange(date);

        if (!valid) {
          // auto selected to max range if showConfirm
          if (this.showConfirm) {
            emit([date[0], (0, _utils.getDayByOffset)(date[0], this.maxRange - 1)]);
          } else {
            emit(date);
          }

          return;
        }
      }

      emit(date);

      if (complete && !this.showConfirm) {
        this.onConfirm();
      }
    },
    checkRange: function checkRange(date) {
      var maxRange = this.maxRange,
          rangePrompt = this.rangePrompt;

      if (maxRange && (0, _utils.calcDateNum)(date) > maxRange) {
        (0, _toast.default)(rangePrompt || (0, _utils.t)('rangePrompt', maxRange));
        return false;
      }

      return true;
    },
    onConfirm: function onConfirm() {
      this.$emit('confirm', (0, _utils.copyDates)(this.currentDate));
    },
    genMonth: function genMonth(date, index) {
      var h = this.$createElement;
      var showMonthTitle = index !== 0 || !this.showSubtitle;
      return h(_Month.default, {
        "ref": "months",
        "refInFor": true,
        "attrs": {
          "date": date,
          "type": this.type,
          "color": this.color,
          "minDate": this.minDate,
          "maxDate": this.maxDate,
          "showMark": this.showMark,
          "formatter": this.formatter,
          "rowHeight": this.rowHeight,
          "lazyRender": this.lazyRender,
          "currentDate": this.currentDate,
          "showSubtitle": this.showSubtitle,
          "allowSameDay": this.allowSameDay,
          "showMonthTitle": showMonthTitle,
          "firstDayOfWeek": this.dayOffset
        },
        "on": {
          "click": this.onClickDay
        }
      });
    },
    genFooterContent: function genFooterContent() {
      var h = this.$createElement;
      var slot = this.slots('footer');

      if (slot) {
        return slot;
      }

      if (this.showConfirm) {
        var text = this.buttonDisabled ? this.confirmDisabledText : this.confirmText;
        return h(_button.default, {
          "attrs": {
            "round": true,
            "block": true,
            "type": "danger",
            "color": this.color,
            "disabled": this.buttonDisabled,
            "nativeType": "button"
          },
          "class": (0, _utils.bem)('confirm'),
          "on": {
            "click": this.onConfirm
          }
        }, [text || (0, _utils.t)('confirm')]);
      }
    },
    genFooter: function genFooter() {
      var h = this.$createElement;
      return h("div", {
        "class": (0, _utils.bem)('footer', {
          unfit: !this.safeAreaInsetBottom
        })
      }, [this.genFooterContent()]);
    },
    genCalendar: function genCalendar() {
      var _this4 = this;

      var h = this.$createElement;
      return h("div", {
        "class": (0, _utils.bem)()
      }, [h(_Header.default, {
        "attrs": {
          "title": this.title,
          "showTitle": this.showTitle,
          "subtitle": this.subtitle,
          "showSubtitle": this.showSubtitle,
          "firstDayOfWeek": this.dayOffset
        },
        "scopedSlots": {
          title: function title() {
            return _this4.slots('title');
          }
        }
      }), h("div", {
        "ref": "body",
        "class": (0, _utils.bem)('body'),
        "on": {
          "scroll": this.onScroll
        }
      }, [this.months.map(this.genMonth)]), this.genFooter()]);
    }
  },
  render: function render() {
    var _this5 = this;

    var h = arguments[0];

    if (this.poppable) {
      var _attrs;

      var createListener = function createListener(name) {
        return function () {
          return _this5.$emit(name);
        };
      };

      return h(_popup.default, {
        "attrs": (_attrs = {
          "round": true,
          "value": this.value
        }, _attrs["round"] = this.round, _attrs["position"] = this.position, _attrs["closeable"] = this.showTitle || this.showSubtitle, _attrs["getContainer"] = this.getContainer, _attrs["closeOnPopstate"] = this.closeOnPopstate, _attrs["closeOnClickOverlay"] = this.closeOnClickOverlay, _attrs),
        "class": (0, _utils.bem)('popup'),
        "on": {
          "input": this.togglePopup,
          "open": createListener('open'),
          "opened": createListener('opened'),
          "close": createListener('close'),
          "closed": createListener('closed')
        }
      }, [this.genCalendar()]);
    }

    return this.genCalendar();
  }
});

exports.default = _default2;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.createNamespace = createNamespace;

var _bem = __webpack_require__(142);

var _component = __webpack_require__(143);

var _i18n = __webpack_require__(147);

function createNamespace(name) {
  name = 'van-' + name;
  return [(0, _component.createComponent)(name), (0, _bem.createBEM)(name), (0, _i18n.createI18N)(name)];
}

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.createBEM = createBEM;

/**
 * bem helper
 * b() // 'button'
 * b('text') // 'button__text'
 * b({ disabled }) // 'button button--disabled'
 * b('text', { disabled }) // 'button__text button__text--disabled'
 * b(['disabled', 'primary']) // 'button button--disabled button--primary'
 */
function gen(name, mods) {
  if (!mods) {
    return '';
  }

  if (typeof mods === 'string') {
    return " " + name + "--" + mods;
  }

  if (Array.isArray(mods)) {
    return mods.reduce(function (ret, item) {
      return ret + gen(name, item);
    }, '');
  }

  return Object.keys(mods).reduce(function (ret, key) {
    return ret + (mods[key] ? gen(name, key) : '');
  }, '');
}

function createBEM(name) {
  return function (el, mods) {
    if (el && typeof el !== 'string') {
      mods = el;
      el = '';
    }

    el = el ? name + "__" + el : name;
    return "" + el + gen(el, mods);
  };
}

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.unifySlots = unifySlots;
exports.createComponent = createComponent;

__webpack_require__(47);

var _ = __webpack_require__(1);

var _string = __webpack_require__(19);

var _slots = __webpack_require__(146);

var _vue = _interopRequireDefault(__webpack_require__(13));

/**
 * Create a basic component with common options
 */
function install(Vue) {
  var name = this.name;
  Vue.component(name, this);
  Vue.component((0, _string.camelize)("-" + name), this);
} // unify slots & scopedSlots


function unifySlots(context) {
  // use data.scopedSlots in lower Vue version
  var scopedSlots = context.scopedSlots || context.data.scopedSlots || {};
  var slots = context.slots();
  Object.keys(slots).forEach(function (key) {
    if (!scopedSlots[key]) {
      scopedSlots[key] = function () {
        return slots[key];
      };
    }
  });
  return scopedSlots;
} // should be removed after Vue 3


function transformFunctionComponent(pure) {
  return {
    functional: true,
    props: pure.props,
    model: pure.model,
    render: function render(h, context) {
      return pure(h, context.props, unifySlots(context), context);
    }
  };
}

function createComponent(name) {
  return function (sfc) {
    if ((0, _.isFunction)(sfc)) {
      sfc = transformFunctionComponent(sfc);
    }

    if (!sfc.functional) {
      sfc.mixins = sfc.mixins || [];
      sfc.mixins.push(_slots.SlotsMixin);
    }

    sfc.name = name;
    sfc.install = install;
    return sfc;
  };
}

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.deepAssign = deepAssign;

var _ = __webpack_require__(1);

var hasOwnProperty = Object.prototype.hasOwnProperty;

function assignKey(to, from, key) {
  var val = from[key];

  if (!(0, _.isDef)(val)) {
    return;
  }

  if (!hasOwnProperty.call(to, key) || !(0, _.isObject)(val)) {
    to[key] = val;
  } else {
    // eslint-disable-next-line @typescript-eslint/no-use-before-define
    to[key] = deepAssign(Object(to[key]), from[key]);
  }
}

function deepAssign(to, from) {
  Object.keys(from).forEach(function (key) {
    assignKey(to, from, key);
  });
  return to;
}

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

/*
 * @Author: xiaoyang
 * @Date: 2021-06-03 11:10:15
 * @LastEditTime: 2021-08-18 17:16:10
 * @LastEditors: xiaoyang
 * @Description: 添加描述
 * @FilePath: /mu-vant/src/locale/lang/zh-CN.ts
 * @version: 1.0.0
 */
var _default = {
  name: '姓名',
  tel: '电话',
  save: '保存',
  confirm: '确认',
  cancel: '取消',
  delete: '删除',
  complete: '完成',
  loading: '加载中...',
  telEmpty: '请填写电话',
  nameEmpty: '请填写姓名',
  nameInvalid: '请输入正确的姓名',
  confirmDelete: '确定要删除吗',
  telInvalid: '请输入正确的手机号',
  vanCalendar: {
    end: '结束',
    start: '开始',
    title: '日期选择',
    confirm: '确定',
    startEnd: '开始/结束',
    weekdays: ['日', '一', '二', '三', '四', '五', '六'],
    monthTitle: function monthTitle(year, month) {
      return year + "\u5E74" + month + "\u6708";
    },
    rangePrompt: function rangePrompt(maxRange) {
      return "\u9009\u62E9\u5929\u6570\u4E0D\u80FD\u8D85\u8FC7 " + maxRange + " \u5929";
    }
  },
  vanCascader: {
    select: '请选择'
  },
  vanPagination: {
    prev: '上一页',
    next: '下一页'
  },
  vanPullRefresh: {
    pulling: '下拉即可刷新...',
    loosing: '释放即可刷新...'
  }
};
exports.default = _default;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.SlotsMixin = void 0;

/**
 * Use scopedSlots in Vue 2.6+
 * downgrade to slots in lower version
 */
var SlotsMixin = {
  methods: {
    slots: function slots(name, props) {
      if (name === void 0) {
        name = 'default';
      }

      var $slots = this.$slots,
          $scopedSlots = this.$scopedSlots;
      var scopedSlot = $scopedSlots[name];

      if (scopedSlot) {
        return scopedSlot(props);
      }

      return $slots[name];
    }
  }
};
exports.SlotsMixin = SlotsMixin;

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.createI18N = createI18N;

var _ = __webpack_require__(1);

var _string = __webpack_require__(19);

var _locale = _interopRequireDefault(__webpack_require__(47));

function createI18N(name) {
  var prefix = (0, _string.camelize)(name) + '.';
  return function (path) {
    var messages = _locale.default.messages();

    var message = (0, _.get)(messages, prefix + path) || (0, _.get)(messages, path);

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return (0, _.isFunction)(message) ? message.apply(void 0, args) : message;
  };
}

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.updateOverlay = updateOverlay;
exports.openOverlay = openOverlay;
exports.closeOverlay = closeOverlay;
exports.removeOverlay = removeOverlay;

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _overlay = _interopRequireDefault(__webpack_require__(149));

var _context = __webpack_require__(48);

var _functional = __webpack_require__(14);

var _node = __webpack_require__(34);

var defaultConfig = {
  className: '',
  customStyle: {}
};

function mountOverlay(vm) {
  return (0, _functional.mount)(_overlay.default, {
    on: {
      // close popup when overlay clicked & closeOnClickOverlay is true
      click: function click() {
        vm.$emit('click-overlay');

        if (vm.closeOnClickOverlay) {
          if (vm.onClickOverlay) {
            vm.onClickOverlay();
          } else {
            vm.close();
          }
        }
      }
    }
  });
}

function updateOverlay(vm) {
  var item = _context.context.find(vm);

  if (item) {
    var el = vm.$el;
    var config = item.config,
        overlay = item.overlay;

    if (el && el.parentNode) {
      el.parentNode.insertBefore(overlay.$el, el);
    }

    (0, _extends2.default)(overlay, defaultConfig, config, {
      show: true
    });
  }
}

function openOverlay(vm, config) {
  var item = _context.context.find(vm);

  if (item) {
    item.config = config;
  } else {
    var overlay = mountOverlay(vm);

    _context.context.stack.push({
      vm: vm,
      config: config,
      overlay: overlay
    });
  }

  updateOverlay(vm);
}

function closeOverlay(vm) {
  var item = _context.context.find(vm);

  if (item) {
    item.overlay.show = false;
  }
}

function removeOverlay(vm) {
  var item = _context.context.find(vm);

  if (item) {
    (0, _node.removeNode)(item.overlay.$el);
  }
}

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _babelHelperVueJsxMergeProps = _interopRequireDefault(__webpack_require__(8));

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _utils = __webpack_require__(1);

var _functional = __webpack_require__(14);

var _event = __webpack_require__(9);

// Utils
var _createNamespace = (0, _utils.createNamespace)('overlay'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

function preventTouchMove(event) {
  (0, _event.preventDefault)(event, true);
}

function Overlay(h, props, slots, ctx) {
  var style = (0, _extends2.default)({
    zIndex: props.zIndex
  }, props.customStyle);

  if ((0, _utils.isDef)(props.duration)) {
    style.animationDuration = props.duration + "s";
  }

  return h("transition", {
    "attrs": {
      "name": "van-fade"
    }
  }, [h("div", (0, _babelHelperVueJsxMergeProps.default)([{
    "directives": [{
      name: "show",
      value: props.show
    }],
    "style": style,
    "class": [bem(), props.className],
    "on": {
      "touchmove": props.lockScroll ? preventTouchMove : _utils.noop
    }
  }, (0, _functional.inherit)(ctx, true)]), [slots.default == null ? void 0 : slots.default()])]);
}

Overlay.props = {
  show: Boolean,
  zIndex: [Number, String],
  duration: [Number, String],
  className: null,
  customStyle: Object,
  lockScroll: {
    type: Boolean,
    default: true
  }
};

var _default = createComponent(Overlay);

exports.default = _default;

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.PortalMixin = PortalMixin;

function getElement(selector) {
  if (typeof selector === 'string') {
    return document.querySelector(selector);
  }

  return selector();
}

function PortalMixin(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      ref = _ref.ref,
      afterPortal = _ref.afterPortal;

  return {
    props: {
      getContainer: [String, Function]
    },
    watch: {
      getContainer: 'portal'
    },
    mounted: function mounted() {
      if (this.getContainer) {
        this.portal();
      }
    },
    methods: {
      portal: function portal() {
        var getContainer = this.getContainer;
        var el = ref ? this.$refs[ref] : this.$el;
        var container;

        if (getContainer) {
          container = getElement(getContainer);
        } else if (this.$parent) {
          container = this.$parent.$el;
        }

        if (container && container !== el.parentNode) {
          container.appendChild(el);
        }

        if (afterPortal) {
          afterPortal.call(this);
        }
      }
    }
  };
}

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.CloseOnPopstateMixin = void 0;

var _event = __webpack_require__(9);

var _bindEvent = __webpack_require__(36);

var CloseOnPopstateMixin = {
  mixins: [(0, _bindEvent.BindEventMixin)(function (bind, isBind) {
    this.handlePopstate(isBind && this.closeOnPopstate);
  })],
  props: {
    closeOnPopstate: Boolean
  },
  data: function data() {
    return {
      bindStatus: false
    };
  },
  watch: {
    closeOnPopstate: function closeOnPopstate(val) {
      this.handlePopstate(val);
    }
  },
  methods: {
    onPopstate: function onPopstate() {
      this.close();
      this.shouldReopen = false;
    },
    handlePopstate: function handlePopstate(bind) {
      /* istanbul ignore if */
      if (this.$isServer) {
        return;
      }

      if (this.bindStatus !== bind) {
        this.bindStatus = bind;
        var action = bind ? _event.on : _event.off;
        action(window, 'popstate', this.onPopstate);
      }
    }
  }
};
exports.CloseOnPopstateMixin = CloseOnPopstateMixin;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _utils = __webpack_require__(1);

var _lockClick = __webpack_require__(153);

var _popup = __webpack_require__(28);

var _icon = _interopRequireDefault(__webpack_require__(24));

var _loading = _interopRequireDefault(__webpack_require__(30));

// Utils
// Mixins
// Components
var _createNamespace = (0, _utils.createNamespace)('toast'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

var _default = createComponent({
  mixins: [(0, _popup.PopupMixin)()],
  props: {
    icon: String,
    className: null,
    iconPrefix: String,
    loadingType: String,
    forbidClick: Boolean,
    closeOnClick: Boolean,
    message: [Number, String],
    type: {
      type: String,
      default: 'text'
    },
    position: {
      type: String,
      default: 'middle'
    },
    transition: {
      type: String,
      default: 'van-fade'
    },
    lockScroll: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      clickable: false
    };
  },
  mounted: function mounted() {
    this.toggleClickable();
  },
  destroyed: function destroyed() {
    this.toggleClickable();
  },
  watch: {
    value: 'toggleClickable',
    forbidClick: 'toggleClickable'
  },
  methods: {
    onClick: function onClick() {
      if (this.closeOnClick) {
        this.close();
      }
    },
    toggleClickable: function toggleClickable() {
      var clickable = this.value && this.forbidClick;

      if (this.clickable !== clickable) {
        this.clickable = clickable;
        (0, _lockClick.lockClick)(clickable);
      }
    },

    /* istanbul ignore next */
    onAfterEnter: function onAfterEnter() {
      this.$emit('opened');

      if (this.onOpened) {
        this.onOpened();
      }
    },
    onAfterLeave: function onAfterLeave() {
      this.$emit('closed');
    },
    genIcon: function genIcon() {
      var h = this.$createElement;
      var icon = this.icon,
          type = this.type,
          iconPrefix = this.iconPrefix,
          loadingType = this.loadingType;
      var hasIcon = icon || type === 'success' || type === 'fail';

      if (hasIcon) {
        return h(_icon.default, {
          "class": bem('icon'),
          "attrs": {
            "classPrefix": iconPrefix,
            "name": icon || type
          }
        });
      }

      if (type === 'loading') {
        return h(_loading.default, {
          "class": bem('loading'),
          "attrs": {
            "type": loadingType
          }
        });
      }
    },
    genMessage: function genMessage() {
      var h = this.$createElement;
      var type = this.type,
          message = this.message;

      if (!(0, _utils.isDef)(message) || message === '') {
        return;
      }

      if (type === 'html') {
        return h("div", {
          "class": bem('text'),
          "domProps": {
            "innerHTML": message
          }
        });
      }

      return h("div", {
        "class": bem('text')
      }, [message]);
    }
  },
  render: function render() {
    var _ref;

    var h = arguments[0];
    return h("transition", {
      "attrs": {
        "name": this.transition
      },
      "on": {
        "afterEnter": this.onAfterEnter,
        "afterLeave": this.onAfterLeave
      }
    }, [h("div", {
      "directives": [{
        name: "show",
        value: this.value
      }],
      "class": [bem([this.position, (_ref = {}, _ref[this.type] = !this.icon, _ref)]), this.className],
      "on": {
        "click": this.onClick
      }
    }, [this.genIcon(), this.genMessage()])]);
  }
});

exports.default = _default;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.lockClick = lockClick;
var lockCount = 0;

function lockClick(lock) {
  if (lock) {
    if (!lockCount) {
      document.body.classList.add('van-toast--unclickable');
    }

    lockCount++;
  } else {
    lockCount--;

    if (!lockCount) {
      document.body.classList.remove('van-toast--unclickable');
    }
  }
}

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _utils = __webpack_require__(1);

var _scroll = __webpack_require__(20);

var _utils2 = __webpack_require__(26);

var _utils3 = __webpack_require__(39);

var _createNamespace = (0, _utils.createNamespace)('calendar-month'),
    createComponent = _createNamespace[0];

var _default = createComponent({
  props: {
    date: Date,
    type: String,
    color: String,
    minDate: Date,
    maxDate: Date,
    showMark: Boolean,
    rowHeight: [Number, String],
    formatter: Function,
    lazyRender: Boolean,
    currentDate: [Date, Array],
    allowSameDay: Boolean,
    showSubtitle: Boolean,
    showMonthTitle: Boolean,
    firstDayOfWeek: Number
  },
  data: function data() {
    return {
      visible: false
    };
  },
  computed: {
    title: function title() {
      return (0, _utils2.formatMonthTitle)(this.date);
    },
    rowHeightWithUnit: function rowHeightWithUnit() {
      return (0, _utils.addUnit)(this.rowHeight);
    },
    offset: function offset() {
      var firstDayOfWeek = this.firstDayOfWeek;
      var realDay = this.date.getDay();

      if (!firstDayOfWeek) {
        return realDay;
      }

      return (realDay + 7 - this.firstDayOfWeek) % 7;
    },
    totalDay: function totalDay() {
      return (0, _utils3.getMonthEndDay)(this.date.getFullYear(), this.date.getMonth() + 1);
    },
    shouldRender: function shouldRender() {
      return this.visible || !this.lazyRender;
    },
    placeholders: function placeholders() {
      var rows = [];
      var count = Math.ceil((this.totalDay + this.offset) / 7);

      for (var day = 1; day <= count; day++) {
        rows.push({
          type: 'placeholder'
        });
      }

      return rows;
    },
    days: function days() {
      var days = [];
      var year = this.date.getFullYear();
      var month = this.date.getMonth();

      for (var day = 1; day <= this.totalDay; day++) {
        var date = new Date(year, month, day);
        var type = this.getDayType(date);
        var config = {
          date: date,
          type: type,
          text: day,
          bottomInfo: this.getBottomInfo(type)
        };

        if (this.formatter) {
          config = this.formatter(config);
        }

        days.push(config);
      }

      return days;
    }
  },
  methods: {
    getHeight: function getHeight() {
      if (!this.height) {
        this.height = this.$el.getBoundingClientRect().height;
      }

      return this.height;
    },
    scrollIntoView: function scrollIntoView(body) {
      var _this$$refs = this.$refs,
          days = _this$$refs.days,
          month = _this$$refs.month;
      var el = this.showSubtitle ? days : month;
      var scrollTop = el.getBoundingClientRect().top - body.getBoundingClientRect().top + body.scrollTop;
      (0, _scroll.setScrollTop)(body, scrollTop);
    },
    getMultipleDayType: function getMultipleDayType(day) {
      var _this = this;

      var isSelected = function isSelected(date) {
        return _this.currentDate.some(function (item) {
          return (0, _utils2.compareDay)(item, date) === 0;
        });
      };

      if (isSelected(day)) {
        var prevDay = (0, _utils2.getPrevDay)(day);
        var nextDay = (0, _utils2.getNextDay)(day);
        var prevSelected = isSelected(prevDay);
        var nextSelected = isSelected(nextDay);

        if (prevSelected && nextSelected) {
          return 'multiple-middle';
        }

        if (prevSelected) {
          return 'end';
        }

        return nextSelected ? 'start' : 'multiple-selected';
      }

      return '';
    },
    getRangeDayType: function getRangeDayType(day) {
      var _this$currentDate = this.currentDate,
          startDay = _this$currentDate[0],
          endDay = _this$currentDate[1];

      if (!startDay) {
        return '';
      }

      var compareToStart = (0, _utils2.compareDay)(day, startDay);

      if (!endDay) {
        return compareToStart === 0 ? 'start' : '';
      }

      var compareToEnd = (0, _utils2.compareDay)(day, endDay);

      if (compareToStart === 0 && compareToEnd === 0 && this.allowSameDay) {
        return 'start-end';
      }

      if (compareToStart === 0) {
        return 'start';
      }

      if (compareToEnd === 0) {
        return 'end';
      }

      if (compareToStart > 0 && compareToEnd < 0) {
        return 'middle';
      }
    },
    getDayType: function getDayType(day) {
      var type = this.type,
          minDate = this.minDate,
          maxDate = this.maxDate,
          currentDate = this.currentDate;

      if ((0, _utils2.compareDay)(day, minDate) < 0 || (0, _utils2.compareDay)(day, maxDate) > 0) {
        return 'disabled';
      }

      if (currentDate === null) {
        return;
      }

      if (type === 'single') {
        return (0, _utils2.compareDay)(day, currentDate) === 0 ? 'selected' : '';
      }

      if (type === 'multiple') {
        return this.getMultipleDayType(day);
      }
      /* istanbul ignore else */


      if (type === 'range') {
        return this.getRangeDayType(day);
      }
    },
    getBottomInfo: function getBottomInfo(type) {
      if (this.type === 'range') {
        if (type === 'start' || type === 'end') {
          return (0, _utils2.t)(type);
        }

        if (type === 'start-end') {
          return (0, _utils2.t)('startEnd');
        }
      }
    },
    getDayStyle: function getDayStyle(type, index) {
      var style = {
        height: this.rowHeightWithUnit
      };

      if (type === 'placeholder') {
        style.width = '100%';
        return style;
      }

      if (index === 0) {
        style.marginLeft = 100 * this.offset / 7 + "%";
      }

      if (this.color) {
        if (type === 'start' || type === 'end' || type === 'start-end' || type === 'multiple-selected' || type === 'multiple-middle') {
          style.background = this.color;
        } else if (type === 'middle') {
          style.color = this.color;
        }
      }

      return style;
    },
    genTitle: function genTitle() {
      var h = this.$createElement;

      if (this.showMonthTitle) {
        return h("div", {
          "class": (0, _utils2.bem)('month-title')
        }, [this.title]);
      }
    },
    genMark: function genMark() {
      var h = this.$createElement;

      if (this.showMark && this.shouldRender) {
        return h("div", {
          "class": (0, _utils2.bem)('month-mark')
        }, [this.date.getMonth() + 1]);
      }
    },
    genDays: function genDays() {
      var h = this.$createElement;
      var days = this.shouldRender ? this.days : this.placeholders;
      return h("div", {
        "ref": "days",
        "attrs": {
          "role": "grid"
        },
        "class": (0, _utils2.bem)('days')
      }, [this.genMark(), days.map(this.genDay)]);
    },
    genDay: function genDay(item, index) {
      var _this2 = this;

      var h = this.$createElement;
      var type = item.type,
          topInfo = item.topInfo,
          bottomInfo = item.bottomInfo;
      var style = this.getDayStyle(type, index);
      var disabled = type === 'disabled';

      var onClick = function onClick() {
        if (!disabled) {
          _this2.$emit('click', item);
        }
      };

      var TopInfo = topInfo && h("div", {
        "class": (0, _utils2.bem)('top-info')
      }, [topInfo]);
      var BottomInfo = bottomInfo && h("div", {
        "class": (0, _utils2.bem)('bottom-info')
      }, [bottomInfo]);

      if (type === 'selected') {
        return h("div", {
          "attrs": {
            "role": "gridcell",
            "tabindex": -1
          },
          "style": style,
          "class": [(0, _utils2.bem)('day'), item.className],
          "on": {
            "click": onClick
          }
        }, [h("div", {
          "class": (0, _utils2.bem)('selected-day'),
          "style": {
            width: this.rowHeightWithUnit,
            height: this.rowHeightWithUnit,
            background: this.color
          }
        }, [TopInfo, item.text, BottomInfo])]);
      }

      return h("div", {
        "attrs": {
          "role": "gridcell",
          "tabindex": disabled ? null : -1
        },
        "style": style,
        "class": [(0, _utils2.bem)('day', type), item.className],
        "on": {
          "click": onClick
        }
      }, [TopInfo, item.text, BottomInfo]);
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("div", {
      "class": (0, _utils2.bem)('month'),
      "ref": "month"
    }, [this.genTitle(), this.genDays()]);
  }
});

exports.default = _default;

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _utils = __webpack_require__(1);

var _utils2 = __webpack_require__(26);

var _createNamespace = (0, _utils.createNamespace)('calendar-header'),
    createComponent = _createNamespace[0];

var _default = createComponent({
  props: {
    title: String,
    subtitle: String,
    showTitle: Boolean,
    showSubtitle: Boolean,
    firstDayOfWeek: Number
  },
  methods: {
    genTitle: function genTitle() {
      var h = this.$createElement;

      if (this.showTitle) {
        var title = this.slots('title') || this.title || (0, _utils2.t)('title');
        return h("div", {
          "class": (0, _utils2.bem)('header-title')
        }, [title]);
      }
    },
    genSubtitle: function genSubtitle() {
      var h = this.$createElement;

      if (this.showSubtitle) {
        return h("div", {
          "class": (0, _utils2.bem)('header-subtitle')
        }, [this.subtitle]);
      }
    },
    genWeekDays: function genWeekDays() {
      var h = this.$createElement;
      var weekdays = (0, _utils2.t)('weekdays');
      var firstDayOfWeek = this.firstDayOfWeek;
      var renderWeekDays = [].concat(weekdays.slice(firstDayOfWeek, 7), weekdays.slice(0, firstDayOfWeek));
      return h("div", {
        "class": (0, _utils2.bem)('weekdays')
      }, [renderWeekDays.map(function (item) {
        return h("span", {
          "class": (0, _utils2.bem)('weekday')
        }, [item]);
      })]);
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("div", {
      "class": (0, _utils2.bem)('header')
    }, [this.genTitle(), this.genSubtitle(), this.genWeekDays()]);
  }
});

exports.default = _default;

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: " weex-ct weex-div",
    attrs: {
      "weex-type": "div"
    }
  }, [_c('van-calendar', _vm._b({
    ref: "calendar",
    attrs: {
      "data-evt-confirm": "",
      "data-evt-closed": ""
    },
    on: {
      "confirm": _vm.onConfirm,
      "closed": _vm.onClosed
    },
    model: {
      value: (_vm.visible),
      callback: function($$v) {
        _vm.visible = $$v
      },
      expression: "visible"
    }
  }, 'van-calendar', _vm.calendarProps, false))], 1)
},staticRenderFns: []}
module.exports.render._withStripped = true
if (false) {
  module.hot.accept()
  if (module.hot.data) {
     require("vue-hot-reload-api").rerender("data-v-62b6bb7e", module.exports)
  }
}

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(41).default;

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getCards = __webpack_require__(159);

var _getCards2 = _interopRequireDefault(_getCards);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MockCardList = _getCards2.default.data; /*
                                             * @Author: your name
                                             * @Date: 1985-10-26 16:15:00
                                             * @LastEditTime: 2022-11-04 15:55:01
                                             * @LastEditors: xiaoyang
                                             * @Description: In User Settings Edit
                                             * @FilePath: /mu-hybrid/mu-hybrid/mu_cards/mock.js
                                             */

var MUMobile = {
  /**
   * 获取所有卡片
   */
  queryCards: function queryCards() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'ok',
        data: MockCardList
      });
    });
    return p;
  },

  /**
   * 根据typeId 获取card list
   */
  getCards: function getCards() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      try {
        var list = {};
        for (var _p = 0; _p < options.types.length; _p++) {
          var types = options.types[_p];
          list[types] = [];
          for (var i = 0; i < MockCardList.length; i++) {
            for (var j = 0; j < MockCardList[i].cardTypeAndOrder.length; j++) {
              if (MockCardList[i].cardTypeAndOrder[j].cardType === options.types[_p]) {
                list[types].push(MockCardList[i]);
              }
            }
          }
        }
        resolve({
          status: 0,
          message: 'ok',
          data: list
        });
      } catch (error) {
        reject({
          status: -1,
          message: error.message,
          data: {}
        });
      }
    });

    return p;
  },

  /**
   * 打开卡片
   */
  openCard: function openCard(option) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'web mock open card is success',
        data: {}
      });
      console.info('web mock open card is success');
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 159 */
/***/ (function(module, exports) {

module.exports = {"status":0,"message":"ok","data":[{"cardCode":"dev_week_mis_happinessNoun_101","cardName":"公积金查询","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-week_mis_happinessNoun/pages/providentFund/entry.js\",\"appId\":\"week_mis_happinessNoun\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202004081336100974_6133pBU9.png","cardEngName":"gongjijinchaxun","cardGroup":"happyNetHallCard","cardTypeAndOrder":[{"cardType":"staffServiceCard","cardOrderNum":2}],"iconAttachmentCode":"3400a2242e004c819da831d1f7ed30d7","moduleId":50000253},{"cardCode":"weex_mis_happinessNoun_102","cardName":"国寿理财","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-week_mis_happinessNoun/pages/providentFund/entry.js\",\"appId\":\"week_mis_happinessNoun\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202004081324380261_7030O8OL.png","cardEngName":"guoshoulicai","cardGroup":"happyNetHallCard","cardTypeAndOrder":[{"cardType":"staffServiceCard","cardOrderNum":1}],"iconAttachmentCode":"4fbd84c6d6294b7594adde4d21526bf6","moduleId":50000253},{"cardCode":"dev_weex_ground_017","cardName":"遗留物品平台","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_ground_Remnants/pages/index/entry.js\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202004030932260346_00446p9G.png","cardEngName":"weex_ground_Remnants","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"groundAllNavigationCard","cardOrderNum":1}],"iconAttachmentCode":"39b50846333e423bb33f524d5b225105","moduleId":50000251},{"cardCode":"dev_11262631_001","cardName":"IT系统反馈","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"index.html\",\"appId\":\"11262631\",\"appKey\":\"e4374ce4-18f8-47be-bd35-6b9f73a27769\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-11262631/tmp_11262631_0.zip\"}","cardEngName":"itfankui","cardGroup":"meCard","cardTypeAndOrder":[{"cardType":"myOtherCard","cardOrderNum":1}],"iconAttachmentCode":"","moduleId":50000249},{"cardCode":"dev_weex_aoc_007","cardName":"飞机","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_aoc_airplane/pages/flight/navigation/entry.js\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003181117490360_219f81o3.png","cardEngName":"plane","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"aocAllNavigationCard","cardOrderNum":3}],"iconAttachmentCode":"25bbb342039c4439ae509f912b29ecab","moduleId":50000239},{"cardCode":"dev_weex_aoc_006","cardName":"公司值班","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_aoc_free_ticket_route/pages/index/entry.js\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003171646100707_0B49JPS6.png","cardEngName":"gszb","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"aocAllNavigationCard","cardOrderNum":5}],"iconAttachmentCode":"86b8fe3b122147ff8e38e64006ba8324","moduleId":50000235},{"cardCode":"dev_aaama10134_001","cardName":"应急响应","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"index.html\",\"appId\":\"aaama10134\",\"appKey\":\"4bee1314-6109-4606-a3ac-bb5f569218d4\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"buttonName\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-aaama10134_001/tmp_aaama10134_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003171130240916_0g1LZz71.png","cardEngName":"yjxy","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"aocAllNavigationCard","cardOrderNum":6}],"iconAttachmentCode":"390b2a9ed80b4ec08d10ad381a1c66d1","moduleId":50000234},{"cardCode":"dev_aaama10189_001","cardName":"新版联盟优惠票","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"lmmypLogin.html\",\"appId\":\"aaama10189\",\"appKey\":\"f6f0ab06-bb29-44af-a47e-5dccde7b9af3\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-aaama10189/tmp_aaama10189_0.zip\"}","cardEngName":"newUnionSaverTicket","cardGroup":"otherCard","cardTypeAndOrder":[{"cardType":"fastenCard","cardOrderNum":1}],"iconAttachmentCode":"","moduleId":50000228},{"cardCode":"dev_sdk10385_001","cardName":"因公差旅免票","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"index.html\",\"appId\":\"sdk10385\",\"appKey\":\"ab74d5cd-c60e-409e-a409-c55bb19f1f52\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10385/tmp_sdk10385_0.zip\"}","cardEngName":"freeTicketForBusiness","cardGroup":"otherCard","cardTypeAndOrder":[{"cardType":"fastenCard","cardOrderNum":2}],"iconAttachmentCode":"","moduleId":50000229},{"cardCode":"dev_aaama10039_001","cardName":"新员工免优票","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"mypLogin.html\",\"appId\":\"aaama10039\",\"appKey\":\"d3a958ff-31f5-4c77-a269-61339ef9e0ae\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"2020-10-22\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-aaama10039/tmp_aaama10039_0.zip\"}","cardEngName":"newEmployeeFreeTicket","cardGroup":"otherCard","cardTypeAndOrder":[{"cardType":"fastenCard","cardOrderNum":3}],"iconAttachmentCode":"","moduleId":50000230},{"cardCode":"dev_sdk10209_001","cardName":"员工免优票","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"mypLogin.html\",\"appId\":\"sdk10209\",\"appKey\":\"3f297963-9b69-4212-8238-c8e51cabc298\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10209/tmp_sdk10209_0.zip\"}","cardEngName":"employeeFreeTicket","cardGroup":"otherCard","cardTypeAndOrder":[{"cardType":"fastenCard","cardOrderNum":4}],"iconAttachmentCode":"","moduleId":50000231},{"cardCode":"dev_aaama10042_001","cardName":"联盟优惠票","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"lmmypLogin.html\",\"appId\":\"aaama10042\",\"appKey\":\"069e1b25-9a55-4cce-872c-40415471114e\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-aaama10042/tmp_aaama10042_0.zip\"}","cardEngName":"unionSaverTicket","cardGroup":"otherCard","cardTypeAndOrder":[{"cardType":"fastenCard","cardOrderNum":5}],"iconAttachmentCode":"","moduleId":50000232},{"cardCode":"dev_weex_aoc_005","cardName":"公司统计","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_aoc_company_statistics/pages/index/entry.js\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003161132500270_Y885ZhQ5.png","cardEngName":"gstj","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"aocAllNavigationCard","cardOrderNum":8}],"iconAttachmentCode":"135abc7090214e269c54c87e939a44d5","moduleId":50000227},{"cardCode":"dev_weex_aoc_004","cardName":"移动运行首页","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_aoc_home/pages/index/entry.js\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"\"}","cardEngName":"ydyxsy","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"aocAllNavigationCard","cardOrderNum":7}],"iconAttachmentCode":"","moduleId":50000226},{"cardCode":"dev_weex_aoc_003","cardName":"我的行程","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_aoc_free_ticket_route/pages/ticket/Travelstatus/entry.js\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"\"}","cardEngName":"wdxc","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"aocAllNavigationCard","cardOrderNum":4}],"iconAttachmentCode":"","moduleId":50000198},{"cardCode":"dev_aaama10107_001","cardName":"免优票","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"index.html\",\"appId\":\"aaama10107\",\"appKey\":\"af74693f-f2d0-454b-8494-54d333652228\",\"androidMinVersion\":\"\",\n\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-aaama10107/tmp_aaama10107_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003131902070866_2252dbN6.png","cardEngName":"myp","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"retireAllNavigationCard","cardOrderNum":2},{"cardType":"misAllNavigationCard","cardOrderNum":1}],"iconAttachmentCode":"b28b55675e794ed9a03e7f5f0003ccbd","moduleId":50000223},{"cardCode":"dev_weex_vcard_001","cardName":"电子名片","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_vcard/pages/card/entry.js\",\"appId\":\"weex_vcard\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","cardEngName":"weex_vcard","cardGroup":"meCard","cardTypeAndOrder":[{"cardType":"myOtherCard","cardOrderNum":2}],"iconAttachmentCode":"","moduleId":50000140},{"cardCode":"dev_sdk10368_001","cardName":"东航优选","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"index.html\",\"appId\":\"sdk10368\",\"appKey\":\"10547ef3-e013-48c4-9edc-f6bb74ae4de1\",\"androidMinVersion\":\"\",\n\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10368/tmp_sdk10368_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003131807090499_IUdRFg2P.png","cardEngName":"dhyx","cardGroup":"happyNetHallCard","cardTypeAndOrder":[{"cardType":"staffServiceCard","cardOrderNum":4}],"iconAttachmentCode":"d337e039e5b14dcfb982f25231ede74b","moduleId":50000215},{"cardCode":"dev_aaama10047_001","cardName":"酒店预订","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"index.html\",\"appId\":\"aaama10047\",\"appKey\":\"b8a8c86c-29e7-46e9-9054-f1471d304411\",\"androidMinVersion\":\"\",\n\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-aaama10047/tmp_aaama10047_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003131807230090_41Kxdw08.png","cardEngName":"jdyd","cardGroup":"happyNetHallCard","cardTypeAndOrder":[{"cardType":"staffServiceCard","cardOrderNum":3}],"iconAttachmentCode":"f442b4e6f1c24811aa60193648f034df","moduleId":50000214},{"cardCode":"dev_sdk10010_001","cardName":"通讯录","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"index.html\",\"appId\":\"sdk10010\",\"appKey\":\"e876f8e3-f6cb-4471-b9db-b93f7dc12a8a\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10010/tmp_sdk10010_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091738470783_474lT43K.png","cardEngName":"txl","cardGroup":"meCard","cardTypeAndOrder":[{"cardType":"toolCard","cardOrderNum":4}],"iconAttachmentCode":"a99fb18f0d5149e5bc35b00022127f1d","moduleId":50000212},{"cardCode":"dev_sdk10330_014","cardName":"营销地图","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"yxdtindex.html\",\"appId\":\"sdk10330\",\"appKey\":\"29026b7f-7c8b-439c-8a51-0b5214859cda\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10330/tmp_sdk10330_0.zip\"}{\"appCategory\":\"AppCanWgt\",\"startPage\":\"yxdtindex.html\",\"appId\":\"sdk10330\",\"appKey\":\"29026b7f-7c8b-439c-8a51-0b5214859cda\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10330/tmp_sdk10330_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202002251814240254_4cQ8MgF1.png","cardEngName":"appcan_sales_yxdt","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"saleAllNavigationCard","cardOrderNum":3}],"iconAttachmentCode":"59dcbc828ece4869887f7dcedd41d027","moduleId":50000151},{"cardCode":"dev_sdk10330_013","cardName":"销售预警","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"xsyj/xsyj_a.html\",\"appId\":\"sdk10330\",\"appKey\":\"29026b7f-7c8b-439c-8a51-0b5214859cda\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10330/tmp_sdk10330_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202002251813140737_IT6V5681.png","cardEngName":"appcan_sales_xsyj","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"saleAllNavigationCard","cardOrderNum":4}],"iconAttachmentCode":"1818bde96d1847ebbb90ab65519734b3","moduleId":50000151},{"cardCode":"dev_sdk10330_012","cardName":"客户救援","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"kjjf/kjjf.html\",\"appId\":\"sdk10330\",\"appKey\":\"29026b7f-7c8b-439c-8a51-0b5214859cda\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10330/tmp_sdk10330_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202002251812150794_9X693S74.png","cardEngName":"appcan_sales_khjy","cardGroup":"sceneCard","cardTypeAndOrder":[],"iconAttachmentCode":"c165a8ebcecd4e10b8b4770fc34875e9","moduleId":50000151},{"cardCode":"dev_sdk10330_011","cardName":"客户分析","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"khfx/khfx.html\",\"appId\":\"sdk10330\",\"appKey\":\"29026b7f-7c8b-439c-8a51-0b5214859cda\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10330/tmp_sdk10330_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202002251811040508_06I50WYp.png","cardEngName":"appcan_sales_khfx","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"saleAllNavigationCard","cardOrderNum":5}],"iconAttachmentCode":"c43a64c304f248f6bdb933ac509cde61","moduleId":50000151},{"cardCode":"dev_sdk10330_010","cardName":"座控预警","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"zkyj/hbyj.html\",\"appId\":\"sdk10330\",\"appKey\":\"29026b7f-7c8b-439c-8a51-0b5214859cda\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10330/tmp_sdk10330_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202002251809570173_cH0p4FkQ.png","cardEngName":"appcan_sales_zkyj","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"saleAllNavigationCard","cardOrderNum":6}],"iconAttachmentCode":"eb5a25bae84449e3bef2c19ce6182d3b","moduleId":50000151},{"cardCode":"dev_sdk10330_009","cardName":"营销快报","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"ceaKB/ceaKB.html\",\"appId\":\"sdk10330\",\"appKey\":\"29026b7f-7c8b-439c-8a51-0b5214859cda\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10330/tmp_sdk10330_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202002251808350595_09504e03.png","cardEngName":"appcan_sales_ceakb","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"saleAllNavigationCard","cardOrderNum":7}],"iconAttachmentCode":"f3ff7beb35db4b0ca6b7d1ee28faec3a","moduleId":50000151},{"cardCode":"dev_sdk10330_007","cardName":"移动常旅客","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"clk/clk.html\",\"appId\":\"sdk10330\",\"appKey\":\"29026b7f-7c8b-439c-8a51-0b5214859cda\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10330/tmp_sdk10330_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202002251807130795_h33I8hWb.png","cardEngName":"appcan_sales_clk","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"saleAllNavigationCard","cardOrderNum":8}],"iconAttachmentCode":"cf919e2f2a1b44f7bd9742ba2939ebff","moduleId":50000151},{"cardCode":"dev_sdk10330_006","cardName":"实施销售额","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"yxstq\",\"appId\":\"sdk10330\",\"appKey\":\"29026b7f-7c8b-439c-8a51-0b5214859cda\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10330/tmp_sdk10330_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202002251806080507_6TT42U2F.png","cardEngName":"appcan_sales_yxstq","cardGroup":"sceneCard","cardTypeAndOrder":[],"iconAttachmentCode":"0a2dd3186ff74ec7b17e9ba8112b7892","moduleId":50000151},{"cardCode":"dev_sdk10330_005","cardName":"票据扫描","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"piaojusaomiao_home.html\",\"appId\":\"sdk10330\",\"appKey\":\"29026b7f-7c8b-439c-8a51-0b5214859cda\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10330/tmp_sdk10330_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202002251805020952_zYsb5HCQ.png","cardEngName":"appcan_sales_pjsm","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"saleAllNavigationCard","cardOrderNum":9}],"iconAttachmentCode":"40d836f5f34e4600b9c17bf83a7c9005","moduleId":50000151},{"cardCode":"dev_sdk10330_004","cardName":"代理授权","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"dlrsq\",\"appId\":\"sdk10330\",\"appKey\":\"29026b7f-7c8b-439c-8a51-0b5214859cda\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10330/tmp_sdk10330_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202002251803580840_f1j41lF3.png","cardEngName":"appcan_sales_dlsq","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"saleAllNavigationCard","cardOrderNum":10}],"iconAttachmentCode":"1466ba0722394afc80a80a366254024e","moduleId":50000151},{"cardCode":"dev_sdk10330_003","cardName":"风控工单","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"fkgl\",\"appId\":\"sdk10330\",\"appKey\":\"29026b7f-7c8b-439c-8a51-0b5214859cda\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10330/tmp_sdk10330_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202002251802480039_6qE5249G.png","cardEngName":"appcan_sales_fkgd","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"saleAllNavigationCard","cardOrderNum":11}],"iconAttachmentCode":"9f23bc82d1d0439a96b1000e7a5f6a25","moduleId":50000151},{"cardCode":"dev_sdk10330_002","cardName":"座席排班","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"zxpb\",\"appId\":\"sdk10330\",\"appKey\":\"29026b7f-7c8b-439c-8a51-0b5214859cda\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-sdk10330/tmp_sdk10330_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202002251801390777_n9108O7X.png","cardEngName":"appcan_sales_zxpb","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"saleAllNavigationCard","cardOrderNum":12}],"iconAttachmentCode":"10b22cedc56048469b2e2b17605ef22e","moduleId":50000151},{"cardCode":"weex_sales_scanBill","cardName":"票据扫描","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_sales_scanBill/pages/index/entry.js\",\"appId\":\"weex_sales_scanBill\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202002211622160828_59H7u047.png","cardEngName":"weex_sales_scanBill","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"saleAllNavigationCard","cardOrderNum":13}],"iconAttachmentCode":"8b77a062fd5245a7886de0d8beb39fc8","moduleId":50000195},{"cardCode":"dev_11219621_020","cardName":"航班动态-跳转","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"html/flySearch_win.html\",\"appId\":\"11219621_20\",\"appKey\":\"4bee1314-6109-4606-a3ac-bb5f569218d4\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"buttonName\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-11219621_020/tmp_11219621_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003021008210216_Z1LQ7716.png","cardEngName":"tz","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"aocAllNavigationCard","cardOrderNum":9},{"cardOrderNum":0,"cardType":"topCard"}],"iconAttachmentCode":"00e002e7e28545528929c26a6973b31a","moduleId":50000183},{"cardCode":"dev_weex_aoc_002","cardName":"进出港屏","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_aoc_entrance_exit_screen/pages/flight/navigation/entry.js\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003021005470120_9C7WvL5E.png","cardEngName":"jcgp","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"aocAllNavigationCard","cardOrderNum":10}],"iconAttachmentCode":"277402ae95c640d793180887b8495462","moduleId":50000176},{"cardCode":"dev_weex_mis_party_307","cardName":"知识竞赛","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":true}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091816530440_79od2HEN.png","cardEngName":"KnowledgeContest","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyMemberCard","cardOrderNum":6}],"iconAttachmentCode":"94e63644a27a4680a0e95f7914da554d","moduleId":50000173},{"cardCode":"dev_weex_mis_party_306","cardName":"发展党员","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","cardEngName":"DevelopingPartyMembers","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyMemberCard","cardOrderNum":7}],"iconAttachmentCode":"","moduleId":50000173},{"cardCode":"dev_weex_mis_party_305","cardName":"党员积分","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_party/pages/dyzy/dyjf/entry.js.\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":true}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091813250320_CHGq35P1.png","cardEngName":"PartyMemberPoints","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyMemberCard","cardOrderNum":2}],"iconAttachmentCode":"b0ae00a8be1348a78759612d877e790e","moduleId":50000173},{"cardCode":"dev_weex_mis_party_304","cardName":"党费缴纳","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_party/pages/dyzy/dfjn/entry.js\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":true}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091812210804_Q9g44n50.png","cardEngName":"CollectionOfPartyFees","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyMemberCard","cardOrderNum":1}],"iconAttachmentCode":"242987d7a7ea4394a96e72f6a8d0061c","moduleId":50000173},{"cardCode":"dev_weex_mis_party_303","cardName":"三会记录","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_party/pages/dyzy/shjl/entry.js\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091812040059_AsT30LE6.png","cardEngName":"ThreeMeetingNotes","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyMemberCard","cardOrderNum":3}],"iconAttachmentCode":"25527b61f03b488891685ad0f7427d73","moduleId":50000173},{"cardCode":"dev_weex_mis_party_302","cardName":"个人学习","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_party/pages/dyzy/grxx/entry.js\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091811500555_NKX149XQ.png","cardEngName":"PersonalLearning","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyMemberCard","cardOrderNum":4}],"iconAttachmentCode":"503ed02dedd449ad836b1304d6ff4f7e","moduleId":50000173},{"cardCode":"dev_weex_mis_party_301","cardName":"个人信息","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_party/pages/dyzy/personInfo/entry.js\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091811410875_OK9of8oY.png","cardEngName":"PersonalInformation","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyMemberCard","cardOrderNum":5}],"iconAttachmentCode":"882ec69c3c5b4becaa96ea174a6646b6","moduleId":50000173},{"cardCode":"dev_weex_mis_party_209","cardName":"发展党员","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","remark":"没有图标没有ui","cardEngName":"DevelopingPartyMembers","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyOrganizationCard","cardOrderNum":7}],"iconAttachmentCode":"","moduleId":50000173},{"cardCode":"dev_weex_mis_party_208","cardName":"专项任务","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091811180909_u9797n07.png","cardEngName":"SpecialTask","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyOrganizationCard","cardOrderNum":8}],"iconAttachmentCode":"56b35ce10eb54ff696d4447b3795d385","moduleId":50000173},{"cardCode":"dev_weex_mis_party_207","cardName":"党支部积分","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_party/pages/dzzzy/dzbjf/index/entry.js\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091810410172_3Y6471Q0.png","cardEngName":"PartyBranchPoints","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyOrganizationCard","cardOrderNum":1}],"iconAttachmentCode":"7bd61b8cc5a64e83afabcbbaf66ca0be","moduleId":50000173},{"cardCode":"dev_weex_mis_party_206","cardName":"党委会纪要","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_party/pages/dzzzy/dwhjy/entry.js\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091810300261_P8a3Oz4p.png","cardEngName":"MinutesOfThePartyCommittee","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyOrganizationCard","cardOrderNum":2}],"iconAttachmentCode":"85d47ff4528c40c9be2e10cce9920297","moduleId":50000173},{"cardCode":"dev_weex_mis_party_205","cardName":"维稳信息报送","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091810040095_14ar3w5l.png","cardEngName":"StabilityMaintenanceInformationSubmission","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyOrganizationCard","cardOrderNum":9}],"iconAttachmentCode":"a486775be65b41d5a50840536cf54983","moduleId":50000173},{"cardCode":"dev_weex_mis_party_204","cardName":"党费收缴","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_party/pages/dzzzy/dfsj/index/entry.js\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091809260409_2YrR2u60.png","cardEngName":"CollectionOfPartyFees","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyOrganizationCard","cardOrderNum":3}],"iconAttachmentCode":"0a6759b85eb746759883c09b11ab5d6e","moduleId":50000173},{"cardCode":"dev_weex_mis_party_203","cardName":"三会一课记录","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_party/pages/dzzzy/shykjl/index/entry.js\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091703250136_T6067l12.png","cardEngName":"RecordOfThreeMeetingsAndOneLesson","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyOrganizationCard","cardOrderNum":4}],"iconAttachmentCode":"b4403efade75454a82ad74a12308215e","moduleId":50000173},{"cardCode":"dev_weex_mis_party_202","cardName":"党员信息","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_party/pages/dzzzy/dyxx/index/entry.js\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091657060670_9jF747Tg.png","cardEngName":"partyMemberInfo","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyOrganizationCard","cardOrderNum":5}],"iconAttachmentCode":"1af547451e1a4ffeb765e814e907f5fc","moduleId":50000173},{"cardCode":"dev_weex_mis_party_201","cardName":"组织信息","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_party/pages/dzzzy/zzxx/index/entry.js\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003091809430374_35816R53.png","cardEngName":"OrganizationInfo","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyOrganizationCard","cardOrderNum":6}],"iconAttachmentCode":"e593c5f6e5c64935ae8ac3af7edbaa90","moduleId":50000173},{"cardCode":"dev_weex_mis_party_102","cardName":"党群文件","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","cardEngName":"partyFile","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyBuildHomePageCard","cardOrderNum":1}],"iconAttachmentCode":"","moduleId":50000173},{"cardCode":"dev_weex_mis_party_101","cardName":"中央精神","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"\",\"appId\":\"weex_mis_party\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","cardEngName":"centreSpirit","cardGroup":"partyBuildCard","cardTypeAndOrder":[{"cardType":"partyBuildHomePageCard","cardOrderNum":2}],"iconAttachmentCode":"","moduleId":50000173},{"cardCode":"dev_weex_mis_oneCard_211","cardName":"会议","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_oneCard/pages/ykt/meeting/myMeeting/entry.js\",\"appId\":\"weex_mis_oneCard\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003251706040530_RD9Uu3Q4.png","cardEngName":"Meeting","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":7}],"iconAttachmentCode":"a230fd795f4541d1a663c40398f09cb4","moduleId":50000174},{"cardCode":"dev_weex_mis_oneCard_210","cardName":"智能工位","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_oneCard/pages/ykt/station/home/entry.js\",\"appId\":\"weex_mis_oneCard\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003251705540597_4CI5pfd8.png","cardEngName":"IntelligentWorkstation","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":8}],"iconAttachmentCode":"c55d2513e521496899d2dea17e4f064b","moduleId":50000174},{"cardCode":"dev_weex_mis_oneCard_209","cardName":"智能文印","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_oneCard/pages/ykt/printing/home/entry.js\",\"appId\":\"weex_mis_oneCard\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003251705110652_oo811oOo.png","cardEngName":"IntelligentPrinting","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":9}],"iconAttachmentCode":"37d72f4e85fd4c84bd625b98b82463bb","moduleId":50000174},{"cardCode":"dev_weex_mis_oneCard_208","cardName":"访客","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_oneCard/pages/visitor/home/entry.js\",\"appId\":\"weex_mis_oneCard\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003251704470644_2bbpC33U.png","cardEngName":"Visitor","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":12}],"iconAttachmentCode":"cc4c36985e6549a29754c5244237bab2","moduleId":50000174},{"cardCode":"dev_weex_mis_oneCard_206","cardName":"物业报修","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_oneCard/pages/ykt/property/propertyManager/entry.js\",\"appId\":\"weex_mis_oneCard\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003251704340430_CF8R7ej0.png","cardEngName":"PropertyRepair","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":11}],"iconAttachmentCode":"bd9c4bb29f5947c5806ec0e876a5c185","moduleId":50000174},{"cardCode":"dev_weex_mis_oneCard_205","cardName":"员工钱包","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_oneCard/pages/Dwallet/home/entry.js\",\"appId\":\"weex_mis_oneCard\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003251659330752_nv0CQU2f.png","cardEngName":"EmployeeWallet","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":10}],"iconAttachmentCode":"eba510dcda2240b09b3a5ef92b150a17","moduleId":50000174},{"cardCode":"dev_weex_mis_oneCard_203","cardName":"充值","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_oneCard/pages/Dwallet/recharge/entry.js\",\"appId\":\"weex_mis_oneCard\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,'destination':\"goToRecharge\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003251659150060_0w00Ud17.png","cardEngName":"Recharge","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":2}],"iconAttachmentCode":"a642a16639c04d1fbe708a8e4bc73f87","moduleId":50000174},{"cardCode":"dev_weex_mis_oneCard_207","cardName":"门禁","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_oneCard/pages/ykt/door/doorControl/entry.js\",\"appId\":\"weex_mis_oneCard\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003251658120083_4SR2Uy17.png","cardEngName":"AccessControl","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":4},{"cardOrderNum":1,"cardType":"topCard"}],"iconAttachmentCode":"52835c2e77f64f138867e4fe4d6341b1","moduleId":50000174},{"cardCode":"dev_weex_mis_oneCard_204","cardName":"申请车位","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_oneCard/pages/park/home/entry.js\",\"appId\":\"weex_mis_oneCard\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":true}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003251656340225_3439M66z.png","cardEngName":"ApplicationForParkingSpace","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":5},{"cardType":"toolCard","cardOrderNum":2}],"iconAttachmentCode":"017345f4fa064a7a97888566210045ee","moduleId":50000174},{"cardCode":"dev_weex_mis_oneCard_202","cardName":"支付","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_oneCard/pages/Dwallet/payment/entry.js\",\"appId\":\"weex_mis_oneCard\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":true,'destination':\"goToPay\"}","cardEngName":"pay","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":3},{"cardType":"toolCard","cardOrderNum":1}],"iconAttachmentCode":"","moduleId":50000174},{"cardCode":"dev_weex_mis_oneCard_201","cardName":"考勤","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_oneCard/pages/kaoqin/home/entry.js\",\"appId\":\"weex_mis_oneCard\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showFlagEndDate\":\"\",\"isFix\":true}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003251650350232_2VS03698.png","cardEngName":"checkWork","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":6},{"cardType":"toolCard","cardOrderNum":3},{"cardOrderNum":2,"cardType":"topCard"}],"iconAttachmentCode":"0f11d865b77a49e0a2e029ace698bcb2","moduleId":50000174},{"cardCode":"dev_weex_mis_oneCard","cardName":"一卡通_new","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_mis_oneCard/pages/index/entry.js\",\"appId\":\"weex_mis_oneCard\",\"appKey\":\"\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202001131849500482_r0956G8R.png","cardEngName":"weex_mis_oneCard","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":13}],"iconAttachmentCode":"b4071d49fac54fe09d51448955803f7a","moduleId":50000174},{"cardCode":"dev_weex_ground_007","cardName":"投诉处理","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_ground_complaint/pages/complainList/entry.js\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003131433320848_64c0jGQ4.png","cardEngName":"weex_ground_complaint","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"groundAllNavigationCard","cardOrderNum":11}],"iconAttachmentCode":"c7a9b0e2be894d25ac82855a57bac52d","moduleId":50000162},{"cardCode":"dev_weex_aoc_009","cardName":"应急响应","cardJson":"2222","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202004042109140846_03ruBM8u.png","cardEngName":"yjxy","cardGroup":"sceneCard","cardTypeAndOrder":[],"iconAttachmentCode":"e3bfdb7a2ace41bc9e64d9dadf253840","moduleId":50000148},{"cardCode":"dev_weex_aoc_010","cardName":"航站概况","cardJson":"333","cardEngName":"hzgk","cardGroup":"sceneCard","cardTypeAndOrder":[],"iconAttachmentCode":"","moduleId":50000148},{"cardCode":"dev_weex_aoc_008","cardName":"运行概况","cardJson":"1111","cardEngName":"yxgk","cardGroup":"sceneCard","cardTypeAndOrder":[],"iconAttachmentCode":"","moduleId":50000148},{"cardCode":"dev_11219621_011","cardName":"航班动态","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"html/flySearch_win.html\",\"appId\":\"11219621\",\"appKey\":\"4bee1314-6109-4606-a3ac-bb5f569218d4\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"buttonName\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-11219621/tmp_11219621_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202001031515090327_88030V62.png","cardEngName":"flightAction","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"aocAllNavigationCard","cardOrderNum":1}],"iconAttachmentCode":"20012625cb7d460fb3f4e0f4d0178992","moduleId":50000148},{"cardCode":"dev_11219621","cardName":"运行手册","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"html/operationBook_win.html\",\"appId\":\"11219621\",\"appKey\":\"4bee1314-6109-4606-a3ac-bb5f569218d4\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"buttonName\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-11219621/tmp_11219621_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202001031522500393_mn2s143j.png","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"aocAllNavigationCard","cardOrderNum":11}],"iconAttachmentCode":"54128f040f8d41e98130386a590f1aa5","moduleId":50000148},{"cardCode":"dev_weex_ground_016","cardName":"个人绩效","cardJson":"1111","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202004042128160777_15410849.png","cardEngName":"grjx","cardGroup":"sceneCard","cardTypeAndOrder":[],"iconAttachmentCode":"c6c41047e826454c830aed66c61727ac","moduleId":50000136},{"cardCode":"dev_weex_ground_003","cardName":"联盟权益场景卡片","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_ground_card_TeamEquity/pages/index/entry.js\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"\"}","cardEngName":"lmqy","cardGroup":"sceneCard","cardTypeAndOrder":[],"iconAttachmentCode":"","moduleId":50000136},{"cardCode":"dev_weex_ground_002","cardName":"联盟权益","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_ground_card_TeamEquity/pages/index/entry.js\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003121422280696_881a2SX6.png","cardEngName":"weex_ground_card_TeamEquity","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"groundAllNavigationCard","cardOrderNum":14}],"iconAttachmentCode":"5bdebb7244554458a15c4d93777eb083","moduleId":50000136},{"cardCode":"test001","cardName":"test001","cardJson":"test001","cardEngName":"test001","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"aocAllNavigationCard","cardOrderNum":12}],"iconAttachmentCode":"","moduleId":50000136},{"cardCode":"dev_weex_aoc_001","cardName":"航班动态-新","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_aoc/pages/flight/flySearch/entry.js\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/201912190934310249_1043330M.png","cardEngName":"hbdt","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"aocAllNavigationCard","cardOrderNum":2},{"cardType":"retireAllNavigationCard","cardOrderNum":1},{"cardOrderNum":0,"cardType":"recentUsedCard"}],"iconAttachmentCode":"32450cc5da1c424ab10e2d0b53aa8d78","moduleId":50000127},{"cardCode":"dev_weex_ground_001","cardName":"电子票证袋","cardJson":"{\"appCategory\":\"Weex\",\"startPage\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-weex_ground_eticket/pages/index/entry.js\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202003131435450007_5dIF2bn1.png","cardEngName":"weex_ground_eticket","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"groundAllNavigationCard","cardOrderNum":10}],"iconAttachmentCode":"38404bf3f430440fac14de8eb2b1031b","moduleId":50000124},{"cardCode":"dev_10000037_001","cardName":"名片识别","cardJson":"{\"appCategory\":\"App\",\"startPage\":\"\",\"appId\":\"10000037\",\"appKey\":\"4bee1314-6109-4606-a3ac-bb5f569218d4\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"buttonName\":\"\",\"isFix\":false,\"pkgUrl\":\"\",\"iOSPkgUrl\":\"itms-services://?action=download-manifest&url=https://apps.ceair.com/uploadsstore/plist/20190527/112341/10000037.plist\",\"androidPkgUrl\":\"https://apps.ceair.com/uploadsstore/pkgFiles/000195_1577094226412.apk\",\"androidEntry\":\"com.example.airrecognizedemo\",\"iOSEntry\":\"MingPian://\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/201912231822540786_a3vX6CY6.png","cardGroup":"meCard","cardTypeAndOrder":[{"cardType":"toolCard","cardOrderNum":5}],"iconAttachmentCode":"d1634f24434b4eb18c87f0ecb06c3cfe","moduleId":50000133},{"cardCode":"dev_aaama10163_001","cardName":"东航云盘","cardJson":"{\"appCategory\":\"App\",\"startPage\":\"amu0g3wkhbet94://\",\"appId\":\"aaama10163\",\"appKey\":\"4bee1314-6109-4606-a3ac-bb5f569218d4\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"buttonName\":\"\",\"isFix\":false,\"pkgUrl\":\"\",\"iOSPkgUrl\":\"itms-services://?action=download-manifest&url=https://apps.ceair.com/uploadsstore/plist/20190524/202745/aaama10163.plist\",\"androidPkgUrl\":\"https://apps.ceair.com/uploadsstore/pkgFiles/000304_1558700907177.apk\",\"androidEntry\":\"com.eisoo.anyshare\",\"iOSEntry\":\"amu0g3wkhbet94://\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/201912231647220948_p63uJR27.png","cardGroup":"meCard","cardTypeAndOrder":[{"cardType":"toolCard","cardOrderNum":7}],"iconAttachmentCode":"40c4f3b8f08846e1bc9f22b12faf12d1","moduleId":50000132},{"cardCode":"dev_aaama10164_001","cardName":"云视频","cardJson":"{\"appCategory\":\"App\",\"startPage\":\"vidyomobile\",\"appId\":\"aaama10164\",\"appKey\":\"4bee1314-6109-4606-a3ac-bb5f569218d4\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"buttonName\":\"\",\"isFix\":false,\"pkgUrl\":\"\",\"iOSPkgUrl\":\"itms-services://?action=download-manifest&url=https://apps.ceair.com/uploadsstore/plist/20190627/175039/aaama10164.plist\",\"androidPkgUrl\":\" https://apps.ceair.com/uploadsstore/pkgFiles/000419_1561629050288.apk\",\"androidEntry\":\"com.njcb.internal\",\"iOSEntry\":\"vidyomobile://\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/201912231646550370_T62FC996.png","cardGroup":"meCard","cardTypeAndOrder":[{"cardType":"toolCard","cardOrderNum":8}],"iconAttachmentCode":"e3a2ceef8c144c0aaa7968fd03e941ce","moduleId":50000131},{"cardCode":"dev_16_001","cardName":"合理化建议","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"\",\"appId\":\"16\",\"appKey\":\"f0bd74d7-7097-4967-b65a-fda92f389d19\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-test/tmp_16_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/201912231823190332_5T22mE8Z.png","cardGroup":"meCard","cardTypeAndOrder":[{"cardType":"toolCard","cardOrderNum":6}],"iconAttachmentCode":"543eb1a989764998b5c6f5b50b5c4ba1","moduleId":50000129},{"cardCode":"dev_aaama10087_006","cardName":"去充值","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"goToRecharge.html\",\"appId\":\"aaama10087\",\"appKey\":\"baa55dc6-63b1-4ef7-9c3e-e8b282f3750e\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-aaama10087/tmp_aaama10087_0.zip\"}","cardEngName":"quchongzhi","cardGroup":"meCard","cardTypeAndOrder":[{"cardType":"walletCard","cardOrderNum":1}],"iconAttachmentCode":"","moduleId":50000126},{"cardCode":"dev_aaama10087_005","cardName":"去支付","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"goToPay.html\",\"appId\":\"aaama10087\",\"appKey\":\"baa55dc6-63b1-4ef7-9c3e-e8b282f3750e\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-aaama10087/tmp_aaama10087_0.zip\"}","cardEngName":"quzhifu","cardGroup":"meCard","cardTypeAndOrder":[{"cardType":"walletCard","cardOrderNum":2}],"iconAttachmentCode":"","moduleId":50000126},{"cardCode":"dev_aaama10087_004","cardName":"东航钱包首页","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"VCManagement2.html\",\"appId\":\"aaama10087\",\"appKey\":\"baa55dc6-63b1-4ef7-9c3e-e8b282f3750e\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-aaama10087/tmp_aaama10087_0.zip\"}","cardEngName":"donghangqianbao","cardGroup":"meCard","cardTypeAndOrder":[{"cardType":"walletCard","cardOrderNum":3}],"iconAttachmentCode":"","moduleId":50000126},{"cardCode":"dev_aaama10087_002","cardName":"考勤场景卡片","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"mobileChecking.html\",\"appId\":\"aaama10087\",\"appKey\":\"2d33dace-8057-4167-9fd0-0b428e4ab385\",\"showTime\":[\"08:00-12:30\",\"14:30-20:00\"],\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-aaama10087/tmp_aaama10087_0.zip\",\"cardCnDesc\":\"考勤考勤\",\"cardEnDesc\":\"check on work attendance\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202004042056030509_xVuGZ9p5.png","cardEngName":"attence","cardGroup":"sceneCard","cardTypeAndOrder":[{"cardType":"allSceneCard","cardOrderNum":2},{"cardOrderNum":1,"cardType":"showSceneCard"}],"iconAttachmentCode":"136291e030a24c3c905755c9b637b4d2","moduleId":50000126},{"cardCode":"dev_aaama10087_007","cardName":"东航钱包","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"goToRecharge.html\",\"appId\":\"aaama10087\",\"appKey\":\"baa55dc6-63b1-4ef7-9c3e-e8b282f3750e\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-aaama10087/tmp_aaama10087_0.zip\",\"cardCnDesc\":\"自己的钱包\",\"cardEnDesc\":\"\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/202004042057370625_gS79xl64.png","cardEngName":"mu_wallet","cardGroup":"sceneCard","cardTypeAndOrder":[{"cardType":"allSceneCard","cardOrderNum":1},{"cardOrderNum":0,"cardType":"showSceneCard"}],"iconAttachmentCode":"d20df4ef7e5e4aef8664a220d2c77429","moduleId":50000126},{"cardCode":"dev_sdk10018_006","cardName":"阅知信息","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"yuezhi_content.html\",\"appId\":\"sdk10018\",\"appKey\":\"8b1ca16e-f2da-4d31-94ee-becddcc69c10\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":\"\",\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-ydbg/tmp_sdk10018_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/201912171841130054_vMeO6442.png","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":14}],"iconAttachmentCode":"462e718676314f9a8cc7d43ae32aa587","moduleId":50000125},{"cardCode":"dev_sdk10018_008","cardName":"部室内部件","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"http://bte.ceair.com/AOCCOM/BSNBWJList\",\"appId\":\"sdk10018\",\"appKey\":\"8b1ca16e-f2da-4d31-94ee-becddcc69c10\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-ydbg/tmp_sdk10018_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/201912171841030385_lNNv5r5K.png","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":15}],"iconAttachmentCode":"57cf1932496e4384ba5b0150a18f8f25","moduleId":50000125},{"cardCode":"dev_sdk10018_007","cardName":"请销假","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"http://bte.ceair.com/home/BMTZ?redirect=1\",\"appId\":\"sdk10018\",\"appKey\":\"8b1ca16e-f2da-4d31-94ee-becddcc69c10\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-ydbg/tmp_sdk10018_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/201912171840540422_wP4v5835.png","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":16}],"iconAttachmentCode":"07715b26cedf45b0986802b51355320e","moduleId":50000125},{"cardCode":"dev_sdk10018_005","cardName":"公司文件","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"http://bte.ceair.com/sl/mumobiletasklist?code=GSWJ\",\"appId\":\"sdk10018\",\"appKey\":\"8b1ca16e-f2da-4d31-94ee-becddcc69c10\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-ydbg/tmp_sdk10018_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/201912171840440040_3BB1b461.png","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":17}],"iconAttachmentCode":"d44213cd7f5f4b518a697eb4e713ac46","moduleId":50000125},{"cardCode":"dev_sdk10018_004","cardName":"会议通知","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"http://bte.ceair.com/sl/mumobiletasklist?code=HYTZ\",\"appId\":\"sdk10018\",\"appKey\":\"8b1ca16e-f2da-4d31-94ee-becddcc69c10\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-ydbg/tmp_sdk10018_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/201912171840360171_ck2FTx0i.png","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":18}],"iconAttachmentCode":"18c378a612ab4504959cf397b228bb7d","moduleId":50000125},{"cardCode":"dev_sdk10018_002","cardName":"移动办公","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"http://bte.ceair.com/home/main\",\"appId\":\"sdk10018\",\"appKey\":\"8b1ca16e-f2da-4d31-94ee-becddcc69c10\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-ydbg/tmp_sdk10018_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/201912171840260484_387D079z.png","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":19}],"iconAttachmentCode":"cd5547e981d84f228052a5a92ffd5e2c","moduleId":50000125},{"cardCode":"dev_sdk10018_003","cardName":"我的待办","cardJson":"{\"appCategory\":\"AppCanWgt\",\"startPage\":\"http://bte.ceair.com/home/index?loginUserID=${username}\",\"appId\":\"sdk10018\",\"appKey\":\"8b1ca16e-f2da-4d31-94ee-becddcc69c10\",\"androidMinVersion\":\"\",\"iOSMinVersion\":\"\",\"showTime\":[],\"showFlagEndDate\":\"\",\"isFix\":false,\"pkgUrl\":\"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_DEV-ydbg/tmp_sdk10018_0.zip\"}","iconUrl":"https://emas-mobile-uat.ceair.com/ceair-emas-cdn/image/201912171840150451_68636J44.png","cardGroup":"navigationCard","cardTypeAndOrder":[{"cardType":"misAllNavigationCard","cardOrderNum":20},{"cardOrderNum":1,"cardType":"recentUsedCard"}],"iconAttachmentCode":"308e4046c3224d12ab04502d78c90685","moduleId":50000125}]}

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: your name
 * @Date: 1985-10-26 16:15:00
 * @LastEditTime: 2022-10-23 18:29:31
 * @LastEditors: wangjie59 wangjie59@ceair.com
 * @Description: In User Settings Edit
 * @FilePath: /mu-hybrid/mu-hybrid/mu_cards/pc.js
 */
/**
 * <!-- ©Copyright 2018 China Eastern Airlines. All rights reserved. -->
 * <!-- Created by xiaoyang<xuyang28@ceair.com> on 2019-10-30 -->
 */

var MUMobile = {
  /**
   * 获取所有卡片
   */
  getCards: function getCards() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      window.NativeApi.muHybridService.getCards(option).then(function (data) {
        resolve(data);
      }).catch(function (err) {
        reject(err);
      });
    });
    return p;
  },

  /**
   * 获取所有卡片
   */
  queryCards: function queryCards() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      window.NativeApi.muHybridService.queryCards(option).then(function (data) {
        resolve(data);
      }).catch(function (err) {
        reject(err);
      });
    });
    return p;
  },

  /**
   * 打开卡片
   */
  openCard: function openCard(option) {
    var p = new Promise(function (resolve, reject) {
      try {
        window.NativeApi.muHybridService.openCard(option, {}).then(function (result) {
          resolve(result);
        }).catch(function (err) {
          reject(err);
        });
      } catch (error) {
        var err = {
          status: -1,
          message: error.message,
          data: {}
        };
        reject(err);
      }
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUCascadingMenu = {
  open: function open() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUCascadingMenu', 'open', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  close: function close() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUCascadingMenu', 'close', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
}; /*
    * @Author: lee9527
    * @Date: 2021-10-13 11:29:47
    * @LastEditors: xiaoyang
    * @LastEditTime: 2023-02-07 16:09:35
    * @Description:
    * @FilePath: /mu-hybrid/mu-hybrid/mu_cascadingMenu/index.js
    * @version: 1.0.0
    */
exports.default = MUCascadingMenu;

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(52).default;

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(164)
}
var Component = __webpack_require__(7)(
  /* script */
  __webpack_require__(166),
  /* template */
  __webpack_require__(189),
  /* styles */
  injectStyle,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)
Component.options.__file = "/data/gitlab-runner/builds/bxZ2z3qA/0/muit-mobile/Hybrid/hybrid-components/mu-hybrid/mu-hybrid/mu_cascading_menu/index.vue"
if (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== "default" && key.substr(0, 2) !== "__"})) {console.error("named exports are not supported in *.vue files.")}
if (Component.options.functional) {console.error("[vue-loader] index.vue: functional components are not supported with templates, they should use render functions.")}

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-684e682d", Component.options)
  } else {
    hotAPI.reload("data-v-684e682d", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(165);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(11)("129ded70", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-684e682d\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue", function() {
     var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-684e682d\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Cascader = __webpack_require__(167);

var _Cascader2 = _interopRequireDefault(_Cascader);

var _Popup = __webpack_require__(187);

var _Popup2 = _interopRequireDefault(_Popup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } //
//
//
//
//
//
//
//

exports.default = {
  name: 'MuCascadingMenu',
  components: {
    Cascader: _Cascader2.default,
    Popup: _Popup2.default
  },
  data: function data() {
    return {
      cascaderValue: '',
      title: '',
      CascaderProps: {},
      show: false,
      options: []
    };
  },
  updated: function updated() {
    var _$el$classList;

    var className = (this.$el.className || '').match(/[^\s]*weex[^\s]*/g);
    className && (_$el$classList = this.$el.classList).remove.apply(_$el$classList, _toConsumableArray(className));
  },

  methods: {
    toggle: function toggle(visible) {
      this.show = !!visible;
    },
    onClose: function onClose() {
      this.show = false;
    },
    onFinish: function onFinish(_ref) {
      var selectedOptions = _ref.selectedOptions;

      this.show = false;
      this.callback({
        result: selectedOptions
      });
    }
  }
};

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var Component = __webpack_require__(7)(
  /* script */
  __webpack_require__(168),
  /* template */
  null,
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)
Component.options.__file = "/data/gitlab-runner/builds/bxZ2z3qA/0/muit-mobile/Hybrid/hybrid-components/mu-hybrid/mu-hybrid/mu_cascading_menu/Cascader.vue"
if (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== "default" && key.substr(0, 2) !== "__"})) {console.error("named exports are not supported in *.vue files.")}

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6627c753", Component.options)
  } else {
    hotAPI.reload("data-v-6627c753", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

__webpack_require__(169);

var _cascader = __webpack_require__(178);

var _cascader2 = _interopRequireDefault(_cascader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//

exports.default = {
  extends: _cascader2.default,
  props: {},
  computed: {}
};

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(12);
__webpack_require__(17);
__webpack_require__(18);
__webpack_require__(170);
__webpack_require__(172);
__webpack_require__(174);
__webpack_require__(176);

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(171);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-tab__pane,.van-tab__pane-wrapper{-webkit-flex-shrink:0;flex-shrink:0;box-sizing:border-box;width:100%}.van-tab__pane-wrapper--inactive{height:0;overflow:visible}", ""]);

// exports


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(173);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-sticky--fixed{position:fixed;top:0;right:0;left:0;z-index:99}", ""]);

// exports


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(175);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-tab{position:relative;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-flex:1;-webkit-flex:1;flex:1;-webkit-box-align:center;-webkit-align-items:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;justify-content:center;box-sizing:border-box;padding:0 16px;color:#646566;font-size:15px;line-height:20px;cursor:pointer}.van-tab--active{color:#323233;font-weight:500}.van-tab--disabled{color:#c8c9cc;cursor:not-allowed}.van-tab--justify{-webkit-box-flex:0;-webkit-flex:0 0 auto;flex:0 0 auto;padding:0 16px}.van-tab__text--ellipsis{display:-webkit-box;overflow:hidden;-webkit-line-clamp:1;-webkit-box-orient:vertical}.van-tab__text-wrapper{position:relative}.van-tabs{position:relative}.van-tabs__wrap{overflow:hidden;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row}.van-tabs__wrap--page-top{position:fixed}.van-tabs__wrap--content-bottom{top:auto;bottom:0}.van-tabs__wrap--scrollable .van-tab{-webkit-box-flex:1;-webkit-flex:1 0 auto;flex:1 0 auto;padding:0 16px}.van-tabs__wrap--scrollable .van-tabs__nav{overflow-x:auto;overflow-y:hidden;-webkit-overflow-scrolling:touch}.van-tabs__wrap--scrollable .van-tabs__nav::-webkit-scrollbar{display:none}.van-tabs__module-div{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:center;-webkit-align-items:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;justify-content:center;background-color:#fff}.van-tabs__nav{-webkit-box-flex:1;-webkit-flex:1;flex:1;position:relative;display:-webkit-box;display:-webkit-flex;display:flex;background-color:#fff;-webkit-user-select:none;user-select:none}.van-tabs__nav--line{box-sizing:content-box;height:100%;padding:12px 0}.van-tabs__nav--complete{padding-right:12px;padding-left:12px}.van-tabs__nav--card{box-sizing:border-box;height:30px;margin:0 16px;border:1px solid #2a5290;border-radius:2px}.van-tabs__nav--card .van-tab{color:#2a5290;border-right:1px solid #2a5290}.van-tabs__nav--card .van-tab:last-child{border-right:none}.van-tabs__nav--card .van-tab.van-tab--active{color:#fff;background-color:#2a5290}.van-tabs__nav--card .van-tab--disabled{color:#c8c9cc}.van-tabs__line{position:absolute;bottom:0;left:0;z-index:1;width:40px;height:3px;background-color:#2a5290;border-radius:3px}.van-tabs__track{position:relative;display:-webkit-box;display:-webkit-flex;display:flex;width:100%;height:100%;will-change:left}.van-tabs__content--animated{overflow:hidden}.van-tabs--card>.van-tabs__wrap{height:30px}", ""]);

// exports


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(177);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-cascader__header{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:center;-webkit-align-items:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;height:48px;padding:0 16px}.van-cascader__title{font-weight:500;font-size:17px;line-height:20px}.van-cascader__close-icon{color:#c8c9cc;font-size:22px}.van-cascader__close-icon:active{color:#969799}.van-cascader__tabs .van-tab{-webkit-box-flex:0;-webkit-flex:none;flex:none;padding:0 10px}.van-cascader__tabs.van-tabs--line .van-tabs__wrap{height:48px}.van-cascader__tabs .van-tabs__nav--complete{padding-right:6px;padding-left:6px}.van-cascader__tab{color:#323233;font-weight:500}.van-cascader__tab--unselected{color:#969799;font-weight:400}.van-cascader__option{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:center;-webkit-align-items:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;padding:10px 16px;font-size:15px;line-height:20px}.van-cascader__option:active{background-color:#f2f3f5}.van-cascader__option--selected{color:#ee0a24;font-weight:500}.van-cascader__selected-icon{font-size:18px}.van-cascader__options{box-sizing:border-box;height:384px;padding-top:6px;overflow-y:auto;-webkit-overflow-scrolling:touch}", ""]);

// exports


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _utils = __webpack_require__(1);

var _tab = _interopRequireDefault(__webpack_require__(179));

var _tabs = _interopRequireDefault(__webpack_require__(181));

var _icon = _interopRequireDefault(__webpack_require__(24));

var _createNamespace = (0, _utils.createNamespace)('cascader'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1],
    t = _createNamespace[2];

var _default2 = createComponent({
  props: {
    title: String,
    value: [Number, String],
    fieldNames: Object,
    placeholder: String,
    activeColor: String,
    options: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    closeable: {
      type: Boolean,
      default: true
    }
  },
  data: function data() {
    return {
      tabs: [],
      activeTab: 0
    };
  },
  computed: {
    textKey: function textKey() {
      var _this$fieldNames;

      return ((_this$fieldNames = this.fieldNames) == null ? void 0 : _this$fieldNames.text) || 'text';
    },
    valueKey: function valueKey() {
      var _this$fieldNames2;

      return ((_this$fieldNames2 = this.fieldNames) == null ? void 0 : _this$fieldNames2.value) || 'value';
    },
    childrenKey: function childrenKey() {
      var _this$fieldNames3;

      return ((_this$fieldNames3 = this.fieldNames) == null ? void 0 : _this$fieldNames3.children) || 'children';
    }
  },
  watch: {
    options: {
      deep: true,
      handler: 'updateTabs'
    },
    value: function value(_value) {
      var _this = this;

      if (_value || _value === 0) {
        var values = this.tabs.map(function (tab) {
          var _tab$selectedOption;

          return (_tab$selectedOption = tab.selectedOption) == null ? void 0 : _tab$selectedOption[_this.valueKey];
        });

        if (values.indexOf(_value) !== -1) {
          return;
        }
      }

      this.updateTabs();
    }
  },
  created: function created() {
    this.updateTabs();
  },
  methods: {
    getSelectedOptionsByValue: function getSelectedOptionsByValue(options, value) {
      for (var i = 0; i < options.length; i++) {
        var option = options[i];

        if (option[this.valueKey] === value) {
          return [option];
        }

        if (option[this.childrenKey]) {
          var selectedOptions = this.getSelectedOptionsByValue(option[this.childrenKey], value);

          if (selectedOptions) {
            return [option].concat(selectedOptions);
          }
        }
      }
    },
    updateTabs: function updateTabs() {
      var _this2 = this;

      if (this.value || this.value === 0) {
        var selectedOptions = this.getSelectedOptionsByValue(this.options, this.value);

        if (selectedOptions) {
          var optionsCursor = this.options;
          this.tabs = selectedOptions.map(function (option) {
            var tab = {
              options: optionsCursor,
              selectedOption: option
            };
            var next = optionsCursor.filter(function (item) {
              return item[_this2.valueKey] === option[_this2.valueKey];
            });

            if (next.length) {
              optionsCursor = next[0][_this2.childrenKey];
            }

            return tab;
          });

          if (optionsCursor) {
            this.tabs.push({
              options: optionsCursor,
              selectedOption: null
            });
          }

          this.$nextTick(function () {
            _this2.activeTab = _this2.tabs.length - 1;
          });
          return;
        }
      }

      this.tabs = [{
        options: this.options,
        selectedOption: null
      }];
    },
    onSelect: function onSelect(option, tabIndex) {
      var _this3 = this;

      this.tabs[tabIndex].selectedOption = option;

      if (this.tabs.length > tabIndex + 1) {
        this.tabs = this.tabs.slice(0, tabIndex + 1);
      }

      if (option[this.childrenKey]) {
        var nextTab = {
          options: option[this.childrenKey],
          selectedOption: null
        };

        if (this.tabs[tabIndex + 1]) {
          this.$set(this.tabs, tabIndex + 1, nextTab);
        } else {
          this.tabs.push(nextTab);
        }

        this.$nextTick(function () {
          _this3.activeTab++;
        });
      }

      var selectedOptions = this.tabs.map(function (tab) {
        return tab.selectedOption;
      }).filter(function (item) {
        return !!item;
      });
      var eventParams = {
        value: option[this.valueKey],
        tabIndex: tabIndex,
        selectedOptions: selectedOptions
      };
      this.$emit('input', option[this.valueKey]);
      this.$emit('change', eventParams);

      if (!option[this.childrenKey]) {
        this.$emit('finish', eventParams);
      }
    },
    onClose: function onClose() {
      this.$emit('close');
    },
    renderHeader: function renderHeader() {
      var h = this.$createElement;
      return h("div", {
        "class": bem('header')
      }, [h("h2", {
        "class": bem('title')
      }, [this.slots('title') || this.title]), this.closeable ? h(_icon.default, {
        "attrs": {
          "name": "cross"
        },
        "class": bem('close-icon'),
        "on": {
          "click": this.onClose
        }
      }) : null]);
    },
    renderOptions: function renderOptions(options, selectedOption, tabIndex) {
      var _this4 = this;

      var h = this.$createElement;

      var renderOption = function renderOption(option) {
        var isSelected = selectedOption && option[_this4.valueKey] === selectedOption[_this4.valueKey];
        return h("li", {
          "class": bem('option', {
            selected: isSelected
          }),
          "style": {
            color: isSelected ? _this4.activeColor : null
          },
          "on": {
            "click": function click() {
              _this4.onSelect(option, tabIndex);
            }
          }
        }, [h("span", [option[_this4.textKey]]), isSelected ? h(_icon.default, {
          "attrs": {
            "name": "success"
          },
          "class": bem('selected-icon')
        }) : null]);
      };

      return h("ul", {
        "class": bem('options')
      }, [options.map(renderOption)]);
    },
    renderTab: function renderTab(item, tabIndex) {
      var h = this.$createElement;
      var options = item.options,
          selectedOption = item.selectedOption;
      var title = selectedOption ? selectedOption[this.textKey] : this.placeholder || t('select');
      return h(_tab.default, {
        "attrs": {
          "title": title,
          "titleClass": bem('tab', {
            unselected: !selectedOption
          })
        }
      }, [this.renderOptions(options, selectedOption, tabIndex)]);
    },
    renderTabs: function renderTabs() {
      var _this5 = this;

      var h = this.$createElement;
      return h(_tabs.default, {
        "attrs": {
          "animated": true,
          "swipeable": true,
          "swipeThreshold": 0,
          "color": this.activeColor
        },
        "class": bem('tabs'),
        "model": {
          value: _this5.activeTab,
          callback: function callback($$v) {
            _this5.activeTab = $$v;
          }
        }
      }, [this.tabs.map(this.renderTab)]);
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("div", {
      "class": bem()
    }, [this.renderHeader(), this.renderTabs()]);
  }
});

exports.default = _default2;

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _utils = __webpack_require__(1);

var _relation = __webpack_require__(53);

var _router = __webpack_require__(37);

var _createNamespace = (0, _utils.createNamespace)('tab'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

var _default = createComponent({
  mixins: [(0, _relation.ChildrenMixin)('vanTabs')],
  props: (0, _extends2.default)({}, _router.routeProps, {
    dot: Boolean,
    name: [Number, String],
    // @deprecated
    info: [Number, String],
    badge: [Number, String],
    title: String,
    titleStyle: null,
    titleClass: null,
    disabled: Boolean
  }),
  data: function data() {
    return {
      inited: false
    };
  },
  computed: {
    computedName: function computedName() {
      var _this$name;

      return (_this$name = this.name) != null ? _this$name : this.index;
    },
    isActive: function isActive() {
      var active = this.computedName === this.parent.currentName;

      if (active) {
        this.inited = true;
      }

      return active;
    }
  },
  watch: {
    title: function title() {
      this.parent.setLine();
      this.parent.scrollIntoView();
    },
    inited: function inited(val) {
      var _this = this;

      if (this.parent.lazyRender && val) {
        this.$nextTick(function () {
          _this.parent.$emit('rendered', _this.computedName, _this.title);
        });
      }
    }
  },
  render: function render(h) {
    var slots = this.slots,
        parent = this.parent,
        isActive = this.isActive;
    var slotContent = slots();

    if (false) {
      console.warn('[@ceair/vant] Tab: "info" prop is deprecated, use "badge" prop instead.');
    }

    if (!slotContent && !parent.animated) {
      return;
    }

    var show = parent.scrollspy || isActive;
    var shouldRender = this.inited || parent.scrollspy || !parent.lazyRender;
    var Content = shouldRender ? slotContent : h();

    if (parent.animated) {
      return h("div", {
        "attrs": {
          "role": "tabpanel",
          "aria-hidden": !isActive
        },
        "class": bem('pane-wrapper', {
          inactive: !isActive
        })
      }, [h("div", {
        "class": bem('pane')
      }, [Content])]);
    }

    return h("div", {
      "directives": [{
        name: "show",
        value: show
      }],
      "attrs": {
        "role": "tabpanel"
      },
      "class": bem('pane')
    }, [Content]);
  }
});

exports.default = _default;

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.sortChildren = sortChildren;

function flattenVNodes(vnodes) {
  var result = [];

  function traverse(vnodes) {
    vnodes.forEach(function (vnode) {
      result.push(vnode);

      if (vnode.componentInstance) {
        traverse(vnode.componentInstance.$children.map(function (item) {
          return item.$vnode;
        }));
      }

      if (vnode.children) {
        traverse(vnode.children);
      }
    });
  }

  traverse(vnodes);
  return result;
} // sort children instances by vnodes order


function sortChildren(children, parent) {
  var componentOptions = parent.$vnode.componentOptions;

  if (!componentOptions || !componentOptions.children) {
    return;
  }

  var vnodes = flattenVNodes(componentOptions.children);
  children.sort(function (a, b) {
    return vnodes.indexOf(a.$vnode) - vnodes.indexOf(b.$vnode);
  });
}

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _utils = __webpack_require__(1);

var _utils2 = __webpack_require__(182);

var _router = __webpack_require__(37);

var _style = __webpack_require__(54);

var _event = __webpack_require__(9);

var _unit = __webpack_require__(25);

var _constant = __webpack_require__(29);

var _interceptor = __webpack_require__(183);

var _scroll = __webpack_require__(20);

var _relation = __webpack_require__(53);

var _bindEvent = __webpack_require__(36);

var _Title = _interopRequireDefault(__webpack_require__(184));

var _sticky = _interopRequireDefault(__webpack_require__(185));

var _Content = _interopRequireDefault(__webpack_require__(186));

// Utils
// Mixins
// Components
var _createNamespace = (0, _utils.createNamespace)('tabs'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

var _default2 = createComponent({
  mixins: [(0, _relation.ParentMixin)('vanTabs'), (0, _bindEvent.BindEventMixin)(function (bind) {
    if (!this.scroller) {
      this.scroller = (0, _scroll.getScroller)(this.$el);
    }

    bind(window, 'resize', this.resize, true);

    if (this.scrollspy) {
      bind(this.scroller, 'scroll', this.onScroll, true);
    }
  })],
  inject: {
    vanPopup: {
      default: null
    }
  },
  model: {
    prop: 'active'
  },
  props: {
    color: String,
    border: Boolean,
    sticky: Boolean,
    animated: Boolean,
    swipeable: Boolean,
    scrollspy: Boolean,
    background: String,
    justifyContent: String,
    lineWidth: [Number, String],
    lineHeight: [Number, String],
    beforeChange: Function,
    titleActiveColor: String,
    titleInactiveColor: String,
    type: {
      type: String,
      default: 'line'
    },
    active: {
      type: [Number, String],
      default: 0
    },
    ellipsis: {
      type: Boolean,
      default: true
    },
    duration: {
      type: [Number, String],
      default: 0.3
    },
    offsetTop: {
      type: [Number, String],
      default: 0
    },
    lazyRender: {
      type: Boolean,
      default: true
    },
    swipeThreshold: {
      type: [Number, String],
      default: 5
    }
  },
  data: function data() {
    return {
      position: '',
      currentIndex: null,
      lineStyle: {
        backgroundColor: this.color
      }
    };
  },
  computed: {
    // whether the nav is scrollable
    scrollable: function scrollable() {
      return this.children.length > this.swipeThreshold || !this.ellipsis;
    },
    navStyle: function navStyle() {
      return {
        borderColor: this.color,
        background: this.background,
        justifyContent: this.justifyContent
      };
    },
    currentName: function currentName() {
      var activeTab = this.children[this.currentIndex];

      if (activeTab) {
        return activeTab.computedName;
      }
    },
    offsetTopPx: function offsetTopPx() {
      return (0, _unit.unitToPx)(this.offsetTop);
    },
    scrollOffset: function scrollOffset() {
      if (this.sticky) {
        return this.offsetTopPx + this.tabHeight;
      }

      return 0;
    }
  },
  watch: {
    color: 'setLine',
    active: function active(name) {
      if (name !== this.currentName) {
        this.setCurrentIndexByName(name);
      }
    },
    children: function children() {
      var _this = this;

      this.setCurrentIndexByName(this.active);
      this.setLine();
      this.$nextTick(function () {
        _this.scrollIntoView(true);
      });
    },
    currentIndex: function currentIndex() {
      this.scrollIntoView();
      this.setLine(); // scroll to correct position

      if (this.stickyFixed && !this.scrollspy) {
        (0, _scroll.setRootScrollTop)(Math.ceil((0, _scroll.getElementTop)(this.$el) - this.offsetTopPx));
      }
    },
    scrollspy: function scrollspy(val) {
      if (val) {
        (0, _event.on)(this.scroller, 'scroll', this.onScroll, true);
      } else {
        (0, _event.off)(this.scroller, 'scroll', this.onScroll);
      }
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    this.init(); // https://github.com/youzan/vant/issues/7959

    if (this.vanPopup) {
      this.vanPopup.onReopen(function () {
        _this2.setLine();
      });
    }
  },
  activated: function activated() {
    this.init();
    this.setLine();
  },
  methods: {
    // @exposed-api
    resize: function resize() {
      this.setLine();
    },
    init: function init() {
      var _this3 = this;

      this.$nextTick(function () {
        _this3.inited = true;
        _this3.tabHeight = (0, _scroll.getVisibleHeight)(_this3.$refs.wrap);
        var navHeight = _this3.$refs.nav.offsetHeight;
        _this3.navHeight = (0, _utils.addUnit)(navHeight);

        _this3.scrollIntoView(true);
      });
    },
    // update nav bar style
    setLine: function setLine() {
      var _this4 = this;

      var shouldAnimate = this.inited;
      this.$nextTick(function () {
        var titles = _this4.$refs.titles;

        if (!titles || !titles[_this4.currentIndex] || _this4.type !== 'line' || (0, _style.isHidden)(_this4.$el)) {
          return;
        }

        var title = titles[_this4.currentIndex].$el;
        var lineWidth = _this4.lineWidth,
            lineHeight = _this4.lineHeight;
        var left = title.offsetLeft + title.offsetWidth / 2;
        var width = title.children[0].offsetWidth;

        if (lineWidth) {
          width = lineWidth;
        }

        var lineStyle = {
          width: (0, _utils.addUnit)(width),
          backgroundColor: _this4.color,
          transform: "translateX(" + left + "px) translateX(-50%)"
        };

        if (shouldAnimate) {
          lineStyle.transitionDuration = _this4.duration + "s";
        }

        if ((0, _utils.isDef)(lineHeight)) {
          var height = (0, _utils.addUnit)(lineHeight);
          lineStyle.height = height;
          lineStyle.borderRadius = height;
        }

        _this4.lineStyle = lineStyle;
      });
    },
    // correct the index of active tab
    setCurrentIndexByName: function setCurrentIndexByName(name) {
      var matched = this.children.filter(function (tab) {
        return tab.computedName === name;
      });
      var defaultIndex = (this.children[0] || {}).index || 0;
      this.setCurrentIndex(matched.length ? matched[0].index : defaultIndex);
    },
    setCurrentIndex: function setCurrentIndex(currentIndex) {
      var newIndex = this.findAvailableTab(currentIndex);

      if (!(0, _utils.isDef)(newIndex)) {
        return;
      }

      var newTab = this.children[newIndex];
      var newName = newTab.computedName;
      var shouldEmitChange = this.currentIndex !== null;
      this.currentIndex = newIndex;

      if (newName !== this.active) {
        this.$emit('input', newName);

        if (shouldEmitChange) {
          this.$emit('change', newName, newTab.title);
        }
      }
    },
    findAvailableTab: function findAvailableTab(index) {
      var diff = index < this.currentIndex ? -1 : 1;

      while (index >= 0 && index < this.children.length) {
        if (!this.children[index].disabled) {
          return index;
        }

        index += diff;
      }
    },
    // emit event when clicked
    onClick: function onClick(item, index) {
      var _this5 = this;

      var _this$children$index = this.children[index],
          title = _this$children$index.title,
          disabled = _this$children$index.disabled,
          computedName = _this$children$index.computedName;

      if (disabled) {
        this.$emit('disabled', computedName, title);
      } else {
        (0, _interceptor.callInterceptor)({
          interceptor: this.beforeChange,
          args: [computedName],
          done: function done() {
            _this5.setCurrentIndex(index);

            _this5.scrollToCurrentContent();
          }
        });
        this.$emit('click', computedName, title);
        (0, _router.route)(item.$router, item);
      }
    },
    // scroll active tab into view
    scrollIntoView: function scrollIntoView(immediate) {
      var titles = this.$refs.titles;

      if (!this.scrollable || !titles || !titles[this.currentIndex]) {
        return;
      }

      var nav = this.$refs.nav;
      var title = titles[this.currentIndex].$el;
      var to = title.offsetLeft - (nav.offsetWidth - title.offsetWidth) / 2;
      (0, _utils2.scrollLeftTo)(nav, to, immediate ? 0 : +this.duration);
    },
    onSticktScroll: function onSticktScroll(params) {
      this.stickyFixed = params.isFixed;
      this.$emit('scroll', params);
    },
    // @exposed-api
    scrollTo: function scrollTo(name) {
      var _this6 = this;

      this.$nextTick(function () {
        _this6.setCurrentIndexByName(name);

        _this6.scrollToCurrentContent(true);
      });
    },
    scrollToCurrentContent: function scrollToCurrentContent(immediate) {
      var _this7 = this;

      if (immediate === void 0) {
        immediate = false;
      }

      if (this.scrollspy) {
        var target = this.children[this.currentIndex];
        var el = target == null ? void 0 : target.$el;

        if (el) {
          var to = (0, _scroll.getElementTop)(el, this.scroller) - this.scrollOffset;
          this.lockScroll = true;
          (0, _utils2.scrollTopTo)(this.scroller, to, immediate ? 0 : +this.duration, function () {
            _this7.lockScroll = false;
          });
        }
      }
    },
    onScroll: function onScroll() {
      if (this.scrollspy && !this.lockScroll) {
        var index = this.getCurrentIndexOnScroll();
        this.setCurrentIndex(index);
      }
    },
    getCurrentIndexOnScroll: function getCurrentIndexOnScroll() {
      var children = this.children;

      for (var index = 0; index < children.length; index++) {
        var top = (0, _scroll.getVisibleTop)(children[index].$el);

        if (top > this.scrollOffset) {
          return index === 0 ? 0 : index - 1;
        }
      }

      return children.length - 1;
    }
  },
  render: function render() {
    var _this8 = this,
        _ref;

    var h = arguments[0];
    var type = this.type,
        animated = this.animated,
        scrollable = this.scrollable,
        justifyContent = this.justifyContent;
    var Nav = this.children.map(function (item, index) {
      var _item$badge;

      return h(_Title.default, {
        "ref": "titles",
        "refInFor": true,
        "attrs": {
          "type": type,
          "justifyContent": justifyContent,
          "dot": item.dot,
          "info": (_item$badge = item.badge) != null ? _item$badge : item.info,
          "title": item.title,
          "color": _this8.color,
          "isActive": index === _this8.currentIndex,
          "disabled": item.disabled,
          "scrollable": scrollable,
          "activeColor": _this8.titleActiveColor,
          "inactiveColor": _this8.titleInactiveColor
        },
        "style": item.titleStyle,
        "class": item.titleClass,
        "scopedSlots": {
          default: function _default() {
            return item.slots('title');
          }
        },
        "on": {
          "click": function click() {
            _this8.onClick(item, index);
          }
        }
      });
    });
    var Wrap = h("div", {
      "ref": "wrap",
      "class": [bem('wrap', {
        scrollable: scrollable
      }), (_ref = {}, _ref[_constant.BORDER_TOP_BOTTOM] = type === 'line' && this.border, _ref)]
    }, [h("div", {
      "class": bem('module-div'),
      "style": {
        height: this.navHeight
      }
    }, [this.slots('nav-left')]), h("div", {
      "ref": "nav",
      "attrs": {
        "role": "tablist"
      },
      "class": bem('nav', [type, {
        complete: this.scrollable
      }]),
      "style": this.navStyle
    }, [Nav, type === 'line' && h("div", {
      "class": bem('line'),
      "style": this.lineStyle
    })]), h("div", {
      "class": bem('module-div'),
      "style": {
        height: this.navHeight
      }
    }, [this.slots('nav-right')])]);
    return h("div", {
      "class": bem([type])
    }, [this.sticky ? h(_sticky.default, {
      "attrs": {
        "container": this.$el,
        "offsetTop": this.offsetTop
      },
      "on": {
        "scroll": this.onSticktScroll
      }
    }, [Wrap]) : Wrap, h(_Content.default, {
      "attrs": {
        "count": this.children.length,
        "animated": animated,
        "duration": this.duration,
        "swipeable": this.swipeable,
        "currentIndex": this.currentIndex
      },
      "on": {
        "change": this.setCurrentIndex
      }
    }, [this.slots()])]);
  }
});

exports.default = _default2;

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.scrollLeftTo = scrollLeftTo;
exports.scrollTopTo = scrollTopTo;

var _raf = __webpack_require__(46);

var _scroll = __webpack_require__(20);

var scrollLeftRafId;

function scrollLeftTo(scroller, to, duration) {
  (0, _raf.cancelRaf)(scrollLeftRafId);
  var count = 0;
  var from = scroller.scrollLeft;
  var frames = duration === 0 ? 1 : Math.round(duration * 1000 / 16);

  function animate() {
    scroller.scrollLeft += (to - from) / frames;

    if (++count < frames) {
      scrollLeftRafId = (0, _raf.raf)(animate);
    }
  }

  animate();
}

function scrollTopTo(scroller, to, duration, callback) {
  var current = (0, _scroll.getScrollTop)(scroller);
  var isDown = current < to;
  var frames = duration === 0 ? 1 : Math.round(duration * 1000 / 16);
  var step = (to - current) / frames;

  function animate() {
    current += step;

    if (isDown && current > to || !isDown && current < to) {
      current = to;
    }

    (0, _scroll.setScrollTop)(scroller, current);

    if (isDown && current < to || !isDown && current > to) {
      (0, _raf.raf)(animate);
    } else if (callback) {
      (0, _raf.raf)(callback);
    }
  }

  animate();
}

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.callInterceptor = callInterceptor;

var _ = __webpack_require__(1);

function callInterceptor(options) {
  var interceptor = options.interceptor,
      args = options.args,
      done = options.done;

  if (interceptor) {
    var returnVal = interceptor.apply(void 0, args);

    if ((0, _.isPromise)(returnVal)) {
      returnVal.then(function (value) {
        if (value) {
          done();
        }
      }).catch(_.noop);
    } else if (returnVal) {
      done();
    }
  } else {
    done();
  }
}

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _utils = __webpack_require__(1);

var _info = _interopRequireDefault(__webpack_require__(49));

var _createNamespace = (0, _utils.createNamespace)('tab'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

var _default = createComponent({
  props: {
    dot: Boolean,
    type: String,
    info: [Number, String],
    color: String,
    title: String,
    isActive: Boolean,
    disabled: Boolean,
    scrollable: Boolean,
    activeColor: String,
    inactiveColor: String,
    justifyContent: String
  },
  computed: {
    style: function style() {
      var style = {};
      var color = this.color,
          isActive = this.isActive;
      var isCard = this.type === 'card'; // card theme color

      if (color && isCard) {
        style.borderColor = color;

        if (!this.disabled) {
          if (isActive) {
            style.backgroundColor = color;
          } else {
            style.color = color;
          }
        }
      }

      var titleColor = isActive ? this.activeColor : this.inactiveColor;

      if (titleColor) {
        style.color = titleColor;
      }

      return style;
    },
    isJustify: function isJustify() {
      return this.justifyContent && this.justifyContent !== '' ? true : false;
    }
  },
  methods: {
    onClick: function onClick() {
      this.$emit('click');
    },
    genText: function genText() {
      var h = this.$createElement;
      var Text = h("span", {
        "class": bem('text', {
          ellipsis: !this.scrollable
        })
      }, [this.slots() || this.title]);

      if (this.dot || (0, _utils.isDef)(this.info) && this.info !== '') {
        return h("span", {
          "class": bem('text-wrapper')
        }, [Text, h(_info.default, {
          "attrs": {
            "dot": this.dot,
            "info": this.info
          }
        })]);
      }

      return Text;
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("div", {
      "attrs": {
        "role": "tab",
        "aria-selected": this.isActive
      },
      "class": [bem({
        active: this.isActive,
        disabled: this.disabled,
        justify: this.isJustify
      })],
      "style": this.style,
      "on": {
        "click": this.onClick
      }
    }, [this.genText()]);
  }
});

exports.default = _default;

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _style = __webpack_require__(54);

var _unit = __webpack_require__(25);

var _utils = __webpack_require__(1);

var _scroll = __webpack_require__(20);

var _bindEvent = __webpack_require__(36);

var _createNamespace = (0, _utils.createNamespace)('sticky'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

var _default = createComponent({
  mixins: [(0, _bindEvent.BindEventMixin)(function (bind, isBind) {
    if (!this.scroller) {
      this.scroller = (0, _scroll.getScroller)(this.$el);
    }

    if (this.observer) {
      var method = isBind ? 'observe' : 'unobserve';
      this.observer[method](this.$el);
    }

    bind(this.scroller, 'scroll', this.onScroll, true);
    this.onScroll();
  })],
  props: {
    zIndex: [Number, String],
    container: null,
    offsetTop: {
      type: [Number, String],
      default: 0
    }
  },
  data: function data() {
    return {
      fixed: false,
      height: 0,
      transform: 0
    };
  },
  computed: {
    offsetTopPx: function offsetTopPx() {
      return (0, _unit.unitToPx)(this.offsetTop);
    },
    style: function style() {
      if (!this.fixed) {
        return;
      }

      var style = {};

      if ((0, _utils.isDef)(this.zIndex)) {
        style.zIndex = this.zIndex;
      }

      if (this.offsetTopPx && this.fixed) {
        style.top = this.offsetTopPx + "px";
      }

      if (this.transform) {
        style.transform = "translate3d(0, " + this.transform + "px, 0)";
      }

      return style;
    }
  },
  watch: {
    fixed: function fixed(isFixed) {
      this.$emit('change', isFixed);
    }
  },
  created: function created() {
    var _this = this;

    // compatibility: https://caniuse.com/#feat=intersectionobserver
    if (!_utils.isServer && window.IntersectionObserver) {
      this.observer = new IntersectionObserver(function (entries) {
        // trigger scroll when visibility changed
        if (entries[0].intersectionRatio > 0) {
          _this.onScroll();
        }
      }, {
        root: document.body
      });
    }
  },
  methods: {
    onScroll: function onScroll() {
      var _this2 = this;

      if ((0, _style.isHidden)(this.$el)) {
        return;
      }

      this.height = this.$el.offsetHeight;
      var container = this.container,
          offsetTopPx = this.offsetTopPx;
      var scrollTop = (0, _scroll.getScrollTop)(window);
      var topToPageTop = (0, _scroll.getElementTop)(this.$el);

      var emitScrollEvent = function emitScrollEvent() {
        _this2.$emit('scroll', {
          scrollTop: scrollTop,
          isFixed: _this2.fixed
        });
      }; // The sticky component should be kept inside the container element


      if (container) {
        var bottomToPageTop = topToPageTop + container.offsetHeight;

        if (scrollTop + offsetTopPx + this.height > bottomToPageTop) {
          var distanceToBottom = this.height + scrollTop - bottomToPageTop;

          if (distanceToBottom < this.height) {
            this.fixed = true;
            this.transform = -(distanceToBottom + offsetTopPx);
          } else {
            this.fixed = false;
          }

          emitScrollEvent();
          return;
        }
      }

      if (scrollTop + offsetTopPx > topToPageTop) {
        this.fixed = true;
        this.transform = 0;
      } else {
        this.fixed = false;
      }

      emitScrollEvent();
    }
  },
  render: function render() {
    var h = arguments[0];
    var fixed = this.fixed;
    var style = {
      height: fixed ? this.height + "px" : null
    };
    return h("div", {
      "style": style
    }, [h("div", {
      "class": bem({
        fixed: fixed
      }),
      "style": this.style
    }, [this.slots()])]);
  }
});

exports.default = _default;

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _utils = __webpack_require__(1);

var _touch = __webpack_require__(35);

var _createNamespace = (0, _utils.createNamespace)('tabs'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

var MIN_SWIPE_DISTANCE = 50;

var _default = createComponent({
  mixins: [_touch.TouchMixin],
  props: {
    count: Number,
    duration: [Number, String],
    animated: Boolean,
    swipeable: Boolean,
    currentIndex: Number
  },
  computed: {
    style: function style() {
      if (this.animated) {
        return {
          transform: "translate3d(" + -1 * this.currentIndex * 100 + "%, 0, 0)",
          transitionDuration: this.duration + "s"
        };
      }
    },
    listeners: function listeners() {
      if (this.swipeable) {
        return {
          touchstart: this.touchStart,
          touchmove: this.touchMove,
          touchend: this.onTouchEnd,
          touchcancel: this.onTouchEnd
        };
      }
    }
  },
  methods: {
    // watch swipe touch end
    onTouchEnd: function onTouchEnd() {
      var direction = this.direction,
          deltaX = this.deltaX,
          currentIndex = this.currentIndex;
      /* istanbul ignore else */

      if (direction === 'horizontal' && this.offsetX >= MIN_SWIPE_DISTANCE) {
        /* istanbul ignore else */
        if (deltaX > 0 && currentIndex !== 0) {
          this.$emit('change', currentIndex - 1);
        } else if (deltaX < 0 && currentIndex !== this.count - 1) {
          this.$emit('change', currentIndex + 1);
        }
      }
    },
    genChildren: function genChildren() {
      var h = this.$createElement;

      if (this.animated) {
        return h("div", {
          "class": bem('track'),
          "style": this.style
        }, [this.slots()]);
      }

      return this.slots();
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("div", {
      "class": bem('content', {
        animated: this.animated
      }),
      "on": (0, _extends2.default)({}, this.listeners)
    }, [this.genChildren()]);
  }
});

exports.default = _default;

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
var Component = __webpack_require__(7)(
  /* script */
  __webpack_require__(188),
  /* template */
  null,
  /* styles */
  null,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)
Component.options.__file = "/data/gitlab-runner/builds/bxZ2z3qA/0/muit-mobile/Hybrid/hybrid-components/mu-hybrid/mu-hybrid/mu_cascading_menu/Popup.vue"
if (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== "default" && key.substr(0, 2) !== "__"})) {console.error("named exports are not supported in *.vue files.")}

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-29af5a32", Component.options)
  } else {
    hotAPI.reload("data-v-29af5a32", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

__webpack_require__(55);

var _popup = __webpack_require__(27);

var _popup2 = _interopRequireDefault(_popup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//

exports.default = {
  extends: _popup2.default,
  props: {},
  computed: {}
};

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: " weex-ct weex-div",
    attrs: {
      "weex-type": "div"
    }
  }, [_c('Popup', {
    attrs: {
      "round": "",
      "position": "bottom"
    },
    model: {
      value: (_vm.show),
      callback: function($$v) {
        _vm.show = $$v
      },
      expression: "show"
    }
  }, [_c('Cascader', {
    attrs: {
      "title": _vm.title,
      "options": _vm.options,
      "data-evt-close": "",
      "data-evt-finish": ""
    },
    on: {
      "close": _vm.onClose,
      "finish": function($event) {
        $event.stopPropagation();
        return _vm.onFinish($event)
      }
    },
    model: {
      value: (_vm.cascaderValue),
      callback: function($$v) {
        _vm.cascaderValue = $$v
      },
      expression: "cascaderValue"
    }
  })], 1)], 1)
},staticRenderFns: []}
module.exports.render._withStripped = true
if (false) {
  module.hot.accept()
  if (module.hot.data) {
     require("vue-hot-reload-api").rerender("data-v-684e682d", module.exports)
  }
}

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(52).default;

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUContact = {
  create: function create() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUContact', 'create', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  query: function query() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUContact', 'query', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        if (res.data.contact) {
          res.data.contacts = res.data.contact;
          delete res.data.contact;
        }
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
}; /*
    * @Author: liuqianlong
    * @Date: 2021-02-24 16:47:49
    * @LastEditors: lee9527
    * @LastEditTime: 2021-05-25 13:11:42
    * @Description:
    * @FilePath: /mu-hybrid/mu-hybrid/mu_contact/index.js
    * @version: 1.0.0
    */
exports.default = MUContact;

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: liuqianlong
 * @Date: 2021-02-24 16:47:49
 * @LastEditors: xiaoyang
 * @LastEditTime: 2023-02-12 23:13:17
 * @Description:
 * @FilePath: \mu-hybrid\mu-hybrid\mu_contact\mock.js
 * @version: 1.0.0
 */
var MUContact = {
  create: function create() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        data: {
          contact: [{
            firstName: '冬梅',
            lastName: '马',
            phone: [{
              value: '13888888888',
              label: 'work'
            }, {
              value: '22323333',
              label: 'home'
            }]
          }]
        },
        message: ''
      });
    });
    return p;
  },
  query: function query() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      resolve({ status: 0, data: { steps: 2355 }, message: '' });
    });
    return p;
  }
};

exports.default = MUContact;

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(194).default;

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  create: function create() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  query: function query() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _native = __webpack_require__(196);

var _native2 = _interopRequireDefault(_native);

var _table = __webpack_require__(197);

var _table2 = _interopRequireDefault(_table);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var sequnce = 0;
var generateUUID = function generateUUID() {
  return getUUID() + ++sequnce;
};

function getUUID() {
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    var r = Math.random() * 16 | 0;
    var v = c === 'x' ? r : r & 0x3 | 0x8;
    return v.toString(16);
  });
};

var Database = function () {
  function Database(metadata) {
    _classCallCheck(this, Database);

    this.metadata = metadata;
    this.dbVersion = -1;
    this.tableName = '';
  }

  _createClass(Database, [{
    key: 'table',
    value: function table(tableName) {
      this.tableName = tableName;
      return _table2.default.init(tableName, this);
    }
  }, {
    key: 'insert',
    value: function insert(sql, args) {
      var _this = this;

      var self = this;
      var p = new Promise(function (resolve, reject) {
        try {
          var arr = sql.split(/\s+/);
          if (arr.length > 3) self.tableName = arr[2];
          var statements = [];
          var statement;
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;

          try {
            for (var _iterator = args[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var arg = _step.value;

              statement = {
                id: 'insert_id_' + generateUUID(),
                operation: 'insert',
                sql: sql,
                args: arg
              };
              statements.push(statement);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }

          _this.commit(statements, resolve, reject);
        } catch (err) {
          reject(err);
        }
      });
      return p;
    }
  }, {
    key: 'update',
    value: function update(sql, args) {
      var _this2 = this;

      var p = new Promise(function (resolve, reject) {
        try {
          var statement = {
            id: 'update_id_' + generateUUID(),
            operation: 'update',
            sql: sql,
            args: args
          };
          _this2.commit([statement], resolve, reject);
        } catch (err) {
          reject(err);
        }
      });
      return p;
    }
  }, {
    key: 'delete',
    value: function _delete(sql, args) {
      var _this3 = this;

      var p = new Promise(function (resolve, reject) {
        try {
          var statement = {
            id: 'delete_id_' + generateUUID(),
            operation: 'delete',
            sql: sql,
            args: args
          };
          _this3.commit([statement], resolve, reject);
        } catch (err) {
          reject(err);
        }
      });
      return p;
    }
  }, {
    key: 'select',
    value: function select(sql, args) {
      var _this4 = this;

      var p = new Promise(function (resolve, reject) {
        try {
          var statement = {
            id: 'select_id_sql' + generateUUID(),
            operation: 'select',
            sql: sql,
            args: args
          };
          _this4.commit([statement], resolve, reject);
        } catch (err) {
          reject(err);
        }
      });
      return p;
    }
  }, {
    key: 'execSql',
    value: function execSql(sql) {
      var _this5 = this;

      var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'other';

      var p = new Promise(function (resolve, reject) {
        try {
          var statement = {
            id: 'execSql_id_' + option + generateUUID(),
            operation: option,
            sql: sql,
            args: []
          };
          _this5.commit([statement], resolve, reject);
        } catch (err) {
          reject(err);
        }
      });
      return p;
    }

    /**
     * 开始执行
     */

  }, {
    key: 'commit',
    value: function commit(statements, success, failure) {
      var self = this;
      var insertIDs = [];
      var execSQL = function execSQL() {
        _native2.default.execute({
          dbName: self.metadata.name(),
          statements: statements
        }).then(function (res) {
          try {
            for (var i in res.data.resultSet) {
              var data = res.data.resultSet[i].data;
              var id = res.data.resultSet[i].id;
              if (id.indexOf('insert_id_') == 0) {
                if (data.rows != -1 && data.rows != 0) {
                  insertIDs.push(data.rows);
                }
                continue;
              } else if (id.indexOf('execSql_id_') == 0) {
                if (id.indexOf('execSql_id_select') == 0) {
                  success(data.data);
                  return;
                } else if (id.indexOf('execSql_id_insert') == 0) {
                  insertIDs.push(data.rows);
                  continue;
                } else if (id.indexOf('execSql_id_update') == 0 || id.indexOf('execSql_id_delete') == 0) {
                  success({
                    status: res.status,
                    message: res.message,
                    data: { rows: data.rows },
                    errorCode: res.errorCode
                  });
                  return;
                } else {
                  success({
                    status: res.status,
                    message: res.message,
                    data: {},
                    errorCode: res.errorCode
                  });
                  return;
                }
              } else if (id.indexOf('findFirst_id_') == 0) {
                if (data.data.length == 0) {
                  success(null);
                } else {
                  success(data.data[0]);
                }
                return;
              } else if (id.indexOf('findAll_id_') == 0 || id.indexOf('select_id_') == 0) {
                success(data.data);
                return;
              } else if (id.indexOf('update_id_') == 0 || id.indexOf('delete_id_') == 0) {
                success({
                  status: res.status,
                  message: res.message,
                  data: { rows: data.rows },
                  errorCode: res.errorCode
                });
                return;
              }
            }

            success(insertIDs);
          } catch (e) {
            failure(e);
          }
        }).catch(function (err) {
          failure(err);
          console.log(err);
        });
      };

      /**
       * 创建数据库
       * @param {array} opt 建库时需要执行的sql语句列表
       */
      var create = function create(opt) {
        var sqlList = [];
        for (var i in opt.sql) {
          sqlList.push({
            id: generateUUID(),
            sql: opt.sql[i].sql
          });
        }
        _native2.default.create({
          dbName: self.metadata.name(),
          statements: sqlList
        }).then(function (res) {
          execSQL();
        }).catch(function (err) {
          failure(err);
          console.log(err);
        });
      };

      /**
       * 升级数据库
       * @param {array} opt 升级时需要执行的sql语句列表
       */
      var upgrade = function upgrade(opt) {
        var sqlList = [];
        for (var i in opt.sql) {
          sqlList.push({
            id: generateUUID(),
            sql: opt.sql[i].sql
          });
        }

        _native2.default.upgrade({
          newVersion: opt.newVersion,
          statements: sqlList,
          dbName: self.metadata.name()
        }).then(function (res) {
          execSQL();
        }).catch(function (err) {
          failure(err);
          console.log(err);
        });
      };

      /**
       * 建立数据库连接
       * 如果数据库不存在，先创建数据库
       * 如果当前数据库版本低于传入的，先升级数据库
       */
      var open = function open() {

        _native2.default.getVersion({
          dbName: self.metadata.name()
        }).then(function (res) {
          self.dbVersion = res.data.version;
          var version = self.metadata.version();
          var existsVersion = res.data.version;
          //新建数据库
          if (existsVersion === -1) {
            create({ sql: self.metadata.create() });
            return;
          }
          //先打开数据库再执行sql
          if (existsVersion === version) {
            execSQL();
            return;
          }
          //升级数据库
          if (existsVersion < version) {
            upgrade({ sql: self.metadata.upgrade(existsVersion, version), oldVersion: existsVersion, newVersion: version });
          }
          if (existsVersion > version) {
            create({ sql: self.metadata.create() });
          }
        }).catch(function (err) {
          failure(err);
          console.log(err);
        });
      };

      if (self.dbVersion == -1) {
        open();
      } else {
        execSQL();
      }
    }
  }]);

  return Database;
}();

/**
 * 封装
 * 方法
 * 初始化数据库
 * @param {{Object}} metadata 传入数据库当前版本，建库时需要执行的sql语句，升级数据库版本时需要执行的sql语句以及成功失败回调
 */


var MUDatabase = {

  open: function open(metadata) {
    if (typeof metadata.version !== 'function') {

      throw new Error('metadata.version is not a function');
    }
    if (typeof metadata.create !== 'function') {

      throw new Error('metadata.create is not a function');
    }
    if (typeof metadata.upgrade !== 'function') {

      throw new Error('metadata.upgrade is not a function');
    }
    return new Database(metadata);
  }
};

exports.default = MUDatabase;

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NativeDatabase = {
  create: function create() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDatabase', 'create', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        reject(err);
      });
    });
    return p;
  },
  getVersion: function getVersion() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDatabase', 'getVersion', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        reject(err);
      });
    });
    return p;
  },
  upgrade: function upgrade() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDatabase', 'upgrade', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        reject(err);
      });
    });
    return p;
  },
  execute: function execute() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDatabase', 'execute', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        reject(err);
      });
    });
    return p;
  },
  open: function open() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDatabase', 'open', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        reject(err);
      });
    });
    return p;
  },
  close: function close() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDatabase', 'close', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        reject(err);
      });
    });
    return p;
  }
}; /*
    * @Author: lee9527
    * @Date: 2021-11-15 15:41:56
    * @LastEditors: liuqianlong
    * @LastEditTime: 2021-11-25 14:50:20
    * @Description:
    * @FilePath: /mu-hybrid/mu-hybrid/mu_watermark/index.js
    * @version: 1.0.0
    */
exports.default = NativeDatabase;

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ASC = 'asc';
var DESC = 'desc';

var sequnce = 0;
var generateUUID = function generateUUID() {
  return getUUID() + ++sequnce;
};

function getUUID() {
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    var r = Math.random() * 16 | 0;
    var v = c === 'x' ? r : r & 0x3 | 0x8;
    return v.toString(16);
  });
};

var Table = function () {
  function Table(tableName, db) {
    _classCallCheck(this, Table);

    this.tableName = tableName;
    this.argsArray = [];
    this.sqlArray = [];
    this.db = db;
    this.option = {
      sort: [],
      pageSize: 0,
      pageNum: 0
    };
  }

  _createClass(Table, [{
    key: 'insert',
    value: function insert(option) {
      var _this = this;

      var p = new Promise(function (resolve, reject) {
        _this.db.commit(_this.executeInsert(option), resolve, reject);
      });
      return p;
    }
  }, {
    key: 'findFirst',
    value: function findFirst() {
      var _this2 = this;

      var p = new Promise(function (resolve, reject) {
        var statements = [{
          id: 'findFirst_id_' + generateUUID(),
          operation: 'select',
          sql: 'select * from ' + _this2.tableName + ' limit 0,1',
          args: []
        }];
        _this2.db.commit(statements, resolve, reject);
      });
      return p;
    }
  }, {
    key: 'findAll',
    value: function findAll() {
      var _this3 = this;

      var p = new Promise(function (resolve, reject) {
        _this3.db.commit(_this3.executeSelect(), resolve, reject);
      });
      return p;
    }
  }, {
    key: 'update',
    value: function update(option) {
      var _this4 = this;

      var p = new Promise(function (resolve, reject) {
        _this4.db.commit(_this4.executeUpdate(option), resolve, reject);
      });
      return p;
    }
  }, {
    key: 'delete',
    value: function _delete(option) {
      var _this5 = this;

      var p = new Promise(function (resolve, reject) {
        _this5.db.commit(_this5.executeDelete(option), resolve, reject);
      });
      return p;
    }
  }, {
    key: 'greaterThan',
    value: function greaterThan(key, value) {
      if (this.sqlArray.length == 0) {
        this.sqlArray.push(' where ');
      }
      this.sqlArray.push(key);
      this.sqlArray.push('>?');
      this.sqlArray.push(' and ');
      this.argsArray.push(value);
      return this;
    }
  }, {
    key: 'lessThan',
    value: function lessThan(key, value) {
      if (this.sqlArray.length == 0) {
        this.sqlArray.push(' where ');
      }
      this.sqlArray.push(key);
      this.sqlArray.push('<?');
      this.sqlArray.push(' and ');
      this.argsArray.push(value);
      return this;
    }
  }, {
    key: 'equalTo',
    value: function equalTo(key, value) {
      if (this.sqlArray.length == 0) {
        this.sqlArray.push(' where ');
      }
      this.sqlArray.push(key);
      this.sqlArray.push('=?');
      this.sqlArray.push(' and ');
      this.argsArray.push(value);
      return this;
    }
  }, {
    key: 'notEqualTo',
    value: function notEqualTo(key, value) {
      if (this.sqlArray.length == 0) {
        this.sqlArray.push(' where ');
      }
      this.sqlArray.push(key);
      this.sqlArray.push('!=?');
      this.sqlArray.push(' and ');
      this.argsArray.push(value);
      return this;
    }
  }, {
    key: 'or',
    value: function or() {
      if (this.sqlArray[this.sqlArray.length - 1] == ' and ') {
        this.sqlArray.pop();
      }
      this.sqlArray.push(' or ');
      return this;
    }
  }, {
    key: 'between',
    value: function between(key, value1, value2) {
      if (this.sqlArray.length == 0) {
        this.sqlArray.push(' where ');
      }
      this.sqlArray.push(key);
      this.sqlArray.push(' between');
      this.sqlArray.push(' ?');
      this.sqlArray.push(' and ');
      this.sqlArray.push('?');
      this.sqlArray.push(' and ');
      this.argsArray.push(value1);
      this.argsArray.push(value2);
      return this;
    }
  }, {
    key: 'sort',
    value: function sort(orderBy, type) {
      if (!type) {
        type = ASC;
      } else {
        type = DESC;
      }
      this.option.sort.push({ orderBy: orderBy, type: type });
      return this;
    }
  }, {
    key: 'pageSize',
    value: function pageSize(_pageSize) {
      this.option.pageSize = _pageSize;
      return this;
    }
  }, {
    key: 'pageNum',
    value: function pageNum(_pageNum) {
      this.option.pageNum = _pageNum;
      return this;
    }

    /**
     * 执行删除语句
     */

  }, {
    key: 'executeDelete',
    value: function executeDelete() {
      this.sqlArray.splice(0, 0, 'delete from ', this.tableName);
      return this.whereClause('delete');
    }
  }, {
    key: 'executeUpdate',

    /**
     * 执行更新语句
     */
    value: function executeUpdate(option) {
      var updateObjArray = [];
      var i = 0;
      for (var key in option) {
        updateObjArray.push(key);
        updateObjArray.push('=?');
        updateObjArray.push(',');
        this.argsArray.splice(i++, 0, option[key]);
      }
      updateObjArray.pop();
      this.sqlArray.splice(0, 0, 'update ', this.tableName, ' set ', updateObjArray.join(''));

      return this.whereClause('update');
    }
  }, {
    key: 'executeInsert',


    /**
    * 执行查询语句
    */
    value: function executeInsert(option) {
      var statements = [];
      if (option instanceof Array) {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = option[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var obj = _step.value;

            var sqlArray = [];
            var argsArray = [];
            var labelArray = [];
            sqlArray.push('insert into ');
            sqlArray.push(this.tableName);
            sqlArray.push('(');
            for (var key in obj) {
              sqlArray.push(key);
              sqlArray.push(',');

              labelArray.push('?');
              argsArray.push(obj[key]);
            }
            sqlArray.pop();
            sqlArray.push(') values (');
            sqlArray.push(labelArray);
            sqlArray.push(')');
            statements.push({
              id: 'insert_id_' + generateUUID(),
              operation: 'insert',
              sql: sqlArray.join(''),
              args: argsArray
            });
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      } else {
        var sql = [];
        var argsArray = [];
        var labelArray = [];
        sql.push('insert into ');
        sql.push(this.tableName);
        sql.push('(');
        for (var _key in option) {
          sql.push(_key);
          sql.push(',');
          sql.push('?');
          argsArray.push(option[_key]);
        }
        sql.pop();
        sql.push(') values (');
        sql.push(labelArray);
        sql.push(')');
        statements.push({
          id: 'insert_id_' + generateUUID(),
          operation: 'insert',
          sql: sql.join(''),
          args: argsArray
        });
      }
      return statements;
    }

    /**
     * 执行查询语句
     */

  }, {
    key: 'executeSelect',
    value: function executeSelect() {
      this.sqlArray.splice(0, 0, 'select * from ', this.tableName);
      return this.whereClause('select');
    }
  }, {
    key: 'whereClause',
    value: function whereClause(type) {
      var statements = [];

      if (this.sqlArray[this.sqlArray.length - 1] == ' and ') {
        this.sqlArray.pop();
      }
      if (this.sqlArray[this.sqlArray.length - 1] == ' or ') {
        this.sqlArray.pop();
      }

      if (this.option.sort.length > 0) {
        this.sqlArray.push(' order by ');
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = this.option.sort[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var sort = _step2.value;

            this.sqlArray.push(sort.orderBy);
            this.sqlArray.push(' ');
            this.sqlArray.push(sort.type);
            this.sqlArray.push(',');
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }

        this.sqlArray.pop();
      }

      if (this.option.pageSize != 0) {
        this.sqlArray.push(' limit ');
        this.sqlArray.push(this.option.pageSize);
      }
      if (this.option.pageNum != 0) {
        this.sqlArray.push(' offset ');
        this.sqlArray.push(this.option.pageSize * (this.option.pageNum - 1));
      }
      var idType = '';
      if (type === 'select') {
        idType = 'findAll_id_';
      } else {
        idType = type + '_id_';
      }
      statements.push({
        id: idType + generateUUID(),
        operation: type,
        sql: this.sqlArray.join(''),
        args: this.argsArray
      });
      //初始化查询条件
      this.sqlArray = [];
      this.argsArray = [];
      this.option = {
        sort: [],
        pageSize: 0,
        pageNum: 0
      };
      return statements;
    }
  }]);

  return Table;
}();

var MUTable = {
  init: function init(tableName, db) {
    return new Table(tableName, db);
  }
};

exports.default = MUTable;

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(200).default;

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
// TODO: 不全
exports.default = {
  open: function open() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUDatePicker = {
  /**
   * 弹出日期拨盘组件
   */
  open: function open() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDatePicker', 'open', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUDatePicker;

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var isWeexNative = !(typeof window !== 'undefined' && window.Math === Math);

var MUDatePicker = {
  /**
   * 获取用户信息
   */
  open: function open() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: '',
        data: {
          // 返回格式化日期数据
          selectedDate: '2021-06-07 10:20:20'
        }
      });
    });
    return p;
  }
};
if (!isWeexNative) {
  MUDatePicker = __webpack_require__(56).default;
}
exports.default = MUDatePicker;

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(204)
}
var Component = __webpack_require__(7)(
  /* script */
  __webpack_require__(206),
  /* template */
  __webpack_require__(216),
  /* styles */
  injectStyle,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)
Component.options.__file = "/data/gitlab-runner/builds/bxZ2z3qA/0/muit-mobile/Hybrid/hybrid-components/mu-hybrid/mu-hybrid/mu_datePicker/index.vue"
if (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== "default" && key.substr(0, 2) !== "__"})) {console.error("named exports are not supported in *.vue files.")}
if (Component.options.functional) {console.error("[vue-loader] index.vue: functional components are not supported with templates, they should use render functions.")}

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-9bed3148", Component.options)
  } else {
    hotAPI.reload("data-v-9bed3148", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(205);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(11)("503c1434", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-9bed3148\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue", function() {
     var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-9bed3148\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./index.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _datetimePicker = __webpack_require__(207);

var _datetimePicker2 = _interopRequireDefault(_datetimePicker);

__webpack_require__(213);

var _popup = __webpack_require__(27);

var _popup2 = _interopRequireDefault(_popup);

__webpack_require__(55);

var _utils = __webpack_require__(10);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

exports.default = {
  name: 'mu-datePicker',
  componentName: 'mu-datePicker',
  data: function data() {
    return {
      date: '',
      show: false,
      current: new Date(),
      type: 'date',
      fontSize: '36px',

      minDate: '',
      maxDate: '',
      sortColumns: [],
      dateType: 'YEAR_MONTH_DAY',
      selectedDate: '',
      leftBtnText: '取消',
      rightBtnText: '完成'
    };
  },

  components: {
    'van-datetime-picker': _datetimePicker2.default,
    'van-popup': _popup2.default
  },
  computed: {
    minDateTime: function minDateTime() {
      if (this.minDate) {
        return new Date(Date.parse(this.minDate));
      }
      return new Date(new Date().getFullYear() - 1, 0, 1);
    },
    maxDateTime: function maxDateTime() {
      if (this.maxDate) {
        return new Date(Date.parse(this.maxDate));
      }
      return new Date(new Date().getFullYear() + 1, 11, 31);
    }
  },
  watch: {
    dateType: {
      handler: function handler(val) {
        switch (val) {
          case 'YEAR_MONTH_DAY':
            this.type = 'date';
            break;
          case 'HOUR_MINUTE':
            this.type = 'time';
            break;
          case 'YEAR_MONTH':
            this.type = 'year-month';
            break;
          case 'MMDD':
            this.type = 'month-day';
            break;
          case 'MONTH_DAY_WEEK_HOUR_MINUTE':
            this.type = 'weektime';
            break;
          case 'MONTH_DAY_WEEK':
            this.type = 'week';
            break;
          default:
            break;
        }
        this.formatValue();
      }
    },
    selectedDate: function selectedDate(val) {
      if (val) {
        this.formatValue();
      }
    }
  },
  updated: function updated() {
    var _$el$classList;

    // 移除类列表内指定的类值
    var className = (this.$el.className || '').match(/[^\s]*weex[^\s]*/g);
    className && (_$el$classList = this.$el.classList).remove.apply(_$el$classList, _toConsumableArray(className));
  },

  methods: {
    onConfirm: function onConfirm(date) {
      if (this.type === 'time') {
        var current = new Date();
        var year = current.getFullYear();
        var month = current.getMonth();
        var day = current.getDate();
        var hour = date.split(':')[0];
        var minute = date.split(':')[1];
        this.date = (0, _utils.timeFormat)(new Date(year, month, day, hour, minute).getTime(), 'yyyy-mm-dd hh:MM:ss');
      } else {
        this.date = (0, _utils.timeFormat)(new Date(date).getTime(), 'yyyy-mm-dd hh:MM:ss');
      }
      this.onCancel();
      this.callback(this.date);
    },
    formatValue: function formatValue() {
      if (this.type === 'time') {
        this.current = this.selectedDate || new Date().getHours() + ':' + new Date().getMinutes();
      } else {
        this.current = this.selectedDate ? new Date(Date.parse(this.selectedDate)) : new Date();
      }
    },
    onCancel: function onCancel() {
      this.show = false;
      this.formatValue();
    }
  }
};

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _utils = __webpack_require__(1);

var _TimePicker = _interopRequireDefault(__webpack_require__(208));

var _DatePicker = _interopRequireDefault(__webpack_require__(212));

var _createNamespace = (0, _utils.createNamespace)('datetime-picker'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

var _default = createComponent({
  props: (0, _extends2.default)({}, _TimePicker.default.props, _DatePicker.default.props),
  methods: {
    // @exposed-api
    getPicker: function getPicker() {
      return this.$refs.root.getPicker();
    }
  },
  render: function render() {
    var h = arguments[0];
    var Component = this.type === 'time' ? _TimePicker.default : _DatePicker.default;
    return h(Component, {
      "ref": "root",
      "class": bem(),
      "scopedSlots": this.$scopedSlots,
      "props": (0, _extends2.default)({}, this.$props),
      "on": (0, _extends2.default)({}, this.$listeners)
    });
  }
});

exports.default = _default;

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _utils = __webpack_require__(1);

var _string = __webpack_require__(19);

var _number = __webpack_require__(57);

var _shared = __webpack_require__(58);

var _createNamespace = (0, _utils.createNamespace)('time-picker'),
    createComponent = _createNamespace[0];

var _default = createComponent({
  mixins: [_shared.TimePickerMixin],
  props: (0, _extends2.default)({}, _shared.sharedProps, {
    minHour: {
      type: [Number, String],
      default: 0
    },
    maxHour: {
      type: [Number, String],
      default: 23
    },
    minMinute: {
      type: [Number, String],
      default: 0
    },
    maxMinute: {
      type: [Number, String],
      default: 59
    }
  }),
  computed: {
    ranges: function ranges() {
      return [{
        type: 'hour',
        range: [+this.minHour, +this.maxHour]
      }, {
        type: 'minute',
        range: [+this.minMinute, +this.maxMinute]
      }];
    }
  },
  watch: {
    filter: 'updateInnerValue',
    minHour: function minHour() {
      var _this = this;

      this.$nextTick(function () {
        _this.updateInnerValue();
      });
    },
    maxHour: 'updateInnerValue',
    minMinute: 'updateInnerValue',
    maxMinute: 'updateInnerValue',
    value: function value(val) {
      val = this.formatValue(val);

      if (val !== this.innerValue) {
        this.innerValue = val;
        this.updateColumnValue();
      }
    }
  },
  methods: {
    formatValue: function formatValue(value) {
      if (!value) {
        value = (0, _string.padZero)(this.minHour) + ":" + (0, _string.padZero)(this.minMinute);
      }

      var _value$split = value.split(':'),
          hour = _value$split[0],
          minute = _value$split[1];

      hour = (0, _string.padZero)((0, _number.range)(hour, this.minHour, this.maxHour));
      minute = (0, _string.padZero)((0, _number.range)(minute, this.minMinute, this.maxMinute));
      return hour + ":" + minute;
    },
    updateInnerValue: function updateInnerValue() {
      var _this$getPicker$getIn = this.getPicker().getIndexes(),
          hourIndex = _this$getPicker$getIn[0],
          minuteIndex = _this$getPicker$getIn[1];

      var _this$originColumns = this.originColumns,
          hourColumn = _this$originColumns[0],
          minuteColumn = _this$originColumns[1];
      var hour = hourColumn.values[hourIndex] || hourColumn.values[0];
      var minute = minuteColumn.values[minuteIndex] || minuteColumn.values[0];
      this.innerValue = this.formatValue(hour + ":" + minute);
      this.updateColumnValue();
    },
    onChange: function onChange(picker) {
      var _this2 = this;

      this.updateInnerValue();
      this.$nextTick(function () {
        _this2.$nextTick(function () {
          _this2.$emit('change', picker);
        });
      });
    },
    updateColumnValue: function updateColumnValue() {
      var _this3 = this;

      var formatter = this.formatter;
      var pair = this.innerValue.split(':');
      var values = [formatter('hour', pair[0]), formatter('minute', pair[1])];
      this.$nextTick(function () {
        _this3.getPicker().setValues(values);
      });
    }
  }
});

exports.default = _default;

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _utils = __webpack_require__(1);

var _event = __webpack_require__(9);

var _constant = __webpack_require__(29);

var _shared = __webpack_require__(59);

var _unit = __webpack_require__(25);

var _loading = _interopRequireDefault(__webpack_require__(30));

var _PickerColumn = _interopRequireDefault(__webpack_require__(210));

// Utils
// Components
var _createNamespace = (0, _utils.createNamespace)('picker'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1],
    t = _createNamespace[2];

var _default2 = createComponent({
  props: (0, _extends2.default)({}, _shared.pickerProps, {
    defaultIndex: {
      type: [Number, String],
      default: 0
    },
    columns: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    toolbarPosition: {
      type: String,
      default: 'top'
    },
    valueKey: {
      type: String,
      default: 'text'
    }
  }),
  data: function data() {
    return {
      children: [],
      formattedColumns: [],
      cancelButtonStyle: {
        color: this.cancelButtonColor
      },
      confirmButtonStyle: {
        color: this.confirmButtonColor
      }
    };
  },
  computed: {
    itemPxHeight: function itemPxHeight() {
      return this.itemHeight ? (0, _unit.unitToPx)(this.itemHeight) : _shared.DEFAULT_ITEM_HEIGHT;
    },
    dataType: function dataType() {
      var columns = this.columns;
      var firstColumn = columns[0] || {};

      if (firstColumn.children) {
        return 'cascade';
      }

      if (firstColumn.values) {
        return 'object';
      }

      return 'text';
    }
  },
  watch: {
    columns: {
      handler: 'format',
      immediate: true
    }
  },
  methods: {
    format: function format() {
      var columns = this.columns,
          dataType = this.dataType;

      if (dataType === 'text') {
        this.formattedColumns = [{
          values: columns
        }];
      } else if (dataType === 'cascade') {
        this.formatCascade();
      } else {
        this.formattedColumns = columns;
      }
    },
    formatCascade: function formatCascade() {
      var formatted = [];
      var cursor = {
        children: this.columns
      };

      while (cursor && cursor.children) {
        var _cursor$defaultIndex;

        var _cursor = cursor,
            children = _cursor.children;
        var defaultIndex = (_cursor$defaultIndex = cursor.defaultIndex) != null ? _cursor$defaultIndex : +this.defaultIndex;

        while (children[defaultIndex] && children[defaultIndex].disabled) {
          if (defaultIndex < children.length - 1) {
            defaultIndex++;
          } else {
            defaultIndex = 0;
            break;
          }
        }

        formatted.push({
          values: cursor.children,
          className: cursor.className,
          defaultIndex: defaultIndex
        });
        cursor = children[defaultIndex];
      }

      this.formattedColumns = formatted;
    },
    emit: function emit(event) {
      var _this = this;

      if (this.dataType === 'text') {
        this.$emit(event, this.getColumnValue(0), this.getColumnIndex(0));
      } else {
        var values = this.getValues(); // compatible with old version of wrong parameters
        // should be removed in next major version
        // see: https://github.com/youzan/vant/issues/5905

        if (this.dataType === 'cascade') {
          values = values.map(function (item) {
            return item[_this.valueKey];
          });
        }

        this.$emit(event, values, this.getIndexes());
      }
    },
    onCascadeChange: function onCascadeChange(columnIndex) {
      var cursor = {
        children: this.columns
      };
      var indexes = this.getIndexes();

      for (var i = 0; i <= columnIndex; i++) {
        cursor = cursor.children[indexes[i]];
      }

      while (cursor && cursor.children) {
        columnIndex++;
        this.setColumnValues(columnIndex, cursor.children);
        cursor = cursor.children[cursor.defaultIndex || 0];
      }
    },
    onChange: function onChange(columnIndex) {
      var _this2 = this;

      if (this.dataType === 'cascade') {
        this.onCascadeChange(columnIndex);
      }

      if (this.dataType === 'text') {
        this.$emit('change', this, this.getColumnValue(0), this.getColumnIndex(0));
      } else {
        var values = this.getValues(); // compatible with old version of wrong parameters
        // should be removed in next major version
        // see: https://github.com/youzan/vant/issues/5905

        if (this.dataType === 'cascade') {
          values = values.map(function (item) {
            return item[_this2.valueKey];
          });
        }

        this.$emit('change', this, values, columnIndex);
      }
    },
    // get column instance by index
    getColumn: function getColumn(index) {
      return this.children[index];
    },
    // @exposed-api
    // get column value by index
    getColumnValue: function getColumnValue(index) {
      var column = this.getColumn(index);
      return column && column.getValue();
    },
    // @exposed-api
    // set column value by index
    setColumnValue: function setColumnValue(index, value) {
      var column = this.getColumn(index);

      if (column) {
        column.setValue(value);

        if (this.dataType === 'cascade') {
          this.onCascadeChange(index);
        }
      }
    },
    // @exposed-api
    // get column option index by column index
    getColumnIndex: function getColumnIndex(columnIndex) {
      return (this.getColumn(columnIndex) || {}).currentIndex;
    },
    // @exposed-api
    // set column option index by column index
    setColumnIndex: function setColumnIndex(columnIndex, optionIndex) {
      var column = this.getColumn(columnIndex);

      if (column) {
        column.setIndex(optionIndex);

        if (this.dataType === 'cascade') {
          this.onCascadeChange(columnIndex);
        }
      }
    },
    // @exposed-api
    // get options of column by index
    getColumnValues: function getColumnValues(index) {
      return (this.children[index] || {}).options;
    },
    // @exposed-api
    // set options of column by index
    setColumnValues: function setColumnValues(index, options) {
      var column = this.children[index];

      if (column) {
        column.setOptions(options);
      }
    },
    // @exposed-api
    // get values of all columns
    getValues: function getValues() {
      return this.children.map(function (child) {
        return child.getValue();
      });
    },
    // @exposed-api
    // set values of all columns
    setValues: function setValues(values) {
      var _this3 = this;

      values.forEach(function (value, index) {
        _this3.setColumnValue(index, value);
      });
    },
    // @exposed-api
    // get indexes of all columns
    getIndexes: function getIndexes() {
      return this.children.map(function (child) {
        return child.currentIndex;
      });
    },
    // @exposed-api
    // set indexes of all columns
    setIndexes: function setIndexes(indexes) {
      var _this4 = this;

      indexes.forEach(function (optionIndex, columnIndex) {
        _this4.setColumnIndex(columnIndex, optionIndex);
      });
    },
    // @exposed-api
    confirm: function confirm() {
      this.children.forEach(function (child) {
        return child.stopMomentum();
      });
      this.emit('confirm');
    },
    cancel: function cancel() {
      this.emit('cancel');
    },
    genTitle: function genTitle() {
      var h = this.$createElement;
      var titleSlot = this.slots('title');

      if (titleSlot) {
        return titleSlot;
      }

      if (this.title) {
        return h("div", {
          "class": ['van-ellipsis', bem('title')]
        }, [this.title]);
      }
    },
    genCancel: function genCancel() {
      var h = this.$createElement;
      return h("button", {
        "attrs": {
          "type": "button"
        },
        "class": bem('cancel'),
        "on": {
          "click": this.cancel
        },
        "style": this.cancelButtonStyle
      }, [this.slots('cancel') || this.cancelButtonText || t('cancel')]);
    },
    genConfirm: function genConfirm() {
      var h = this.$createElement;
      return h("button", {
        "attrs": {
          "type": "button"
        },
        "class": bem('confirm'),
        "on": {
          "click": this.confirm
        },
        "style": this.confirmButtonStyle
      }, [this.slots('confirm') || this.confirmButtonText || t('confirm')]);
    },
    genToolbar: function genToolbar() {
      var h = this.$createElement;

      if (this.showToolbar) {
        var _ref;

        return h("div", {
          "class": [bem('toolbar', {
            'border': !this.hairline
          }), (_ref = {}, _ref[_constant.BORDER_BOTTOM] = this.hairline, _ref)]
        }, [this.slots() || [this.genCancel(), this.genTitle(), this.genConfirm()]]);
      }
    },
    genColumns: function genColumns() {
      var h = this.$createElement;
      var itemPxHeight = this.itemPxHeight; // 解决IOS 0.5px 不显示的问题

      var odd = itemPxHeight % 2 === 0;
      itemPxHeight = odd ? itemPxHeight : itemPxHeight + 1;
      var wrapHeight = itemPxHeight * this.visibleItemCount;
      var frameStyle = {
        height: itemPxHeight + "px",
        top: "calc(50% - " + (odd ? 0 : 2) + "px)"
      };
      var columnsStyle = {
        height: wrapHeight + "px"
      };
      var maskStyle = {
        backgroundSize: "100% " + (wrapHeight - itemPxHeight) / 2 + "px"
      };
      return h("div", {
        "class": bem('columns'),
        "style": columnsStyle,
        "on": {
          "touchmove": _event.preventDefault
        }
      }, [this.genColumnItems(), h("div", {
        "class": bem('mask'),
        "style": maskStyle
      }), h("div", {
        "class": [_constant.BORDER_UNSET_TOP_BOTTOM, bem('frame', {
          'border': !this.hairline
        })],
        "style": frameStyle
      })]);
    },
    genColumnItems: function genColumnItems() {
      var _this5 = this;

      var h = this.$createElement;
      return this.formattedColumns.map(function (item, columnIndex) {
        var _item$defaultIndex;

        return h(_PickerColumn.default, {
          "attrs": {
            "readonly": _this5.readonly,
            "valueKey": _this5.valueKey,
            "allowHtml": _this5.allowHtml,
            "zoom": _this5.zoom,
            "className": item.className,
            "itemHeight": _this5.itemPxHeight,
            "defaultIndex": (_item$defaultIndex = item.defaultIndex) != null ? _item$defaultIndex : +_this5.defaultIndex,
            "swipeDuration": _this5.swipeDuration,
            "visibleItemCount": _this5.visibleItemCount,
            "initialOptions": item.values
          },
          "scopedSlots": {
            option: _this5.$scopedSlots.option
          },
          "on": {
            "change": function change() {
              _this5.onChange(columnIndex);
            }
          }
        });
      });
    }
  },
  render: function render(h) {
    return h("div", {
      "class": bem()
    }, [this.toolbarPosition === 'top' ? this.genToolbar() : h(), this.loading ? h(_loading.default, {
      "class": bem('loading')
    }) : h(), this.slots('columns-top'), this.genColumns(), this.slots('columns-bottom'), this.toolbarPosition === 'bottom' ? this.genToolbar() : h()]);
  }
});

exports.default = _default2;

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _babelHelperVueJsxMergeProps = _interopRequireDefault(__webpack_require__(8));

var _deepClone = __webpack_require__(211);

var _utils = __webpack_require__(1);

var _number = __webpack_require__(57);

var _event = __webpack_require__(9);

var _touch = __webpack_require__(35);

var DEFAULT_DURATION = 200; // 惯性滑动思路:
// 在手指离开屏幕时，如果和上一次 move 时的间隔小于 `MOMENTUM_LIMIT_TIME` 且 move
// 距离大于 `MOMENTUM_LIMIT_DISTANCE` 时，执行惯性滑动

var MOMENTUM_LIMIT_TIME = 300;
var MOMENTUM_LIMIT_DISTANCE = 15;

var _createNamespace = (0, _utils.createNamespace)('picker-column'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

function getElementTranslateY(element) {
  var style = window.getComputedStyle(element);
  var transform = style.transform || style.webkitTransform;
  var translateY = transform.slice(7, transform.length - 1).split(', ')[5];
  return Number(translateY);
}

function isOptionDisabled(option) {
  return (0, _utils.isObject)(option) && option.disabled;
}

var _default2 = createComponent({
  mixins: [_touch.TouchMixin],
  props: {
    valueKey: String,
    readonly: Boolean,
    allowHtml: Boolean,
    zoom: Boolean,
    className: String,
    itemHeight: Number,
    defaultIndex: Number,
    swipeDuration: [Number, String],
    visibleItemCount: [Number, String],
    initialOptions: {
      type: Array,
      default: function _default() {
        return [];
      }
    }
  },
  data: function data() {
    return {
      offset: 0,
      duration: 0,
      options: (0, _deepClone.deepClone)(this.initialOptions),
      currentIndex: this.defaultIndex,
      moveIdex: this.defaultIndex
    };
  },
  created: function created() {
    if (this.$parent.children) {
      this.$parent.children.push(this);
    }

    this.setIndex(this.currentIndex);
  },
  mounted: function mounted() {
    this.bindTouchEvent(this.$el);
  },
  destroyed: function destroyed() {
    var children = this.$parent.children;

    if (children) {
      children.splice(children.indexOf(this), 1);
    }
  },
  watch: {
    initialOptions: 'setOptions',
    defaultIndex: function defaultIndex(val) {
      this.setIndex(val);
    }
  },
  computed: {
    count: function count() {
      return this.options.length;
    },
    baseOffset: function baseOffset() {
      return this.itemHeight * (this.visibleItemCount - 1) / 2;
    }
  },
  methods: {
    setOptions: function setOptions(options) {
      if (JSON.stringify(options) !== JSON.stringify(this.options)) {
        this.options = (0, _deepClone.deepClone)(options);
        this.setIndex(this.defaultIndex);
      }
    },
    onTouchStart: function onTouchStart(event) {
      if (this.readonly) {
        return;
      }

      this.touchStart(event);

      if (this.moving) {
        var translateY = getElementTranslateY(this.$refs.wrapper);
        this.offset = Math.min(0, translateY - this.baseOffset);
        this.startOffset = this.offset;
      } else {
        this.startOffset = this.offset;
      }

      this.duration = 0;
      this.transitionEndTrigger = null;
      this.touchStartTime = Date.now();
      this.momentumOffset = this.startOffset;
    },
    onTouchMove: function onTouchMove(event) {
      if (this.readonly) {
        return;
      }

      this.touchMove(event);

      if (this.direction === 'vertical') {
        this.moving = true;
        (0, _event.preventDefault)(event, true);
      }

      this.offset = (0, _number.range)(this.startOffset + this.deltaY, -(this.count * this.itemHeight), this.itemHeight);
      var index = this.getIndexByOffset(this.offset);
      this.moveIdex = this.adjustIndex(index) || 0;
      var now = Date.now();

      if (now - this.touchStartTime > MOMENTUM_LIMIT_TIME) {
        this.touchStartTime = now;
        this.momentumOffset = this.offset;
      }
    },
    onTouchEnd: function onTouchEnd() {
      var _this = this;

      if (this.readonly) {
        return;
      }

      var distance = this.offset - this.momentumOffset;
      var duration = Date.now() - this.touchStartTime;
      var allowMomentum = duration < MOMENTUM_LIMIT_TIME && Math.abs(distance) > MOMENTUM_LIMIT_DISTANCE;

      if (allowMomentum) {
        this.momentum(distance, duration);
        return;
      }

      var index = this.getIndexByOffset(this.offset);
      this.duration = DEFAULT_DURATION;
      this.setIndex(index, true); // compatible with desktop scenario
      // use setTimeout to skip the click event Emitted after touchstart

      setTimeout(function () {
        _this.moving = false;
      }, 0);
    },
    onTransitionEnd: function onTransitionEnd() {
      this.stopMomentum();
    },
    onClickItem: function onClickItem(index) {
      if (this.moving || this.readonly) {
        return;
      }

      this.transitionEndTrigger = null;
      this.duration = DEFAULT_DURATION;
      this.setIndex(index, true);
    },
    adjustIndex: function adjustIndex(index) {
      index = (0, _number.range)(index, 0, this.count);

      for (var i = index; i < this.count; i++) {
        if (!isOptionDisabled(this.options[i])) return i;
      }

      for (var _i = index - 1; _i >= 0; _i--) {
        if (!isOptionDisabled(this.options[_i])) return _i;
      }
    },
    getOptionText: function getOptionText(option) {
      if ((0, _utils.isObject)(option) && this.valueKey in option) {
        return option[this.valueKey];
      }

      return option;
    },
    setIndex: function setIndex(index, emitChange) {
      var _this2 = this;

      index = this.adjustIndex(index) || 0;
      this.moveIdex = index;
      var offset = -index * this.itemHeight;

      var trigger = function trigger() {
        if (index !== _this2.currentIndex) {
          _this2.currentIndex = index;

          if (emitChange) {
            _this2.$emit('change', index);
          }
        }
      }; // trigger the change event after transitionend when moving


      if (this.moving && offset !== this.offset) {
        this.transitionEndTrigger = trigger;
      } else {
        trigger();
      }

      this.offset = offset;
    },
    setValue: function setValue(value) {
      var options = this.options;

      for (var i = 0; i < options.length; i++) {
        if (this.getOptionText(options[i]) === value) {
          return this.setIndex(i);
        }
      }
    },
    getValue: function getValue() {
      return this.options[this.currentIndex];
    },
    getIndexByOffset: function getIndexByOffset(offset) {
      return (0, _number.range)(Math.round(-offset / this.itemHeight), 0, this.count - 1);
    },
    momentum: function momentum(distance, duration) {
      var speed = Math.abs(distance / duration);
      distance = this.offset + speed / 0.003 * (distance < 0 ? -1 : 1);
      var index = this.getIndexByOffset(distance);
      this.duration = +this.swipeDuration;
      this.setIndex(index, true);
    },
    stopMomentum: function stopMomentum() {
      this.moving = false;
      this.duration = 0;

      if (this.transitionEndTrigger) {
        this.transitionEndTrigger();
        this.transitionEndTrigger = null;
      }
    },
    genOptions: function genOptions() {
      var _this3 = this;

      var h = this.$createElement;
      var optionStyle = {
        height: this.itemHeight + "px"
      };
      return this.options.map(function (option, index) {
        var _domProps;

        var text = _this3.getOptionText(option);

        var disabled = isOptionDisabled(option);
        var scaleNum = 1 - Math.abs(_this3.moveIdex - index) * 0.1;

        if (_this3.zoom) {
          optionStyle = {
            transform: "scale(" + scaleNum + ")",
            height: _this3.itemHeight + "px"
          };
        }

        var data = {
          style: optionStyle,
          attrs: {
            role: 'button',
            tabindex: disabled ? -1 : 0
          },
          class: [bem('item', {
            disabled: disabled,
            selected: index === _this3.currentIndex
          })],
          on: {
            click: function click() {
              _this3.onClickItem(index);
            }
          }
        };
        var childData = {
          class: 'van-ellipsis',
          domProps: (_domProps = {}, _domProps[_this3.allowHtml ? 'innerHTML' : 'textContent'] = text, _domProps)
        };
        return h("li", (0, _babelHelperVueJsxMergeProps.default)([{}, data]), [_this3.slots('option', option) || h("div", (0, _babelHelperVueJsxMergeProps.default)([{}, childData]))]);
      });
    }
  },
  render: function render() {
    var h = arguments[0];
    var wrapperStyle = {
      transform: "translate3d(0, " + (this.offset + this.baseOffset) + "px, 0)",
      transitionDuration: this.duration + "ms",
      transitionProperty: this.duration ? 'all' : 'none'
    };
    return h("div", {
      "class": [bem(), this.className]
    }, [h("ul", {
      "ref": "wrapper",
      "style": wrapperStyle,
      "class": bem('wrapper'),
      "on": {
        "transitionend": this.onTransitionEnd
      }
    }, [this.genOptions()])]);
  }
});

exports.default = _default2;

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.deepClone = deepClone;

var _index = __webpack_require__(1);

function deepClone(obj) {
  if (!(0, _index.isDef)(obj)) {
    return obj;
  }

  if (Array.isArray(obj)) {
    return obj.map(function (item) {
      return deepClone(item);
    });
  }

  if (typeof obj === 'object') {
    var to = {};
    Object.keys(obj).forEach(function (key) {
      to[key] = deepClone(obj[key]);
    });
    return to;
  }

  return obj;
}

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _utils = __webpack_require__(1);

var _date = __webpack_require__(33);

var _string = __webpack_require__(19);

var _utils2 = __webpack_require__(39);

var _shared = __webpack_require__(58);

var currentYear = new Date().getFullYear();

var _createNamespace = (0, _utils.createNamespace)('date-picker'),
    createComponent = _createNamespace[0];

var _default2 = createComponent({
  mixins: [_shared.TimePickerMixin],
  props: (0, _extends2.default)({}, _shared.sharedProps, {
    type: {
      type: String,
      default: 'datetime'
    },
    minDate: {
      type: Date,
      default: function _default() {
        return new Date(currentYear - 10, 0, 1);
      },
      validator: _date.isDate
    },
    maxDate: {
      type: Date,
      default: function _default() {
        return new Date(currentYear + 10, 11, 31);
      },
      validator: _date.isDate
    }
  }),
  watch: {
    filter: 'updateInnerValue',
    minDate: function minDate() {
      var _this = this;

      this.$nextTick(function () {
        _this.updateInnerValue();
      });
    },
    maxDate: 'updateInnerValue',
    value: function value(val) {
      val = this.formatValue(val);

      if (val && val.valueOf() !== this.innerValue.valueOf()) {
        this.innerValue = val;
      }
    }
  },
  computed: {
    ranges: function ranges() {
      var _this$getBoundary = this.getBoundary('max', this.innerValue ? this.innerValue : this.minDate),
          maxYear = _this$getBoundary.maxYear,
          maxDate = _this$getBoundary.maxDate,
          maxMonth = _this$getBoundary.maxMonth,
          maxHour = _this$getBoundary.maxHour,
          maxMinute = _this$getBoundary.maxMinute;

      var _this$getBoundary2 = this.getBoundary('min', this.innerValue ? this.innerValue : this.minDate),
          minYear = _this$getBoundary2.minYear,
          minDate = _this$getBoundary2.minDate,
          minMonth = _this$getBoundary2.minMonth,
          minHour = _this$getBoundary2.minHour,
          minMinute = _this$getBoundary2.minMinute;

      var result = [{
        type: 'year',
        range: [minYear, maxYear]
      }, {
        type: 'month',
        range: [minMonth, maxMonth]
      }, {
        type: 'day',
        range: [minDate, maxDate]
      }, {
        type: 'week',
        range: [{
          minYear: minYear,
          minDate: minDate,
          minMonth: minMonth
        }, {
          maxYear: maxYear,
          maxDate: maxDate,
          maxMonth: maxMonth
        }]
      }, {
        type: 'hour',
        range: [minHour, maxHour]
      }, {
        type: 'minute',
        range: [minMinute, maxMinute]
      }];

      switch (this.type) {
        case 'date':
          result = result.slice(0, 3);
          break;

        case 'year-month':
          result = result.slice(0, 2);
          break;

        case 'month-day':
          result = result.slice(1, 3);
          break;

        case 'datehour':
          result = result.slice(0, 3).concat(result.slice(4, 5));
          break;

        case 'datetime':
          result = result.slice(0, 3).concat(result.slice(4));
          break;

        case 'week':
          result = result.slice(3, 4);
          break;

        case 'weektime':
          result = result.slice(3);
          break;
      }

      if (this.columnsOrder) {
        var columnsOrder = this.columnsOrder.concat(result.map(function (column) {
          return column.type;
        }));
        result.sort(function (a, b) {
          return columnsOrder.indexOf(a.type) - columnsOrder.indexOf(b.type);
        });
      }

      return result;
    }
  },
  methods: {
    formatValue: function formatValue(value) {
      if (!(0, _date.isDate)(value)) {
        return null;
      }

      value = Math.max(value, this.minDate.getTime());
      value = Math.min(value, this.maxDate.getTime());
      return new Date(value);
    },
    getBoundary: function getBoundary(type, value) {
      var _ref;

      var boundary = this[type + "Date"];
      var year = boundary.getFullYear();
      var month = 1;
      var date = 1;
      var hour = 0;
      var minute = 0;

      if (type === 'max') {
        month = 12;
        date = (0, _utils2.getMonthEndDay)(value.getFullYear(), value.getMonth() + 1);
        hour = 23;
        minute = 59;
      }

      if (value.getFullYear() === year) {
        month = boundary.getMonth() + 1;

        if (value.getMonth() + 1 === month) {
          date = boundary.getDate();

          if (value.getDate() === date) {
            hour = boundary.getHours();

            if (value.getHours() === hour) {
              minute = boundary.getMinutes();
            }
          }
        }
      }

      return _ref = {}, _ref[type + "Year"] = year, _ref[type + "Month"] = month, _ref[type + "Date"] = date, _ref[type + "Hour"] = hour, _ref[type + "Minute"] = minute, _ref;
    },
    updateInnerValue: function updateInnerValue() {
      var _this2 = this;

      var type = this.type;
      var indexes = this.getPicker().getIndexes();

      var getValue = function getValue(type) {
        var index = 0;

        _this2.originColumns.forEach(function (column, columnIndex) {
          if (type === column.type) {
            index = columnIndex;
          }
        });

        var values = _this2.originColumns[index].values;

        if (_this2.type === 'week' || _this2.type === 'weektime' && ['year', 'month', 'day'].includes(type)) {
          var _value = values[indexes[index]].value;
          return (0, _utils2.getTrueValue)(_value[type]);
        }

        return (0, _utils2.getTrueValue)(values[indexes[index]]);
      };

      var year;
      var month;
      var day;

      if (type === 'month-day') {
        year = (this.innerValue ? this.innerValue : this.minDate).getFullYear();
        month = getValue('month');
        day = getValue('day');
      } else {
        year = getValue('year');
        month = getValue('month');
        day = type === 'year-month' ? 1 : getValue('day');
      }

      var maxDay = (0, _utils2.getMonthEndDay)(year, month);
      day = day > maxDay ? maxDay : day;
      var hour = 0;
      var minute = 0;

      if (type === 'datehour') {
        hour = getValue('hour');
      }

      if (type === 'datetime' || type === 'weektime') {
        hour = getValue('hour');
        minute = getValue('minute');
      }

      var value = new Date(year, month - 1, day, hour, minute);
      this.innerValue = this.formatValue(value);
    },
    onChange: function onChange(picker) {
      var _this3 = this;

      this.updateInnerValue();
      this.$nextTick(function () {
        _this3.$nextTick(function () {
          _this3.$emit('change', picker);
        });
      });
    },
    updateColumnValue: function updateColumnValue() {
      var _this4 = this;

      var value = this.innerValue ? this.innerValue : this.minDate;
      var formatter = this.formatter;
      var values = this.originColumns.map(function (column) {
        switch (column.type) {
          case 'year':
            return formatter('year', "" + value.getFullYear());

          case 'month':
            return formatter('month', (0, _string.padZero)(value.getMonth() + 1));

          case 'day':
            return formatter('day', (0, _string.padZero)(value.getDate()));

          case 'hour':
            return formatter('hour', (0, _string.padZero)(value.getHours()));

          case 'minute':
            return formatter('minute', (0, _string.padZero)(value.getMinutes()));

          case 'week':
            return formatter('week', (0, _utils2.getWeekText)(value));

          default:
            // no default
            return null;
        }
      });
      this.$nextTick(function () {
        _this4.getPicker().setValues(values);
      });
    }
  }
});

exports.default = _default2;

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(12);
__webpack_require__(23);
__webpack_require__(214);

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(215);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-picker{position:relative;background-color:#fff;-webkit-user-select:none;user-select:none}.van-picker__toolbar{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:center;-webkit-align-items:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;height:48px}.van-picker__toolbar--border{border-bottom:1px solid #ebedf0}.van-picker__cancel,.van-picker__confirm{height:100%;padding:0 16px;font-size:16px;background-color:transparent;border:none;cursor:pointer}.van-picker__cancel:active,.van-picker__confirm:active{opacity:.7}.van-picker__confirm{color:#437acf}.van-picker__cancel{color:#999}.van-picker__title{max-width:50%;font-weight:500;font-size:17px;line-height:20px;text-align:center}.van-picker__columns{position:relative;display:-webkit-box;display:-webkit-flex;display:flex;cursor:grab}.van-picker__loading{position:absolute;top:0;right:0;bottom:0;left:0;z-index:3;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:center;-webkit-align-items:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;justify-content:center;color:#1989fa;background-color:rgba(255,255,255,.9)}.van-picker__frame{position:absolute;top:50%;right:0;left:0;z-index:2;-webkit-transform:translateY(-50%);transform:translateY(-50%);pointer-events:none}.van-picker__frame--border::after{border-width:2px 0}.van-picker__mask{position:absolute;top:0;left:0;z-index:1;width:100%;height:100%;background-image:-webkit-linear-gradient(top,hsla(0,0%,100%,.9),hsla(0,0%,100%,.4)),-webkit-linear-gradient(bottom,hsla(0,0%,100%,.9),hsla(0,0%,100%,.4));background-image:linear-gradient(180deg,hsla(0,0%,100%,.9),hsla(0,0%,100%,.4)),linear-gradient(0deg,hsla(0,0%,100%,.9),hsla(0,0%,100%,.4));background-repeat:no-repeat;background-position:top,bottom;-webkit-transform:translateZ(0);transform:translateZ(0);pointer-events:none}.van-picker-column{-webkit-box-flex:1;-webkit-flex:1;flex:1;overflow:hidden;font-size:17px}.van-picker-column__wrapper{-webkit-transition-timing-function:cubic-bezier(.23,1,.68,1);transition-timing-function:cubic-bezier(.23,1,.68,1)}.van-picker-column__item{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:center;-webkit-align-items:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;justify-content:center;padding:0 4px;color:#000}.van-picker-column__item--disabled{cursor:not-allowed;opacity:.3}", ""]);

// exports


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: " weex-ct weex-div",
    attrs: {
      "weex-type": "div"
    }
  }, [_c('van-popup', {
    attrs: {
      "position": "bottom"
    },
    model: {
      value: (_vm.show),
      callback: function($$v) {
        _vm.show = $$v
      },
      expression: "show"
    }
  }, [_c('van-datetime-picker', {
    attrs: {
      "type": _vm.type,
      "confirm-button-text": _vm.rightBtnText,
      "cancel-button-text": _vm.leftBtnText,
      "min-date": _vm.minDateTime,
      "max-date": _vm.maxDateTime,
      "columns-order": _vm.sortColumns,
      "data-evt-confirm": "",
      "data-evt-cancel": ""
    },
    on: {
      "confirm": _vm.onConfirm,
      "cancel": _vm.onCancel
    },
    model: {
      value: (_vm.current),
      callback: function($$v) {
        _vm.current = $$v
      },
      expression: "current"
    }
  })], 1)], 1)
},staticRenderFns: []}
module.exports.render._withStripped = true
if (false) {
  module.hot.accept()
  if (module.hot.data) {
     require("vue-hot-reload-api").rerender("data-v-9bed3148", module.exports)
  }
}

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(218).default;

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(56).default;

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUDevice = {
  /**
   * 监控截屏
   * @param {*} param1
   * @param {*} param2
   * @param {*} param3
   */

  screenshot: function screenshot() {
    var param1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        _windvane2.default.WindVane.call('MUDevice', 'screenshot', {}, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param1(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param2(err);
          reject(err);
        });
      } else {
        _windvane2.default.WindVane.call('MUDevice', 'screenshot', param1, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param2(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param3(err);
          reject(err);
        });
      }
    });
    return p;
  },
  setScreenOrientation: function setScreenOrientation() {
    var param1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        _windvane2.default.WindVane.call('MUDevice', 'setScreenOrientation', {}, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param1(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param2(err);
          reject(err);
        });
      } else {
        _windvane2.default.WindVane.call('MUDevice', 'setScreenOrientation', param1, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param2(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param3(err);
          reject(err);
        });
      }
    });
    return p;
  },
  lockScreenOrientation: function lockScreenOrientation() {
    var param1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        _windvane2.default.WindVane.call('MUDevice', 'lockScreenOrientation', {}, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param1(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param2(err);
          reject(err);
        });
      } else {
        _windvane2.default.WindVane.call('MUDevice', 'lockScreenOrientation', param1, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param2(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param3(err);
          reject(err);
        });
      }
    });
    return p;
  },
  getIMEI: function getIMEI() {
    var param1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        _windvane2.default.WindVane.call('MUDevice', 'getIMEI', {}, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param1(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param2(err);
          reject(err);
        });
      } else {
        _windvane2.default.WindVane.call('MUDevice', 'getIMEI', param1, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param2(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param3(err);
          reject(err);
        });
      }
    });
    return p;
  },
  getDeviceId: function getDeviceId() {
    var param1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        _windvane2.default.WindVane.call('MUDevice', 'getDeviceId', {}, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param1(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param2(err);
          reject(err);
        });
      } else {
        _windvane2.default.WindVane.call('MUDevice', 'getDeviceId', param1, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param2(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param3(err);
          reject(err);
        });
      }
    });
    return p;
  },
  vibrate: function vibrate() {
    var param1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        _windvane2.default.WindVane.call('MUDevice', 'vibrate', {}, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param1(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param2(err);
          reject(err);
        });
      } else {
        _windvane2.default.WindVane.call('MUDevice', 'vibrate', param1, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param2(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param3(err);
          reject(err);
        });
      }
    });
    return p;
  },
  cancelVibrate: function cancelVibrate() {
    var param1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        _windvane2.default.WindVane.call('MUDevice', 'cancelVibrate', {}, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param1(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param2(err);
          reject(err);
        });
      } else {
        _windvane2.default.WindVane.call('MUDevice', 'cancelVibrate', param1, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param2(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param3(err);
          reject(err);
        });
      }
    });
    return p;
  }
};

exports.default = MUDevice;

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var MUDevice = {
  screenshot: function screenshot(param1, param2, param3) {
    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        param1({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      } else {
        param2({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      }
    });
    return p;
  },
  setScreenOrientation: function setScreenOrientation(param1, param2, param3) {
    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        param1({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      } else {
        param2({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      }
    });
    return p;
  },
  lockScreenOrientation: function lockScreenOrientation(param1, param2, param3) {
    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        param1({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      } else {
        param2({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      }
    });
    return p;
  },
  getIMEI: function getIMEI(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        param1({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      } else {
        param2({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      }
    });
    return p;
  },
  getDeviceId: function getDeviceId(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        param1({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      } else {
        param2({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      }
    });
    return p;
  }
};

exports.default = MUDevice;

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(222).default;

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  screenshot: function screenshot() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  setScreenOrientation: function setScreenOrientation() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  lockScreenOrientation: function lockScreenOrientation() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  getIMEI: function getIMEI() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  getDeviceId: function getDeviceId() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DefaultMsg = {
  en_US: {
    INVALID_PARAM_ERROR: 'Invalid param, please try again later',
    TITLE: 'Prompt',
    CONFIRM_BUTTON: 'confirm',
    CANCEL_BUTTON: 'cancel'
  },
  zh_CN: {
    INVALID_PARAM_ERROR: '参数错误',
    TITLE: '提示',
    CONFIRM_BUTTON: '确定',
    CANCEL_BUTTON: '取消'
  }
};

var ExportModule = {
  judgeDefaultMsg: function judgeDefaultMsg(key) {
    var language = 'zh_CN';
    var userAgent = navigator.userAgent;
    var tmpArray = userAgent.split(' ');
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = tmpArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var item = _step.value;

        if (item.indexOf('language') !== -1) {
          language = item.split('/')[1];
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return DefaultMsg[language][key];
  },
  isPositiveNumber: function isPositiveNumber(num) {
    var reg = /^\d+(?=\.{0,1}\d+$|$)/;
    if (reg.test(num)) {
      return true;
    } else {
      return false;
    }
  },
  showAlert: function showAlert() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var _this = this;

    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      if (!option.title) {
        option.title = _this.judgeDefaultMsg('TITLE');
      }
      if (!option.buttonTitle) {
        option.buttonTitle = _this.judgeDefaultMsg('CONFIRM_BUTTON');
      }
      _windvane2.default.WindVane.call('MUDialog', 'showAlert', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },
  showConfirm: function showConfirm() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var _this2 = this;

    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      if (!option.title) {
        option.title = _this2.judgeDefaultMsg('TITLE');
      }
      if (!option.cancelButtonTitle) {
        option.cancelButtonTitle = _this2.judgeDefaultMsg('CANCEL_BUTTON');
      }
      if (!option.confirmButtonTitle) {
        option.confirmButtonTitle = _this2.judgeDefaultMsg('CONFIRM_BUTTON');
      }
      _windvane2.default.WindVane.call('MUDialog', 'showConfirm', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },
  showPrompt: function showPrompt() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var _this3 = this;

    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      if (!option.title) {
        option.title = _this3.judgeDefaultMsg('TITLE');
      }
      if (!option.cancelButtonTitle) {
        option.cancelButtonTitle = _this3.judgeDefaultMsg('CANCEL_BUTTON');
      }
      if (!option.confirmButtonTitle) {
        option.confirmButtonTitle = _this3.judgeDefaultMsg('CONFIRM_BUTTON');
      }
      if (option.charLimitLength && !_this3.isPositiveNumber(option.charLimitLength)) {
        failure({
          status: -1,
          message: _this3.judgeDefaultMsg('INVALID_PARAM_ERROR'),
          data: {},
          errorCode: 'INVALID_PARAM_ERROR'
        });
        // eslint-disable-next-line prefer-promise-reject-errors
        reject({
          status: -1,
          message: _this3.judgeDefaultMsg('INVALID_PARAM_ERROR'),
          data: {},
          errorCode: 'INVALID_PARAM_ERROR'
        });
        return p;
      } else {
        option.charLimitLength = parseInt(option.charLimitLength);
      }
      _windvane2.default.WindVane.call('MUDialog', 'showPrompt', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },


  /**
   * 弹出ActionSheet
   */
  showActionSheet: function showActionSheet() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDialog', 'showActionSheet', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = ExportModule;

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(60).default;

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(226)
}
var Component = __webpack_require__(7)(
  /* script */
  __webpack_require__(228),
  /* template */
  null,
  /* styles */
  injectStyle,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)
Component.options.__file = "/data/gitlab-runner/builds/bxZ2z3qA/0/muit-mobile/Hybrid/hybrid-components/mu-hybrid/mu-hybrid/mu_dialog/Dialog.vue"
if (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== "default" && key.substr(0, 2) !== "__"})) {console.error("named exports are not supported in *.vue files.")}

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-b528b03c", Component.options)
  } else {
    hotAPI.reload("data-v-b528b03c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(227);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(11)("d956c402", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b528b03c\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Dialog.vue", function() {
     var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-b528b03c\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Dialog.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

__webpack_require__(229);

var _dialog = __webpack_require__(232);

var _dialog2 = _interopRequireDefault(_dialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  name: 'MuDialog',
  components: {},
  data: function data() {
    return {};
  },
  updated: function updated() {},

  methods: {
    alert: function alert(_ref) {
      var title = _ref.title,
          message = _ref.message,
          confirmButtonText = _ref.confirmButtonText;

      return _dialog2.default.alert({ title: title, message: message, confirmButtonText: confirmButtonText });
    },
    confirm: function confirm(_ref2) {
      var title = _ref2.title,
          message = _ref2.message,
          confirmButtonText = _ref2.confirmButtonText,
          cancelButtonText = _ref2.cancelButtonText;

      return _dialog2.default.confirm({ title: title, message: message, confirmButtonText: confirmButtonText, cancelButtonText: cancelButtonText });
    }
  }
};

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(12);
__webpack_require__(21);
__webpack_require__(17);
__webpack_require__(18);
__webpack_require__(22);
__webpack_require__(23);
__webpack_require__(45);
__webpack_require__(230);

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(231);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-dialog{position:fixed;top:45%;left:50%;width:270px;overflow:hidden;font-size:17px;background-color:#fff;border-radius:8px;-webkit-transform:translate3d(-50%,-50%,0);transform:translate3d(-50%,-50%,0);-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transition:.3s;transition:.3s;-webkit-transition-property:opacity,-webkit-transform;transition-property:opacity,-webkit-transform;transition-property:transform,opacity;transition-property:transform,opacity,-webkit-transform}@media (max-width:321px){.van-dialog{width:90%}}.van-dialog__header{padding-top:18px;line-height:24px;text-align:center;color:#000}.van-dialog__header--isolated{padding:24px 0}.van-dialog__content--isolated{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-align:center;-webkit-align-items:center;align-items:center;min-height:80px}.van-dialog__message{-webkit-box-flex:1;-webkit-flex:1;flex:1;max-height:60vh;padding:18px 24px;overflow-y:auto;font-size:15px;line-height:22px;white-space:pre-wrap;text-align:center;word-wrap:break-word;-webkit-overflow-scrolling:touch}.van-dialog__message--has-title{padding-top:12px;color:#999}.van-dialog__message--left{text-align:left}.van-dialog__message--right{text-align:right}.van-dialog__footer{display:-webkit-box;display:-webkit-flex;display:flex;overflow:hidden;-webkit-user-select:none;user-select:none}.van-dialog__footer--border{border-top:1px solid #ddd}.van-dialog__cancel,.van-dialog__confirm{-webkit-box-flex:1;-webkit-flex:1;flex:1;height:50px;font-size:16px;color:#333;margin:0;border:0}.van-dialog__confirm,.van-dialog__confirm:active{color:#437acf}.van-dialog__confirm--border{border-left:1px solid #ddd}.van-dialog--round-button .van-dialog__footer{position:relative;height:auto;padding:8px 24px 16px}.van-dialog--round-button .van-dialog__message{padding-bottom:16px;color:#323233}.van-dialog--round-button .van-dialog__cancel,.van-dialog--round-button .van-dialog__confirm{height:36px;color:#fff}.van-dialog--round-button .van-dialog__confirm{background:#1989fa}.van-dialog--round-button .van-dialog__confirm--has-cancel{margin-left:12px}.van-dialog--round-button .van-dialog__cancel{background:#dcdee0}.van-dialog-bounce-enter{-webkit-transform:translate3d(-50%,-50%,0) scale(.7);transform:translate3d(-50%,-50%,0) scale(.7);opacity:0}.van-dialog-bounce-leave-active{-webkit-transform:translate3d(-50%,-50%,0) scale(.9);transform:translate3d(-50%,-50%,0) scale(.9);opacity:0}", ""]);

// exports


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _vue = _interopRequireDefault(__webpack_require__(13));

var _Dialog = _interopRequireDefault(__webpack_require__(233));

var _utils = __webpack_require__(1);

var instance;

function isInDocument(element) {
  return document.body.contains(element);
}

function initInstance() {
  if (instance) {
    instance.$destroy();
  }

  instance = new (_vue.default.extend(_Dialog.default))({
    el: document.createElement('div'),
    // avoid missing animation when first rendered
    propsData: {
      lazyRender: false
    }
  });
  instance.$on('input', function (value) {
    instance.value = value;
  });
}

function Dialog(options) {
  /* istanbul ignore if */
  if (_utils.isServer) {
    return Promise.resolve();
  }

  return new Promise(function (resolve, reject) {
    if (!instance || !isInDocument(instance.$el)) {
      initInstance();
    }

    (0, _extends2.default)(instance, Dialog.currentOptions, options, {
      resolve: resolve,
      reject: reject
    });
  });
}

Dialog.defaultOptions = {
  value: true,
  title: '',
  width: '',
  theme: null,
  hairline: false,
  message: '',
  overlay: true,
  className: '',
  allowHtml: true,
  lockScroll: true,
  transition: 'van-dialog-bounce',
  beforeClose: null,
  overlayClass: '',
  overlayStyle: null,
  messageAlign: '',
  messageStyle: null,
  getContainer: 'body',
  cancelButtonText: '',
  cancelButtonColor: null,
  confirmButtonText: '',
  confirmButtonColor: null,
  showConfirmButton: true,
  showCancelButton: false,
  closeOnPopstate: true,
  closeOnClickOverlay: false,
  callback: function callback(action) {
    instance[action === 'confirm' ? 'resolve' : 'reject'](action);
  }
};
Dialog.alert = Dialog;

Dialog.confirm = function (options) {
  return Dialog((0, _extends2.default)({
    showCancelButton: true
  }, options));
};

Dialog.close = function () {
  if (instance) {
    instance.value = false;
  }
};

Dialog.setDefaultOptions = function (options) {
  (0, _extends2.default)(Dialog.currentOptions, options);
};

Dialog.resetDefaultOptions = function () {
  Dialog.currentOptions = (0, _extends2.default)({}, Dialog.defaultOptions);
};

Dialog.resetDefaultOptions();

Dialog.install = function () {
  _vue.default.use(_Dialog.default);
};

Dialog.Component = _Dialog.default;
_vue.default.prototype.$dialog = Dialog;
var _default = Dialog;
exports.default = _default;

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _babelHelperVueJsxMergeProps = _interopRequireDefault(__webpack_require__(8));

var _utils = __webpack_require__(1);

var _constant = __webpack_require__(29);

var _popup = __webpack_require__(28);

var _button = _interopRequireDefault(__webpack_require__(50));

var _createNamespace = (0, _utils.createNamespace)('dialog'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1],
    t = _createNamespace[2];

var _default = createComponent({
  mixins: [(0, _popup.PopupMixin)()],
  props: {
    title: String,
    theme: String,
    hairline: Boolean,
    width: [Number, String],
    message: String,
    className: null,
    callback: Function,
    beforeClose: Function,
    messageAlign: String,
    messageStyle: Object,
    cancelButtonText: String,
    cancelButtonColor: String,
    confirmButtonText: String,
    confirmButtonColor: String,
    showCancelButton: Boolean,
    overlay: {
      type: Boolean,
      default: true
    },
    allowHtml: {
      type: Boolean,
      default: true
    },
    transition: {
      type: String,
      default: 'van-dialog-bounce'
    },
    showConfirmButton: {
      type: Boolean,
      default: true
    },
    closeOnPopstate: {
      type: Boolean,
      default: true
    },
    closeOnClickOverlay: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      loading: {
        confirm: false,
        cancel: false
      }
    };
  },
  methods: {
    onClickOverlay: function onClickOverlay() {
      this.handleAction('overlay');
    },
    handleAction: function handleAction(action) {
      var _this = this;

      this.$emit(action); // show not trigger close event when hidden

      if (!this.value) {
        return;
      }

      if (this.beforeClose) {
        this.loading[action] = true;
        this.beforeClose(action, function (state) {
          if (state !== false && _this.loading[action]) {
            _this.onClose(action);
          }

          _this.loading.confirm = false;
          _this.loading.cancel = false;
        });
      } else {
        this.onClose(action);
      }
    },
    onClose: function onClose(action) {
      this.close();

      if (this.callback) {
        this.callback(action);
      }
    },
    onOpened: function onOpened() {
      this.$emit('opened');
    },
    onClosed: function onClosed() {
      this.$emit('closed');
    },
    genRoundButtons: function genRoundButtons() {
      var _this2 = this;

      var h = this.$createElement;
      // TODO:
      var multiple = this.showCancelButton && this.showConfirmButton;
      return h("div", {
        "class": bem('footer')
      }, [this.showCancelButton && h(_button.default, {
        "attrs": {
          "round": true,
          "size": "large",
          "loading": this.loading.cancel,
          "text": this.cancelButtonText || t('cancel')
        },
        "class": bem('cancel'),
        "style": {
          backgroundColor: this.cancelButtonColor
        },
        "on": {
          "click": function click() {
            _this2.handleAction('cancel');
          }
        }
      }), this.showConfirmButton && h(_button.default, {
        "attrs": {
          "round": true,
          "size": "large",
          "loading": this.loading.confirm,
          "text": this.confirmButtonText || t('confirm')
        },
        "class": [bem('confirm', {
          'has-cancel': multiple
        })],
        "style": {
          backgroundColor: this.confirmButtonColor
        },
        "on": {
          "click": function click() {
            _this2.handleAction('confirm');
          }
        }
      })]);
    },
    genButtons: function genButtons() {
      var _ref,
          _this3 = this,
          _ref2;

      var h = this.$createElement;
      var multiple = this.showCancelButton && this.showConfirmButton;
      return h("div", {
        "class": [bem('footer', {
          'border': !this.hairline
        }), (_ref = {}, _ref[_constant.BORDER_TOP] = this.hairline, _ref)]
      }, [this.showCancelButton && h(_button.default, {
        "attrs": {
          "size": "large",
          "loading": this.loading.cancel,
          "text": this.cancelButtonText || t('cancel')
        },
        "class": bem('cancel'),
        "style": {
          color: this.cancelButtonColor
        },
        "on": {
          "click": function click() {
            _this3.handleAction('cancel');
          }
        }
      }), this.showConfirmButton && h(_button.default, {
        "attrs": {
          "size": "large",
          "loading": this.loading.confirm,
          "text": this.confirmButtonText || t('confirm')
        },
        "class": [bem('confirm', {
          'border': !this.hairline
        }), (_ref2 = {}, _ref2[_constant.BORDER_LEFT] = multiple && this.hairline, _ref2)],
        "style": {
          color: this.confirmButtonColor
        },
        "on": {
          "click": function click() {
            _this3.handleAction('confirm');
          }
        }
      })]);
    },
    genContent: function genContent(hasTitle, messageSlot) {
      var h = this.$createElement;

      if (messageSlot) {
        return h("div", {
          "class": bem('content')
        }, [messageSlot]);
      }

      var message = this.message,
          messageAlign = this.messageAlign;

      if (message) {
        var _bem, _domProps;

        var data = {
          class: bem('message', (_bem = {
            'has-title': hasTitle
          }, _bem[messageAlign] = messageAlign, _bem)),
          style: this.messageStyle,
          domProps: (_domProps = {}, _domProps[this.allowHtml ? 'innerHTML' : 'textContent'] = message, _domProps)
        };
        return h("div", {
          "class": bem('content', {
            isolated: !hasTitle
          })
        }, [h("div", (0, _babelHelperVueJsxMergeProps.default)([{}, data]))]);
      }
    }
  },
  render: function render() {
    var h = arguments[0];

    if (!this.shouldRender) {
      return;
    }

    var message = this.message;
    var messageSlot = this.slots();
    var title = this.slots('title') || this.title;
    var Title = title && h("div", {
      "class": bem('header', {
        isolated: !message && !messageSlot
      })
    }, [title]);
    return h("transition", {
      "attrs": {
        "name": this.transition
      },
      "on": {
        "afterEnter": this.onOpened,
        "afterLeave": this.onClosed
      }
    }, [h("div", {
      "directives": [{
        name: "show",
        value: this.value
      }],
      "attrs": {
        "role": "dialog",
        "aria-labelledby": this.title || message
      },
      "class": [bem([this.theme]), this.className],
      "style": {
        width: (0, _utils.addUnit)(this.width)
      }
    }, [Title, this.genContent(title, messageSlot), this.theme === 'round-button' ? this.genRoundButtons() : this.genButtons()])]);
  }
});

exports.default = _default;

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(235)
}
var Component = __webpack_require__(7)(
  /* script */
  __webpack_require__(237),
  /* template */
  __webpack_require__(242),
  /* styles */
  injectStyle,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)
Component.options.__file = "/data/gitlab-runner/builds/bxZ2z3qA/0/muit-mobile/Hybrid/hybrid-components/mu-hybrid/mu-hybrid/mu_dialog/ActionSheet.vue"
if (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== "default" && key.substr(0, 2) !== "__"})) {console.error("named exports are not supported in *.vue files.")}
if (Component.options.functional) {console.error("[vue-loader] ActionSheet.vue: functional components are not supported with templates, they should use render functions.")}

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2c1247c2", Component.options)
  } else {
    hotAPI.reload("data-v-2c1247c2", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(236);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(11)("ff8a51d8", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2c1247c2\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ActionSheet.vue", function() {
     var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2c1247c2\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./ActionSheet.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

__webpack_require__(238);

var _actionSheet = __webpack_require__(241);

var _actionSheet2 = _interopRequireDefault(_actionSheet);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } //
//
//
//
//
//

exports.default = {
  name: 'MuDialog',
  components: {
    VanActionSheet: _actionSheet2.default
  },
  data: function data() {
    return {
      show: false,
      actions: []
    };
  },
  updated: function updated() {
    var _$el$classList;

    // 移除类列表内指定的类值
    var className = (this.$el.className || '').match(/[^\s]*weex[^\s]*/g);
    className && (_$el$classList = this.$el.classList).remove.apply(_$el$classList, _toConsumableArray(className));
  },
  mounted: function mounted() {},

  methods: {
    onSelect: function onSelect(item, index) {
      this.show = false;
      this.callback(index);
    }
  }
};

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(12);
__webpack_require__(21);
__webpack_require__(17);
__webpack_require__(18);
__webpack_require__(22);
__webpack_require__(23);
__webpack_require__(239);

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(240);

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(4)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {
	module.hot.accept("!!../../../../css-loader/index.js!./index.css", function() {
		var newContent = require("!!../../../../css-loader/index.js!./index.css");

		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];

		var locals = (function(a, b) {
			var key, idx = 0;

			for(key in a) {
				if(!b || a[key] !== b[key]) return false;
				idx++;
			}

			for(key in b) idx--;

			return idx === 0;
		}(content.locals, newContent.locals));

		if(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');

		update(newContent);
	});

	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".van-action-sheet{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;max-height:80%;overflow:hidden;color:#323233}.van-action-sheet__content{-webkit-box-flex:1;-webkit-flex:1 auto;flex:1 auto;overflow-y:auto;-webkit-overflow-scrolling:touch}.van-action-sheet__cancel,.van-action-sheet__item{display:block;width:100%;padding:14px 16px;font-size:17px;background-color:#fff;border:none;cursor:pointer}.van-action-sheet__cancel:active,.van-action-sheet__item:active{background-color:#f2f3f5}.van-action-sheet__item{line-height:22px}.van-action-sheet__item--disabled,.van-action-sheet__item--loading{color:#c8c9cc}.van-action-sheet__item--disabled:active,.van-action-sheet__item--loading:active{background-color:#fff}.van-action-sheet__item--disabled{cursor:not-allowed}.van-action-sheet__item--loading{cursor:default}.van-action-sheet__cancel{-webkit-flex-shrink:0;flex-shrink:0;box-sizing:border-box;color:#646566}.van-action-sheet__subname{margin-top:8px;color:#969799;font-size:12px;line-height:18px}.van-action-sheet__gap{display:block;height:8px;background-color:#f7f8fa}.van-action-sheet__header{-webkit-flex-shrink:0;flex-shrink:0;font-weight:500;font-size:17px;line-height:48px;text-align:center}.van-action-sheet__description{position:relative;-webkit-flex-shrink:0;flex-shrink:0;padding:20px 16px;color:#969799;font-size:15px;line-height:20px;text-align:center}.van-action-sheet__description::after{position:absolute;box-sizing:border-box;content:' ';pointer-events:none;right:16px;bottom:0;left:16px;border-bottom:1px solid #ebedf0;-webkit-transform:scaleY(.5);transform:scaleY(.5)}.van-action-sheet__loading-icon .van-loading__spinner{width:22px;height:22px}.van-action-sheet__close{position:absolute;top:0;right:0;padding:0 16px;color:#c8c9cc;font-size:22px;line-height:inherit}.van-action-sheet__close:active{color:#969799}", ""]);

// exports


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(2);

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(__webpack_require__(5));

var _babelHelperVueJsxMergeProps = _interopRequireDefault(__webpack_require__(8));

var _vue = _interopRequireDefault(__webpack_require__(13));

var _utils = __webpack_require__(1);

var _functional = __webpack_require__(14);

var _popup = __webpack_require__(28);

var _icon = _interopRequireDefault(__webpack_require__(24));

var _popup2 = _interopRequireDefault(__webpack_require__(27));

var _loading = _interopRequireDefault(__webpack_require__(30));

// Utils
// Mixins
// Components
var _createNamespace = (0, _utils.createNamespace)('action-sheet'),
    createComponent = _createNamespace[0],
    bem = _createNamespace[1];

function ActionSheet(h, props, slots, ctx) {
  var title = props.title,
      cancelText = props.cancelText,
      closeable = props.closeable;

  function onCancel() {
    (0, _functional.emit)(ctx, 'input', false);
    (0, _functional.emit)(ctx, 'cancel');
  }

  function Header() {
    if (title) {
      return h("div", {
        "class": bem('header')
      }, [title, closeable && h(_icon.default, {
        "attrs": {
          "name": props.closeIcon
        },
        "class": bem('close'),
        "on": {
          "click": onCancel
        }
      })]);
    }
  }

  function Option(item, index) {
    var disabled = item.disabled,
        loading = item.loading,
        callback = item.callback;

    function onClickOption(event) {
      event.stopPropagation();

      if (disabled || loading) {
        return;
      }

      if (callback) {
        callback(item);
      }

      if (props.closeOnClickAction) {
        (0, _functional.emit)(ctx, 'input', false);
      }

      _vue.default.nextTick(function () {
        (0, _functional.emit)(ctx, 'select', item, index);
      });
    }

    function OptionContent() {
      if (loading) {
        return h(_loading.default, {
          "class": bem('loading-icon')
        });
      }

      return [h("span", {
        "class": bem('name')
      }, [item.name]), item.subname && h("div", {
        "class": bem('subname')
      }, [item.subname])];
    }

    return h("button", {
      "attrs": {
        "type": "button"
      },
      "class": [bem('item', {
        disabled: disabled,
        loading: loading
      }), item.className],
      "style": {
        color: item.color
      },
      "on": {
        "click": onClickOption
      }
    }, [OptionContent()]);
  }

  function CancelText() {
    if (cancelText) {
      return [h("div", {
        "class": bem('gap')
      }), h("button", {
        "attrs": {
          "type": "button"
        },
        "class": bem('cancel'),
        "on": {
          "click": onCancel
        }
      }, [cancelText])];
    }
  }

  function Description() {
    var description = (slots.description == null ? void 0 : slots.description()) || props.description;

    if (description) {
      return h("div", {
        "class": bem('description')
      }, [description]);
    }
  }

  return h(_popup2.default, (0, _babelHelperVueJsxMergeProps.default)([{
    "class": bem(),
    "attrs": {
      "position": "bottom",
      "round": props.round,
      "value": props.value,
      "overlay": props.overlay,
      "duration": props.duration,
      "lazyRender": props.lazyRender,
      "lockScroll": props.lockScroll,
      "getContainer": props.getContainer,
      "closeOnPopstate": props.closeOnPopstate,
      "closeOnClickOverlay": props.closeOnClickOverlay,
      "safeAreaInsetBottom": props.safeAreaInsetBottom
    }
  }, (0, _functional.inherit)(ctx, true)]), [Header(), Description(), h("div", {
    "class": bem('content')
  }, [props.actions && props.actions.map(Option), slots.default == null ? void 0 : slots.default()]), CancelText()]);
}

ActionSheet.props = (0, _extends2.default)({}, _popup.popupMixinProps, {
  title: String,
  actions: Array,
  duration: [Number, String],
  cancelText: String,
  description: String,
  getContainer: [String, Function],
  closeOnPopstate: Boolean,
  closeOnClickAction: Boolean,
  round: {
    type: Boolean,
    default: true
  },
  closeable: {
    type: Boolean,
    default: true
  },
  closeIcon: {
    type: String,
    default: 'cross'
  },
  safeAreaInsetBottom: {
    type: Boolean,
    default: true
  },
  overlay: {
    type: Boolean,
    default: true
  },
  closeOnClickOverlay: {
    type: Boolean,
    default: true
  }
});

var _default = createComponent(ActionSheet);

exports.default = _default;

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: " weex-ct weex-div",
    attrs: {
      "weex-type": "div"
    }
  }, [_vm._v("\n  1111" + _vm._s(_vm.show) + "\n  "), _c('van-action-sheet', {
    attrs: {
      "actions": _vm.actions,
      "data-evt-select": ""
    },
    on: {
      "select": _vm.onSelect
    },
    model: {
      value: (_vm.show),
      callback: function($$v) {
        _vm.show = $$v
      },
      expression: "show"
    }
  })], 1)
},staticRenderFns: []}
module.exports.render._withStripped = true
if (false) {
  module.hot.accept()
  if (module.hot.data) {
     require("vue-hot-reload-api").rerender("data-v-2c1247c2", module.exports)
  }
}

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(60).default;

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUDocCenter = {

  /**
   * 下载
   * @param {*} option 参数
   * @param {*} success 成功回调
   * @param {*} failure 失败回调
   */
  download: function download() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDocCenter', 'download', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
        success(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
        failure(err);
      });
    });
    return p;
  },


  /**
  * 查询
  * @param {*} option 参数
  * @param {*} success 成功回调
  * @param {*} failure 失败回调
  */
  query: function query() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDocCenter', 'query', option, function (res) {
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },


  /**
  * 打开文件
  * @param {*} option 参数
  * @param {*} success 成功回调
  * @param {*} failure 失败回调
  */
  open: function open() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDocCenter', 'open', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },


  /**
  * 查询
  * @param {*} option 参数
  * @param {*} success 成功回调
  * @param {*} failure 失败回调
  */
  delete: function _delete() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDocCenter', 'delete', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },

  /**
  * 上传
  * @param {*} option 参数
  * @param {*} success 成功回调
  * @param {*} failure 失败回调
  */
  upload: function upload() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDocCenter', 'upload', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },

  /**
   * 批量下载
   * @param {*} option 参数
   * @param {*} success 成功回调
   * @param {*} failure 失败回调
   */
  batchDownload: function batchDownload() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDocCenter', 'batchDownload', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
        success(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
        failure(err);
      });
    });
    return p;
  },

  /**
   * 文件名称修改
   * @param {*} option 参数
   * @param {*} success 成功回调
   * @param {*} failure 失败回调
   */
  modify: function modify() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDocCenter', 'modify', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
        success(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
        failure(err);
      });
    });
    return p;
  }
}; /*
    * @Description: MUDocCenter
    * @version: 1.0.0
    * @Author: liyanling3
    * @Date: 2020-06-12 13:21:02
    * @LastEditors: lee9527
    * @LastEditTime: 2021-05-25 15:41:56
    */
exports.default = MUDocCenter;

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Description: MUDocCenter
 * @version: 1.0.0
 * @Author: liyanling3
 * @Date: 2020-06-12 13:21:02
 * @LastEditors: xiaoyang
 * @LastEditTime: 2023-02-13 10:57:57
 */

var querySet = [{
  createTime: '2020.06.15',
  desc: '',
  extension: 'folder',
  folder: [{
    createTime: '2020.06.15',
    desc: '',
    extension: 'folder',
    folder: [{
      createTime: '2020-03-06 14:11',
      extension: 'xls',
      name: '移动地服交叉测试.xls',
      path: '/待办文件/广播词/移动地服交叉测试.xls',
      pinyin: 'yidongdifujiaochaceshi',
      size: '22.50K',
      type: 'file'
    }, {
      createTime: '2020-05-22 17:36',
      extension: 'docx',
      name: '地服领域工作安排.docx',
      path: '/待办文件/广播词/地服领域工作安排.docx',
      pinyin: 'difulingyugongzuoanpai',
      size: '13.70K',
      type: 'file'
    }],
    name: '广播词',
    path: '/待办文件/广播词',
    pinyin: 'guangboci',
    size: '36.20K',
    type: 'folder'
  }, {
    createTime: '2020-06-10 17:22',
    extension: 'xlsx',
    name: '工作态度得分—cc.xlsx',
    path: '/待办文件/工作态度得分—cc.xlsx',
    pinyin: 'gongzuotaidudefen—cc',
    size: '18.86K',
    type: 'file'
  }],
  name: '待办文件',
  path: '/待办文件',
  pinyin: 'daibanwenjian',
  size: '78.29K',
  type: 'folder'
}, {
  createTime: '2020.06.15',
  desc: '',
  extension: 'folder',
  folder: [{
    createTime: '2019-09-27 09:20',
    extension: 'xlsx',
    name: '移动飞行接口拆分信息统计.xlsx',
    path: '/客舱文件/移动飞行接口拆分信息统计.xlsx',
    pinyin: 'yidongfeixingjiekouchaifenxinxitongji',
    size: '35.81K',
    type: 'file'
  }, {
    createTime: '2020-01-09 15:25',
    extension: 'xlsx',
    name: '空保勤务通.xlsx',
    path: '/客舱文件/空保勤务通.xlsx',
    pinyin: 'kongbaoqinwutong',
    size: '12.54K',
    type: 'file'
  }],
  name: '客舱文件',
  path: '/客舱文件',
  pinyin: 'kecangwenjian',
  size: '48.35K',
  type: 'folder'
}, {
  createTime: '2020.06.17',
  desc: '待办类工作信息文djdj件',
  extension: 'folder',
  folder: [{
    createTime: '2020-02-12 18:49',
    extension: 'pdf',
    name: '张文宏抗新冠（赠市民阅读版）.pdf',
    path: '/部门文件/张文宏抗新冠（赠市民阅读版）.pdf',
    pinyin: 'zhangwenhongkangxinguan（zengshiminyueduban）',
    size: '2.74M',
    type: 'file'
  }],
  name: '部门文件',
  path: '/部门文件',
  pinyin: 'bumenwenjian',
  size: '2.99M',
  type: 'folder'
}, {
  createTime: '2020-04-02 09:10',
  extension: 'xlsx',
  name: 'EMAS-crash整理.xlsx',
  path: '/EMAS-crash整理.xlsx',
  pinyin: 'EMAS-crashzhengli',
  size: '19.92K',
  type: 'file'
}, {
  createTime: '2020-03-06 17:17',
  extension: 'xlsx',
  name: '听云监控-幸福积分.xlsx',
  path: '/听云监控-幸福积分.xlsx',
  pinyin: 'tingyunjiankong-xingfujifen',
  size: '98.30K',
  type: 'file'
}, {
  createTime: '2020.06.16',
  desc: '',
  extension: 'folder',
  folder: [{
    createTime: '2020.06.16',
    desc: '',
    extension: 'folder',
    folder: [{
      createTime: '2020-06-16 09:48',
      extension: 'xlsx',
      name: '测试文件.xlsx',
      path: '/部门文件一/测试文件夹/测试文件.xlsx',
      pinyin: 'ceshiwenjian',
      size: '8.11K',
      type: 'file'
    }],
    name: '测试文件夹',
    path: '/部门文件一/测试文件夹',
    pinyin: 'ceshiwenjianjia',
    size: '8.11K',
    type: 'folder'
  }],
  name: '部门文件一',
  path: '/部门文件一',
  pinyin: 'bumenwenjianyi',
  size: '8.11K',
  type: 'folder'
}, {
  createTime: '2020.06.16',
  desc: '',
  extension: 'folder',
  folder: [{
    createTime: '2020-06-16 10:46',
    extension: 'pdf',
    name: '形形色色.pdf',
    path: '/部门文件三/形形色色.pdf',
    pinyin: 'xingxingsese',
    size: '21.94K',
    type: 'file'
  }],
  name: '部门文件三',
  path: '/部门文件三',
  pinyin: 'bumenwenjiansan',
  size: '21.94K',
  type: 'folder'
}, {
  createTime: '2020-06-09 16:06',
  extension: 'pdf',
  name: '文档管理中心组件数据结构.pdf',
  path: '/文档管理中心组件数据结构.pdf',
  pinyin: 'wendangguanlizhongxinzujianshujujiegou',
  size: '31.34K',
  type: 'file'
}];

var MUDocCenter = {
  /**
   * 下载
   * @param {*} option 参数
   * @param {*} success 成功回调
   * @param {*} failure 失败回调
   */
  download: function download() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      var successRes = {
        status: 0,
        message: '',
        data: { path: 'file://' + option.folder + '/' + option.fileName }
      };
      success(successRes);
      resolve(successRes);
    });
    return p;
  },


  /**
   * 查询
   * @param {*} option 参数
   * @param {*} success 成功回调
   * @param {*} failure 失败回调
   */
  query: function query() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      var successRes = {
        status: 0,
        message: '',
        data: {
          resultSet: JSON.stringify(querySet)
        }
      };
      success(successRes);
      resolve(successRes);
    });
    return p;
  },


  /**
   * 打开文件
   * @param {*} option 参数
   * @param {*} success 成功回调
   * @param {*} failure 失败回调
   */
  open: function open() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      var successRes = {
        status: 0,
        message: '',
        data: {}
      };
      success(successRes);
      resolve(successRes);
    });
    return p;
  },


  /**
   * 删除
   * @param {*} option 参数
   * @param {*} success 成功回调
   * @param {*} failure 失败回调
   */
  delete: function _delete() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      var successRes = {
        status: 0,
        message: '',
        data: {}
      };
      success(successRes);
      resolve(successRes);
    });
    return p;
  },

  /**
   * 上传
   * @param {*} option 参数
   * @param {*} success 成功回调
   * @param {*} failure 失败回调
   */
  upload: function upload() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      var successRes = {
        status: 0,
        message: '',
        data: {}
      };
      success(successRes);
      resolve(successRes);
    });
    return p;
  },

  /**
   * 批量下载
   * @param {*} option 参数
   * @param {*} success 成功回调
   * @param {*} failure 失败回调
   */
  batchDownload: function batchDownload() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      var successRes = {
        status: 0,
        message: '',
        data: {}
      };
      success(successRes);
      resolve(successRes);
    });
    return p;
  },

  /**
   * 文件名称修改
   * @param {*} option 参数
   * @param {*} success 成功回调
   * @param {*} failure 失败回调
   */
  modify: function modify() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      var successRes = {
        status: 0,
        message: '',
        data: {}
      };
      success(successRes);
      resolve(successRes);
    });
    return p;
  }
};

exports.default = MUDocCenter;

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(247).default;

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  download: function download() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    failure({
      status: -1,
      message: '暂不支持 ',
      data: {}
    });
  },
  query: function query() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    failure({
      status: -1,
      message: '暂不支持 ',
      data: {}
    });
  },
  open: function open() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    failure({
      status: -1,
      message: '暂不支持 ',
      data: {}
    });
  },
  delete: function _delete() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    failure({
      status: -1,
      message: '暂不支持 ',
      data: {}
    });
  },
  upload: function upload() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    failure({
      status: -1,
      message: '暂不支持 ',
      data: {}
    });
  },
  batchDownload: function batchDownload() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    failure({
      status: -1,
      message: '暂不支持 ',
      data: {}
    });
  },
  modify: function modify() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    failure({
      status: -1,
      message: '暂不支持 ',
      data: {}
    });
  }
};

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUDocumentReader = {
  /**
   * 打开附件
   * @param {{String}} option.url 地址
   */
  readDocument: function readDocument() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDocumentReader', 'readDocument', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },


  /**
   * 关闭附件（安卓无此方法）
   */
  close: function close() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUDocumentReader', 'close', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUDocumentReader;

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MUDocumentReader = {
  readDocument: function readDocument(options) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'MUDocumentReader ',
        data: options
      });
    });
    return p;
  },
  close: function close(options) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'MUDocumentReader ',
        data: options
      });
    });
    return p;
  }
};

exports.default = MUDocumentReader;

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(251).default;

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  readDocument: function readDocument() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  close: function close() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: lee9527
 * @Date: 2021-01-05 09:06:11
 * @LastEditors: xiaoyang
 * @LastEditTime: 2021-04-23 18:19:39
 * @Description:
 * @FilePath: /mu-hybrid/mu-hybrid/mu_epass/mock.js
 * @version: 1.0.0
 */
var MUEpass = {
  /**
   * 关联用户信息(崩溃信息跟用户做关联)
   * @param {{String}} option.userIdentifier 用户账户信息
   */
  authQR: function authQR(option) {
    var p = new Promise(function (resolve, reject) {
      resolve(option.content);
    });
    return p;
  },
  getOTP: function getOTP(option) {
    var p = new Promise(function (resolve, reject) {
      var code = Math.floor(Math.random() * 10) + '1' + Math.floor(Math.random() * 10) + '2' + Math.floor(Math.random() * 10) + '3';
      resolve({ status: 0, message: '', data: { code: code, timeout: 30000 } });
    });
    return p;
  }
};

exports.default = MUEpass;

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(254).default;

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  authQR: function authQR() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  getOTP: function getOTP() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUErrorHandler = {
  /**
   * 处理报错
   * @param {{String}} option.errorMessage 内容
   */
  handleError: function handleError() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUErrorHandler', 'handleError', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUErrorHandler;

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MUErrorHandler = {
  handleError: function handleError(options) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'MUErrorHandler ',
        data: options
      });
    });
    return p;
  }
};

exports.default = MUErrorHandler;

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(258).default;

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  handleError: function handleError() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUEventCenter = {
  /**
   * 监听事件
   */
  listen: function listen() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUEventCenter', 'listen', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
        success(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
        failure(err);
      });
    });
    return p;
  },


  /**
   * 取消监听
   */
  cancelListen: function cancelListen() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUEventCenter', 'cancelListen', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },


  /**
   * 发送事件
   */
  emit: function emit() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUEventCenter', 'emit', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUEventCenter;

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * <!-- ©Copyright 2020 China Eastern Airlines. All rights reserved. -->
 * <!-- Created by <songdiyuan@ceair.com> on 2020-07-20 -->
 */

var MUEventCenter = {
  /**
   * 监听事件
   */
  listen: function listen() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'web环境返回mock数据',
        data: {}
      });
    });
    return p;
  },

  /**
   * 取消监听
   */
  cancelListen: function cancelListen() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'web环境返回mock数据',
        data: {}
      });
    });
    return p;
  },

  /**
   * 发送事件
   */
  emit: function emit() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'web环境返回mock数据',
        data: {}
      });
    });
    return p;
  }
};

exports.default = MUEventCenter;

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*
 * @Author: wangjie59 wangjie59@ceair.com
 * @Date: 2022-11-30 14:02:31
 * @LastEditors: wangjie59 wangjie59@ceair.com
 * @LastEditTime: 2022-12-01 18:07:15
 * @FilePath: /mu-hybrid/mu-hybrid/mu_eventCenter/pc.js
 * @Description:
 * @version: 1.0.0
 */
var getChannel = function getChannel(options) {
  var _options$channel = options.channel,
      channel = _options$channel === undefined ? 'default' : _options$channel,
      _options$name = options.name,
      name = _options$name === undefined ? '' : _options$name;

  return window.NativeApi.config.types.MU_EVENT_CENTER + '_' + channel + '_' + name;
};

var MUEventCenter = {
  /**
   * @author: wangjie59
   * @description: 监听事件
   * @param {object} option 监听事件参数
   * @param {string} option.name 事件名 如：login 代表登录事件
   * @param {string} option.channel 频道名 default 只能接收同频道的事件
   * @return {promise} 监听结果
   * @example
   * ```js
   * MuEventCenter.listen({
   *   name: 'click',
   *   channel: 'default',
   * })
   * ```
   */
  listen: function listen() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    if (!option.name) {
      // eslint-disable-next-line prefer-promise-reject-errors
      failure({
        status: -1,
        message: 'name cannot be empty',
        data: {}
      });
      return;
    }

    try {
      window.NativeApi.muHybridService.registerEvent(getChannel(option), function (param) {
        success({
          status: 0,
          message: 'success',
          data: param.data
        });
      });
    } catch (error) {
      failure({
        status: -1,
        message: 'listen error',
        data: error.message
      });
    }
  },


  /**
   * @author: wangjie59
   * @description: 取消监听事件
   * @param {object} option 取消监听事件参数
   * @param {string} option.name 事件名 如：login 代表登录事件
   * @param {string} option.channel 频道名 default 只能接收同频道的事件
   * @return {promise} 监听结果
   * @example
   * ```js
   * MuEventCenter.cancelListen({
   *   name: 'click',
   *   channel: 'default',
   * })
   * ```
   */
  cancelListen: function cancelListen() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      if (!option.name) {
        // eslint-disable-next-line prefer-promise-reject-errors
        reject({
          status: -1,
          message: 'name cannot be empty',
          data: {}
        });
        return;
      }
      try {
        window.NativeApi.muHybridService.cancelListen(getChannel(option));
        resolve({
          status: 0,
          message: 'success',
          data: {}
        });
      } catch (error) {
        reject({
          status: -1,
          message: 'cancel listen error',
          data: error.message
        });
      }
    });
    return p;
  },


  /**
   * @author: wangjie59
   * @description: 发送事件
   * @param {object} option 发送事件参数
   * @param {string} option.name 事件名 如：login 代表登录事件
   * @param {string} option.channel 频道名 default 只能接收同频道的事件
   * @param {object} option.data 数据 事件携带的数据
   * @return {promise} 发送事件结果
   * @example
   * ```js
   * MuEventCenter.emit({
   *   name: 'click',
   *   channel: 'default',
   *   data: {
   *     name: "xiaoming",
   *     password: "12345",
   *   }
   * })
   * ```
   */
  emit: function emit() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      if (!option.name) {
        // eslint-disable-next-line prefer-promise-reject-errors
        reject({
          status: -1,
          message: 'name cannot be empty',
          data: {}
        });
        return;
      }
      if (!option.data || _typeof(option.data) !== 'object') {
        // eslint-disable-next-line prefer-promise-reject-errors
        reject({
          status: -1,
          message: 'data cannot be empty',
          data: {}
        });
        return;
      }

      var name = option.name,
          data = option.data;

      var channel = option.channel || 'default';

      try {
        window.NativeApi.notifier.sendNotification(window.NativeApi.config.types.MU_EVENT_CENTER, {
          name: name,
          channel: channel,
          data: data
        });
        resolve({
          status: 0,
          message: 'success',
          data: {}
        });
      } catch (error) {
        reject({
          status: -1,
          message: 'emit error',
          data: error.message
        });
      }
    });
    return p;
  }
};

exports.default = MUEventCenter;

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MUFileManager = {
  fileIsExist: function fileIsExist(option) {
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      success({
        status: 0,
        message: '',
        data: {
          exist: true
        }
      });
      resolve({
        status: 0,
        message: '',
        data: {
          exist: true
        }
      });
    });
    return p;
  },
  base64ToBin: function base64ToBin(option) {
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      success({
        status: 0,
        message: '',
        data: {
          filePath: '/storage/emulated/0/wx_info.txt'
        }
      });
    });
    return p;
  },
  binToBase64: function binToBase64(option) {
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      success({
        status: 0,
        message: '',
        data: {
          filePath: '/storage/emulated/0/wx_info.txt'
        }
      });
    });
    return p;
  },
  writeBase64: function writeBase64(option) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: '',
        data: option
      });
    });
    return p;
  },
  readBase64: function readBase64(option) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: '',
        data: {
          path: '/storage/emulated/0/wx_info.png'
        }
      });
    });
    return p;
  },
  deleteFile: function deleteFile(option) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: '',
        data: {}
      });
    });
    return p;
  },
  getFileInfo: function getFileInfo(option) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: '',
        data: {
          isFile: true,
          isFolder: false,
          size: 10038,
          digest: '...'
        }
      });
    });
    return p;
  }
};

exports.default = MUFileManager;

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(62).default;

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUGeoLocation = {
  query: function query(option, success, failure) {
    _windvane2.default.WindVane.call('MUGeolocation', 'query', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  getPostion: function getPostion(option, success, failure) {
    _windvane2.default.WindVane.call('MUGeolocation', 'getPostion', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  startLocating: function startLocating(option, success, failure) {
    _windvane2.default.WindVane.call('MUGeolocation', 'startLocating', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  stopLocating: function stopLocating(option, success, failure) {
    _windvane2.default.WindVane.call('MUGeolocation', 'stopLocating', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  }
};

exports.default = MUGeoLocation;

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MuGeoLocation = {
  query: function query(options, success, failure) {
    success({
      status: 0,
      message: 'MuGeolocation ',
      data: options
    });
  },
  getPostion: function getPostion(options, success, failure) {
    success({
      status: 0,
      message: 'MuGeolocation ',
      data: options
    });
  },
  startLocating: function startLocating(options, success, failure) {
    success({
      status: 0,
      message: 'MuGeolocation ',
      data: options
    });
  },
  stopLocating: function stopLocating(options, success, failure) {
    success({
      status: 0,
      message: 'MuGeolocation ',
      data: options
    });
  }
};

exports.default = MuGeoLocation;

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(267).default;

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  query: function query() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  getPostion: function getPostion() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  startLocating: function startLocating() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  stopLocating: function stopLocating() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: xiaoyang
 * @Date: 2023-02-06 16:41:34
 * @LastEditTime: 2023-02-13 11:28:26
 * @LastEditors: xiaoyang
 * @Description:
 * @FilePath: /mu-hybrid/mu-hybrid/mu_httpClient/mock.js
 * @version: 1.0.0
 */
exports.default = __webpack_require__(269).default;

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*
 * @Description: mock http request with axios
 * @Author: lexi
 * @Date: 2020-06-02 16:29:24
 * @LastEditTime: 2023-02-13 11:28:12
 * @LastEditors: xiaoyang
 */
var axios = __webpack_require__(270);

var MuHttpClient = {
  /**
   * 校验接口地址
   * @param {{string}} url 请求地址
   * @return {{bool}}返回校验结果
   */
  getInterfaceUrl: function getInterfaceUrl(url) {
    var reg = /(http|https):\/\/([\w.]+\/?)\S*/;
    return reg.test(url);
  },

  /**
   * 获取请求参数
   * @param {{all}} option 请求参数
   * @callback {{number, json}}     callback(errCode, param)回调返回值
   */
  getParam: function getParam(option, callback) {
    var param = void 0;
    var errCode = 0;
    // 只接受string，object类型
    switch (typeof option === 'undefined' ? 'undefined' : _typeof(option)) {
      // 默认全部传了。
      case 'object':
        param = option;
        break;
      // 默认只有get请求url，没其他东西
      case 'string':
        param = {
          url: option
        };
        break;
      default:
        errCode = 1;
        param = {
          status: -1,
          data: {},
          message: '请求参数格式不符合要求：' + (typeof option === 'undefined' ? 'undefined' : _typeof(option))
        };
        break;
    }

    // 设置默认缓存
    param.cacheStrategy === 'always' && !param.cacheTime && (param.cacheTime = 30);
    param.cacheStrategy === 'hybrid' && !param.cacheTime && (param.cacheTime = 30);

    this.getInterfaceUrl(option.url) ? callback(errCode, param) : // eslint-disable-next-line standard/no-callback-literal
    callback(1, {
      status: -1,
      data: {},
      message: '接口地址格式错误：' + option.url
    });
  },

  /**
   * 发送请求
   * @param {{string || json}} option 请求参数
   * @return {{object}} Promise
   */
  sendRequest: function sendRequest(method, option) {
    console.info('--------MUHttpClient.option------');
    console.info(option);

    // native端 超时单位是秒，保持一致
    option.timeout = option.timeout * 1000;

    var _this = this;
    var p = new Promise(function (resolve, reject) {
      var param = void 0;
      try {
        _this.getParam(option, function (errCode, data) {
          if (errCode) {
            reject(data);
          } else {
            data.method = method;
            param = data;
          }
        });
        // 调用请求前回调
        param.beforeSend && param.beforeSend();
        param.headers = param.header;
        axios(param).then(function (res) {
          // 跟原生httpClient返回数据结构保持一致
          var resData = res.data;
          try {
            if ((typeof resData === 'undefined' ? 'undefined' : _typeof(resData)) === 'object') {
              resData = JSON.stringify(resData);
            }
          } catch (error) {
            console.error('MuHttpClient mock ', error);
          }
          res.data = {
            data: resData
          };
          resolve(res);
        }).catch(function (err) {
          reject(err);
        });
        // if (method === 'get') {
        //   axios.get(param.url).then(res => { resolve(res); }).catch(err => { reject(err); });
        // }
        // if (method === 'post') {

        // }
        // _window.WindVane.call('MUHttpClient', 'execute', param, res => {
        //   resolve(res.data);
        //   param.success && param.success(res.data);
        //   // 调用请求完成回调
        //   param.complete && param.complete();
        // }, err => {
        //   let msg = this.judgeErrorCode(err);
        //   // eslint-disable-next-line prefer-promise-reject-errors
        //   reject({
        //     status: -1,
        //     data: {},
        //     message: msg
        //   });
        //   // reject(err);
        //   param.error && param.error(err);
        //   // 调用请求完成回调
        //   param.complete && param.complete();
        // });
      } catch (error) {
        var err = {
          status: -1,
          data: {},
          message: 'MuHttpClient-' + error
        };
        reject(err);
        param.error(err);
        param.complete && param.complete();
      }
    });
    return p;
  },
  get: function get(option) {
    return this.sendRequest('get', option);
  },
  post: function post(option) {
    return this.sendRequest('post', option);
  },
  /**
   * 下载文件
   * @param {{json}} option 下载参数
   * @return {{object}} Promise
   */
  download: function download(option) {
    var successCb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var errorCb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    console.info('--download--' + JSON.stringify(option));
    try {
      if (!option.url || !option.method || !option.savedPath) {
        errorCb({
          status: -1,
          data: {},
          message: '必传参数缺少'
        });
        return;
      }

      if (option.savedPath.indexOf('local://') === -1) {
        errorCb({
          status: -1,
          data: {},
          message: '只支持local://协议头'
        });
      }

      axios(option).then(function (res) {
        successCb(res);
      }).catch(function (err) {
        errorCb(err);
      });
    } catch (error) {
      var err = {
        status: -1,
        data: {},
        message: 'MuHttpClient-' + error
      };
      errorCb(err);
    }
  },
  /**
   * 上传文件
   * @param {{json}} option 上传参数
   * @return {{object}} Promise
   */
  upload: function upload(option) {
    var successCb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var errorCb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    console.info('--upload--' + JSON.stringify(option));

    try {
      if (!option.url || !option.filePath) {
        errorCb({
          status: -1,
          data: {},
          message: '必传参数缺少'
        });
        return;
      }
      axios({ option: option }).then(function (res) {
        successCb(res);
      }).catch(function (err) {
        errorCb(err);
      });
    } catch (error) {
      var err = {
        status: -1,
        data: {},
        message: 'MuHttpClient-' + error
      };
      errorCb(err);
    }
  },

  cleanCache: function cleanCache() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var successCb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var errorCb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      resolve(option);
      successCb(option);
    });
    return p;
  },
  // TODO: set default golbal headers
  setHeader: function setHeader(option) {},
  // TODO: set default golbal cache
  setCache: function setCache() {
    var cacheStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    var cacheTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  },
  // TODO: set default golbal timeOut
  setTimeOut: function setTimeOut() {
    var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  }
};

exports.default = MuHttpClient;

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(271);

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);
var bind = __webpack_require__(64);
var Axios = __webpack_require__(272);
var mergeConfig = __webpack_require__(70);
var defaults = __webpack_require__(67);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(71);
axios.CancelToken = __webpack_require__(285);
axios.isCancel = __webpack_require__(66);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(286);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);
var buildURL = __webpack_require__(65);
var InterceptorManager = __webpack_require__(273);
var dispatchRequest = __webpack_require__(274);
var mergeConfig = __webpack_require__(70);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);
var transformData = __webpack_require__(275);
var isCancel = __webpack_require__(66);
var defaults = __webpack_require__(67);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(69);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isAbsoluteURL = __webpack_require__(280);
var combineURLs = __webpack_require__(281);

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(6);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(71);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*
 * @Description: mock http request with axios
 * @Author: lexi
 * @Date: 2020-06-02 16:29:24
 * @LastEditTime: 2022-11-30 17:32:27
 * @LastEditors: xiaoyang
 */

var MuHttpClient = {
  /**
   * 校验接口地址
   * @param {{string}} url 请求地址
   * @return {{bool}}返回校验结果
   */
  getInterfaceUrl: function getInterfaceUrl(url) {
    var reg = /(http|https):\/\/([\w.]+\/?)\S*/;
    return reg.test(url);
  },

  /**
   * 获取请求参数
   * @param {{all}} option 请求参数
   * @callback {{number, json}}     callback(errCode, param)回调返回值
   */
  getParam: function getParam(option, callback) {
    var param = void 0;
    var errCode = 0;
    // 只接受string，object类型
    switch (typeof option === 'undefined' ? 'undefined' : _typeof(option)) {
      // 默认全部传了。
      case 'object':
        param = option;
        break;
      // 默认只有get请求url，没其他东西
      case 'string':
        param = {
          url: option
        };
        break;
      default:
        errCode = 1;
        param = {
          status: -1,
          data: {},
          message: '请求参数格式不符合要求：' + (typeof option === 'undefined' ? 'undefined' : _typeof(option))
        };
        break;
    }

    // 设置默认缓存
    param.cacheStrategy === 'always' && !param.cacheTime && (param.cacheTime = 30);
    param.cacheStrategy === 'hybrid' && !param.cacheTime && (param.cacheTime = 30);

    this.getInterfaceUrl(option.url) ? callback(errCode, param) : // eslint-disable-next-line standard/no-callback-literal
    callback(1, {
      status: -1,
      data: {},
      message: '接口地址格式错误：' + option.url
    });
  },


  /**
   * 分开连接及参数
   * @param {{all}} str, type 请求参数
   */
  queryUrlParams: function queryUrlParams(str) {
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'params';

    var url = str.split('?')[0];
    var params = str.split('?')[1];
    var obj = {};
    if (params) {
      var param = params.split('&');
      for (var i = 0; i < param.length; i++) {
        var paramsA = param[i].split('=');
        var key = paramsA[0];
        var value = paramsA[1];
        obj[key] = value;
      }
    }
    return type === 'url' ? url : obj;
  },

  /**
   * 发送请求
   * @param {{string || json}} option 请求参数
   * @return {{object}} Promise
   */
  sendRequest: function sendRequest(method, option) {
    console.info('--------MUHttpClient.option------');
    console.info(option);

    // todo 超时在pc暂不可自定义
    option.timeout = option.timeout * 1000;

    var _this = this;
    var p = new Promise(function (resolve, reject) {
      var param = void 0;
      try {
        _this.getParam(option, function (errCode, data) {
          if (errCode) {
            reject(data);
          } else {
            param = data;
          }
        });
        // 调用请求前回调
        param.beforeSend && param.beforeSend();

        window.NativeApi.muHttpRequest[method](param.url, param.data, param.header).then(function (res) {
          // 跟原生httpClient返回数据结构保持一致
          var resData = res;
          try {
            if ((typeof resData === 'undefined' ? 'undefined' : _typeof(resData)) === 'object') {
              resData = JSON.stringify(resData);
            }
          } catch (error) {
            console.error('MuHttpClient pc ', error);
          }

          var newRes = {
            data: {
              status: 200,
              data: resData
            }
          };
          resolve(newRes);
        }).catch(function (err) {
          reject(err);
        });
      } catch (error) {
        var err = {
          status: -1,
          data: {},
          message: 'MuHttpClient-' + error
        };
        reject(err);
        param.error(err);
        param.complete && param.complete();
      }
    });
    return p;
  },
  get: function get(option) {
    option.data = this.queryUrlParams(option.url);
    option.url = this.queryUrlParams(option.url, 'url');
    return this.sendRequest('get', option);
  },
  post: function post(option) {
    return this.sendRequest('post', option);
  },
  /**
   * 下载文件
   * @param {{json}} option 下载参数
   * @return {{object}} Promise
   */
  download: function download(option) {
    var successCb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var errorCb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    return window.NativeApi.muHttpRequest.download(option, successCb, errorCb);
  },
  /**
   * 上传文件
   * @param {{json}} option 上传参数
   * @return {{object}} Promise
   */
  upload: function upload(option) {
    var params = {
      url: option.url,
      data: {
        data: option.data || {},
        filePath: option.filePath,
        partName: option.partName
      },
      header: option.header
    };
    return this.sendRequest('upload', params);
  },

  cleanCache: function cleanCache() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var successCb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var errorCb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    return window.NativeApi.muHttpRequest.cleanCache(option, successCb, errorCb);
  },
  // TODO: set default golbal headers
  setHeader: function setHeader(option) {},
  // TODO: set default golbal cache
  setCache: function setCache() {
    var cacheStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    var cacheTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  },
  // TODO: set default golbal timeOut
  setTimeOut: function setTimeOut() {
    var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  }
};

exports.default = MuHttpClient;

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUIbeacon = {
  scan: function scan() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUIBeacon', 'scan', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  stopScan: function stopScan(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    // 可以传空option,也可以不传
    if (typeof param1 === 'function') {
      _windvane2.default.WindVane.call('MUIBeacon', 'stopScan', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param1(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param2(err);
      });
    } else {
      _windvane2.default.WindVane.call('MUIBeacon', 'stopScan', param1, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param2(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param3(err);
      });
    }
  }
}; /*
    * @Description: ibeacon
    * @version: 1.0.0
    * @Author: liyanling3
    * @Date: 2020-02-18 13:21:02
    * @LastEditors: lee9527
    * @LastEditTime: 2021-05-25 13:21:25
    */
exports.default = MUIbeacon;

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * <!-- ©Copyright 2020 China Eastern Airlines. All rights reserved. -->
 * <!-- Created by <songdiyuan@ceair.com> on 2020-07-20 -->
 */

var MUIbeacon = {
  /**
   * 开始扫描
   */
  scan: function scan(option, success, failure) {
    success({
      status: 0,
      message: 'web环境返回mock数据',
      data: {
        devieceList: [{ uuid: 'fda15011-a4e2-4fb1-afcf-c6eb07647825', major: 10001, minor: 609 }]
      }
    });
  },

  /**
   * 停止扫描
   */
  stopScan: function stopScan(success, failure) {
    success({
      status: 0,
      message: 'web环境返回mock数据',
      data: {}
    });
  }
};

exports.default = MUIbeacon;

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(291).default;

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  scan: function scan() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  stopScan: function stopScan() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuIdCamera = {
  // 启动身份证拍照获取组件
  takePhoto: function takePhoto() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    _windvane2.default.WindVane.call('MUIDCamera', 'takePhoto', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  }
};

exports.default = MuIdCamera;

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MuIdCamera = {
  open: function open(options) {
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      success({
        status: 0,
        message: 'MuIdCamera',
        data: options
      });
      resolve({
        status: 0,
        message: 'MuIdCamera',
        data: options
      });
    });
    return p;
  }
};
exports.default = MuIdCamera;

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(295).default;

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  open: function open() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUImageBrowser = {
  /**
   * 判断文件是否存在
   */
  open: function open(option) {
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUImageBrowser', 'open', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUImageBrowser;

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MUImageBrowser = {
  open: function open(options) {
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      success({
        status: 0,
        message: 'MUImageBrowser',
        data: options
      });
      resolve({
        status: 0,
        message: 'MUImageBrowser',
        data: options
      });
    });
    return p;
  }
};
exports.default = MUImageBrowser;

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(299).default;

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  open: function open() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuImagePicker = {
  /**
   * 跳转图片选择器
   */
  pickImage: function pickImage() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUImagePicker', 'pickImage', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },


  /**
   * 跳转图片选择器
   */
  takePhoto: function takePhoto() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUImagePicker', 'takePhoto', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },


  /**
   * 跳转相机拍照
   */
  capture: function capture() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUImagePicker', 'capture', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
   * 图片压缩
   */
  compress: function compress() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUImagePicker', 'compress', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
   * 图片选择 ActionSheet
   */
  pick: function pick() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUImagePicker', 'pick', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
   * 获取图片信息
   */
  getImageInfo: function getImageInfo() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUImagePicker', 'getImageInfo', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MuImagePicker;

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(72).default;

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuInvoice = {
  /**
   * 跳转图片选择器
   */
  getInvoice: function getInvoice() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUInvoice', 'getInvoice', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MuInvoice;

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(73).default;

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Description: In User Settings Edit
 * @Author: your name
 * @Date: 2019-09-17 16:29:24
 * @LastEditTime: 2019-09-27 11:23:05
 * @LastEditors: Please set LastEditors
 */

var MuLifecycler = {
  /**
   * 监听页面恢复
   * @param {页面恢复回调} callback 
   */
  registerStartListener: function registerStartListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.addEventListener('VIEWPORT_STARTED_EVENT', callback);
  },


  /**
   * 取消监听页面恢复
   * @param {页面恢复回调} callback 
   */
  unregisterStartListener: function unregisterStartListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.removeEventListener('VIEWPORT_STARTED_EVENT', callback);
  },


  /**
   * 监听页面暂停
   * @param {页面暂停回调} callback 
   */
  registerStopListener: function registerStopListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.addEventListener('VIEWPORT_STOPPED_EVENT', callback);
  },


  /**
   * 取消监听页面暂停
   * @param {页面暂停回调} callback 
   */
  unregisterStopListener: function unregisterStopListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.removeEventListener('VIEWPORT_STOPPED_EVENT', callback);
  },


  /**
   * 监听app切前台
   * @param {切前台回调} callback 
   */
  registerEnterForegroundListener: function registerEnterForegroundListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.addEventListener('APPLICATION_ENTER_FOREGROUND_EVENT', callback);
  },


  /**
   * 取消监听app切前台
   * @param {切前台回调} callback 
   */
  unregisterEnterForegroundListener: function unregisterEnterForegroundListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.removeEventListener('APPLICATION_ENTER_FOREGROUND_EVENT', callback);
  },


  /**
   * 监听app切后台
   * @param {切后台回调} callback 
   */
  registerEnterBackgroundListener: function registerEnterBackgroundListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.addEventListener('APPLICATION_ENTER_BACKGROUND_EVENT', callback);
  },


  /**
   * 取消监听app切后台
   * @param {切后台回调} callback 
   */
  unregisterEnterBackgroundListener: function unregisterEnterBackgroundListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.removeEventListener('APPLICATION_ENTER_BACKGROUND_EVENT', callback);
  }
};

exports.default = MuLifecycler;

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Description: In User Settings Edit
 * @Author: your name
 * @Date: 2019-09-17 16:29:24
 * @LastEditTime: 2019-09-27 11:23:05
 * @LastEditors: Please set LastEditors
 */

var MuLifecycler = {
  /**
   * 监听页面恢复
   * @param {页面恢复回调} callback 
   */
  registerStartListener: function registerStartListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.addEventListener('VIEWPORT_STARTED_EVENT', callback);
  },


  /**
   * 取消监听页面恢复
   * @param {页面恢复回调} callback 
   */
  unregisterStartListener: function unregisterStartListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.removeEventListener('VIEWPORT_STARTED_EVENT', callback);
  },


  /**
   * 监听页面暂停
   * @param {页面暂停回调} callback 
   */
  registerStopListener: function registerStopListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.addEventListener('VIEWPORT_STOPPED_EVENT', callback);
  },


  /**
   * 取消监听页面暂停
   * @param {页面暂停回调} callback 
   */
  unregisterStopListener: function unregisterStopListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.removeEventListener('VIEWPORT_STOPPED_EVENT', callback);
  },


  /**
   * 监听app切前台
   * @param {切前台回调} callback 
   */
  registerEnterForegroundListener: function registerEnterForegroundListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.addEventListener('APPLICATION_ENTER_FOREGROUND_EVENT', callback);
  },


  /**
   * 取消监听app切前台
   * @param {切前台回调} callback 
   */
  unregisterEnterForegroundListener: function unregisterEnterForegroundListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.removeEventListener('APPLICATION_ENTER_FOREGROUND_EVENT', callback);
  },


  /**
   * 监听app切后台
   * @param {切后台回调} callback 
   */
  registerEnterBackgroundListener: function registerEnterBackgroundListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.addEventListener('APPLICATION_ENTER_BACKGROUND_EVENT', callback);
  },


  /**
   * 取消监听app切后台
   * @param {切后台回调} callback 
   */
  unregisterEnterBackgroundListener: function unregisterEnterBackgroundListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    window.removeEventListener('APPLICATION_ENTER_BACKGROUND_EVENT', callback);
  }
};

exports.default = MuLifecycler;

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(307).default;

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Description: In User Settings Edit
 * @Author: your name
 * @Date: 2019-09-17 16:29:24
 * @LastEditTime: 2023-02-13 14:03:57
 * @LastEditors: xiaoyang
 */
exports.default = {
  registerStartListener: function registerStartListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    var res = { status: -1, message: '暂不支持 ', data: {} };
    callback(res);
  },
  unregisterStartListener: function unregisterStartListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    var res = { status: -1, message: '暂不支持 ', data: {} };
    callback(res);
  },
  registerStopListener: function registerStopListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    var res = { status: -1, message: '暂不支持 ', data: {} };
    callback(res);
  },
  unregisterStopListener: function unregisterStopListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    var res = { status: -1, message: '暂不支持 ', data: {} };
    callback(res);
  },
  registerEnterForegroundListener: function registerEnterForegroundListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    var res = { status: -1, message: '暂不支持 ', data: {} };
    callback(res);
  },
  unregisterEnterForegroundListener: function unregisterEnterForegroundListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    var res = { status: -1, message: '暂不支持 ', data: {} };
    callback(res);
  },
  registerEnterBackgroundListener: function registerEnterBackgroundListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    var res = { status: -1, message: '暂不支持 ', data: {} };
    callback(res);
  },
  unregisterEnterBackgroundListener: function unregisterEnterBackgroundListener() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    var res = { status: -1, message: '暂不支持 ', data: {} };
    callback(res);
  }
};

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ExportModule = {
  show: function show() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MULoading', 'show', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },
  hide: function hide() {
    var success = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
    var failure = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MULoading', 'hide', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  }
};

exports.default = ExportModule;

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(74).default;

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(311)
}
var Component = __webpack_require__(7)(
  /* script */
  __webpack_require__(313),
  /* template */
  null,
  /* styles */
  injectStyle,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)
Component.options.__file = "/data/gitlab-runner/builds/bxZ2z3qA/0/muit-mobile/Hybrid/hybrid-components/mu-hybrid/mu-hybrid/mu_loading/Loading.vue"
if (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== "default" && key.substr(0, 2) !== "__"})) {console.error("named exports are not supported in *.vue files.")}

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-10e1075c", Component.options)
  } else {
    hotAPI.reload("data-v-10e1075c", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(312);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(11)("e0682360", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-10e1075c\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Loading.vue", function() {
     var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-10e1075c\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Loading.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

__webpack_require__(75);

var _toast = __webpack_require__(38);

var _toast2 = _interopRequireDefault(_toast);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//

exports.default = {
  name: 'MuLoading',
  components: {},
  data: function data() {
    return {};
  },
  updated: function updated() {},

  methods: {
    show: function show(_ref) {
      var message = _ref.message,
          duration = _ref.duration,
          forbidClick = _ref.forbidClick;

      _toast2.default.loading({ message: message, duration: duration, forbidClick: forbidClick });
    },
    clear: function clear() {
      _toast2.default.clear();
    }
  }
};

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(74).default;

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
                                                                                                                                                                                                                                                                               * ©Copyright 2018 China Eastern Airlines. All rights reserved
                                                                                                                                                                                                                                                                               * Created by bryan<liubo15@ceair.com> on 2018.10.31
                                                                                                                                                                                                                                                                               * doc: http://172.28.22.80:8090/display/APPMOBILE/MULogger
                                                                                                                                                                                                                                                                               */

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DefaultMsg = {
  en_US: {
    INVALID_PARAM_ERROR: 'Invalid param, please try again later',
    TITLE: 'Prompt',
    CONFIRM_BUTTON: 'confirm',
    CANCEL_BUTTON: 'cancel'
  },
  zh_CN: {
    INVALID_PARAM_ERROR: '参数错误',
    TITLE: '提示',
    CONFIRM_BUTTON: '确定',
    CANCEL_BUTTON: '取消'
  }
};

var MULogger = {
  judgeDefaultMsg: function judgeDefaultMsg(key) {
    var language = 'zh_CN';
    var userAgent = navigator.userAgent;
    var tmpArray = userAgent.split(' ');
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = tmpArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var item = _step.value;

        if (item.indexOf('language') !== -1) {
          language = item.split('/')[1];
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return DefaultMsg[language][key];
  },


  /**
   * 处理options
   */
  getNewOptions: function getNewOptions(options) {
    var _options = {};
    // todo appid默认值获取
    options.appId = options.appId ? options.appId : 'mu-hybrid';
    options.functionName = options.functionName ? options.functionName : 'null';
    options.parameter = options.parameter ? options.parameter : 'null';
    options.result = options.result ? options.result : 'null';
    if (!options.tag) {
      options.tag = options.appId;
    }
    if (!options.message) {
      options.message = 'message: ' + options.result + ',' + 'param: ' + options.parameter + ',' + 'function: ' + options.functionName;
    }
    _options = {
      tag: options.tag,
      message: options.message
    };
    return _options;
  },

  /**
   * 关联用户信息
   */
  setUserIdentifier: function setUserIdentifier() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MULogger', 'setUserIdentifier', options, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
   * 上传info日志
   */
  info: function info(tag, message) {
    var _this = this;

    var p = new Promise(function (resolve, reject) {
      var options = {};
      if (typeof tag === 'string' && typeof message === 'string') {
        options = {
          tag: tag,
          message: message
        };
      } else if (tag != null && (typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) === 'object') {
        options = _this.getNewOptions(tag);
      } else {
        // eslint-disable-next-line prefer-promise-reject-errors
        reject({
          status: -1,
          message: _this.judgeDefaultMsg('INVALID_PARAM_ERROR'),
          data: {},
          errorCode: 'INVALID_PARAM_ERROR'
        });
        return;
      }
      _windvane2.default.WindVane.call('MULogger', 'info', options, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
   * 上传warn日志
   */
  warn: function warn(tag, message) {
    var _this2 = this;

    var p = new Promise(function (resolve, reject) {
      var options = {};
      if (typeof tag === 'string' && typeof message === 'string') {
        options = {
          tag: tag,
          message: message
        };
      } else if (tag != null && (typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) === 'object') {
        options = _this2.getNewOptions(tag);
      } else {
        // eslint-disable-next-line prefer-promise-reject-errors
        reject({
          status: -1,
          message: _this2.judgeDefaultMsg('INVALID_PARAM_ERROR'),
          data: {},
          errorCode: 'INVALID_PARAM_ERROR'
        });
        return;
      }
      _windvane2.default.WindVane.call('MULogger', 'warn', options, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
   * 上传error日志
   */
  error: function error(tag, message) {
    var _this3 = this;

    var p = new Promise(function (resolve, reject) {
      var options = {};
      if (typeof tag === 'string' && typeof message === 'string') {
        options = {
          tag: tag,
          message: message
        };
      } else if (tag != null && (typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) === 'object') {
        options = _this3.getNewOptions(tag);
      } else {
        // eslint-disable-next-line prefer-promise-reject-errors
        reject({
          status: -1,
          message: _this3.judgeDefaultMsg('INVALID_PARAM_ERROR'),
          data: {},
          errorCode: 'INVALID_PARAM_ERROR'
        });
        return;
      }
      _windvane2.default.WindVane.call('MULogger', 'error', options, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
   * 上传debug日志
   */
  debug: function debug(tag, message) {
    var _this4 = this;

    var p = new Promise(function (resolve, reject) {
      var options = {};
      if (typeof tag === 'string' && typeof message === 'string') {
        options = {
          tag: tag,
          message: message
        };
      } else if (tag != null && (typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) === 'object') {
        options = _this4.getNewOptions(tag);
      } else {
        // eslint-disable-next-line prefer-promise-reject-errors
        reject({
          status: -1,
          message: _this4.judgeDefaultMsg('INVALID_PARAM_ERROR'),
          data: {},
          errorCode: 'INVALID_PARAM_ERROR'
        });
        return;
      }
      _windvane2.default.WindVane.call('MULogger', 'debug', options, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};
exports.default = MULogger;

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * ©Copyright 2018 China Eastern Airlines. All rights reserved
 * Created by bryan<liubo15@ceair.com> on 2018.10.31
 * doc: http://172.28.22.80:8090/display/APPMOBILE/MULogger
 */

var successData = {
  statue: 0,
  data: '',
  errorCode: '',
  message: ''
};

var DefaultMsg = {
  en_US: {
    INVALID_PARAM_ERROR: 'Invalid param, please try again later',
    TITLE: 'Prompt',
    CONFIRM_BUTTON: 'confirm',
    CANCEL_BUTTON: 'cancel'
  },
  zh_CN: {
    INVALID_PARAM_ERROR: '参数错误',
    TITLE: '提示',
    CONFIRM_BUTTON: '确定',
    CANCEL_BUTTON: '取消'
  }
};

var MULogger = {
  judgeDefaultMsg: function judgeDefaultMsg(key) {
    var language = 'zh_CN';
    var userAgent = navigator.userAgent;
    var tmpArray = userAgent.split(' ');
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = tmpArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var item = _step.value;

        if (item.indexOf('language') !== -1) {
          language = item.split('/')[1];
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return DefaultMsg[language][key];
  },


  /**
   * 处理options
   */
  getNewOptions: function getNewOptions(options) {
    var _options = {};
    // todo appid默认值获取
    options.appId = options.appId ? options.appId : 'mu-hybrid';
    options.functionName = options.functionName ? options.functionName : 'null';
    options.parameter = options.parameter ? options.parameter : 'null';
    options.result = options.result ? options.result : 'null';
    if (!options.tag) {
      options.tag = options.appId;
    }
    if (!options.message) {
      options.message = 'message: ' + options.result + ',' + 'param: ' + options.parameter + ',' + 'function: ' + options.functionName;
    }
    _options = {
      tag: options.tag,
      message: options.message
    };
    return _options;
  },

  /**
   * 关联用户信息
   */
  setUserIdentifier: function setUserIdentifier() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      try {
        console.info(JSON.stringify(options));
        resolve(successData);
      } catch (err) {
        reject(err);
      }
    });
    return p;
  },

  /**
   * 上传info日志
   */
  info: function info(tag, message) {
    var _this = this;

    var p = new Promise(function (resolve, reject) {
      try {
        var options = {};
        if (typeof tag === 'string' && typeof message === 'string') {
          options = {
            tag: tag,
            message: message
          };
        } else if (tag != null && (typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) === 'object') {
          options = _this.getNewOptions(tag);
        } else {
          // eslint-disable-next-line prefer-promise-reject-errors
          reject({
            status: -1,
            message: _this.judgeDefaultMsg('INVALID_PARAM_ERROR'),
            data: {},
            errorCode: 'INVALID_PARAM_ERROR'
          });
          return;
        }
        console.info(JSON.stringify(options));
        resolve(successData);
      } catch (err) {
        reject(err);
      }
    });
    return p;
  },

  /**
   * 上传warn日志
   */
  warn: function warn(tag, message) {
    var _this2 = this;

    var p = new Promise(function (resolve, reject) {
      try {
        var options = {};
        if (typeof tag === 'string' && typeof message === 'string') {
          options = {
            tag: tag,
            message: message
          };
        } else if (tag != null && (typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) === 'object') {
          options = _this2.getNewOptions(tag);
        } else {
          // eslint-disable-next-line prefer-promise-reject-errors
          reject({
            status: -1,
            message: _this2.judgeDefaultMsg('INVALID_PARAM_ERROR'),
            data: {},
            errorCode: 'INVALID_PARAM_ERROR'
          });
          return;
        }
        console.info(JSON.stringify(options));
        resolve(successData);
      } catch (err) {
        reject(err);
      }
    });
    return p;
  },

  /**
   * 上传error日志
   */
  error: function error(tag, message) {
    var _this3 = this;

    var p = new Promise(function (resolve, reject) {
      try {
        var options = {};
        if (typeof tag === 'string' && typeof message === 'string') {
          options = {
            tag: tag,
            message: message
          };
        } else if (tag != null && (typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) === 'object') {
          options = _this3.getNewOptions(tag);
        } else {
          // eslint-disable-next-line prefer-promise-reject-errors
          reject({
            status: -1,
            message: _this3.judgeDefaultMsg('INVALID_PARAM_ERROR'),
            data: {},
            errorCode: 'INVALID_PARAM_ERROR'
          });
          return;
        }
        console.info(JSON.stringify(options));
        resolve(successData);
      } catch (err) {
        reject(err);
      }
    });
    return p;
  },

  /**
   * 上传debug日志
   */
  debug: function debug(tag, message) {
    var _this4 = this;

    var p = new Promise(function (resolve, reject) {
      try {
        var options = {};
        if (tag != null && (typeof tag === 'undefined' ? 'undefined' : _typeof(tag)) === 'object') {
          options = _this4.getNewOptions(tag);
        } else if (typeof tag === 'string' && typeof message === 'string') {
          options = {
            tag: tag,
            message: message
          };
        } else {
          // eslint-disable-next-line prefer-promise-reject-errors
          reject({
            status: -1,
            message: _this4.judgeDefaultMsg('INVALID_PARAM_ERROR'),
            data: {},
            errorCode: 'INVALID_PARAM_ERROR'
          });
          return;
        }
        console.info(JSON.stringify(options));
        resolve(successData);
      } catch (err) {
        reject(err);
      }
    });
    return p;
  }
};
exports.default = MULogger;

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: xiaoyang
 * @Date: 2022-11-30 16:14:31
 * @LastEditTime: 2022-12-14 15:22:48
 * @LastEditors: git config user.name && git config user.email
 * @Description:
 * @FilePath: /mu-hybrid/mu-hybrid/mu_logger/pc.js
 * @version: 1.0.0
 */

var MULogger = {};
if (typeof window !== 'undefined' && window.NativeApi) {
  MULogger = {
    info: window.NativeApi.muHybridService.info,
    warn: window.NativeApi.muHybridService.warn,
    error: window.NativeApi.muHybridService.error,
    debug: window.NativeApi.muHybridService.debug
  };
}

exports.default = MULogger;

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ExportModule = {
  unReadNum: function unReadNum() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMail', 'unReadNum', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },

  // 根据文件夹获取状态
  fetchMailFolderStatus: function fetchMailFolderStatus() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    return new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMail', 'fetchMailFolderStatus', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
  },
  openMail: function openMail() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    return new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMail', 'openMail', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
  }
};

exports.default = ExportModule;

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MUMail = {
  unReadNum: function unReadNum() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      resolve({ 'status': 0, 'message': 'success', 'data': { 'num': 0 } });
    });
    return p;
  }
};

exports.default = MUMail;

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(321).default;

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  unReadNum: function unReadNum() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: lee9527
 * @Date: 2022-01-18 16:46:06
 * @LastEditors: lee9527
 * @LastEditTime: 2022-01-18 16:48:49
 * @Description:
 * @FilePath: /mu-hybrid/mu-hybrid/mu_miniApp/mock.js
 * @version: 1.0.0
 */
var MUMiniApp = {
  /**
   * 打开小程序
   */
  open: function open(option) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'web环境返回mock数据',
        data: {}
      });
    });
    return p;
  }
};

exports.default = MUMiniApp;

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: lee9527
 * @Date: 2022-01-18 16:46:06
 * @LastEditors: lee9527
 * @LastEditTime: 2022-01-18 16:48:49
 * @Description:
 * @FilePath: /mu-hybrid/mu-hybrid/mu_miniApp/mock.js
 * @version: 1.0.0
 */
var MUMiniApp = {
  /**
   * 打开小程序
   */
  open: function open(option) {
    var p = new Promise(function (resolve, reject) {
      try {
        window.NativeApi.muHybridService.openMiniApp(option, {}).then(function (result) {
          resolve(result);
        }).catch(function (err) {
          reject(err);
        });
      } catch (error) {
        var err = {
          status: -1,
          message: error.message,
          data: {}
        };
        reject(err);
      }
    });
    return p;
  }
};

exports.default = MUMiniApp;

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUMJC = {
  init: function init(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'init', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  updateModel: function updateModel(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'updateModel', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  downLoad: function downLoad(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'downLoad', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  create: function create(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'create', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  makeLocalCard: function makeLocalCard(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'makeLocalCard', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  getHtml: function getHtml(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'getHtml', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  beginTiming: function beginTiming(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'beginTiming', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  sign: function sign(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'sign', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  update: function update(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'update', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  close: function close(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'close', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  getVersion: function getVersion(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'getVersion', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  getNewHtml: function getNewHtml(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'getNewHtml', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  cancelUpdate: function cancelUpdate(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'cancelUpdate', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  signNew: function signNew(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'signNew', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  canHalfSign: function canHalfSign(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'canHalfSign', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  setValue: function setValue(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'setValue', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  getValue: function getValue(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'getValue', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  openPopover: function openPopover(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'openPopover', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  callJsFun: function callJsFun(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'callJsFun', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  closePopover: function closePopover(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'closePopover', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  delete: function _delete(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'delete', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  open: function open(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'open', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  makeUploadFiles: function makeUploadFiles(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'makeUploadFiles', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  hidePopover: function hidePopover(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'hidePopover', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  showPopover: function showPopover(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'showPopover', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  localStorage: function localStorage(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'localStorage', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  signNRC: function signNRC(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'signNRC', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  signData: function signData(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'signData', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  backToweex: function backToweex(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'backToweex', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  zip: function zip(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'zip', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  getTask: function getTask(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'getTask', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  getConflictNode: function getConflictNode(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'getConflictNode', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  getMergePath: function getMergePath(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'getMergePath', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },
  merge: function merge(option, success, failure) {
    _windvane2.default.WindVane.call('MUMJC', 'merge', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  }
}; /*
    * @Description: audioRecord
    * @version: 1.0.0
    * @Author: liuqianlong
    * @Date: 2021-04-13 13:21:02
    * @LastEditors: liuqianlong
    * @LastEditTime: 2021-06-28 11:31:45
    */
exports.default = MUMJC;

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * <!-- ©Copyright 2021 China Eastern Airlines. All rights reserved. -->
 * <!-- Created by <songdiyuan@ceair.com> on 2021-06-28 -->
 */

var MUMJC = {
  /**
   * 初始化
   */
  init: function init(options, success, failure) {
    success({
      status: 0,
      message: 'init ',
      data: options
    });
  }
};
exports.default = MUMJC;

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(327).default;

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {};

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Description: MUNavigator
 * @version: 1.0.0
 * @Author: liyanling
 * @Date: 2020-05-31
 * @LastEditors: xiaoyang
 * @LastEditTime: 2022-12-09 14:04:02
 */

var MUNavigator = {};

/**
 * 初始化
 */
MUNavigator.initialize = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
};

// 拼接地址
var CreateLink = function CreateLink(page, params) {
  var url = location.href;
  var newLocation = '';
  if (url.indexOf('#') > -1) {
    newLocation = url.split('#')[0] + '#/' + page + '?' + toParams(params);
  } else {
    newLocation = url.split('#')[0] + '/' + page + '?' + toParams(params);
  }
  return newLocation;
};

function toParams(obj) {
  var param = '';
  for (var name in obj) {
    if (typeof obj[name] !== 'function') {
      param += '&' + name + '=' + encodeURI(obj[name]);
    }
  }
  return param.substring(1);
}

/**
 * 跳转到指定页面
 * @param {{string}} path 跳转的页面名称
 * @param {{Boolean}} animated 是否有过场动画
 * @param {{Object}} data 携带的参数
 */
MUNavigator.forward = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  if (option.path.indexOf('/') === 0 || option.path.indexOf('http') === 0) {
    // 说明不需要进行地址转换
  } else {
    option.path = CreateLink(option.path, option.data);
  }
  option.animated = option.animated || true;
  option.data = option.data || {};
  return new Promise(function (resolve, reject) {
    window.location.href = option.path;
  });
};

/**
 * 返回上一页
 */
MUNavigator.back = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return new Promise(function (resolve, reject) {
    window.history.back(-1);
  });
};

/**
 * 在当前页面创建里程碑
 */
MUNavigator.createMilestone = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return new Promise(function (resolve, reject) {});
};

/**
 * 返回最近的里程碑
 */
MUNavigator.backToMilestone = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return new Promise(function (resolve, reject) {
    window.history.back(-1);
  });
};

/**
 * 将当前页设为根页面
 */
MUNavigator.attachToRoot = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return new Promise(function (resolve, reject) {});
};

/**
 * 返回至根页面
 */
MUNavigator.backToRoot = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return new Promise(function (resolve, reject) {
    window.history.back();
  });
};

/**
 * 跳转到指定页面
 * @param {{string}} path 跳转的页面名称
 * @param {{Boolean}} animated 是否有过场动画
 * @param {{Object}} data 携带的参数
 */
MUNavigator.forwardForResult = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  if (option.path.indexOf('/') === 0 || option.path.indexOf('http') === 0) {
    // 说明不需要进行地址转换
  } else {
    option.path = CreateLink(option.path, option.data);
  }
  option.animated = option.animated || true;
  option.data = option.data || {};
  var p = new Promise(function (resolve, reject) {
    window.location.href = option.path;
    // 判断是否是mu weex native环境
  });
  return p;
};

/**
 * 返回上一页
 */
MUNavigator.backWithResult = function () {
  return new Promise(function (resolve, reject) {
    window.history.back(-1);
  });
};

/**
 * 移除里程碑
 */
MUNavigator.removeMilestone = function () {
  return new Promise(function (resolve, reject) {});
};

exports.default = MUNavigator;

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = __webpack_require__(78);

var _regenerator2 = _interopRequireDefault(_regenerator);

var _utils = __webpack_require__(332);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * @Author: xiaoyang
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * @Date: 2022-12-08 09:11:06
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * @LastEditTime: 2023-02-14 17:44:22
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * @LastEditors: gengmengwei
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * @Description: 仅限 MU PC端使用，其他端禁止使用
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * @FilePath: /mu-hybrid/mu-hybrid/mu_navigator/pc.js
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * @version: 1.0.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */


var MUNavigator = {};

/**
 * 初始化
 */
MUNavigator.initialize = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
};

/**
 * 跳转到指定页面
 * @param {{string}} path 跳转的页面名称
 * @param {{Boolean}} animated 是否有过场动画
 * @param {{Object}} data 携带的参数
 */
MUNavigator.forward = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return new Promise(function (resolve, reject) {
    if (!option.path) {
      reject({
        status: -1,
        message: 'no path'
      });
    }

    // 判断path第一个是/说明是跳转原生界面，比如跳转邮箱界面/mu/mail
    if (option.path.indexOf('/') === 0) {
      reject({
        status: -1,
        message: '请在移动端使用'
      });
    }

    // 开头不是http，说明是weex打包web应用同一应用内多页面跳转, 如何 document/document-list
    if (option.path.indexOf('http') !== 0) {
      try {
        // 需要根据当前url，重新拼接路径
        option.path = (0, _utils.CreateWebUrl)(option.path, option.data);
      } catch (error) {
        reject({
          status: -1,
          message: error.message
        });
      }
    } else if (option.path.indexOf('/entry.js') > -1) {
      // 判断/entry.js 出现，说明在pc端上需要将entry weex js bundle地址转换成entry.html地址
      option.path = option.path.replace('/entry.js', '/entry.html');
    } else {
      // path http开头说明当前路径是一个完整的url，不需要二次处理，直接跳转webview打开
      // TODO: 预留后续处理
      var BaseUrl = option.path.split('#')[0];
      var otherInfo = option.path.split('#')[1];
      option.path = BaseUrl + '?' + (option.data ? (0, _utils.getUrlWithParam)(option.data) : '') + '#' + otherInfo;
    }

    try {
      window.NativeApi.muHybridService.navigator('forward', option).then(function () {
        resolve({
          status: 0,
          message: 'ok'
        });
      }).catch(function (err) {
        reject({
          status: -1,
          message: err.message
        });
      });
    } catch (error) {
      reject({
        status: -1,
        message: error.message
      });
    }
  });
};

/**
 * 返回上一页
 */
MUNavigator.back = function () {
  return new Promise(function (resolve, reject) {
    try {
      window.NativeApi.muHybridService.navigator('back').then(function () {
        resolve({
          status: 0,
          message: 'ok'
        });
      }).catch(function (err) {
        reject({
          status: -1,
          message: err.message
        });
      });
    } catch (error) {
      reject({
        status: -1,
        message: error.message
      });
    }
  });
};

/**
 * 在当前页面创建里程碑
 */
MUNavigator.createMilestone = function () {
  return new Promise(function (resolve, reject) {
    try {
      window.NativeApi.muHybridService.navigator('createMilestone').then(function () {
        resolve({
          status: 0,
          message: 'ok'
        });
      }).catch(function (err) {
        reject({
          status: -1,
          message: err.message
        });
      });
    } catch (error) {
      reject({
        status: -1,
        message: error.message
      });
    }
  });
};

/**
 * 返回最近的里程碑
 */
MUNavigator.backToMilestone = function () {
  return new Promise(function (resolve, reject) {
    try {
      window.NativeApi.muHybridService.navigator('backToMilestone').then(function () {
        resolve({
          status: 0,
          message: 'ok'
        });
      }).catch(function (err) {
        reject({
          status: -1,
          message: err.message
        });
      });
    } catch (error) {
      reject({
        status: -1,
        message: error.message
      });
    }
  });
};

/**
 * 移除里程碑
 */
MUNavigator.removeMilestone = function () {
  return new Promise(function (resolve, reject) {
    try {
      window.NativeApi.muHybridService.navigator('removeMilestone').then(function () {
        resolve({
          status: 0,
          message: 'ok'
        });
      }).catch(function (err) {
        reject({
          status: -1,
          message: err.message
        });
      });
    } catch (error) {
      reject({
        status: -1,
        message: error.message
      });
    }
  });
};

/**
 * 将当前页设为根页面
 */
MUNavigator.attachToRoot = function () {
  return new Promise(function (resolve, reject) {
    try {
      window.NativeApi.muHybridService.navigator('attachToRoot').then(function () {
        resolve({
          status: 0,
          message: 'ok'
        });
      }).catch(function (err) {
        reject({
          status: -1,
          message: err.message
        });
      });
    } catch (error) {
      reject({
        status: -1,
        message: error.message
      });
    }
  });
};

/**
 * 返回至根页面
 */
MUNavigator.backToRoot = function () {
  return new Promise(function (resolve, reject) {
    try {
      window.NativeApi.muHybridService.navigator('backToRoot').then(function () {
        resolve({
          status: 0,
          message: 'ok'
        });
      }).catch(function (err) {
        reject({
          status: -1,
          message: err.message
        });
      });
    } catch (error) {
      reject({
        status: -1,
        message: error.message
      });
    }
  });
};

/**
 * 跳转到指定页面
 * @param {{string}} path 跳转的页面名称
 * @param {{Boolean}} animated 是否有过场动画
 * @param {{Object}} data 携带的参数
 */
MUNavigator.forwardForResult = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return new Promise(function (resolve, reject) {
    if (!option.path) {
      reject({
        status: -1,
        message: 'no path'
      });
    }

    // 判断path第一个是/说明是跳转原生界面，比如跳转邮箱界面/mu/mail
    if (option.path.indexOf('/') === 0) {
      reject({
        status: -1,
        message: '请在移动端使用'
      });
    }

    // 开头不是http，说明是weex打包web应用同一应用内多页面跳转, 如何 document/document-list
    if (option.path.indexOf('http') !== 0) {
      try {
        // 需要根据当前url，重新拼接路径
        option.path = (0, _utils.CreateWebUrl)(option.path, option.data);
      } catch (error) {
        reject({
          status: -1,
          message: error.message
        });
      }
    } else if (option.path.indexOf('/entry.js') > -1) {
      // 判断/entry.js 出现，说明在pc端上需要将entry weex js bundle地址转换成entry.html地址
      option.path = option.path.replace('/entry.js', '/entry.html');
    } else {
      // path http开头说明当前路径是一个完整的url，不需要二次处理，直接跳转webview打开
      // TODO: 预留后续处理
      var BaseUrl = option.path.split('#')[0];
      var otherInfo = option.path.split('#')[1];
      option.path = BaseUrl + '?' + (option.data ? (0, _utils.getUrlWithParam)(option.data) : '') + '#' + otherInfo;
    }

    try {
      // 一个promise，用于等待返回事件触发
      MUNavigator.callback = new Promise(function (resolve) {
        MUNavigator.naviBackWithResultcall = resolve;
      });

      // 创建监听，监听返回事件触发
      window.NativeApi.muHybridService.registerEvent(window.NativeApi.config.types.MU_NAVIGATE + 'backWithResult', function (param) {
        MUNavigator.naviBackWithResultcall(param);
      });

      window.NativeApi.muHybridService.navigator('forwardForResult', option).then(_asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        var res;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return MUNavigator.callback;

              case 2:
                res = _context.sent;


                resolve({
                  status: 0,
                  message: 'ok',
                  data: res.data
                });

              case 4:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, undefined);
      }))).catch(function (err) {
        reject({
          status: -1,
          message: err.message
        });
      });
    } catch (error) {
      reject({
        status: -1,
        message: error.message
      });
    }
  });
};

/**
 * 返回上一页
 * @param {{string}} data 回传到前一个页面的参数
 */
MUNavigator.backWithResult = function () {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return new Promise(function (resolve, reject) {
    try {
      window.NativeApi.muHybridService.navigator('backWithResult', option).then(function (result) {
        resolve({
          status: 0,
          message: 'ok'
        });
      }).catch(function (err) {
        reject({
          status: -1,
          message: err.message
        });
      });
    } catch (error) {
      reject({
        status: -1,
        message: error.message
      });
    }
  });
};

exports.default = MUNavigator;

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() { return this })() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(331);

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}


/***/ }),
/* 331 */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() { return this })() || Function("return this")()
);


/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: xiaoyang
 * @Date: 2022-12-09 15:05:07
 * @LastEditTime: 2023-02-15 09:30:58
 * @LastEditors: gengmengwei
 * @Description: MuNavigator 专属 util
 * @FilePath: /mu-hybrid/mu-hybrid/mu_navigator/utils.js
 * @version: 1.0.0
 */
var isWeex = typeof weex !== 'undefined';

/**
 * weex web h5 拼接跳转地址
 * @param page 路径，如 user
 * @param params forward带过去的参数，{a:1,b:2}
 * @param _weex 默认等于weex 全局变量，通过如参写入，方便单元测试处理
 * @return http://***.ceair.com/page/entry.html?a=1&b=2
 */
var CreateWebUrl = exports.CreateWebUrl = function CreateWebUrl(page, params) {
  // 获取根路径的标记 weex 固定格式
  var indexFlag = '/pages/';
  var args = [];
  if (params) {
    Object.keys(params).forEach(function (key) {
      args.push(encodeURIComponent(key) + '=' + encodeURIComponent(params[key]));
    });
  }
  // weex拼接方法
  if (isWeex) {
    var _weex = weex;
    var bundleUrl = _weex.config.bundleUrl;


    if (bundleUrl) {
      var splitedUrl = bundleUrl.split('?')[0];
      var queryInfo = bundleUrl.split('?')[1];
      splitedUrl = splitedUrl.substr(0, splitedUrl.indexOf(indexFlag) + indexFlag.length) + page + '/entry.html';

      // 需要拼接参数
      if (args.length > 0) {
        splitedUrl += '?' + args.join('&');
      }

      // 拼接原始的参数
      if (queryInfo) {
        splitedUrl += '' + (args.length > 0 ? '&' : '?') + queryInfo;
      }
      return splitedUrl;
    }
  } else if (typeof window !== 'undefined') {
    // h5拼接方法
    var href = window.location.href;

    var _splitedUrl = href.split('#')[0];
    _splitedUrl = _splitedUrl + '#' + page;
    // 需要拼接参数
    if (args.length > 0) {
      _splitedUrl += '?' + args.join('&');
    }
    return _splitedUrl;
  }
  return false;
};
/**
 * @description 根据参数拼接完整get请求url
 * @param {String} option: get请求参数
 * @returns {String} aa=1&bb=2
 */
var getUrlWithParam = exports.getUrlWithParam = function getUrlWithParam() {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var param = '';
  Object.keys(option).forEach(function (key) {
    if (typeof option[key] !== 'function') {
      param += '&' + key + '=' + encodeURI(option[key]);
    }
  });
  return param.substring(1);
};

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUNetwork = {
  /**
   * 监控网络状态变化
   * @param {*} param1
   * @param {*} param2
   * @param {*} param3
   */
  watchNetState: function watchNetState() {
    var param1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    if (typeof param1 === 'function') {
      _windvane2.default.WindVane.call('MUNetwork', 'watchNetState', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param1(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param2(err);
      });
    } else {
      _windvane2.default.WindVane.call('MUNetwork', 'watchNetState', param1, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param2(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param3(err);
      });
    }
  },
  getNetState: function getNetState() {
    var param1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        _windvane2.default.WindVane.call('MUNetwork', 'getNetState', {}, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param1(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param2(err);
          reject(err);
        });
      } else {
        _windvane2.default.WindVane.call('MUNetwork', 'getNetState', param1, function (res) {
          try {
            res.data = JSON.parse(res.data);
          } catch (err) {}
          delete res.ret;
          param2(res);
          resolve(res);
        }, function (err) {
          try {
            err.data = JSON.parse(err.data);
          } catch (err) {}
          delete err.ret;
          param3(err);
          reject(err);
        });
      }
    });
    return p;
  }
};

exports.default = MUNetwork;

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var MUNetwork = {
  watchNetState: function watchNetState(param1, param2, param3) {
    if (typeof param1 === 'function') {
      param1({
        status: 0,
        message: '',
        data: {
          connType: 'wifi',
          mobileType: 'unknown'
        }
      });
    } else {
      param2({
        status: 0,
        message: '',
        data: {
          connType: 'wifi',
          mobileType: 'unknown'
        }
      });
    }
  },
  getNetState: function getNetState(param1, param2, param3) {
    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        param1({
          status: 0,
          message: '',
          data: {
            connType: 'mobile',
            mobileType: '4g'
          }
        });
      } else {
        param2({
          status: 0,
          message: '',
          data: {
            connType: 'mobile',
            mobileType: '4g'
          }
        });
      }
    });
    return p;
  }
};

exports.default = MUNetwork;

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(336).default;

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  watchNetState: function watchNetState() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  getNetState: function getNetState() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuNFC = {

  /**
   * NFC标识读取
   */
  read: function read() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUNFC', 'read', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  }
}; /*
    * @Author: songdiyuan
    * @Date: 2022-02-25 13:21:02
    * @LastEditors: songdiyuan
    * @LastEditTime: 2022-02-25 14:45:51
    * @Description:
    * @FilePath: /mu-hybrid/mu-hybrid/mu_nfc/index.js
    * @version: 1.0.0
    */
exports.default = MuNFC;

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: songdiyuan
 * @Date: 2022-02-25 13:21:02
 * @LastEditors: songdiyuan
 * @LastEditTime: 2022-02-25 14:45:51
 * @Description:
 * @FilePath: /mu-hybrid/mu-hybrid/mu_nfc/mock.js
 * @version: 1.0.0
 */
var MuNFC = {
  /**
   * NFC标识读取
   */
  read: function read(option) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'web环境返回mock数据',
        data: {}
      });
    });
    return p;
  }
};

exports.default = MuNFC;

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(340).default;

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  read: function read() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: lee9527
 * @Date: 2021-01-04 10:18:06
 * @LastEditors: lee9527
 * @LastEditTime: 2022-08-03 15:40:48
 * @Description:
 * @FilePath: /mu-hybrid/mu-hybrid/mu_oAuth/mock.js
 * @version: 1.0.0
 */

var MUOAuth = {
  authorize: function authorize(option) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: '',
        data: {
          code: 'APTX4869-9684XTPA',
          scope: 'api_base,api_userinfo'
        }
      });
    });
    return p;
  }
};

exports.default = MUOAuth;

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(343).default;

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  authorize: function authorize() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuOffline = {

  /**
   * 设置域名地址
   */
  setBaseHostUrl: function setBaseHostUrl() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUOffline', 'setBaseHostUrl', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },

  /**
   * 跳转到离线包主页
   */
  toMain: function toMain() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUOffline', 'toMain', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },

  /**
   * 下载DB和资源文件
   */
  downloadFile: function downloadFile() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUOffline', 'downloadFile', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  }
};

exports.default = MuOffline;

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MuOffline = {
  setBaseHostUrl: function setBaseHostUrl(option, success, failure) {
    success({
      status: 0,
      message: 'MuOffline',
      data: {}
    });
  },
  toMain: function toMain(option, success, failure) {
    success({
      status: 0,
      message: 'MuOffline',
      data: {}
    });
  },
  downloadFile: function downloadFile(option, success, failure) {
    success({
      status: 0,
      message: 'MuOffline',
      data: {}
    });
  }
};

exports.default = MuOffline;

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(347).default;

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  setBaseHostUrl: function setBaseHostUrl() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  toMain: function toMain() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  downloadFile: function downloadFile() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuPDA = {

  /**
   * 上电
   */
  powOn: function powOn() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUPDA', 'powOn', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },


  /**
   * 下电
   */
  powOff: function powOff() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUPDA', 'powOff', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },


  /**
   * 读取身份证信息
   */
  readIDCard: function readIDCard() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUPDA', 'readIDCard', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },


  /**
   * 打印
   */
  print: function print() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUPDA', 'print', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },


  /**
   * 自定义格式打印
   */
  printForCustom: function printForCustom() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUPDA', 'printForCustom', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },


  /**
   * 已配对蓝牙设备扫描
   */
  scanForBluetooth: function scanForBluetooth() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUPDA', 'scanForBluetooth', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },


  /**
   * 蓝牙打印机打印
   */
  printForBluetooth: function printForBluetooth() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUPDA', 'printForBluetooth', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },


  /**
   * 绑定设备扫描
   */
  bindScan: function bindScan() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUPDA', 'bindScan', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },


  /**
   * 解除绑定设备扫描
   */
  unbindScan: function unbindScan() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUPDA', 'unbindScan', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  }
};

exports.default = MuPDA;

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MuPDA = {
  powOn: function powOn(option, success, failure) {
    success({
      status: 0,
      message: 'MuPDA',
      data: {}
    });
  },
  powOff: function powOff(option, success, failure) {
    success({
      status: 0,
      message: 'MuPDA',
      data: {}
    });
  },
  readIDCard: function readIDCard(option, success, failure) {
    success({
      status: 0,
      message: 'MuPDA',
      data: {}
    });
  },
  print: function print(option, success, failure) {
    success({
      status: 0,
      message: 'MuPDA',
      data: {}
    });
  },
  printForCustom: function printForCustom(option, success, failure) {
    success({
      status: 0,
      message: 'MuPDA',
      data: {}
    });
  },
  bindScan: function bindScan(option, success, failure) {
    success({
      status: 0,
      message: 'MuPDA',
      data: {}
    });
  },
  unbindScan: function unbindScan(option, success, failure) {
    success({
      status: 0,
      message: 'MuPDA',
      data: {}
    });
  }
};

exports.default = MuPDA;

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(351).default;

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  powOn: function powOn() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  powOff: function powOff() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  readIDCard: function readIDCard() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  print: function print() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  printForCustom: function printForCustom() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  bindScan: function bindScan() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  unbindScan: function unbindScan() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUPush = {

  /**
   * 设置别名
   */
  setAlias: function setAlias() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUPush', 'setAlias', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },


  /**
   * 删除别名
   */
  deleteAlias: function deleteAlias() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUPush', 'deleteAlias', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  },


  /**
   * 停止推送
   */
  stopPush: function stopPush() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments[1];
    var failure = arguments[2];

    _windvane2.default.WindVane.call('MUPDA', 'stopPush', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      success(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      failure(err);
    });
  }
};

exports.default = MUPush;

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MUPush = {
  setAlias: function setAlias(option, success, failure) {
    success({
      status: 0,
      message: 'MUPush',
      data: {}
    });
  },
  deleteAlias: function deleteAlias(option, success, failure) {
    success({
      status: 0,
      message: 'MUPush',
      data: {}
    });
  },
  stopPush: function stopPush(option, success, failure) {
    success({
      status: 0,
      message: 'MUPush',
      data: {}
    });
  }
};

exports.default = MUPush;

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(355).default;

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  setAlias: function setAlias() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  deleteAlias: function deleteAlias() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  stopPush: function stopPush() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * <!-- ©Copyright 2020 China Eastern Airlines. All rights reserved. -->
 * <!-- Created by <songdiyuan@ceair.com> on 2020-07-21 -->
 */

var MUScanner = {
  /**
   * 跳转MUC群对话框
   */
  scan: function scan() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'web环境返回mock数据',
        data: {
          code: "data"
        }
      });
    });
    return p;
  }
};

exports.default = MUScanner;

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(358).default;

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  scan: function scan() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DefaultMsg = {
  en_US: {
    INVALID_PARAM_ERROR: 'Invalid param, please try again later',
    TITLE: 'Prompt',
    CONFIRM_BUTTON: 'confirm',
    CANCEL_BUTTON: 'cancel'
  },
  zh_CN: {
    INVALID_PARAM_ERROR: '参数错误',
    TITLE: '提示',
    CONFIRM_BUTTON: '确定',
    CANCEL_BUTTON: '取消'
  }
}; /*
    * @Author: lee9527
    * @Date: 2021-09-08 15:24:34
    * @LastEditors: lee9527
    * @LastEditTime: 2021-11-11 09:32:23
    * @Description:
    * @FilePath: /mu-hybrid/mu-hybrid/mu_screen/index.js
    * @version: 1.0.0
    */


var MUScreen = {
  judgeDefaultMsg: function judgeDefaultMsg(key) {
    var language = 'zh_CN';
    var userAgent = navigator.userAgent;
    var tmpArray = userAgent.split(' ');
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = tmpArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var item = _step.value;

        if (item.indexOf('language') !== -1) {
          language = item.split('/')[1];
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return DefaultMsg[language][key];
  },
  isPositiveNumber: function isPositiveNumber(num) {
    if (/^(0.\d+|0|1)$/.test(num)) {
      return true;
    } else {
      return false;
    }
  },
  getScreenBrightness: function getScreenBrightness() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      var fix = 2;
      if (option.fix) {
        fix = option.fix;
      }
      _windvane2.default.WindVane.call('MUScreen', 'getScreenBrightness', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        if (res.data.value) {
          res.data.value = parseFloat(res.data.value.toFixed(fix));
        }
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  setScreenBrightness: function setScreenBrightness() {
    var _this = this;

    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      if (!option.value || !_this.isPositiveNumber(option.value)) {
        // eslint-disable-next-line prefer-promise-reject-errors
        reject({
          status: -1,
          message: _this.judgeDefaultMsg('INVALID_PARAM_ERROR'),
          data: {},
          errorCode: 'INVALID_PARAM_ERROR'
        });
      }
      _windvane2.default.WindVane.call('MUScreen', 'setScreenBrightness', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  setKeepScreenOn: function setKeepScreenOn() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUScreen', 'setKeepScreenOn', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUScreen;

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: lee9527
 * @Date: 2021-09-08 15:24:39
 * @LastEditors: lee9527
 * @LastEditTime: 2021-09-08 15:27:27
 * @Description:
 * @FilePath: /mu-hybrid/mu-hybrid/mu_screen/mock.js
 * @version: 1.0.0
 */
var MUScreen = {
  getScreenBrightness: function getScreenBrightness() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'web环境返回mock数据',
        data: {
          code: 'data'
        }
      });
    });
    return p;
  },
  setScreenBrightness: function setScreenBrightness() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'web环境返回mock数据',
        data: {
          code: 'data'
        }
      });
    });
    return p;
  },
  setKeepScreenOn: function setKeepScreenOn() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'web环境返回mock数据',
        data: {
          code: 'data'
        }
      });
    });
    return p;
  }
};

exports.default = MUScreen;

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(362).default;

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  getScreenBrightness: function getScreenBrightness() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  setScreenBrightness: function setScreenBrightness() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  setKeepScreenOn: function setKeepScreenOn() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUSensor = {
  // 获取步数
  getStepsByDate: function getStepsByDate() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUSensor', 'getStepsByDate', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
}; /*
    * @Author: lee9527
    * @Date: 2021-01-21 16:47:49
    * @LastEditors: lee9527
    * @LastEditTime: 2021-05-25 13:22:59
    * @Description:
    * @FilePath: /mu-hybrid/mu-hybrid/mu_sensor/index.js
    * @version: 1.0.0
    */
exports.default = MUSensor;

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: lee9527
 * @Date: 2021-01-21 16:47:54
 * @LastEditors: xiaoyang
 * @LastEditTime: 2023-02-13 15:20:54
 * @Description:
 * @FilePath: /mu-hybrid/mu-hybrid/mu_sensor/mock.js
 * @version: 1.0.0
 */
var MUSensor = {
  // 播放
  getStepsByDate: function getStepsByDate() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      resolve({ status: 0, data: { steps: 2355 }, message: '' });
    });
    return p;
  }
};

exports.default = MUSensor;

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(366).default;

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  getStepsByDate: function getStepsByDate() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ExportModule = {
  share: function share() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUShare', 'share', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  }
};

exports.default = ExportModule;

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MUShare = {
  share: function share() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'MUShare ',
        data: option
      });
    });
    return p;
  }
};

exports.default = MUShare;

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(370).default;

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  share: function share() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ExportModule = {
  signatureStyle: function signatureStyle() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUSignature', 'signatureStyle', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },
  signatureLocation: function signatureLocation() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUSignature', 'signatureLocation', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  },
  signatureImage: function signatureImage() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUSignature', 'signatureImage', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        success(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        failure(err);
        reject(err);
      });
    });
    return p;
  }
};

exports.default = ExportModule;

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MUSignature = {
  signatureStyle: function signatureStyle() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      resolve({ 'status': 0, 'message': 'success', 'data': { 'imagePath': 'https://apps.ceair.com/apps/apps_static/css/images/image.png' } });
    });
    return p;
  },
  signatureLocation: function signatureLocation() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      resolve({ 'status': 0, 'message': 'success', 'data': { 'width': 0.8888, 'height': 0.8888 } });
    });
    return p;
  },
  signatureImage: function signatureImage() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      resolve({ 'status': 0, 'message': 'success', 'data': { 'imagePath': 'https://apps.ceair.com/apps/apps_static/css/images/image.png' } });
    });
    return p;
  }
};

exports.default = MUSignature;

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(374).default;

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  signatureStyle: function signatureStyle() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  signatureLocation: function signatureLocation() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  signatureImage: function signatureImage() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUSignaturePad = {
  show: function show() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var success = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var failure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUSignaturePad', 'show', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
}; /*
    * @Description: signaturepad
    * @version: 1.0.0
    * @Author: dengxuan
    * @Date: 2021-01-26 14:45:51
    * @LastEditors: lee9527
    * @LastEditTime: 2021-05-25 13:30:48
    */
exports.default = MUSignaturePad;

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: dengxuan
 * @Date: 2021-01-26 14:45:51
 * @LastEditTime: 2023-02-13 15:28:55
 * @LastEditors: xiaoyang
 * @Description: 签名组件
 * @FilePath: /mu-hybrid/mu-hybrid/mu_signaturePad/mock.js
 */

var MUSignaturePad = {
  /**
   * 打开签名板
   */
  show: function show(option, success, failure) {
    success({
      status: 0,
      message: '网页mock数据',
      data: {}
    });
  }
};

exports.default = MUSignaturePad;

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(378).default;

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  show: function show() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var namespace_ = 'anonymous';
var group_ = null;

var MUStorage = {};
/**
 * 初始化
 */
MUStorage.initialize = function (option) {
  namespace_ = option.namespace;
  group_ = option.group;
};
/**
 * 读取数据
 * @param {{string}} key 要获取的键的名称
 */
MUStorage.getItem = function (key) {
  var option = {
    namespace: namespace_,
    scope: 'owner',
    group: group_,
    owner: location.origin,
    key: key
  };
  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUStorage', 'getItem', option, function (res) {
      var data = res.data;
      if (data === undefined || data === null || data === '') {
        res.data = null;
      } else {
        try {
          res.data = JSON.parse(data);
        } catch (err) {
          res.data = data;
        }
      }
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};
/**
 * 保存数据
 * @param {{string}} key 要存储的键
 * @param {{string}} value 要存储的值
 */
MUStorage.setItem = function (key, value) {
  var option = {
    namespace: namespace_,
    scope: 'owner',
    group: group_,
    owner: location.origin,
    key: key,
    value: JSON.stringify(value)
  };
  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUStorage', 'setItem', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};
/**
 * 删除数据
 * @param {{string}} key 要删除的键的名称
 */
MUStorage.removeItem = function (key) {
  var option = {
    namespace: namespace_,
    scope: 'owner',
    group: group_,
    owner: location.origin,
    key: key
  };
  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUStorage', 'removeItem', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};
/**
 * 读取子应用数据
 * @param {{string}} key 要获取的键的名称
 */
MUStorage.getGroupItem = function (key, group) {
  var option = {
    namespace: namespace_,
    scope: 'group',
    group: group || group_,
    owner: location.origin,
    key: key
  };
  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUStorage', 'getItem', option, function (res) {
      var data = res.data;
      if (data === undefined || data === null || data === '') {
        res.data = null;
      } else {
        try {
          res.data = JSON.parse(data);
        } catch (err) {}
      }
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};
/**
 * 保存子应用数据
 * @param {{string}} key 要存储的键
 * @param {{string}} value 要存储的值
 */
MUStorage.setGroupItem = function (key, value, group) {
  var option = {
    namespace: namespace_,
    scope: 'group',
    group: group || group_,
    owner: location.origin,
    key: key,
    value: JSON.stringify(value)
  };
  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUStorage', 'setItem', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};
/**
 * 删除子应用数据
 * @param {{string}} key 要删除的键的名称
 * @return {{json}} 回调
 */
MUStorage.removeGroupItem = function (key, group) {
  var option = {
    namespace: namespace_,
    scope: 'group',
    group: group || group_,
    owner: location.origin,
    key: key
  };
  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUStorage', 'removeItem', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};
/**
 * 读取所有数据
 * @param {{string}} key 要存储的键
 * @return {{json}} 回调
 */
MUStorage.getGlobalItem = function (key) {
  var option = {
    namespace: namespace_,
    scope: 'global',
    group: group_,
    owner: location.origin,
    key: key
  };
  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUStorage', 'getItem', option, function (res) {
      var data = res.data;
      if (data === undefined || data === null || data === '') {
        res.data = null;
      } else {
        try {
          res.data = JSON.parse(data);
        } catch (err) {
          console.log(err);
          res.data = data;
        }
      }
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};
/**
 * 保存所有数据
 * @param {{string}} key 要存储的键
 * @param {{string}} value 要存储的值
 * @return {{json}} 回调
 */
MUStorage.setGlobalItem = function (key, value) {
  var option = {
    namespace: namespace_,
    scope: 'global',
    group: group_,
    owner: location.origin,
    key: key,
    value: JSON.stringify(value)
  };
  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUStorage', 'setItem', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};
/**
 * 删除所有数据
 * @param {{string}} key 要删除的键的名称
 * @return {{json}} 回调
 */
MUStorage.removeGlobalItem = function (key) {
  var option = {
    namespace: namespace_,
    scope: 'global',
    group: group_,
    owner: location.origin,
    key: key
  };
  var p = new Promise(function (resolve, reject) {
    _windvane2.default.WindVane.call('MUStorage', 'removeItem', option, function (res) {
      try {
        res.data = JSON.parse(res.data);
      } catch (err) {}
      delete res.ret;
      resolve(res);
    }, function (err) {
      try {
        err.data = JSON.parse(err.data);
      } catch (err) {}
      delete err.ret;
      reject(err);
    });
  });
  return p;
};
exports.default = MUStorage;

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(381).default;

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * ©Copyright 2018 China Eastern Airlines. All rights reserved
 * Created by bryan<liubo15@ceair.com> on 2018.10.31
 * doc: http://gitlab.ceair.com/muit-mobile/Public-Doc/mu-weex-native/wikis/mu-weex-module/storage
 */
var namespace_ = 'anonymous';
var group_ = null;

var MUStorage = {};
/**
 * 初始化
 */
MUStorage.initialize = function (option) {
  namespace_ = option.namespace;
  group_ = option.group;
};
/**
 * 读取数据
 * @param {{string}} key 要获取的键的名称
 */
MUStorage.getItem = function (key, scope) {
  var storage = localStorage;
  var option = {
    key: key + scope
  };

  var p = new Promise(function (resolve, reject) {
    resolve({
      status: 0,
      data: storage.getItem(option.key)
    });
  });
  return p;
};
/**
 * 保存数据
 * @param {{string}} key 要存储的键
 * @param {{string}} value 要存储的值
 */
MUStorage.setItem = function (key, value, scope) {
  var storage = localStorage;
  var option = {
    key: key + scope,
    value: JSON.stringify(value)
  };
  var p = new Promise(function (resolve, reject) {
    storage.setItem(option.key, option.value);
    resolve(option);
  });
  return p;
};
/**
 * 删除数据
 * @param {{string}} key 要删除的键的名称
 */
MUStorage.removeItem = function (key, scope) {
  var storage = localStorage;
  var option = {
    key: key + scope
  };
  console.log('MUStorage.removeItem ' + key);
  var p = new Promise(function (resolve, reject) {
    if (option.key) {
      storage.removeItem(option.key);
      resolve(option);
    }
  });
  return p;
};
/**
 * 读取子应用数据
 * @param {{string}} key 要获取的键的名称
 */
MUStorage.getGroupItem = function (key, group) {
  return MUStorage.getItem(key, 'group');
};
/**
 * 保存子应用数据
 * @param {{string}} key 要存储的键
 * @param {{string}} value 要存储的值
 */
MUStorage.setGroupItem = function (key, value, group) {
  return MUStorage.setItem(key, value, 'group');
};
/**
 * 删除子应用数据
 * @param {{string}} key 要删除的键的名称
 * @return {{json}} 回调
 */
MUStorage.removeGroupItem = function (key, group) {
  return MUStorage.removeItem(key, 'group');
};
/**
 * 读取所有数据
 * @param {{string}} key 要存储的键
 * @return {{json}} 回调
 */
MUStorage.getGlobalItem = function (key) {
  return MUStorage.getItem(key, 'global');
};
/**
 * 保存所有数据
 * @param {{string}} key 要存储的键
 * @param {{string}} value 要存储的值
 * @return {{json}} 回调
 */
MUStorage.setGlobalItem = function (key, value) {
  return MUStorage.setItem(key, value, 'global');
};
/**
 * 删除所有数据
 * @param {{string}} key 要删除的键的名称
 * @return {{json}} 回调
 */
MUStorage.removeGlobalItem = function (key) {
  return MUStorage.removeItem(key, 'global');
};
exports.default = MUStorage;

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * ©Copyright 2018 China Eastern Airlines. All rights reserved
 * Created by bryan<liubo15@ceair.com> on 2018.10.31
 * doc: http://gitlab.ceair.com/muit-mobile/Public-Doc/mu-weex-native/wikis/mu-weex-module/storage
 */

// FIXME:子应用隔离appid怎么取呢？
// eslint-disable-next-line no-unused-vars
var namespace_ = 'anonymous';
// app.js会初始化赋值appid
var group_ = null;

/**
 * setItem: 路由隔离，localStorage默认就是这个策略(webapp的setItem 因为都是vue的单页面，其实也是当前应用共享的。)
 * setGroupItem: appId隔离
 * setGlobalItem: 用户隔离
 */
var MUStorage = {};
/**
  * 初始化
  */
MUStorage.initialize = function (option) {
  namespace_ = option.namespace;
  group_ = option.group;
};
/**
  * 读取数据
  * @param {{string}} key 要获取的键的名称
  */
MUStorage.getItem = function (key, scope) {
  var option = {
    key: key
  };

  var p = new Promise(function (resolve, reject) {
    try {
      var result = JSON.parse(localStorage.getItem(option.key));
      resolve({
        status: 0,
        message: 'success',
        data: result
      });
    } catch (error) {
      console.error('MUStorage.getItem::error', error.message);
      var err = {
        status: -1,
        message: error.message,
        data: {}
      };
      reject(err);
    }
  });
  return p;
};
/**
  * 保存数据
  * @param {{string}} key 要存储的键
  * @param {{string}} value 要存储的值
  */
MUStorage.setItem = function (key, value, scope) {
  var option = {
    key: key,
    value: JSON.stringify(value)
  };
  var p = new Promise(function (resolve, reject) {
    try {
      localStorage.setItem(option.key, option.value);
      resolve({
        status: 0,
        message: 'success',
        data: {}
      });
    } catch (error) {
      var err = {
        status: -1,
        message: error.message,
        data: {}
      };
      reject(err);
    }
  });
  return p;
};
/**
  * 删除数据
  * @param {{string}} key 要删除的键的名称
  */
MUStorage.removeItem = function (key, scope) {
  var option = {
    key: key
  };
  console.log('MUStorage.removeItem ' + key);
  var p = new Promise(function (resolve, reject) {
    if (option.key) {
      try {
        localStorage.removeItem(option.key);
        resolve({
          status: 0,
          message: 'success',
          data: {}
        });
      } catch (error) {
        var err = {
          status: -1,
          message: error.message,
          data: {}
        };
        reject(err);
      }
    }
  });
  return p;
};
/**
  * 读取子应用数据
  * @param {{string}} key 要获取的键的名称
  */
MUStorage.getGroupItem = function (key, group) {
  var groupKey = group || group_ || 'group';
  return MUStorage.getItem(groupKey + '_' + key);
};
/**
  * 保存子应用数据
  * @param {{string}} key 要存储的键
  * @param {{string}} value 要存储的值
  */
MUStorage.setGroupItem = function (key, value, group) {
  var groupKey = group || group_ || 'group';
  return MUStorage.setItem(groupKey + '_' + key, value);
};
/**
  * 删除子应用数据
  * @param {{string}} key 要删除的键的名称
  * @return {{json}} 回调
  */
MUStorage.removeGroupItem = function (key, group) {
  var groupKey = group || group_ || 'group';
  return MUStorage.removeItem(groupKey + '_' + key);
};
/**
  * 读取所有数据
  * @param {{string}} key 要存储的键
  * @return {{json}} 回调
  */
MUStorage.getGlobalItem = function (key) {
  var option = {
    key: key
  };

  var p = new Promise(function (resolve, reject) {
    try {
      window.NativeApi.muHybridService.localGetItem(option.key).then(function (result) {
        resolve({
          status: 0,
          message: 'success',
          data: result
        });
      }).catch(function (err) {
        var errObj = {
          status: -1,
          message: err,
          data: {}
        };
        reject(errObj);
      });
    } catch (error) {
      var err = {
        status: -1,
        message: error.message,
        data: {}
      };
      reject(err);
    }
  });
  return p;
};
/**
  * 保存所有数据
  * @param {{string}} key 要存储的键
  * @param {{string}} value 要存储的值
  * @return {{json}} 回调
  */
MUStorage.setGlobalItem = function (key, value) {
  var option = {
    key: key,
    value: JSON.stringify(value)
  };

  var p = new Promise(function (resolve, reject) {
    try {
      window.NativeApi.muHybridService.localSetItem(option.key, option.value).then(function (result) {
        resolve({
          status: 0,
          message: 'success',
          data: {}
        });
      }).catch(function (err) {
        var errObj = {
          status: -1,
          message: err,
          data: {}
        };
        reject(errObj);
      });
    } catch (error) {
      var err = {
        status: -1,
        message: error.message,
        data: {}
      };
      reject(err);
    }
  });
  return p;
};
/**
  * 删除所有数据
  * @param {{string}} key 要删除的键的名称
  * @return {{json}} 回调
  */
MUStorage.removeGlobalItem = function (key) {
  var option = {
    key: key
  };

  var p = new Promise(function (resolve, reject) {
    try {
      window.NativeApi.muHybridService.localRemoveItem(option.key).then(function (result) {
        resolve({
          status: 0,
          message: 'success',
          data: {}
        });
      }).catch(function (err) {
        var errObj = {
          status: -1,
          message: err,
          data: {}
        };
        reject(errObj);
      });
    } catch (error) {
      var err = {
        status: -1,
        message: error.message,
        data: {}
      };
      reject(err);
    }
  });
  return p;
};

exports.default = MUStorage;

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUSystemTools = {
  /**
   * 打电话
   */

  call: function call(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUSystemTools', 'call', param1, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param2(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param3(err);
        reject(err);
      });
    });
    return p;
  },
  sendSMS: function sendSMS(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUSystemTools', 'sendSMS', param1, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param2(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param3(err);
        reject(err);
      });
    });
    return p;
  },
  is24HourFormat: function is24HourFormat(param1) {
    var param2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var param3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUSystemTools', 'is24HourFormat', param1, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        param2(res);
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        param3(err);
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUSystemTools;

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var MUSystemTools = {
  call: function call(param1, param2, param3) {
    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        param1({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      } else {
        param2({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      }
    });
    return p;
  },
  sendSMS: function sendSMS(param1, param2, param3) {
    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        param1({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      } else {
        param2({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      }
    });
    return p;
  },
  is24HourFormat: function is24HourFormat(param1, param2, param3) {
    var p = new Promise(function (resolve, reject) {
      if (typeof param1 === 'function') {
        param1({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      } else {
        param2({
          status: 0,
          message: '',
          data: {
            path: ''
          }
        });
      }
    });
    return p;
  }
};

exports.default = MUSystemTools;

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(386).default;

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  call: function call() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  sendSMS: function sendSMS() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(82).default;

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(389)
}
var Component = __webpack_require__(7)(
  /* script */
  __webpack_require__(391),
  /* template */
  null,
  /* styles */
  injectStyle,
  /* scopeId */
  null,
  /* moduleIdentifier (server only) */
  null
)
Component.options.__file = "/data/gitlab-runner/builds/bxZ2z3qA/0/muit-mobile/Hybrid/hybrid-components/mu-hybrid/mu-hybrid/mu_toast/Toast.vue"
if (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== "default" && key.substr(0, 2) !== "__"})) {console.error("named exports are not supported in *.vue files.")}

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6f80ceb2", Component.options)
  } else {
    hotAPI.reload("data-v-6f80ceb2", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

module.exports = Component.exports


/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(390);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(11)("ed50d256", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6f80ceb2\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Toast.vue", function() {
     var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-6f80ceb2\",\"scoped\":false,\"hasInlineConfig\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Toast.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", ""]);

// exports


/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

__webpack_require__(75);

var _toast = __webpack_require__(38);

var _toast2 = _interopRequireDefault(_toast);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//

exports.default = {
  name: 'MuToast',
  components: {},
  data: function data() {
    return {};
  },
  updated: function updated() {},

  methods: {
    info: function info(_ref) {
      var message = _ref.message,
          duration = _ref.duration;

      (0, _toast2.default)({ message: message, duration: duration });
    },
    success: function success(_ref2) {
      var message = _ref2.message,
          duration = _ref2.duration;

      _toast2.default.success({ message: message, duration: duration });
    },
    fail: function fail(_ref3) {
      var message = _ref3.message,
          duration = _ref3.duration;

      _toast2.default.fail({ message: message, duration: duration });
    }
  }
};

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(82).default;

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _mu_sacn_qrcode = __webpack_require__(394);

var _mu_sacn_qrcode2 = _interopRequireDefault(_mu_sacn_qrcode);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuTools = {
  scanMuQrcode: _mu_sacn_qrcode2.default
};
exports.default = MuTools;

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = __webpack_require__(78);

var _regenerator2 = _interopRequireDefault(_regenerator);

/**
 * @description: 根据扫码的信息，解析信息，执行做对应动作。
 * @param {String} code:
 * 掌上东航-随机短码地址 https://store.ceair.com/mu_public/qrcode?code=4F4YKm8dV
 * muc-入群二维码 BEGIN:VCARD VERSION:3.0 FN:群名 X-IDENTITY:com.ceair.im.muc#groupchat#202105251225156141 END:VCARD
 */
var deCodeAction = function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
    var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var ErrorMsg, eventOption;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            ErrorMsg = void 0;
            eventOption = {};
            // 判断是不是muc 二维码

            if (!(code.indexOf('com.ceair.im.muc') > -1)) {
              _context.next = 8;
              break;
            }

            _context.next = 5;
            return decodeMuc(code);

          case 5:
            eventOption = _context.sent;
            _context.next = 17;
            break;

          case 8:
            if (!(code.indexOf('ceair.com/mu_public/qrcode') > -1)) {
              _context.next = 14;
              break;
            }

            _context.next = 11;
            return decodeMuMobile(code);

          case 11:
            eventOption = _context.sent;
            _context.next = 17;
            break;

          case 14:
            // 不支持的二维码
            ErrorMsg = '不支持该二维码1004';
            callback(ErrorMsg);
            return _context.abrupt('return');

          case 17:
            // 逻辑正常
            if (eventOption.status === 0) {
              doCodeAction(eventOption.data, function (msg) {
                callback(msg);
              });
            } else {
              callback(eventOption.message);
            }

          case 18:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function deCodeAction() {
    return _ref.apply(this, arguments);
  };
}();

/**
 * @description 掌上东航扫码调用
 * @param option.is_decoded 是否扫码后进行解码操作，默认true，false时候直接返回扫码结果
 */


var _md = __webpack_require__(395);

var _md2 = _interopRequireDefault(_md);

var _service = __webpack_require__(398);

var _mu_epass = __webpack_require__(61);

var _mu_epass2 = _interopRequireDefault(_mu_epass);

var _mu_navigator = __webpack_require__(77);

var _mu_navigator2 = _interopRequireDefault(_mu_navigator);

var _mu_mini_app = __webpack_require__(76);

var _mu_mini_app2 = _interopRequireDefault(_mu_mini_app);

var _mu_o_auth = __webpack_require__(79);

var _mu_o_auth2 = _interopRequireDefault(_mu_o_auth);

var _mu_cards = __webpack_require__(51);

var _mu_cards2 = _interopRequireDefault(_mu_cards);

var _mu_app_help = __webpack_require__(40);

var _mu_app_help2 = _interopRequireDefault(_mu_app_help);

var _mu_scanner = __webpack_require__(80);

var _mu_scanner2 = _interopRequireDefault(_mu_scanner);

var _mu_toast = __webpack_require__(81);

var _mu_toast2 = _interopRequireDefault(_mu_toast);

var _mu_tracker = __webpack_require__(83);

var _mu_tracker2 = _interopRequireDefault(_mu_tracker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * @Author: xiaoyang
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * @Date: 2020-11-17 16:27:33
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * @LastEditors: xiaoyang
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * @Description: http://confluence.ceair.com:8090/pages/viewpage.action?pageId=34639958
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * @FilePath: /mu-hybrid/mu-hybrid/mu_tools/mu_sacn_qrcode.js
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            * @version: 1.0.0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            */


var ua = window.navigator.userAgent;
var appVersion = ua.match(/MUMobile\/([\S.]+)/) ? ua.match(/MUMobile\/([\S.]+)/)[1] : '9.9.9999';

function getMd5(str) {
  var sign = (0, _md2.default)(str).toString();
  return sign;
}

// muc扫一扫事件 支持最低版本
var MucSupportVersion = '5.0.1901';

/**
 * @description 获取后端解析code返回的信息，序列化参数
 * @param {String} CodeInfo: mumobile://?action=forward&option={"cardCode":"weex_mis_visitor_01"}
 * @returns {Object} {"action":"forward","option":"{\"cardCode\":\"weex_mis_visitor_01\"}"}
 * 文档参考: http://confluence.ceair.com:8090/pages/viewpage.action?pageId=34639958
 */
var getParamByCodeInfo = function getParamByCodeInfo(CodeInfo) {
  var urlObject = {};
  // var str = CodeInfo.match(/\/\/(\S*?)\//); // 获取类型 appcan/weex  非贪婪模式 量词后面加？
  var str = CodeInfo.match(/\/\/(\S*?)/);
  if (str) {
    if (/\?/.test(CodeInfo)) {
      var urlString = CodeInfo.substring(CodeInfo.indexOf('?') + 1);
      var urlArray = urlString.split('&');
      for (var i = 0, len = urlArray.length; i < len; i++) {
        var urlItem = urlArray[i];
        var item = urlItem.split('=');
        urlObject[item[0]] = item[1];
      }
      return urlObject;
    } else {
      return false;
    }
  } else {
    return false;
  }
};

/**
 * @description 解析掌上东航二维码
 * @param {String} codeStr https://store.ceair.com/mu_public/qrcode?code=4F4YKm8dV
 * @return {Object} {"status":0,"data":{"action":"forward","option":"{\"cardCode\":\"weex_mis_visitor_01\"}"}}
 */
var decodeMuMobile = function decodeMuMobile() {
  var codeStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

  return new Promise(function (resolve) {
    codeStr = decodeURI(codeStr);
    codeStr = codeStr.match(new RegExp('[?|&]code=([^&]+)'));
    codeStr = codeStr ? codeStr[1] : ''; // 4F4YKm8dV
    if (!codeStr) {
      resolve({
        status: -1,
        message: '二维码异常1001',
        data: {}
      });
    }
    // 调用前沿接口解析短码
    (0, _service.qrcode)({
      code: codeStr
    }).then(function (res) {
      // res.data.data =  {"status":0,"message":"ok","data":"mumobile://?action=forward&option={"cardCode":"weex_mis_visitor_01"}"}
      var _res = JSON.parse(res.data.data);
      if (_res.status !== 0) {
        resolve({
          status: -1,
          message: _res.message,
          data: {}
        });
      }
      // 处理前沿短码，解码后的信息
      var option = getParamByCodeInfo(_res.data);
      if (!option) {
        resolve({
          status: -1,
          message: '解码失败，请重试',
          data: {}
        });
      }
      // 返回解码结果
      resolve({
        status: 0,
        message: '',
        data: option
      });
    }).catch(function (err) {
      resolve({
        status: -1,
        message: '服务异常，' + err.message,
        data: {}
      });
    });
  });
};

/**
 * @description 执行code解析下来的明文信息中，应该执行的动作
 * @param {String} CodeInfo:mumobile://?action=forward&option={"cardCode":"weex_mis_visitor_01"} => {"action":"forward","option":'{"cardCode":"weex_mis_visitor_01"}'}
 * 文档参考: http://confluence.ceair.com:8090/pages/viewpage.action?pageId=34639958
 */
var doCodeAction = function doCodeAction(CodeInfo, callback) {
  var action = CodeInfo.action;
  var ErrorMsg = '';
  var option = {};
  try {
    // 格式化数据
    option = JSON.parse(CodeInfo.option);
  } catch (error) {
    ErrorMsg = '\u89E3\u6790\u5F02\u5E381003' + error.message;
    callback(ErrorMsg);
    return;
  }
  var contentDetail = '其他';
  // 根据action 去区分当前事件类型做不同处理
  switch (action) {
    case 'forward':
      // 跳转 emas OA App解决方案中，配置好的卡片Code 或者 weex js path
      // openCard
      if (option.cardCode) {
        // 掌上东航Pc端扫一扫认证
        if (option.cardCode.endsWith('webapp_qr_login') && option.data && option.data.channel === 'pc') {
          // 通过 MuOauth.authorize 插件进行认证
          authorize(option.data, function (message) {
            callback(message);
          });
          return;
        }
        _mu_cards2.default.openCard(option).catch(function (err) {
          callback(err.message);
        });
        return;
      }
      // forward 类型
      if (option.path) {
        _mu_navigator2.default.forward(option).catch(function (err) {
          callback(err.message);
        });
      }
      contentDetail = '掌上东航二维码';
      break;
    case 'epass':
      // 强认证
      _mu_epass2.default.authQR({
        content: option.code
      }).then(function (res) {
        var message = '认证成功';
        if (res.status !== 0) {
          message = res.message;
        }
        _mu_toast2.default.showInfo({ message: message });
      }).catch(function (error) {
        ErrorMsg = '' + error.message;
        callback(ErrorMsg);
      });
      contentDetail = 'Epass强认证';
      break;
    case 'chat':
      // muc聊天入口
      // 群聊
      // appVersion >= 5.0.1901版本支持
      if (appVersion < MucSupportVersion) {
        var msg = '请升级到5.0.1901以上版本';
        callback(msg);
        return;
      }
      if (option.type === 'group') {
        _mu_app_help2.default.forwardApplyGroupChat({
          groupId: option.id
        }).catch(function (err) {
          callback(err.message);
        });
        // 单聊
      } else if (option.type === 'single') {
        _mu_app_help2.default.forwardSingleChat({
          singleId: option.id
        }).catch(function (err) {
          callback(err.message);
        });
      }
      contentDetail = 'muc进群';
      break;
    case 'miniapp':
      if (appVersion < '5.1.1001') {
        var _msg = '请升级到5.1.1100及以上版本';
        callback(_msg);
        return;
      }
      try {
        _mu_mini_app2.default.open(option).catch(function (err) {
          callback(err.message);
        });
      } catch (error) {}
      break;
    default:
      // 不在支持类别的中的类型
      ErrorMsg = '\u6682\u4E0D\u652F\u6301' + action + '\u7C7B\u578B';
      contentDetail = '其他';
      callback(ErrorMsg);
      break;
  }
  _mu_tracker2.default.trackEvent({
    eventId: 'click',
    eventData: {
      block: '@ceair/mu-hybrid',
      page_name: 'mu_tools',
      target_name: 'mu_sacn_qrcode',
      content_detail: contentDetail
    }
  });
};

/**
 * @author: wangjie59
 * @description: 认证及授权
 * @param {*} params 认证插件参数
 * @return {*} callback 回调函数
 * @example
 * ```js
 * authorize()
 * ```
 */
function authorize(params, callback) {
  var authId = params.appId,
      appName = params.appName,
      appIcon = params.appIcon,
      appId = params.miniappId,
      scope = params.authorizedScope,
      key = params.key,
      channel = params.channel;
  // 调用原生授权插件

  var option = {
    appId: appId,
    appName: appName,
    appIcon: appIcon,
    scope: Array.isArray(scope) ? scope.join(',') : scope,
    authId: authId
  };

  // 认证插件
  _mu_o_auth2.default.authorize(option).then(function (result) {
    if (result.status !== 0 || !result.data || !result.data.code) {
      callback(result.message);
      return;
    }
    var scene = 1000;
    var salt = '202212138690';
    var code = result.data.code;
    var timestamp = new Date().getTime();
    var sign = getMd5('' + result.data.code + scene + key + channel + timestamp + salt);
    var params = {
      code: code,
      scene: scene,
      key: key,
      channel: channel,
      timestamp: timestamp,
      sign: sign
    };
    // 传递参数 以便返回给PC端
    (0, _service.confirmAuthorization)(params).then(function (res) {
      callback(JSON.parse(res).message || 'fail');
    }).catch(function (error) {
      callback(error && error.message);
    });
  }).catch(function (err) {
    callback(err.message);
  });
}

// ==================== muc 二维码 ==========================
/**
 * @description 解析muc二维码
 * @param {String} codeStr BEGIN:VCARD VERSION:3.0 FN:群名 X-IDENTITY:com.ceair.im.muc#groupchat#202105251225156141 END:VCARD
 * @return {Object} {"status":0,"data":{"action":"chat","option":"{\"type\":\"group\",\"id\":\"1111111111\"}"}}
 * 单元测试-> /mu-scene-card/test/muc-code.test.js
 */
var decodeMuc = function decodeMuc() {
  var codeStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

  return new Promise(function (resolve) {
    var reg = new RegExp('groupchat#(.*?)(?=\\nEND:VCARD)');
    codeStr = codeStr.match(reg);
    codeStr = codeStr ? codeStr[1] : '';
    if (!codeStr) {
      resolve({
        status: -1,
        message: '二维码异常1002',
        data: {}
      });
    } else {
      resolve({
        status: 0,
        data: {
          action: 'chat',
          option: '{"type":"group","id":"' + codeStr + '"}'
        }
      });
    }
  });
};var scanMuQrcode = function scanMuQrcode() {
  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return new Promise(function (resolve, reject) {
    _mu_scanner2.default.scan().then(function (res) {
      if (option.is_decoded === false) {
        resolve(res);
        return;
      }

      if (res.status !== 0) {
        _mu_toast2.default.showInfo({ message: '二维码识别失败' });
      }

      if (res.status === 0) {
        deCodeAction(res.data.code, function (errMsg) {
          if (errMsg) {
            _mu_toast2.default.showInfo({ message: errMsg === 'ok' ? '认证成功' : errMsg });
          }
        });
      } else {}
    }).catch(function (err) {
      if (option.is_decoded === false) {
        reject(err);
        return;
      }

      if (err.code === 'UNKNOWN_ERROR') {
        _mu_toast2.default.showInfo({ message: '二维码识别异常' + err.message });
      }
    });
  });
};
exports.default = scanMuQrcode;

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(396));
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define(["./core"], factory);
	}
	else {
		// Global (browser)
		factory(root.CryptoJS);
	}
}(this, function (CryptoJS) {

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Constants table
	    var T = [];

	    // Compute constants
	    (function () {
	        for (var i = 0; i < 64; i++) {
	            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;
	        }
	    }());

	    /**
	     * MD5 hash algorithm.
	     */
	    var MD5 = C_algo.MD5 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init([
	                0x67452301, 0xefcdab89,
	                0x98badcfe, 0x10325476
	            ]);
	        },

	        _doProcessBlock: function (M, offset) {
	            // Swap endian
	            for (var i = 0; i < 16; i++) {
	                // Shortcuts
	                var offset_i = offset + i;
	                var M_offset_i = M[offset_i];

	                M[offset_i] = (
	                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
	                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
	                );
	            }

	            // Shortcuts
	            var H = this._hash.words;

	            var M_offset_0  = M[offset + 0];
	            var M_offset_1  = M[offset + 1];
	            var M_offset_2  = M[offset + 2];
	            var M_offset_3  = M[offset + 3];
	            var M_offset_4  = M[offset + 4];
	            var M_offset_5  = M[offset + 5];
	            var M_offset_6  = M[offset + 6];
	            var M_offset_7  = M[offset + 7];
	            var M_offset_8  = M[offset + 8];
	            var M_offset_9  = M[offset + 9];
	            var M_offset_10 = M[offset + 10];
	            var M_offset_11 = M[offset + 11];
	            var M_offset_12 = M[offset + 12];
	            var M_offset_13 = M[offset + 13];
	            var M_offset_14 = M[offset + 14];
	            var M_offset_15 = M[offset + 15];

	            // Working varialbes
	            var a = H[0];
	            var b = H[1];
	            var c = H[2];
	            var d = H[3];

	            // Computation
	            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);
	            d = FF(d, a, b, c, M_offset_1,  12, T[1]);
	            c = FF(c, d, a, b, M_offset_2,  17, T[2]);
	            b = FF(b, c, d, a, M_offset_3,  22, T[3]);
	            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);
	            d = FF(d, a, b, c, M_offset_5,  12, T[5]);
	            c = FF(c, d, a, b, M_offset_6,  17, T[6]);
	            b = FF(b, c, d, a, M_offset_7,  22, T[7]);
	            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);
	            d = FF(d, a, b, c, M_offset_9,  12, T[9]);
	            c = FF(c, d, a, b, M_offset_10, 17, T[10]);
	            b = FF(b, c, d, a, M_offset_11, 22, T[11]);
	            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);
	            d = FF(d, a, b, c, M_offset_13, 12, T[13]);
	            c = FF(c, d, a, b, M_offset_14, 17, T[14]);
	            b = FF(b, c, d, a, M_offset_15, 22, T[15]);

	            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);
	            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);
	            c = GG(c, d, a, b, M_offset_11, 14, T[18]);
	            b = GG(b, c, d, a, M_offset_0,  20, T[19]);
	            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);
	            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);
	            c = GG(c, d, a, b, M_offset_15, 14, T[22]);
	            b = GG(b, c, d, a, M_offset_4,  20, T[23]);
	            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);
	            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);
	            c = GG(c, d, a, b, M_offset_3,  14, T[26]);
	            b = GG(b, c, d, a, M_offset_8,  20, T[27]);
	            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);
	            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);
	            c = GG(c, d, a, b, M_offset_7,  14, T[30]);
	            b = GG(b, c, d, a, M_offset_12, 20, T[31]);

	            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);
	            d = HH(d, a, b, c, M_offset_8,  11, T[33]);
	            c = HH(c, d, a, b, M_offset_11, 16, T[34]);
	            b = HH(b, c, d, a, M_offset_14, 23, T[35]);
	            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);
	            d = HH(d, a, b, c, M_offset_4,  11, T[37]);
	            c = HH(c, d, a, b, M_offset_7,  16, T[38]);
	            b = HH(b, c, d, a, M_offset_10, 23, T[39]);
	            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);
	            d = HH(d, a, b, c, M_offset_0,  11, T[41]);
	            c = HH(c, d, a, b, M_offset_3,  16, T[42]);
	            b = HH(b, c, d, a, M_offset_6,  23, T[43]);
	            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);
	            d = HH(d, a, b, c, M_offset_12, 11, T[45]);
	            c = HH(c, d, a, b, M_offset_15, 16, T[46]);
	            b = HH(b, c, d, a, M_offset_2,  23, T[47]);

	            a = II(a, b, c, d, M_offset_0,  6,  T[48]);
	            d = II(d, a, b, c, M_offset_7,  10, T[49]);
	            c = II(c, d, a, b, M_offset_14, 15, T[50]);
	            b = II(b, c, d, a, M_offset_5,  21, T[51]);
	            a = II(a, b, c, d, M_offset_12, 6,  T[52]);
	            d = II(d, a, b, c, M_offset_3,  10, T[53]);
	            c = II(c, d, a, b, M_offset_10, 15, T[54]);
	            b = II(b, c, d, a, M_offset_1,  21, T[55]);
	            a = II(a, b, c, d, M_offset_8,  6,  T[56]);
	            d = II(d, a, b, c, M_offset_15, 10, T[57]);
	            c = II(c, d, a, b, M_offset_6,  15, T[58]);
	            b = II(b, c, d, a, M_offset_13, 21, T[59]);
	            a = II(a, b, c, d, M_offset_4,  6,  T[60]);
	            d = II(d, a, b, c, M_offset_11, 10, T[61]);
	            c = II(c, d, a, b, M_offset_2,  15, T[62]);
	            b = II(b, c, d, a, M_offset_9,  21, T[63]);

	            // Intermediate hash value
	            H[0] = (H[0] + a) | 0;
	            H[1] = (H[1] + b) | 0;
	            H[2] = (H[2] + c) | 0;
	            H[3] = (H[3] + d) | 0;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);

	            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
	            var nBitsTotalL = nBitsTotal;
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (
	                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |
	                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)
	            );
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
	                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |
	                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)
	            );

	            data.sigBytes = (dataWords.length + 1) * 4;

	            // Hash final blocks
	            this._process();

	            // Shortcuts
	            var hash = this._hash;
	            var H = hash.words;

	            // Swap endian
	            for (var i = 0; i < 4; i++) {
	                // Shortcut
	                var H_i = H[i];

	                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
	                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
	            }

	            // Return final computed hash
	            return hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });

	    function FF(a, b, c, d, x, s, t) {
	        var n = a + ((b & c) | (~b & d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function GG(a, b, c, d, x, s, t) {
	        var n = a + ((b & d) | (c & ~d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function HH(a, b, c, d, x, s, t) {
	        var n = a + (b ^ c ^ d) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function II(a, b, c, d, x, s, t) {
	        var n = a + (c ^ (b | ~d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.MD5('message');
	     *     var hash = CryptoJS.MD5(wordArray);
	     */
	    C.MD5 = Hasher._createHelper(MD5);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacMD5(message, key);
	     */
	    C.HmacMD5 = Hasher._createHmacHelper(MD5);
	}(Math));


	return CryptoJS.MD5;

}));

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory();
	}
	else if (typeof define === "function" && define.amd) {
		// AMD
		define([], factory);
	}
	else {
		// Global (browser)
		root.CryptoJS = factory();
	}
}(this, function () {

	/*globals window, global, require*/

	/**
	 * CryptoJS core components.
	 */
	var CryptoJS = CryptoJS || (function (Math, undefined) {

	    var crypto;

	    // Native crypto from window (Browser)
	    if (typeof window !== 'undefined' && window.crypto) {
	        crypto = window.crypto;
	    }

	    // Native crypto in web worker (Browser)
	    if (typeof self !== 'undefined' && self.crypto) {
	        crypto = self.crypto;
	    }

	    // Native crypto from worker
	    if (typeof globalThis !== 'undefined' && globalThis.crypto) {
	        crypto = globalThis.crypto;
	    }

	    // Native (experimental IE 11) crypto from window (Browser)
	    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {
	        crypto = window.msCrypto;
	    }

	    // Native crypto from global (NodeJS)
	    if (!crypto && typeof global !== 'undefined' && global.crypto) {
	        crypto = global.crypto;
	    }

	    // Native crypto import via require (NodeJS)
	    if (!crypto && "function" === 'function') {
	        try {
	            crypto = __webpack_require__(397);
	        } catch (err) {}
	    }

	    /*
	     * Cryptographically secure pseudorandom number generator
	     *
	     * As Math.random() is cryptographically not safe to use
	     */
	    var cryptoSecureRandomInt = function () {
	        if (crypto) {
	            // Use getRandomValues method (Browser)
	            if (typeof crypto.getRandomValues === 'function') {
	                try {
	                    return crypto.getRandomValues(new Uint32Array(1))[0];
	                } catch (err) {}
	            }

	            // Use randomBytes method (NodeJS)
	            if (typeof crypto.randomBytes === 'function') {
	                try {
	                    return crypto.randomBytes(4).readInt32LE();
	                } catch (err) {}
	            }
	        }

	        throw new Error('Native crypto module could not be used to get secure random number.');
	    };

	    /*
	     * Local polyfill of Object.create

	     */
	    var create = Object.create || (function () {
	        function F() {}

	        return function (obj) {
	            var subtype;

	            F.prototype = obj;

	            subtype = new F();

	            F.prototype = null;

	            return subtype;
	        };
	    }());

	    /**
	     * CryptoJS namespace.
	     */
	    var C = {};

	    /**
	     * Library namespace.
	     */
	    var C_lib = C.lib = {};

	    /**
	     * Base object for prototypal inheritance.
	     */
	    var Base = C_lib.Base = (function () {


	        return {
	            /**
	             * Creates a new object that inherits from this object.
	             *
	             * @param {Object} overrides Properties to copy into the new object.
	             *
	             * @return {Object} The new object.
	             *
	             * @static
	             *
	             * @example
	             *
	             *     var MyType = CryptoJS.lib.Base.extend({
	             *         field: 'value',
	             *
	             *         method: function () {
	             *         }
	             *     });
	             */
	            extend: function (overrides) {
	                // Spawn
	                var subtype = create(this);

	                // Augment
	                if (overrides) {
	                    subtype.mixIn(overrides);
	                }

	                // Create default initializer
	                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
	                    subtype.init = function () {
	                        subtype.$super.init.apply(this, arguments);
	                    };
	                }

	                // Initializer's prototype is the subtype object
	                subtype.init.prototype = subtype;

	                // Reference supertype
	                subtype.$super = this;

	                return subtype;
	            },

	            /**
	             * Extends this object and runs the init method.
	             * Arguments to create() will be passed to init().
	             *
	             * @return {Object} The new object.
	             *
	             * @static
	             *
	             * @example
	             *
	             *     var instance = MyType.create();
	             */
	            create: function () {
	                var instance = this.extend();
	                instance.init.apply(instance, arguments);

	                return instance;
	            },

	            /**
	             * Initializes a newly created object.
	             * Override this method to add some logic when your objects are created.
	             *
	             * @example
	             *
	             *     var MyType = CryptoJS.lib.Base.extend({
	             *         init: function () {
	             *             // ...
	             *         }
	             *     });
	             */
	            init: function () {
	            },

	            /**
	             * Copies properties into this object.
	             *
	             * @param {Object} properties The properties to mix in.
	             *
	             * @example
	             *
	             *     MyType.mixIn({
	             *         field: 'value'
	             *     });
	             */
	            mixIn: function (properties) {
	                for (var propertyName in properties) {
	                    if (properties.hasOwnProperty(propertyName)) {
	                        this[propertyName] = properties[propertyName];
	                    }
	                }

	                // IE won't copy toString using the loop above
	                if (properties.hasOwnProperty('toString')) {
	                    this.toString = properties.toString;
	                }
	            },

	            /**
	             * Creates a copy of this object.
	             *
	             * @return {Object} The clone.
	             *
	             * @example
	             *
	             *     var clone = instance.clone();
	             */
	            clone: function () {
	                return this.init.prototype.extend(this);
	            }
	        };
	    }());

	    /**
	     * An array of 32-bit words.
	     *
	     * @property {Array} words The array of 32-bit words.
	     * @property {number} sigBytes The number of significant bytes in this word array.
	     */
	    var WordArray = C_lib.WordArray = Base.extend({
	        /**
	         * Initializes a newly created word array.
	         *
	         * @param {Array} words (Optional) An array of 32-bit words.
	         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.lib.WordArray.create();
	         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
	         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
	         */
	        init: function (words, sigBytes) {
	            words = this.words = words || [];

	            if (sigBytes != undefined) {
	                this.sigBytes = sigBytes;
	            } else {
	                this.sigBytes = words.length * 4;
	            }
	        },

	        /**
	         * Converts this word array to a string.
	         *
	         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
	         *
	         * @return {string} The stringified word array.
	         *
	         * @example
	         *
	         *     var string = wordArray + '';
	         *     var string = wordArray.toString();
	         *     var string = wordArray.toString(CryptoJS.enc.Utf8);
	         */
	        toString: function (encoder) {
	            return (encoder || Hex).stringify(this);
	        },

	        /**
	         * Concatenates a word array to this word array.
	         *
	         * @param {WordArray} wordArray The word array to append.
	         *
	         * @return {WordArray} This word array.
	         *
	         * @example
	         *
	         *     wordArray1.concat(wordArray2);
	         */
	        concat: function (wordArray) {
	            // Shortcuts
	            var thisWords = this.words;
	            var thatWords = wordArray.words;
	            var thisSigBytes = this.sigBytes;
	            var thatSigBytes = wordArray.sigBytes;

	            // Clamp excess bits
	            this.clamp();

	            // Concat
	            if (thisSigBytes % 4) {
	                // Copy one byte at a time
	                for (var i = 0; i < thatSigBytes; i++) {
	                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);
	                }
	            } else {
	                // Copy one word at a time
	                for (var j = 0; j < thatSigBytes; j += 4) {
	                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];
	                }
	            }
	            this.sigBytes += thatSigBytes;

	            // Chainable
	            return this;
	        },

	        /**
	         * Removes insignificant bits.
	         *
	         * @example
	         *
	         *     wordArray.clamp();
	         */
	        clamp: function () {
	            // Shortcuts
	            var words = this.words;
	            var sigBytes = this.sigBytes;

	            // Clamp
	            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);
	            words.length = Math.ceil(sigBytes / 4);
	        },

	        /**
	         * Creates a copy of this word array.
	         *
	         * @return {WordArray} The clone.
	         *
	         * @example
	         *
	         *     var clone = wordArray.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);
	            clone.words = this.words.slice(0);

	            return clone;
	        },

	        /**
	         * Creates a word array filled with random bytes.
	         *
	         * @param {number} nBytes The number of random bytes to generate.
	         *
	         * @return {WordArray} The random word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.lib.WordArray.random(16);
	         */
	        random: function (nBytes) {
	            var words = [];

	            for (var i = 0; i < nBytes; i += 4) {
	                words.push(cryptoSecureRandomInt());
	            }

	            return new WordArray.init(words, nBytes);
	        }
	    });

	    /**
	     * Encoder namespace.
	     */
	    var C_enc = C.enc = {};

	    /**
	     * Hex encoding strategy.
	     */
	    var Hex = C_enc.Hex = {
	        /**
	         * Converts a word array to a hex string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The hex string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var hexChars = [];
	            for (var i = 0; i < sigBytes; i++) {
	                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                hexChars.push((bite >>> 4).toString(16));
	                hexChars.push((bite & 0x0f).toString(16));
	            }

	            return hexChars.join('');
	        },

	        /**
	         * Converts a hex string to a word array.
	         *
	         * @param {string} hexStr The hex string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
	         */
	        parse: function (hexStr) {
	            // Shortcut
	            var hexStrLength = hexStr.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < hexStrLength; i += 2) {
	                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);
	            }

	            return new WordArray.init(words, hexStrLength / 2);
	        }
	    };

	    /**
	     * Latin1 encoding strategy.
	     */
	    var Latin1 = C_enc.Latin1 = {
	        /**
	         * Converts a word array to a Latin1 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The Latin1 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var latin1Chars = [];
	            for (var i = 0; i < sigBytes; i++) {
	                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                latin1Chars.push(String.fromCharCode(bite));
	            }

	            return latin1Chars.join('');
	        },

	        /**
	         * Converts a Latin1 string to a word array.
	         *
	         * @param {string} latin1Str The Latin1 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
	         */
	        parse: function (latin1Str) {
	            // Shortcut
	            var latin1StrLength = latin1Str.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < latin1StrLength; i++) {
	                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);
	            }

	            return new WordArray.init(words, latin1StrLength);
	        }
	    };

	    /**
	     * UTF-8 encoding strategy.
	     */
	    var Utf8 = C_enc.Utf8 = {
	        /**
	         * Converts a word array to a UTF-8 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The UTF-8 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            try {
	                return decodeURIComponent(escape(Latin1.stringify(wordArray)));
	            } catch (e) {
	                throw new Error('Malformed UTF-8 data');
	            }
	        },

	        /**
	         * Converts a UTF-8 string to a word array.
	         *
	         * @param {string} utf8Str The UTF-8 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
	         */
	        parse: function (utf8Str) {
	            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
	        }
	    };

	    /**
	     * Abstract buffered block algorithm template.
	     *
	     * The property blockSize must be implemented in a concrete subtype.
	     *
	     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
	     */
	    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
	        /**
	         * Resets this block algorithm's data buffer to its initial state.
	         *
	         * @example
	         *
	         *     bufferedBlockAlgorithm.reset();
	         */
	        reset: function () {
	            // Initial values
	            this._data = new WordArray.init();
	            this._nDataBytes = 0;
	        },

	        /**
	         * Adds new data to this block algorithm's buffer.
	         *
	         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
	         *
	         * @example
	         *
	         *     bufferedBlockAlgorithm._append('data');
	         *     bufferedBlockAlgorithm._append(wordArray);
	         */
	        _append: function (data) {
	            // Convert string to WordArray, else assume WordArray already
	            if (typeof data == 'string') {
	                data = Utf8.parse(data);
	            }

	            // Append
	            this._data.concat(data);
	            this._nDataBytes += data.sigBytes;
	        },

	        /**
	         * Processes available data blocks.
	         *
	         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
	         *
	         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
	         *
	         * @return {WordArray} The processed data.
	         *
	         * @example
	         *
	         *     var processedData = bufferedBlockAlgorithm._process();
	         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
	         */
	        _process: function (doFlush) {
	            var processedWords;

	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;
	            var dataSigBytes = data.sigBytes;
	            var blockSize = this.blockSize;
	            var blockSizeBytes = blockSize * 4;

	            // Count blocks ready
	            var nBlocksReady = dataSigBytes / blockSizeBytes;
	            if (doFlush) {
	                // Round up to include partial blocks
	                nBlocksReady = Math.ceil(nBlocksReady);
	            } else {
	                // Round down to include only full blocks,
	                // less the number of blocks that must remain in the buffer
	                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
	            }

	            // Count words ready
	            var nWordsReady = nBlocksReady * blockSize;

	            // Count bytes ready
	            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

	            // Process blocks
	            if (nWordsReady) {
	                for (var offset = 0; offset < nWordsReady; offset += blockSize) {
	                    // Perform concrete-algorithm logic
	                    this._doProcessBlock(dataWords, offset);
	                }

	                // Remove processed words
	                processedWords = dataWords.splice(0, nWordsReady);
	                data.sigBytes -= nBytesReady;
	            }

	            // Return processed words
	            return new WordArray.init(processedWords, nBytesReady);
	        },

	        /**
	         * Creates a copy of this object.
	         *
	         * @return {Object} The clone.
	         *
	         * @example
	         *
	         *     var clone = bufferedBlockAlgorithm.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);
	            clone._data = this._data.clone();

	            return clone;
	        },

	        _minBufferSize: 0
	    });

	    /**
	     * Abstract hasher template.
	     *
	     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
	     */
	    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
	        /**
	         * Configuration options.
	         */
	        cfg: Base.extend(),

	        /**
	         * Initializes a newly created hasher.
	         *
	         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
	         *
	         * @example
	         *
	         *     var hasher = CryptoJS.algo.SHA256.create();
	         */
	        init: function (cfg) {
	            // Apply config defaults
	            this.cfg = this.cfg.extend(cfg);

	            // Set initial values
	            this.reset();
	        },

	        /**
	         * Resets this hasher to its initial state.
	         *
	         * @example
	         *
	         *     hasher.reset();
	         */
	        reset: function () {
	            // Reset data buffer
	            BufferedBlockAlgorithm.reset.call(this);

	            // Perform concrete-hasher logic
	            this._doReset();
	        },

	        /**
	         * Updates this hasher with a message.
	         *
	         * @param {WordArray|string} messageUpdate The message to append.
	         *
	         * @return {Hasher} This hasher.
	         *
	         * @example
	         *
	         *     hasher.update('message');
	         *     hasher.update(wordArray);
	         */
	        update: function (messageUpdate) {
	            // Append
	            this._append(messageUpdate);

	            // Update the hash
	            this._process();

	            // Chainable
	            return this;
	        },

	        /**
	         * Finalizes the hash computation.
	         * Note that the finalize operation is effectively a destructive, read-once operation.
	         *
	         * @param {WordArray|string} messageUpdate (Optional) A final message update.
	         *
	         * @return {WordArray} The hash.
	         *
	         * @example
	         *
	         *     var hash = hasher.finalize();
	         *     var hash = hasher.finalize('message');
	         *     var hash = hasher.finalize(wordArray);
	         */
	        finalize: function (messageUpdate) {
	            // Final message update
	            if (messageUpdate) {
	                this._append(messageUpdate);
	            }

	            // Perform concrete-hasher logic
	            var hash = this._doFinalize();

	            return hash;
	        },

	        blockSize: 512/32,

	        /**
	         * Creates a shortcut function to a hasher's object interface.
	         *
	         * @param {Hasher} hasher The hasher to create a helper for.
	         *
	         * @return {Function} The shortcut function.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
	         */
	        _createHelper: function (hasher) {
	            return function (message, cfg) {
	                return new hasher.init(cfg).finalize(message);
	            };
	        },

	        /**
	         * Creates a shortcut function to the HMAC's object interface.
	         *
	         * @param {Hasher} hasher The hasher to use in this HMAC helper.
	         *
	         * @return {Function} The shortcut function.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
	         */
	        _createHmacHelper: function (hasher) {
	            return function (message, key) {
	                return new C_algo.HMAC.init(hasher, key).finalize(message);
	            };
	        }
	    });

	    /**
	     * Algorithm namespace.
	     */
	    var C_algo = C.algo = {};

	    return C;
	}(Math));


	return CryptoJS;

}));
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)))

/***/ }),
/* 397 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.confirmAuthorization = exports.qrcode = undefined;

var _mu_http_client = __webpack_require__(63);

var _mu_http_client2 = _interopRequireDefault(_mu_http_client);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Config = {
  local: 'https://store-dev.ceair.com',
  dev: 'https://store-dev.ceair.com',
  uat: 'https://store-uat.ceair.com',
  prod: 'https://store.ceair.com'
};

var SeverUrl = Config[Object({"NODE_ENV":"production"}).VUE_APP_ENV] ? Config[Object({"NODE_ENV":"production"}).VUE_APP_ENV] : 'https://store.ceair.com';

/**
 * @description 前沿短码解析
 */
var qrcode = exports.qrcode = function qrcode() {
  var parameter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return _mu_http_client2.default.get({
    url: SeverUrl + '/mu_public/qrcode/qry?code=' + parameter.code,
    header: {},
    data: {}
  });
};

/**
 * @description  掌上东航Pc端扫一扫认证
 */
var confirmAuthorization = exports.confirmAuthorization = function confirmAuthorization() {
  var parameter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return _mu_http_client2.default.post({
    url: SeverUrl + '/mu_auth/oauth2/scan_auth',
    header: {
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    data: parameter
  });
};

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MuTools = {
  scanMuQrcode: function scanMuQrcode() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '请到native端支持'
      });
    });
  }
};
exports.default = MuTools;

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MuTools = {
  scanMuQrcode: function scanMuQrcode() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '请到native端支持'
      });
    });
  }
};
exports.default = MuTools;

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Description: MUTracker
 * @version: 1.0.0
 * @Author: chenqin7
 * @Date: 2019-08-20 16:11:21
 * @LastEditors: xiaoyang
 * @LastEditTime: 2023-02-13 15:35:03
 */
var MUTracker = {
  setUserIdentifier: function setUserIdentifier(options) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'MUTracker ',
        data: options
      });
    });
    return p;
  },
  trackEvent: function trackEvent(options) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'MUTracker ',
        data: options
      });
    });
    return p;
  }
};

exports.default = MUTracker;

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Description: MUTracker
 * @version: 1.0.0
 * @Author: chenqin7
 * @Date: 2019-08-20 16:11:21
 * @LastEditors: wangjie59 wangjie59@ceair.com
 * @LastEditTime: 2023-02-07 16:04:19
 */

var MUTracker = {
  /**
   * @author: wangjie59
   * @description: 关联用户信息 （该方法由平台处理，各子应用不用进行初始化）
   * @param {object} option 用户信息
   * @param {string} option.userIdentifier 用户账户信息
   * @param {object} option.userProfile 神策可自定义
   * @return {promise} 关联用户信息
   * @example
   * ```js
   * MuTracker.setUserIdentifier({
   *   userIdentifier: 'xiaoming',
   *   userProfile: {},
   * })
   * ```
   */
  setUserIdentifier: function setUserIdentifier() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    return new Promise(function (resolve, reject) {
      // 返回体
      var result = {
        data: option,
        errorCode: '',
        message: 'MUTracker parameter is incorrect',
        status: -1
      };
      // 参数格式不正确 userIdentifier 不为string
      if (typeof option.userIdentifier !== 'string') {
        return reject(result);
      }

      try {
        window.NativeApi.notifier.sendNotification(window.NativeApi.config.types.SEND_MESSAGE_TO_HOME, {
          channel: 'tracker_setUserIdentifier',
          param: option
        });
        result.status = 0;
        result.errorCode = result.message = null;
        resolve(result);
      } catch (error) {
        result.errorCode = null;
        result.message = error.message;
        reject(result);
      }
    });
  },


  /**
   * @author: wangjie59
   * @description: 统计带二级参数的自定义事件
   * @param {object} option 用户信息
   * @param {string} option.eventId 事件名
   * @param {object} option.eventData 自定义属性
   * @return {promise} 埋点结果
   * @example
   * ```js
   * MuTracker.trackEvent({
   *   eventId: 'click',
   *   eventData: {
   *     'module_name': '我的待办', //具体内容由项目经理在设计阶段决定
   *     'block': '待办中心', //5.0传入：'block': '待办事项'
   *     'page_name': '今天', //5.0传入：'page_name': '任务'
   *     'target_name': 'xxxx请假申请单', //点击目标名称
   *     'content_detail':'' //具体参数内容
   *   }
   * })
   * ```
   */
  trackEvent: function trackEvent() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    // 默认值 mu-hybrid ，要上层实例化时应用自己传入
    var APP_ID = 'mu-hybrid';
    var APP_NAME = 'mu-hybrid';
    option.eventData = option.eventData || {};
    if (!option.eventData.app_id || !option.eventData.app_name) {
      option.eventData.app_id = APP_ID;
      option.eventData.app_name = APP_NAME;
    }
    return new Promise(function (resolve, reject) {
      // 返回体
      var result = {
        data: option,
        errorCode: '',
        message: 'MUTracker parameter is incorrect',
        status: -1
      };
      // 参数格式不正确 eventId 不为string
      if (typeof option.eventId !== 'string') {
        return reject(result);
      }

      var eventId = option.eventId,
          eventData = option.eventData;


      try {
        window.NativeApi.notifier.sendNotification(window.NativeApi.config.types.SEND_MESSAGE_TO_HOME, {
          channel: 'tracker_trackEvent',
          param: {
            eventId: eventId,
            eventData: eventData
          }
        });
        result.status = 0;
        result.errorCode = result.message = null;
        resolve(result);
      } catch (error) {
        result.errorCode = null;
        result.message = error.message;
        reject(result);
      }
    });
  },


  /**
   * @author: wangjie59
   * @description: 初始化神策数据上报对象
   * @param {*} param 初始化所需参数
   * @return {*} 神策数据上报对象
   * @example
   * ```js
   * MUTracker.init({
   *   show_log: false, // 事件的触发日志
   *   server_url: "", // 数据接收地址
   *   is_track_single_page: true, // 单页面配置，默认开启，若页面中有锚点设计，需要将该配置删除，否则触发锚点会多触发 $pageview 事件
   *   use_client_time: true,
   *   send_type: "beacon",
   *   heatmap: {
   *     // 是否开启点击图，default 表示开启，自动采集 $WebClick 事件，可以设置 'not_collect' 表示关闭。
   *     clickmap: "not_collect",
   *     // 是否开启触达图，not_collect 表示关闭，不会自动采集 $WebStay 事件，可以设置 'default' 表示开启。
   *     scroll_notice_map: "not_collect",
   *   }
   * })
   * ```
   */
  init: function init(option) {
    window.NativeApi.notifier.sendNotification(window.NativeApi.config.types.SEND_MESSAGE_TO_HOME, {
      channel: 'tracker_init',
      param: option
    });
  }
};

exports.default = MUTracker;

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUMobile = {
  /**
   * 获取用户信息
   */
  getUserInfo: function getUserInfo() {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'getUserInfo', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
   * 更新用户信息syncUserInfo
   *
   */
  syncUserInfo: function syncUserInfo() {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'syncUserInfo', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },

  /**
                                     * 登出
                                     */
  logout: function logout() {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'logout', {}, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },
  getUserConfig: function getUserConfig(option) {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'getUserConfig', option, function (res) {
        try {
          res.data = JSON.parse(res.data);
        } catch (err) {}
        delete res.ret;
        resolve(res);
      }, function (err) {
        try {
          err.data = JSON.parse(err.data);
        } catch (err) {}
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _userInfo = __webpack_require__(405);

var _userInfo2 = _interopRequireDefault(_userInfo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUMobile = {
  /**
   * 获取用户信息
   */
  getUserInfo: function getUserInfo() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'ok',
        data: _userInfo2.default
      });
    });
    return p;
  },

  /**
   * syncUserInfo
   */
  syncUserInfo: function syncUserInfo() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: '',
        data: ''
      });
    });
    return p;
  },

  /**
   * logoout
   */
  logout: function logout() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        data: {},
        message: 'mock app logout is Success!'
      });
    });
    return p;
  },
  getUserConfig: function getUserConfig(option) {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        data: {
          firstPageUrl: 'www.abc123.com',
          loginFlag: 'LoginAccount',
          personalPageUrl: 'https://emas-mobile-uat.ceair.com/ceair-emas-cdn/app/MUMobile_UAT-portal/pages/user/entry.js',
          maxFontScaleLevel: 3,
          bindDeviceSwitch: false,
          isBindDevice: false,
          isBindSpecifyDevice: 0,
          bindDeviceAgain: -1,
          safeDeviceTitle: '',
          safeDeviceContent: ''
        }
      });
    });
    return p;
  }
}; /*
    * @Author: xiaoyang
    * @Date: 2020-08-25 10:21:42
    * @LastEditTime: 2023-02-13 15:37:07
    * @LastEditors: xiaoyang
    * @Description: 添加注释
    * @FilePath: /mu-hybrid/mu-hybrid/mu_userInfo/mock.js
    */

exports.default = MUMobile;

/***/ }),
/* 405 */
/***/ (function(module, exports) {

module.exports = {"employeeNumber":"40006666","personId":"165635","name":"吴奇隆","sex":"male","nationalIdentifier":"2620daeea3a58234raf1ce86860c8c","businessGroupId":"82","lastUpdateDate":"2019-08-21T08:51:17.000000000","salaryFlag":"1","idmEmpAccount":"WUQILONG28","parentOrganizationId":"106","organizationId":"12112","parentOrg":"信息部","organization":"信息部移动互联部","position":"系统开发.CE4042-22-年薪制","grade":"b4fe58e528","positionStatus":"在岗-正常在岗","aircrewTechLevel":null,"jobSeq":"系统开发.IT产品开发类.IT专业技术序列","mobile":"6185723d98","nationality":null,"companyMail":"wuqilong28@ceair.com","personalMail":"","isRetire":false,"domainId":"misDomain","domainRight":{"misDomain":true,"aocDomain":true,"cabinDomain":false,"flightDomain":false,"policeDomain":false,"groundDomain":false,"maintenanceDomain":false,"saleDomain":false},"flightDataObj":{}}

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: xiaoyang
 * @Date: 2020-08-25 10:21:42
 * @LastEditTime: 2023-02-13 15:37:37
 * @LastEditors: xiaoyang
 * @Description: 添加注释
 * @FilePath: /mu-hybrid/mu-hybrid/mu_userInfo/pc.js
 */

var MUMobile = {
  /**
   * 获取用户信息
   */
  getUserInfo: function getUserInfo() {
    var userInfo = window.NativeApi ? window.NativeApi.muHybridService.getUserInfo() : {};
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        message: 'ok',
        data: userInfo
      });
    });
    return p;
  },

  /**
   * syncUserInfo
   */
  syncUserInfo: function syncUserInfo() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  /**
   * logoout
   */
  logout: function logout() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  getUserConfig: function getUserConfig() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

exports.default = MUMobile;

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUMobile = {
  /**
   * 验证验证码
   */
  checkVerificationCode: function checkVerificationCode(option) {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'checkVerificationCode', option, function (res) {
        delete res.ret;
        resolve(res);
      }, function (err) {
        delete err.ret;
        reject(err);
      });
    });
    return p;
  },


  /**
   * 获取验证码
   */
  sendVerificationCode: function sendVerificationCode(option) {
    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUMobile', 'sendVerificationCode', option, function (res) {
        delete res.ret;
        resolve(res);
      }, function (err) {
        delete err.ret;
        reject(err);
      });
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * <!-- ©Copyright 2018 China Eastern Airlines. All rights reserved. -->
 * <!-- Created by <liyanling3@ceair.com> on 2020-03-26 -->
 */

var MUMobile = {
  sendVerificationCode: function sendVerificationCode() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        data: '验证码已发送至尾号为0000的手机，请注意查收',
        message: ''
      });
    });
    return p;
  },
  checkVerificationCode: function checkVerificationCode() {
    var p = new Promise(function (resolve, reject) {
      resolve({
        status: 0,
        data: {},
        message: ''
      });
    });
    return p;
  }
};

exports.default = MUMobile;

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(410).default;

/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  sendVerificationCode: function sendVerificationCode() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  checkVerificationCode: function checkVerificationCode() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _windvane = __webpack_require__(0);

var _windvane2 = _interopRequireDefault(_windvane);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MUWatermark = {
  /**
   * 原生提供的给页面添加水印的方法
   */

  validateParam: function validateParam(option) {
    if (option.marginX && !this.isNumber(option.marginX)) {
      return false;
    }
    if (option.marginY && !this.isNumber(option.marginY)) {
      return false;
    }
    if (option.fontColor && !this.isRgbColor(option.fontColor)) {
      return false;
    }
    if (option.fontSize && !this.isNumber(option.fontSize)) {
      return false;
    }
    if (option.alpha && !this.isAlpha(option.alpha)) {
      return false;
    }
    if (option.rotation && !this.isRotation(option.rotation)) {
      return false;
    }
    return true;
  },
  isNumber: function isNumber(value) {
    var reg = /^[0-9]+$/;
    return reg.test(value);
  },
  isAlpha: function isAlpha(value) {
    if (isNaN(Number(value))) {
      return false;
    } else if (value < 0 || value > 1) {
      return false;
    } else {
      return true;
    }
  },
  isRgbColor: function isRgbColor(value) {
    if (!value.startsWith('#')) {
      return false;
    }
    if (value.length !== 7) {
      return false;
    }
    var reg = /^[A-Fa-f0-9]+$/;
    return reg.test(value.slice(1, 7));
  },
  isPositiveNumber: function isPositiveNumber(value) {
    var reg = /^\d+(?=\.{0,1}\d+$|$)/;
    if (reg.test(value)) {
      return true;
    } else {
      return false;
    }
  },
  isRotation: function isRotation(value) {
    if (!this.isPositiveNumber(value)) {
      return false;
    } else if (value < 0 || value > 360) {
      return false;
    } else {
      return true;
    }
  },
  add: function add(option) {
    var _this = this;

    var p = new Promise(function (resolve, reject) {
      if (!_this.validateParam(option)) {
        // eslint-disable-next-line prefer-promise-reject-errors
        reject({
          status: -1,
          data: {},
          mesage: '参数错误',
          errorCode: 'INVALID_PARAM_ERROR'
        });
        return p;
      } else {
        if (option.marginX) {
          option.marginX = Number(option.marginX);
        }
        if (option.marginY) {
          option.marginY = Number(option.marginY);
        }
        if (option.fontSize) {
          option.fontSize = Number(option.fontSize);
        }
        if (option.rotation) {
          option.rotation = Number(option.rotation);
        }
        if (option.alpha) {
          option.alpha = parseFloat(option.alpha);
        }
      }
      _windvane2.default.WindVane.call('MUWatermark', 'add', option, function (res) {
        resolve(res);
      }, function (err) {
        reject(err);
      });
    });
    return p;
  },
  addToImage: function addToImage(option) {
    var _this2 = this;

    var p = new Promise(function (resolve, reject) {
      if (!_this2.validateParam(option)) {
        // eslint-disable-next-line prefer-promise-reject-errors
        reject({
          status: -1,
          data: {},
          mesage: '参数错误',
          errorCode: 'INVALID_PARAM_ERROR'
        });
        return p;
      } else {
        if (option.marginX) {
          option.marginX = Number(option.marginX);
        }
        if (option.marginY) {
          option.marginY = Number(option.marginY);
        }
        if (option.fontSize) {
          option.fontSize = Number(option.fontSize);
        }
        if (option.rotation) {
          option.rotation = Number(option.rotation);
        }
        if (option.alpha) {
          option.alpha = parseFloat(option.alpha);
        }
      }
      _windvane2.default.WindVane.call('MUWatermark', 'addToImage', option, function (res) {
        resolve(res);
      }, function (err) {
        reject(err);
      });
    });
    return p;
  },

  /**
   * 移除当前页面水印
   */
  remove: function remove() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      _windvane2.default.WindVane.call('MUWatermark', 'remove', option, function (res) {
        resolve(res);
      }, function (err) {
        reject(err);
      });
    });
    return p;
  }
}; /*
    * @Author: lee9527
    * @Date: 2021-07-14 15:41:56
    * @LastEditors: lee9527
    * @LastEditTime: 2021-08-25 14:50:20
    * @Description:
    * @FilePath: /mu-hybrid/mu-hybrid/mu_watermark/index.js
    * @version: 1.0.0
    */
exports.default = MUWatermark;

/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * @Author: lee9527
 * @Date: 2021-07-14 15:42:01
 * @LastEditors: lee9527
 * @LastEditTime: 2021-07-14 15:47:09
 * @Description:
 * @FilePath: /mu-hybrid/mu-hybrid/mu_watermark/mock.js
 * @version: 1.0.0
 */
var MUWatermark = {
  // 添加水印
  add: function add() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      resolve({ status: 0, data: {}, message: '' });
    });
    return p;
  },

  // 移除水印
  remove: function remove() {
    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var p = new Promise(function (resolve, reject) {
      resolve({ status: 0, data: {}, message: '' });
    });
    return p;
  }
};

exports.default = MUWatermark;

/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(414).default;

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  add: function add() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  },
  remove: function remove() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _mujssdk = __webpack_require__(31);

var _mujssdk2 = _interopRequireDefault(_mujssdk);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MuWindow = {
  /**
   * 关闭页面
   */
  close: function close(params) {
    if (params && typeof params !== 'string') {
      params = JSON.stringify(params);
    }
    _mujssdk2.default.call('window', 'close', params, null);
  },


  /**
   * 注册拦截关闭页面事件
   */
  registerBackAction: function registerBackAction(callback) {
    _mujssdk2.default.call('window', 'registerBackAction', null, callback);
  },


  /**
   * 排除拦截关闭页面事件
   */
  removeBackAction: function removeBackAction(callback) {
    _mujssdk2.default.call('window', 'removeBackAction', null, callback);
  }
}; // 原生自定义jsbridge
exports.default = MuWindow;

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * <!-- ©Copyright 2018 China Eastern Airlines. All rights reserved. -->
 * <!-- Created by <liyanling3@ceair.com> on 2020-03-26 -->
 */

var MuWindow = {
  close: function close(params) {
    if (params && typeof params !== 'string') {
      params = JSON.stringify(params);
    }
    console.log('close传参：' + params);
    window.history.back();
  },
  registerBackAction: function registerBackAction(action) {
    console.log('registerBackAction->', action);
  }
};

exports.default = MuWindow;

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = __webpack_require__(418).default;

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var MuWindow = {
  close: function close(params) {
    if (params && typeof params !== 'string') {
      params = JSON.stringify(params);
    }
    console.log('close传参：' + params);
    window.close();
  },

  registerBackAction: function registerBackAction() {
    return new Promise(function (resolve, reject) {
      reject({
        status: -1,
        message: '暂不支持 ',
        data: {}
      });
    });
  }
};

exports.default = MuWindow;

/***/ })
/******/ ]);