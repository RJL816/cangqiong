(function ()
{
    var oManager = com.kingdee.bos.qing.framework.common.MultilanguageManager;
    var oPackage = com.kingdee.bos.qing.modeler.modelset.auth.ui;
    oManager.registPackageResources(oPackage,
    {
        //轻建模数据权限
        viewType: "Display Mode:",
        showByModel: "show by model",
        showByUser: "show by user or role",
        deployedModels: "deployed models",
        refreshModels: "refresh models",
        searchContent: "Please enter the search content",
        noMatchedResult: "No results match your search criteria",
        noDeployedModel: "The current ModelSet has no models in deployed status",
        invalidModeler:  "The currently selected model has expired",
        operationInstructions: "Please click the left model to set data permissions",
        addUsers: "Add User",
        deleteUsers: "delete user",
        successToAddUsers: "success to add users.",
        successfullyAdded: "Successfully added.",
        selectUsersToDelete: "please select users to delete.",
        confirmDeleteUsers: "Are you sure you want to remove #2 users such as '#1'?",
        successToDeleteUsers: "success to delete users.",
        currentSysUser: "System User",
        currentSysRole: "System Role",
        currentModelSetRole: "ModelSet Role",
        modelSetRoleManage: "ModelSet Role Manage",
        deleteRoles: "delete roles",
        addRoles: "Add Roles",
        selectRolesToDelete: "select roles to delete.",
        confirmDeleteRoles: "Are you sure you want to remove #2 roles such as '#1'?",
        successToDeleteRoles: "success to delete roles.",
        deleteSucceeded: "Delete succeeded.",
        successToAddRoles: "success to add roles.",
        confirmDeleteUser: "Are you sure you want to remove user '#1'?",
        confirmDeleteRole: "Are you sure you want to remove role '#1'?",
        modelSetRoleManagement: "ModelSet Role Management",
        modelException: "Model exception, unable to set data permissions.",
        viewModel: "View the model",
        rowAuth: "Row Level Permission: ",
        notExistFilter: "The field in the #1 row of filter criteria does not exist",
        notDeployed: "Users cannot be added to models that are not deployed.",
        operationConfirmation: "Operation Confirmation",
        noUser: "Please add a user first",
        noRole: "Please add a role first",
        operatorTips: "Operation Tips",
        authorized: "After the 'Authorize and Enable' of the current directory is turned on, the 'Authorize and Enable' of all models under that directory, including models added in the future, will be automatically turned on.",
        iKnow: "I Know",
        noSelectField: "No Fields",

        userName: "Viewer Name",
        userId: "Viewer Id",
        roleName: "Role Name",
        code: "Code",
        enable: "Authorize and Enable",
        editPermission: "set authorization",
        editPermissionTitle: "Authorization",
        settings: "Authorization settings",
        abstract: "Authorization summary",
        sysUserSummary: "Summary of authorization for current system user",
        sysRoleSummary: "Summary of authorization for current system role",
        modelSetRoleSummary: "Summary of authorization for current ModelSet role",
        permissionInherited: "This authorization is affected by both user permissions and role permissions. Click the icon to adjust to the user permissions set separately.",
        noPermissionInherited: "This permissions is set separately for the user and will no longer be affected by role settings. Click the icon to recover the influence on role permissions.",
        deleteDataPermission: "After clearing the row level and column level data permission settings, it will not be restored. Are you sure to clear it?",
        deleteAllPermissions: "Clear row and column level data permission settings",
        successToDeletePermission: "Delete succeeded.",
        loadDataAuth: "Getting permission summary, please wait",
        onlyShowDataAuth: "The model is abnormal and data permissions cannot be set. Since the current model already has materialized data, the following only shows the data permissions that are effective for materialized data.",

        modelName: "Model Name",
        modelNameAndNumber: "Model Name(Code)",
        selectNull: "No user or role is currently selected.",
        selectDataRole: "Select ModelSet Role",
        noModelSetRole: "No optional ModelSet role",
        selectOne: "Please select one row of data.",
        verificationFailed: "Incomplete row level permission settings.",
        dataRoleName: "Data Role Name",
        assignedUsers: "Assigned Users",
        selectedRoles: "(Selected #1 items)",
        clearAll: "Clear All",
        searchRoleName: "Search role name",
        showSelected: "Show only selected items",
        selectAll: "Select All",

        inheritRoleAuth: "show all effective permissions",
        viewAllAuth: "The data permissions set by the user are displayed by default. After opening, you can view all the effective permissions of the user, including the data permissions of the system role and ModelSet role owned by the user.",
        rowLevelPermission: "Row Level Permission",
        colLevelPermission: "Column Level Permission",
        leftBracket: "left bracket",
        field: "field",
        compare: "compare",
        value: "value",
        rightBracket: "right bracket",
        logic: "logic",
        insert: "insert",
        deleteRow: "delete",
        search: "search",
        showFieldName: "show origin field name",
        nothingSearched: "No match results",
        compareVariable: "Compare variable",
        equal: "equal",
        notEqual: "not equal",
        greater: "greater",
        equalOrGreater: "equal or greater",
        less: "less",
        equalOrLess: "equal or less",
        include: "include",
        notInclude: "not include",
        startWith: "start with",
        endWith: "end with",
        compareNull: "null",
        compareNotNull: "not null",
        compareIn: "in",
        compareNotIn: "not in",
        enterSplit: "Exactly match multiple values, and use carriage return as separator between items.",
        matchTooLong: "Matches cannot exceed 50000 characters",
        ok: "ok",
        cancel: "cancel",
        dataTypeTrue: "true",
        dataTypeFalse: "false",
        and: "and",
        or: "or",
        intersection: "intersection",
        union: "union",
        searchFieldContent: "search field name",
        searchPrompt: "Please enter model name/code",
        allFields: "All fields",
        viewableField: "Viewable fields",
        unViewableField: "Unviewable fields",
        effectiveFields: "The effective set of visible fields is user/role",
        fieldIndex: "index",
        fieldDataType: "data type",
        fieldName: "field name",
        roleEnable: "role level field visibility",
        userEnable: "user level field visibility",
        effectiveEnable: "effective field visibility",
        viewEnable: "viewable field",
        duplicatedName: "Duplicate field display name:",
        abandonModify: ", modification abandoned.",
        origin: "origin",
        numberFormatOfField: "number format of field[#1]",
        text: "text",
        number: "number",
        integer: "integer",
        dataTypeDate: "date",
        dateTime: "date time",
        bool: "bool",
        dataTypeNotMatch: "The data type of field '#1' is #2, which is inconsistent with the #4 data type of field '#3'",
        noFieldToSelect: "No optional fields",
        bracketMismatch: "Left and right parentheses do not match.",
        lackLogicalSymbol: "The #1 line is missing a logic character",
        lackField: "The field in the #1 row does not exist.",
        incompleteFilter: "The #1 line is incomplete,",
        lackValue: "missing value.",
        valueMustBeNum: "value must be numeric.",
        wrongBoolean: "wrong boolean.",
        lackComparisonOperator: "missing comparator.",
        comparisonMismatch: "comparator mismatch.",
        modelSetRoleNoExists: "This ModelSet role has been delete.",
        userNoExists: "This user has been deleted or does not exist.",
        roleNoExists: "This role has been deleted or does not exist.",
        userDisabled: "This user has been disabled.",
        roleDisabled: "This role has been disabled.",
        noRoleAuth: "The user does not belong to any role or the role does not have authorizations set.",
        modelNoDeploy: "The model has been undeployed and authorizations cannot be set.",
        preset: "preset",
        noPermission: "No view authorizations for this ModelSet",
        userIsCoop: "This user is a collaborative member of this ModelSet and has all authorizations for all models in the ModelSet. This authorization setting is invalid."
    });

    oPackage = com.kingdee.bos.qing.modeler.modelset.auth.model;
    oManager.registPackageResources(oPackage,
    {
        rowAuth: "Row Level Permission: ",
        filterItems: ", #1 line filter items in total",
        semicolon: ";",
        notExistFilterItems: "Row level permission: the filter item is not set",
        columnAuth: "Column level permission, invisible field contains ",
        fields: ", #1 fields in total",
        fullStop: ".",
        comma: ",",
        notExistUnviewableFields: "Column level permission: all fields are visible",
        compareEqual: "equal",
        compareNotEqual: "not equal",
        compareGreater: "greater",
        compareGreaterEqual: "greater or equal",
        compareLess: "less",
        compareLessEqual: "less or equal",
        compareInclude: "include",
        compareNotInclude: "not include",
        compareStartWith: "start with",
        compareEndWith: "end with",
        compareNull: "is null",
        compareNotNull: "is not null",
        compareIn: "is in #1",
        compareNotIn: "is not in #1",
        logicAnd: "and",
        logicOr: "or",
        compareVariable: "Compare variable"
    });

})();